

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Sun May 04 17:40:24 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	18F47K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1,group=3
    12                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1,group=1
    13                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1,group=1
    14                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1,group=3
    15                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1,group=3
    16                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1,group=3
    17                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1,group=2
    18                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1,group=2
    19                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1,group=2
    21                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1,group=2
    22                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1,group=2
    23                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1
    31                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    32                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    33                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    34   000000                     
    35                           ; Generated 13/12/2024 GMT
    36                           ; 
    37                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution. Publication is not required when
    51                           ;        this file is used in an embedded application.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC18F47K42 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69   003FE0                     bsr             equ	16352
    70   003FE9                     fsr0            equ	16361
    71   003FEA                     fsr0h           equ	16362
    72   003FE9                     fsr0l           equ	16361
    73   003FE1                     fsr1            equ	16353
    74   003FE2                     fsr1h           equ	16354
    75   003FE1                     fsr1l           equ	16353
    76   003FD9                     fsr2            equ	16345
    77   003FDA                     fsr2h           equ	16346
    78   003FD9                     fsr2l           equ	16345
    79   003FEF                     indf0           equ	16367
    80   003FE7                     indf1           equ	16359
    81   003FDF                     indf2           equ	16351
    82   003FD2                     intcon          equ	16338
    83   0039E5                     nvmcon          equ	14821
    84   003FF9                     pcl             equ	16377
    85   003FFA                     pclath          equ	16378
    86   003FFB                     pclatu          equ	16379
    87   003FEB                     plusw0          equ	16363
    88   003FE3                     plusw1          equ	16355
    89   003FDB                     plusw2          equ	16347
    90   003FED                     postdec0        equ	16365
    91   003FE5                     postdec1        equ	16357
    92   003FDD                     postdec2        equ	16349
    93   003FEE                     postinc0        equ	16366
    94   003FE6                     postinc1        equ	16358
    95   003FDE                     postinc2        equ	16350
    96   003FEC                     preinc0         equ	16364
    97   003FE4                     preinc1         equ	16356
    98   003FDC                     preinc2         equ	16348
    99   003FF3                     prod            equ	16371
   100   003FF4                     prodh           equ	16372
   101   003FF3                     prodl           equ	16371
   102   003FD8                     status          equ	16344
   103   003FF5                     tablat          equ	16373
   104   003FF6                     tblptr          equ	16374
   105   003FF7                     tblptrh         equ	16375
   106   003FF6                     tblptrl         equ	16374
   107   003FF8                     tblptru         equ	16376
   108   003FFD                     tosl            equ	16381
   109   003FE8                     wreg            equ	16360
   110   003880                     STATUS_CSHAD    equ	14464	;# 
   111   003881                     WREG_CSHAD      equ	14465	;# 
   112   003882                     BSR_CSHAD       equ	14466	;# 
   113   003883                     SHADCON         equ	14467	;# 
   114   003884                     STATUS_SHAD     equ	14468	;# 
   115   003885                     WREG_SHAD       equ	14469	;# 
   116   003886                     BSR_SHAD        equ	14470	;# 
   117   003887                     PCLATH_SHAD     equ	14471	;# 
   118   003888                     PCLATU_SHAD     equ	14472	;# 
   119   003889                     FSR0SH          equ	14473	;# 
   120   003889                     FSR0L_SHAD      equ	14473	;# 
   121   00388A                     FSR0H_SHAD      equ	14474	;# 
   122   00388B                     FSR1SH          equ	14475	;# 
   123   00388B                     FSR1L_SHAD      equ	14475	;# 
   124   00388C                     FSR1H_SHAD      equ	14476	;# 
   125   00388D                     FSR2SH          equ	14477	;# 
   126   00388D                     FSR2L_SHAD      equ	14477	;# 
   127   00388E                     FSR2H_SHAD      equ	14478	;# 
   128   00388F                     PRODSH          equ	14479	;# 
   129   00388F                     PRODL_SHAD      equ	14479	;# 
   130   003890                     PRODH_SHAD      equ	14480	;# 
   131   00389D                     IVTADL          equ	14493	;# 
   132   00389E                     IVTADH          equ	14494	;# 
   133   00389F                     IVTADU          equ	14495	;# 
   134   00395B                     WDTCON0         equ	14683	;# 
   135   00395C                     WDTCON1         equ	14684	;# 
   136   00395D                     WDTPSL          equ	14685	;# 
   137   00395E                     WDTPSH          equ	14686	;# 
   138   00395F                     WDTTMR          equ	14687	;# 
   139   003960                     CRCDATA         equ	14688	;# 
   140   003960                     CRCDATL         equ	14688	;# 
   141   003961                     CRCDATH         equ	14689	;# 
   142   003962                     CRCACC          equ	14690	;# 
   143   003962                     CRCACCL         equ	14690	;# 
   144   003963                     CRCACCH         equ	14691	;# 
   145   003964                     CRCSHFT         equ	14692	;# 
   146   003964                     CRCSHIFTL       equ	14692	;# 
   147   003965                     CRCSHIFTH       equ	14693	;# 
   148   003966                     CRCXOR          equ	14694	;# 
   149   003966                     CRCXORL         equ	14694	;# 
   150   003967                     CRCXORH         equ	14695	;# 
   151   003968                     CRCCON0         equ	14696	;# 
   152   003969                     CRCCON1         equ	14697	;# 
   153   003976                     SCANLADR        equ	14710	;# 
   154   003976                     SCANLADRL       equ	14710	;# 
   155   003977                     SCANLADRH       equ	14711	;# 
   156   003978                     SCANLADRU       equ	14712	;# 
   157   003979                     SCANHADR        equ	14713	;# 
   158   003979                     SCANHADRL       equ	14713	;# 
   159   00397A                     SCANHADRH       equ	14714	;# 
   160   00397B                     SCANHADRU       equ	14715	;# 
   161   00397C                     SCANCON0        equ	14716	;# 
   162   00397D                     SCANTRIG        equ	14717	;# 
   163   003980                     IPR0            equ	14720	;# 
   164   003981                     IPR1            equ	14721	;# 
   165   003982                     IPR2            equ	14722	;# 
   166   003983                     IPR3            equ	14723	;# 
   167   003984                     IPR4            equ	14724	;# 
   168   003985                     IPR5            equ	14725	;# 
   169   003986                     IPR6            equ	14726	;# 
   170   003987                     IPR7            equ	14727	;# 
   171   003988                     IPR8            equ	14728	;# 
   172   003989                     IPR9            equ	14729	;# 
   173   00398A                     IPR10           equ	14730	;# 
   174   003990                     PIE0            equ	14736	;# 
   175   003991                     PIE1            equ	14737	;# 
   176   003992                     PIE2            equ	14738	;# 
   177   003993                     PIE3            equ	14739	;# 
   178   003994                     PIE4            equ	14740	;# 
   179   003995                     PIE5            equ	14741	;# 
   180   003996                     PIE6            equ	14742	;# 
   181   003997                     PIE7            equ	14743	;# 
   182   003998                     PIE8            equ	14744	;# 
   183   003999                     PIE9            equ	14745	;# 
   184   00399A                     PIE10           equ	14746	;# 
   185   0039A0                     PIR0            equ	14752	;# 
   186   0039A1                     PIR1            equ	14753	;# 
   187   0039A2                     PIR2            equ	14754	;# 
   188   0039A3                     PIR3            equ	14755	;# 
   189   0039A4                     PIR4            equ	14756	;# 
   190   0039A5                     PIR5            equ	14757	;# 
   191   0039A6                     PIR6            equ	14758	;# 
   192   0039A7                     PIR7            equ	14759	;# 
   193   0039A8                     PIR8            equ	14760	;# 
   194   0039A9                     PIR9            equ	14761	;# 
   195   0039AA                     PIR10           equ	14762	;# 
   196   0039C0                     PMD0            equ	14784	;# 
   197   0039C1                     PMD1            equ	14785	;# 
   198   0039C2                     PMD2            equ	14786	;# 
   199   0039C3                     PMD3            equ	14787	;# 
   200   0039C4                     PMD4            equ	14788	;# 
   201   0039C5                     PMD5            equ	14789	;# 
   202   0039C6                     PMD6            equ	14790	;# 
   203   0039C7                     PMD7            equ	14791	;# 
   204   0039D0                     BORCON          equ	14800	;# 
   205   0039D1                     VREGCON         equ	14801	;# 
   206   0039D8                     CPUDOZE         equ	14808	;# 
   207   0039D9                     OSCCON1         equ	14809	;# 
   208   0039DA                     OSCCON2         equ	14810	;# 
   209   0039DB                     OSCCON3         equ	14811	;# 
   210   0039DC                     OSCSTAT         equ	14812	;# 
   211   0039DC                     OSCSTAT1        equ	14812	;# 
   212   0039DD                     OSCEN           equ	14813	;# 
   213   0039DE                     OSCTUNE         equ	14814	;# 
   214   0039DF                     OSCFRQ          equ	14815	;# 
   215   0039E0                     NVMADRL         equ	14816	;# 
   216   0039E1                     NVMADRH         equ	14817	;# 
   217   0039E3                     NVMDAT          equ	14819	;# 
   218   0039E5                     NVMCON1         equ	14821	;# 
   219   0039E6                     NVMCON2         equ	14822	;# 
   220   0039EF                     PRLOCK          equ	14831	;# 
   221   0039F1                     ISRPR           equ	14833	;# 
   222   0039F2                     MAINPR          equ	14834	;# 
   223   0039F3                     DMA1PR          equ	14835	;# 
   224   0039F4                     DMA2PR          equ	14836	;# 
   225   0039F7                     SCANPR          equ	14839	;# 
   226   003A00                     RA0PPS          equ	14848	;# 
   227   003A01                     RA1PPS          equ	14849	;# 
   228   003A02                     RA2PPS          equ	14850	;# 
   229   003A03                     RA3PPS          equ	14851	;# 
   230   003A04                     RA4PPS          equ	14852	;# 
   231   003A05                     RA5PPS          equ	14853	;# 
   232   003A06                     RA6PPS          equ	14854	;# 
   233   003A07                     RA7PPS          equ	14855	;# 
   234   003A08                     RB0PPS          equ	14856	;# 
   235   003A09                     RB1PPS          equ	14857	;# 
   236   003A0A                     RB2PPS          equ	14858	;# 
   237   003A0B                     RB3PPS          equ	14859	;# 
   238   003A0C                     RB4PPS          equ	14860	;# 
   239   003A0D                     RB5PPS          equ	14861	;# 
   240   003A0E                     RB6PPS          equ	14862	;# 
   241   003A0F                     RB7PPS          equ	14863	;# 
   242   003A10                     RC0PPS          equ	14864	;# 
   243   003A11                     RC1PPS          equ	14865	;# 
   244   003A12                     RC2PPS          equ	14866	;# 
   245   003A13                     RC3PPS          equ	14867	;# 
   246   003A14                     RC4PPS          equ	14868	;# 
   247   003A15                     RC5PPS          equ	14869	;# 
   248   003A16                     RC6PPS          equ	14870	;# 
   249   003A17                     RC7PPS          equ	14871	;# 
   250   003A18                     RD0PPS          equ	14872	;# 
   251   003A19                     RD1PPS          equ	14873	;# 
   252   003A1A                     RD2PPS          equ	14874	;# 
   253   003A1B                     RD3PPS          equ	14875	;# 
   254   003A1C                     RD4PPS          equ	14876	;# 
   255   003A1D                     RD5PPS          equ	14877	;# 
   256   003A1E                     RD6PPS          equ	14878	;# 
   257   003A1F                     RD7PPS          equ	14879	;# 
   258   003A20                     RE0PPS          equ	14880	;# 
   259   003A21                     RE1PPS          equ	14881	;# 
   260   003A22                     RE2PPS          equ	14882	;# 
   261   003A40                     ANSELA          equ	14912	;# 
   262   003A41                     WPUA            equ	14913	;# 
   263   003A42                     ODCONA          equ	14914	;# 
   264   003A43                     SLRCONA         equ	14915	;# 
   265   003A44                     INLVLA          equ	14916	;# 
   266   003A45                     IOCAP           equ	14917	;# 
   267   003A46                     IOCAN           equ	14918	;# 
   268   003A47                     IOCAF           equ	14919	;# 
   269   003A50                     ANSELB          equ	14928	;# 
   270   003A51                     WPUB            equ	14929	;# 
   271   003A52                     ODCONB          equ	14930	;# 
   272   003A53                     SLRCONB         equ	14931	;# 
   273   003A54                     INLVLB          equ	14932	;# 
   274   003A55                     IOCBP           equ	14933	;# 
   275   003A56                     IOCBN           equ	14934	;# 
   276   003A57                     IOCBF           equ	14935	;# 
   277   003A5A                     RB1I2C          equ	14938	;# 
   278   003A5B                     RB2I2C          equ	14939	;# 
   279   003A60                     ANSELC          equ	14944	;# 
   280   003A61                     WPUC            equ	14945	;# 
   281   003A62                     ODCONC          equ	14946	;# 
   282   003A63                     SLRCONC         equ	14947	;# 
   283   003A64                     INLVLC          equ	14948	;# 
   284   003A65                     IOCCP           equ	14949	;# 
   285   003A66                     IOCCN           equ	14950	;# 
   286   003A67                     IOCCF           equ	14951	;# 
   287   003A6A                     RC3I2C          equ	14954	;# 
   288   003A6B                     RC4I2C          equ	14955	;# 
   289   003A70                     ANSELD          equ	14960	;# 
   290   003A71                     WPUD            equ	14961	;# 
   291   003A72                     ODCOND          equ	14962	;# 
   292   003A73                     SLRCOND         equ	14963	;# 
   293   003A74                     INLVLD          equ	14964	;# 
   294   003A7A                     RD0I2C          equ	14970	;# 
   295   003A7B                     RD1I2C          equ	14971	;# 
   296   003A80                     ANSELE          equ	14976	;# 
   297   003A81                     WPUE            equ	14977	;# 
   298   003A82                     ODCONE          equ	14978	;# 
   299   003A83                     SLRCONE         equ	14979	;# 
   300   003A84                     INLVLE          equ	14980	;# 
   301   003A85                     IOCEP           equ	14981	;# 
   302   003A86                     IOCEN           equ	14982	;# 
   303   003A87                     IOCEF           equ	14983	;# 
   304   003ABF                     PPSLOCK         equ	15039	;# 
   305   003AC0                     INT0PPS         equ	15040	;# 
   306   003AC1                     INT1PPS         equ	15041	;# 
   307   003AC2                     INT2PPS         equ	15042	;# 
   308   003AC3                     T0CKIPPS        equ	15043	;# 
   309   003AC4                     T1CKIPPS        equ	15044	;# 
   310   003AC5                     T1GPPS          equ	15045	;# 
   311   003AC6                     T3CKIPPS        equ	15046	;# 
   312   003AC7                     T3GPPS          equ	15047	;# 
   313   003AC8                     T5CKIPPS        equ	15048	;# 
   314   003AC9                     T5GPPS          equ	15049	;# 
   315   003ACA                     T2INPPS         equ	15050	;# 
   316   003ACB                     T4INPPS         equ	15051	;# 
   317   003ACC                     T6INPPS         equ	15052	;# 
   318   003ACD                     CCP1PPS         equ	15053	;# 
   319   003ACE                     CCP2PPS         equ	15054	;# 
   320   003ACF                     CCP3PPS         equ	15055	;# 
   321   003AD0                     CCP4PPS         equ	15056	;# 
   322   003AD1                     SMT1WINPPS      equ	15057	;# 
   323   003AD2                     SMT1SIGPPS      equ	15058	;# 
   324   003AD3                     CWG1INPPS       equ	15059	;# 
   325   003AD4                     CWG2INPPS       equ	15060	;# 
   326   003AD5                     CWG3INPPS       equ	15061	;# 
   327   003AD6                     MD1CARLPPS      equ	15062	;# 
   328   003AD7                     MD1CARHPPS      equ	15063	;# 
   329   003AD8                     MD1SRCPPS       equ	15064	;# 
   330   003AD9                     CLCIN0PPS       equ	15065	;# 
   331   003ADA                     CLCIN1PPS       equ	15066	;# 
   332   003ADB                     CLCIN2PPS       equ	15067	;# 
   333   003ADC                     CLCIN3PPS       equ	15068	;# 
   334   003ADD                     ADACTPPS        equ	15069	;# 
   335   003ADE                     SPI1SCKPPS      equ	15070	;# 
   336   003ADF                     SPI1SDIPPS      equ	15071	;# 
   337   003AE0                     SPI1SSPPS       equ	15072	;# 
   338   003AE1                     I2C1SCLPPS      equ	15073	;# 
   339   003AE2                     I2C1SDAPPS      equ	15074	;# 
   340   003AE3                     I2C2SCLPPS      equ	15075	;# 
   341   003AE4                     I2C2SDAPPS      equ	15076	;# 
   342   003AE5                     U1RXPPS         equ	15077	;# 
   343   003AE6                     U1CTSPPS        equ	15078	;# 
   344   003AE8                     U2RXPPS         equ	15080	;# 
   345   003AE9                     U2CTSPPS        equ	15081	;# 
   346   003BC9                     DMA2BUF         equ	15305	;# 
   347   003BCA                     DMA2DCNT        equ	15306	;# 
   348   003BCA                     DMA2DCNTL       equ	15306	;# 
   349   003BCB                     DMA2DCNTH       equ	15307	;# 
   350   003BCC                     DMA2DPTR        equ	15308	;# 
   351   003BCC                     DMA2DPTRL       equ	15308	;# 
   352   003BCD                     DMA2DPTRH       equ	15309	;# 
   353   003BCE                     DMA2DSZ         equ	15310	;# 
   354   003BCE                     DMA2DSZL        equ	15310	;# 
   355   003BCF                     DMA2DSZH        equ	15311	;# 
   356   003BD0                     DMA2DSA         equ	15312	;# 
   357   003BD0                     DMA2DSAL        equ	15312	;# 
   358   003BD1                     DMA2DSAH        equ	15313	;# 
   359   003BD2                     DMA2SCNT        equ	15314	;# 
   360   003BD2                     DMA2SCNTL       equ	15314	;# 
   361   003BD3                     DMA2SCNTH       equ	15315	;# 
   362   003BD4                     DMA2SPTR        equ	15316	;# 
   363   003BD4                     DMA2SPTRL       equ	15316	;# 
   364   003BD5                     DMA2SPTRH       equ	15317	;# 
   365   003BD6                     DMA2SPTRU       equ	15318	;# 
   366   003BD7                     DMA2SSZ         equ	15319	;# 
   367   003BD7                     DMA2SSZL        equ	15319	;# 
   368   003BD8                     DMA2SSZH        equ	15320	;# 
   369   003BD9                     DMA2SSA         equ	15321	;# 
   370   003BD9                     DMA2SSAL        equ	15321	;# 
   371   003BDA                     DMA2SSAH        equ	15322	;# 
   372   003BDB                     DMA2SSAU        equ	15323	;# 
   373   003BDC                     DMA2CON0        equ	15324	;# 
   374   003BDD                     DMA2CON1        equ	15325	;# 
   375   003BDE                     DMA2AIRQ        equ	15326	;# 
   376   003BDF                     DMA2SIRQ        equ	15327	;# 
   377   003BE9                     DMA1BUF         equ	15337	;# 
   378   003BEA                     DMA1DCNT        equ	15338	;# 
   379   003BEA                     DMA1DCNTL       equ	15338	;# 
   380   003BEB                     DMA1DCNTH       equ	15339	;# 
   381   003BEC                     DMA1DPTR        equ	15340	;# 
   382   003BEC                     DMA1DPTRL       equ	15340	;# 
   383   003BED                     DMA1DPTRH       equ	15341	;# 
   384   003BEE                     DMA1DSZ         equ	15342	;# 
   385   003BEE                     DMA1DSZL        equ	15342	;# 
   386   003BEF                     DMA1DSZH        equ	15343	;# 
   387   003BF0                     DMA1DSA         equ	15344	;# 
   388   003BF0                     DMA1DSAL        equ	15344	;# 
   389   003BF1                     DMA1DSAH        equ	15345	;# 
   390   003BF2                     DMA1SCNT        equ	15346	;# 
   391   003BF2                     DMA1SCNTL       equ	15346	;# 
   392   003BF3                     DMA1SCNTH       equ	15347	;# 
   393   003BF4                     DMA1SPTR        equ	15348	;# 
   394   003BF4                     DMA1SPTRL       equ	15348	;# 
   395   003BF5                     DMA1SPTRH       equ	15349	;# 
   396   003BF6                     DMA1SPTRU       equ	15350	;# 
   397   003BF7                     DMA1SSZ         equ	15351	;# 
   398   003BF7                     DMA1SSZL        equ	15351	;# 
   399   003BF8                     DMA1SSZH        equ	15352	;# 
   400   003BF9                     DMA1SSA         equ	15353	;# 
   401   003BF9                     DMA1SSAL        equ	15353	;# 
   402   003BFA                     DMA1SSAH        equ	15354	;# 
   403   003BFB                     DMA1SSAU        equ	15355	;# 
   404   003BFC                     DMA1CON0        equ	15356	;# 
   405   003BFD                     DMA1CON1        equ	15357	;# 
   406   003BFE                     DMA1AIRQ        equ	15358	;# 
   407   003BFF                     DMA1SIRQ        equ	15359	;# 
   408   003C56                     CLC4CON         equ	15446	;# 
   409   003C57                     CLC4POL         equ	15447	;# 
   410   003C58                     CLC4SEL0        equ	15448	;# 
   411   003C59                     CLC4SEL1        equ	15449	;# 
   412   003C5A                     CLC4SEL2        equ	15450	;# 
   413   003C5B                     CLC4SEL3        equ	15451	;# 
   414   003C5C                     CLC4GLS0        equ	15452	;# 
   415   003C5D                     CLC4GLS1        equ	15453	;# 
   416   003C5E                     CLC4GLS2        equ	15454	;# 
   417   003C5F                     CLC4GLS3        equ	15455	;# 
   418   003C60                     CLC3CON         equ	15456	;# 
   419   003C61                     CLC3POL         equ	15457	;# 
   420   003C62                     CLC3SEL0        equ	15458	;# 
   421   003C63                     CLC3SEL1        equ	15459	;# 
   422   003C64                     CLC3SEL2        equ	15460	;# 
   423   003C65                     CLC3SEL3        equ	15461	;# 
   424   003C66                     CLC3GLS0        equ	15462	;# 
   425   003C67                     CLC3GLS1        equ	15463	;# 
   426   003C68                     CLC3GLS2        equ	15464	;# 
   427   003C69                     CLC3GLS3        equ	15465	;# 
   428   003C6A                     CLC2CON         equ	15466	;# 
   429   003C6B                     CLC2POL         equ	15467	;# 
   430   003C6C                     CLC2SEL0        equ	15468	;# 
   431   003C6D                     CLC2SEL1        equ	15469	;# 
   432   003C6E                     CLC2SEL2        equ	15470	;# 
   433   003C6F                     CLC2SEL3        equ	15471	;# 
   434   003C70                     CLC2GLS0        equ	15472	;# 
   435   003C71                     CLC2GLS1        equ	15473	;# 
   436   003C72                     CLC2GLS2        equ	15474	;# 
   437   003C73                     CLC2GLS3        equ	15475	;# 
   438   003C74                     CLC1CON         equ	15476	;# 
   439   003C75                     CLC1POL         equ	15477	;# 
   440   003C76                     CLC1SEL0        equ	15478	;# 
   441   003C77                     CLC1SEL1        equ	15479	;# 
   442   003C78                     CLC1SEL2        equ	15480	;# 
   443   003C79                     CLC1SEL3        equ	15481	;# 
   444   003C7A                     CLC1GLS0        equ	15482	;# 
   445   003C7B                     CLC1GLS1        equ	15483	;# 
   446   003C7C                     CLC1GLS2        equ	15484	;# 
   447   003C7D                     CLC1GLS3        equ	15485	;# 
   448   003C7E                     CLCDATA0        equ	15486	;# 
   449   003CE5                     CLKRCON         equ	15589	;# 
   450   003CE6                     CLKRCLK         equ	15590	;# 
   451   003CFA                     MD1CON0         equ	15610	;# 
   452   003CFB                     MD1CON1         equ	15611	;# 
   453   003CFC                     MD1SRC          equ	15612	;# 
   454   003CFD                     MD1CARL         equ	15613	;# 
   455   003CFE                     MD1CARH         equ	15614	;# 
   456   003D10                     SPI1RXB         equ	15632	;# 
   457   003D11                     SPI1TXB         equ	15633	;# 
   458   003D12                     SPI1TCNT        equ	15634	;# 
   459   003D12                     SPI1TCNTL       equ	15634	;# 
   460   003D13                     SPI1TCNTH       equ	15635	;# 
   461   003D14                     SPI1CON0        equ	15636	;# 
   462   003D15                     SPI1CON1        equ	15637	;# 
   463   003D16                     SPI1CON2        equ	15638	;# 
   464   003D17                     SPI1STATUS      equ	15639	;# 
   465   003D18                     SPI1TWIDTH      equ	15640	;# 
   466   003D19                     SPI1BAUD        equ	15641	;# 
   467   003D1A                     SPI1INTF        equ	15642	;# 
   468   003D1B                     SPI1INTE        equ	15643	;# 
   469   003D1C                     SPI1CLK         equ	15644	;# 
   470   003D54                     I2C2RXB         equ	15700	;# 
   471   003D55                     I2C2TXB         equ	15701	;# 
   472   003D56                     I2C2CNT         equ	15702	;# 
   473   003D57                     I2C2ADB0        equ	15703	;# 
   474   003D58                     I2C2ADB1        equ	15704	;# 
   475   003D59                     I2C2ADR0        equ	15705	;# 
   476   003D5A                     I2C2ADR1        equ	15706	;# 
   477   003D5B                     I2C2ADR2        equ	15707	;# 
   478   003D5C                     I2C2ADR3        equ	15708	;# 
   479   003D5D                     I2C2CON0        equ	15709	;# 
   480   003D5E                     I2C2CON1        equ	15710	;# 
   481   003D5F                     I2C2CON2        equ	15711	;# 
   482   003D60                     I2C2ERR         equ	15712	;# 
   483   003D61                     I2C2STAT0       equ	15713	;# 
   484   003D62                     I2C2STAT1       equ	15714	;# 
   485   003D63                     I2C2PIR         equ	15715	;# 
   486   003D64                     I2C2PIE         equ	15716	;# 
   487   003D65                     I2C2CLK         equ	15717	;# 
   488   003D66                     I2C2BTO         equ	15718	;# 
   489   003D6A                     I2C1RXB         equ	15722	;# 
   490   003D6B                     I2C1TXB         equ	15723	;# 
   491   003D6C                     I2C1CNT         equ	15724	;# 
   492   003D6D                     I2C1ADB0        equ	15725	;# 
   493   003D6E                     I2C1ADB1        equ	15726	;# 
   494   003D6F                     I2C1ADR0        equ	15727	;# 
   495   003D70                     I2C1ADR1        equ	15728	;# 
   496   003D71                     I2C1ADR2        equ	15729	;# 
   497   003D72                     I2C1ADR3        equ	15730	;# 
   498   003D73                     I2C1CON0        equ	15731	;# 
   499   003D74                     I2C1CON1        equ	15732	;# 
   500   003D75                     I2C1CON2        equ	15733	;# 
   501   003D76                     I2C1ERR         equ	15734	;# 
   502   003D77                     I2C1STAT0       equ	15735	;# 
   503   003D78                     I2C1STAT1       equ	15736	;# 
   504   003D79                     I2C1PIR         equ	15737	;# 
   505   003D7A                     I2C1PIE         equ	15738	;# 
   506   003D7B                     I2C1CLK         equ	15739	;# 
   507   003D7C                     I2C1BTO         equ	15740	;# 
   508   003DD0                     U2RXB           equ	15824	;# 
   509   003DD0                     U2RXBL          equ	15824	;# 
   510   003DD2                     U2TXB           equ	15826	;# 
   511   003DD2                     U2TXBL          equ	15826	;# 
   512   003DD4                     U2P1            equ	15828	;# 
   513   003DD4                     U2P1L           equ	15828	;# 
   514   003DD6                     U2P2            equ	15830	;# 
   515   003DD6                     U2P2L           equ	15830	;# 
   516   003DD8                     U2P3            equ	15832	;# 
   517   003DD8                     U2P3L           equ	15832	;# 
   518   003DDA                     U2CON0          equ	15834	;# 
   519   003DDB                     U2CON1          equ	15835	;# 
   520   003DDC                     U2CON2          equ	15836	;# 
   521   003DDD                     U2BRG           equ	15837	;# 
   522   003DDD                     U2BRGL          equ	15837	;# 
   523   003DDE                     U2BRGH          equ	15838	;# 
   524   003DDF                     U2FIFO          equ	15839	;# 
   525   003DE0                     U2UIR           equ	15840	;# 
   526   003DE1                     U2ERRIR         equ	15841	;# 
   527   003DE2                     U2ERRIE         equ	15842	;# 
   528   003DE8                     U1RXB           equ	15848	;# 
   529   003DE8                     U1RXBL          equ	15848	;# 
   530   003DE9                     U1RXCHK         equ	15849	;# 
   531   003DEA                     U1TXB           equ	15850	;# 
   532   003DEA                     U1TXBL          equ	15850	;# 
   533   003DEB                     U1TXCHK         equ	15851	;# 
   534   003DEC                     U1P1            equ	15852	;# 
   535   003DEC                     U1P1L           equ	15852	;# 
   536   003DED                     U1P1H           equ	15853	;# 
   537   003DEE                     U1P2            equ	15854	;# 
   538   003DEE                     U1P2L           equ	15854	;# 
   539   003DEF                     U1P2H           equ	15855	;# 
   540   003DF0                     U1P3            equ	15856	;# 
   541   003DF0                     U1P3L           equ	15856	;# 
   542   003DF1                     U1P3H           equ	15857	;# 
   543   003DF2                     U1CON0          equ	15858	;# 
   544   003DF3                     U1CON1          equ	15859	;# 
   545   003DF4                     U1CON2          equ	15860	;# 
   546   003DF5                     U1BRG           equ	15861	;# 
   547   003DF5                     U1BRGL          equ	15861	;# 
   548   003DF6                     U1BRGH          equ	15862	;# 
   549   003DF7                     U1FIFO          equ	15863	;# 
   550   003DF8                     U1UIR           equ	15864	;# 
   551   003DF9                     U1ERRIR         equ	15865	;# 
   552   003DFA                     U1ERRIE         equ	15866	;# 
   553   003E9C                     DAC1CON1        equ	16028	;# 
   554   003E9E                     DAC1CON0        equ	16030	;# 
   555   003EB8                     CM2CON0         equ	16056	;# 
   556   003EB9                     CM2CON1         equ	16057	;# 
   557   003EBA                     CM2NCH          equ	16058	;# 
   558   003EBB                     CM2PCH          equ	16059	;# 
   559   003EBC                     CM1CON0         equ	16060	;# 
   560   003EBD                     CM1CON1         equ	16061	;# 
   561   003EBE                     CM1NCH          equ	16062	;# 
   562   003EBF                     CM1PCH          equ	16063	;# 
   563   003EC0                     CMOUT           equ	16064	;# 
   564   003EC1                     FVRCON          equ	16065	;# 
   565   003EC3                     ZCDCON          equ	16067	;# 
   566   003EC9                     HLVDCON0        equ	16073	;# 
   567   003ECA                     HLVDCON1        equ	16074	;# 
   568   003ED7                     ADCP            equ	16087	;# 
   569   003EDE                     ADLTH           equ	16094	;# 
   570   003EDE                     ADLTHL          equ	16094	;# 
   571   003EDF                     ADLTHH          equ	16095	;# 
   572   003EE0                     ADUTH           equ	16096	;# 
   573   003EE0                     ADUTHL          equ	16096	;# 
   574   003EE1                     ADUTHH          equ	16097	;# 
   575   003EE2                     ADERR           equ	16098	;# 
   576   003EE2                     ADERRL          equ	16098	;# 
   577   003EE3                     ADERRH          equ	16099	;# 
   578   003EE4                     ADSTPT          equ	16100	;# 
   579   003EE4                     ADSTPTL         equ	16100	;# 
   580   003EE5                     ADSTPTH         equ	16101	;# 
   581   003EE6                     ADFLTR          equ	16102	;# 
   582   003EE6                     ADFLTRL         equ	16102	;# 
   583   003EE7                     ADFLTRH         equ	16103	;# 
   584   003EE8                     ADACC           equ	16104	;# 
   585   003EE8                     ADACCL          equ	16104	;# 
   586   003EE9                     ADACCH          equ	16105	;# 
   587   003EEA                     ADACCU          equ	16106	;# 
   588   003EEB                     ADCNT           equ	16107	;# 
   589   003EEC                     ADRPT           equ	16108	;# 
   590   003EED                     ADPREV          equ	16109	;# 
   591   003EED                     ADPREVL         equ	16109	;# 
   592   003EEE                     ADPREVH         equ	16110	;# 
   593   003EEF                     ADRES           equ	16111	;# 
   594   003EEF                     ADRESL          equ	16111	;# 
   595   003EF0                     ADRESH          equ	16112	;# 
   596   003EF1                     ADPCH           equ	16113	;# 
   597   003EF3                     ADACQ           equ	16115	;# 
   598   003EF3                     ADACQL          equ	16115	;# 
   599   003EF4                     ADACQH          equ	16116	;# 
   600   003EF5                     ADCAP           equ	16117	;# 
   601   003EF6                     ADPRE           equ	16118	;# 
   602   003EF6                     ADPREL          equ	16118	;# 
   603   003EF7                     ADPREH          equ	16119	;# 
   604   003EF8                     ADCON0          equ	16120	;# 
   605   003EF9                     ADCON1          equ	16121	;# 
   606   003EFA                     ADCON2          equ	16122	;# 
   607   003EFB                     ADCON3          equ	16123	;# 
   608   003EFC                     ADSTAT          equ	16124	;# 
   609   003EFD                     ADREF           equ	16125	;# 
   610   003EFE                     ADACT           equ	16126	;# 
   611   003EFF                     ADCLK           equ	16127	;# 
   612   003F12                     SMT1TMR         equ	16146	;# 
   613   003F12                     SMT1TMRL        equ	16146	;# 
   614   003F13                     SMT1TMRH        equ	16147	;# 
   615   003F14                     SMT1TMRU        equ	16148	;# 
   616   003F15                     SMT1CPR         equ	16149	;# 
   617   003F15                     SMT1CPRL        equ	16149	;# 
   618   003F16                     SMT1CPRH        equ	16150	;# 
   619   003F17                     SMT1CPRU        equ	16151	;# 
   620   003F18                     SMT1CPW         equ	16152	;# 
   621   003F18                     SMT1CPWL        equ	16152	;# 
   622   003F19                     SMT1CPWH        equ	16153	;# 
   623   003F1A                     SMT1CPWU        equ	16154	;# 
   624   003F1B                     SMT1PR          equ	16155	;# 
   625   003F1B                     SMT1PRL         equ	16155	;# 
   626   003F1C                     SMT1PRH         equ	16156	;# 
   627   003F1D                     SMT1PRU         equ	16157	;# 
   628   003F1E                     SMT1CON0        equ	16158	;# 
   629   003F1F                     SMT1CON1        equ	16159	;# 
   630   003F20                     SMT1STAT        equ	16160	;# 
   631   003F21                     SMT1CLK         equ	16161	;# 
   632   003F22                     SMT1SIG         equ	16162	;# 
   633   003F23                     SMT1WIN         equ	16163	;# 
   634   003F38                     NCO1ACC         equ	16184	;# 
   635   003F38                     NCO1ACCL        equ	16184	;# 
   636   003F39                     NCO1ACCH        equ	16185	;# 
   637   003F3A                     NCO1ACCU        equ	16186	;# 
   638   003F3B                     NCO1INC         equ	16187	;# 
   639   003F3B                     NCO1INCL        equ	16187	;# 
   640   003F3C                     NCO1INCH        equ	16188	;# 
   641   003F3D                     NCO1INCU        equ	16189	;# 
   642   003F3E                     NCO1CON         equ	16190	;# 
   643   003F3F                     NCO1CLK         equ	16191	;# 
   644   003F40                     CWG3CLK         equ	16192	;# 
   645   003F40                     CWG3CLKCON      equ	16192	;# 
   646   003F41                     CWG3ISM         equ	16193	;# 
   647   003F41                     CWG3DAT         equ	16193	;# 
   648   003F42                     CWG3DBR         equ	16194	;# 
   649   003F43                     CWG3DBF         equ	16195	;# 
   650   003F44                     CWG3CON0        equ	16196	;# 
   651   003F45                     CWG3CON1        equ	16197	;# 
   652   003F46                     CWG3AS0         equ	16198	;# 
   653   003F47                     CWG3AS1         equ	16199	;# 
   654   003F48                     CWG3STR         equ	16200	;# 
   655   003F49                     CWG2CLK         equ	16201	;# 
   656   003F49                     CWG2CLKCON      equ	16201	;# 
   657   003F4A                     CWG2ISM         equ	16202	;# 
   658   003F4A                     CWG2DAT         equ	16202	;# 
   659   003F4B                     CWG2DBR         equ	16203	;# 
   660   003F4C                     CWG2DBF         equ	16204	;# 
   661   003F4D                     CWG2CON0        equ	16205	;# 
   662   003F4E                     CWG2CON1        equ	16206	;# 
   663   003F4F                     CWG2AS0         equ	16207	;# 
   664   003F50                     CWG2AS1         equ	16208	;# 
   665   003F51                     CWG2STR         equ	16209	;# 
   666   003F52                     CWG1CLK         equ	16210	;# 
   667   003F52                     CWG1CLKCON      equ	16210	;# 
   668   003F53                     CWG1ISM         equ	16211	;# 
   669   003F53                     CWG1DAT         equ	16211	;# 
   670   003F54                     CWG1DBR         equ	16212	;# 
   671   003F55                     CWG1DBF         equ	16213	;# 
   672   003F56                     CWG1CON0        equ	16214	;# 
   673   003F57                     CWG1CON1        equ	16215	;# 
   674   003F58                     CWG1AS0         equ	16216	;# 
   675   003F59                     CWG1AS1         equ	16217	;# 
   676   003F5A                     CWG1STR         equ	16218	;# 
   677   003F5E                     CCPTMRS0        equ	16222	;# 
   678   003F5F                     CCPTMRS1        equ	16223	;# 
   679   003F60                     PWM8DC          equ	16224	;# 
   680   003F60                     PWM8DCL         equ	16224	;# 
   681   003F61                     PWM8DCH         equ	16225	;# 
   682   003F62                     PWM8CON         equ	16226	;# 
   683   003F64                     PWM7DC          equ	16228	;# 
   684   003F64                     PWM7DCL         equ	16228	;# 
   685   003F65                     PWM7DCH         equ	16229	;# 
   686   003F66                     PWM7CON         equ	16230	;# 
   687   003F68                     PWM6DC          equ	16232	;# 
   688   003F68                     PWM6DCL         equ	16232	;# 
   689   003F69                     PWM6DCH         equ	16233	;# 
   690   003F6A                     PWM6CON         equ	16234	;# 
   691   003F6C                     PWM5DC          equ	16236	;# 
   692   003F6C                     PWM5DCL         equ	16236	;# 
   693   003F6D                     PWM5DCH         equ	16237	;# 
   694   003F6E                     PWM5CON         equ	16238	;# 
   695   003F70                     CCPR4           equ	16240	;# 
   696   003F70                     CCPR4L          equ	16240	;# 
   697   003F71                     CCPR4H          equ	16241	;# 
   698   003F72                     CCP4CON         equ	16242	;# 
   699   003F73                     CCP4CAP         equ	16243	;# 
   700   003F74                     CCPR3           equ	16244	;# 
   701   003F74                     CCPR3L          equ	16244	;# 
   702   003F75                     CCPR3H          equ	16245	;# 
   703   003F76                     CCP3CON         equ	16246	;# 
   704   003F77                     CCP3CAP         equ	16247	;# 
   705   003F78                     CCPR2           equ	16248	;# 
   706   003F78                     CCPR2L          equ	16248	;# 
   707   003F79                     CCPR2H          equ	16249	;# 
   708   003F7A                     CCP2CON         equ	16250	;# 
   709   003F7B                     CCP2CAP         equ	16251	;# 
   710   003F7C                     CCPR1           equ	16252	;# 
   711   003F7C                     CCPR1L          equ	16252	;# 
   712   003F7D                     CCPR1H          equ	16253	;# 
   713   003F7E                     CCP1CON         equ	16254	;# 
   714   003F7F                     CCP1CAP         equ	16255	;# 
   715   003F92                     T6TMR           equ	16274	;# 
   716   003F92                     TMR6            equ	16274	;# 
   717   003F93                     T6PR            equ	16275	;# 
   718   003F93                     PR6             equ	16275	;# 
   719   003F94                     T6CON           equ	16276	;# 
   720   003F95                     T6HLT           equ	16277	;# 
   721   003F96                     T6CLKCON        equ	16278	;# 
   722   003F96                     T6CLK           equ	16278	;# 
   723   003F97                     T6RST           equ	16279	;# 
   724   003F98                     TMR5            equ	16280	;# 
   725   003F98                     TMR5L           equ	16280	;# 
   726   003F99                     TMR5H           equ	16281	;# 
   727   003F9A                     T5CON           equ	16282	;# 
   728   003F9A                     TMR5CON         equ	16282	;# 
   729   003F9B                     T5GCON          equ	16283	;# 
   730   003F9B                     TMR5GCON        equ	16283	;# 
   731   003F9C                     T5GATE          equ	16284	;# 
   732   003F9C                     TMR5GATE        equ	16284	;# 
   733   003F9D                     T5CLK           equ	16285	;# 
   734   003F9D                     TMR5CLK         equ	16285	;# 
   735   003F9D                     PR5             equ	16285	;# 
   736   003F9E                     T4TMR           equ	16286	;# 
   737   003F9E                     TMR4            equ	16286	;# 
   738   003F9F                     T4PR            equ	16287	;# 
   739   003F9F                     PR4             equ	16287	;# 
   740   003FA0                     T4CON           equ	16288	;# 
   741   003FA1                     T4HLT           equ	16289	;# 
   742   003FA2                     T4CLKCON        equ	16290	;# 
   743   003FA2                     T4CLK           equ	16290	;# 
   744   003FA3                     T4RST           equ	16291	;# 
   745   003FA4                     TMR3            equ	16292	;# 
   746   003FA4                     TMR3L           equ	16292	;# 
   747   003FA5                     TMR3H           equ	16293	;# 
   748   003FA6                     T3CON           equ	16294	;# 
   749   003FA6                     TMR3CON         equ	16294	;# 
   750   003FA7                     T3GCON          equ	16295	;# 
   751   003FA7                     TMR3GCON        equ	16295	;# 
   752   003FA8                     T3GATE          equ	16296	;# 
   753   003FA8                     TMR3GATE        equ	16296	;# 
   754   003FA9                     T3CLK           equ	16297	;# 
   755   003FA9                     TMR3CLK         equ	16297	;# 
   756   003FA9                     PR3             equ	16297	;# 
   757   003FAA                     T2TMR           equ	16298	;# 
   758   003FAA                     TMR2            equ	16298	;# 
   759   003FAB                     T2PR            equ	16299	;# 
   760   003FAB                     PR2             equ	16299	;# 
   761   003FAC                     T2CON           equ	16300	;# 
   762   003FAD                     T2HLT           equ	16301	;# 
   763   003FAE                     T2CLKCON        equ	16302	;# 
   764   003FAE                     T2CLK           equ	16302	;# 
   765   003FAF                     T2RST           equ	16303	;# 
   766   003FB0                     TMR1            equ	16304	;# 
   767   003FB0                     TMR1L           equ	16304	;# 
   768   003FB1                     TMR1H           equ	16305	;# 
   769   003FB2                     T1CON           equ	16306	;# 
   770   003FB2                     TMR1CON         equ	16306	;# 
   771   003FB3                     T1GCON          equ	16307	;# 
   772   003FB3                     TMR1GCON        equ	16307	;# 
   773   003FB4                     T1GATE          equ	16308	;# 
   774   003FB4                     TMR1GATE        equ	16308	;# 
   775   003FB5                     T1CLK           equ	16309	;# 
   776   003FB5                     TMR1CLK         equ	16309	;# 
   777   003FB5                     PR1             equ	16309	;# 
   778   003FB6                     TMR0L           equ	16310	;# 
   779   003FB6                     TMR0            equ	16310	;# 
   780   003FB7                     TMR0H           equ	16311	;# 
   781   003FB7                     PR0             equ	16311	;# 
   782   003FB8                     T0CON0          equ	16312	;# 
   783   003FB9                     T0CON1          equ	16313	;# 
   784   003FBA                     LATA            equ	16314	;# 
   785   003FBB                     LATB            equ	16315	;# 
   786   003FBC                     LATC            equ	16316	;# 
   787   003FBD                     LATD            equ	16317	;# 
   788   003FBE                     LATE            equ	16318	;# 
   789   003FC2                     TRISA           equ	16322	;# 
   790   003FC3                     TRISB           equ	16323	;# 
   791   003FC4                     TRISC           equ	16324	;# 
   792   003FC5                     TRISD           equ	16325	;# 
   793   003FC6                     TRISE           equ	16326	;# 
   794   003FCA                     PORTA           equ	16330	;# 
   795   003FCB                     PORTB           equ	16331	;# 
   796   003FCC                     PORTC           equ	16332	;# 
   797   003FCD                     PORTD           equ	16333	;# 
   798   003FCE                     PORTE           equ	16334	;# 
   799   003FD2                     INTCON0         equ	16338	;# 
   800   003FD3                     INTCON1         equ	16339	;# 
   801   003FD4                     IVTLOCK         equ	16340	;# 
   802   003FD5                     IVTBASE         equ	16341	;# 
   803   003FD5                     IVTBASEL        equ	16341	;# 
   804   003FD6                     IVTBASEH        equ	16342	;# 
   805   003FD7                     IVTBASEU        equ	16343	;# 
   806   003FD8                     STATUS          equ	16344	;# 
   807   003FD9                     FSR2            equ	16345	;# 
   808   003FD9                     FSR2L           equ	16345	;# 
   809   003FDA                     FSR2H           equ	16346	;# 
   810   003FDB                     PLUSW2          equ	16347	;# 
   811   003FDC                     PREINC2         equ	16348	;# 
   812   003FDD                     POSTDEC2        equ	16349	;# 
   813   003FDE                     POSTINC2        equ	16350	;# 
   814   003FDF                     INDF2           equ	16351	;# 
   815   003FE0                     BSR             equ	16352	;# 
   816   003FE1                     FSR1            equ	16353	;# 
   817   003FE1                     FSR1L           equ	16353	;# 
   818   003FE2                     FSR1H           equ	16354	;# 
   819   003FE3                     PLUSW1          equ	16355	;# 
   820   003FE4                     PREINC1         equ	16356	;# 
   821   003FE5                     POSTDEC1        equ	16357	;# 
   822   003FE6                     POSTINC1        equ	16358	;# 
   823   003FE7                     INDF1           equ	16359	;# 
   824   003FE8                     WREG            equ	16360	;# 
   825   003FE9                     FSR0            equ	16361	;# 
   826   003FE9                     FSR0L           equ	16361	;# 
   827   003FEA                     FSR0H           equ	16362	;# 
   828   003FEB                     PLUSW0          equ	16363	;# 
   829   003FEC                     PREINC0         equ	16364	;# 
   830   003FED                     POSTDEC0        equ	16365	;# 
   831   003FEE                     POSTINC0        equ	16366	;# 
   832   003FEF                     INDF0           equ	16367	;# 
   833   003FF0                     PCON0           equ	16368	;# 
   834   003FF1                     PCON1           equ	16369	;# 
   835   003FF3                     PROD            equ	16371	;# 
   836   003FF3                     PRODL           equ	16371	;# 
   837   003FF4                     PRODH           equ	16372	;# 
   838   003FF5                     TABLAT          equ	16373	;# 
   839   003FF6                     TBLPTR          equ	16374	;# 
   840   003FF6                     TBLPTRL         equ	16374	;# 
   841   003FF7                     TBLPTRH         equ	16375	;# 
   842   003FF8                     TBLPTRU         equ	16376	;# 
   843   003FF9                     PCLAT           equ	16377	;# 
   844   003FF9                     PCL             equ	16377	;# 
   845   003FFA                     PCLATH          equ	16378	;# 
   846   003FFB                     PCLATU          equ	16379	;# 
   847   003FFC                     STKPTR          equ	16380	;# 
   848   003FFD                     TOS             equ	16381	;# 
   849   003FFD                     TOSL            equ	16381	;# 
   850   003FFE                     TOSH            equ	16382	;# 
   851   003FFF                     TOSU            equ	16383	;# 
   852   003A40                     _ANSELAbits     set	14912
   853   003EF4                     _ADACQH         set	16116
   854   003EF3                     _ADACQL         set	16115
   855   003EF7                     _ADPREH         set	16119
   856   003EF6                     _ADPREL         set	16118
   857   003EEF                     _ADRESL         set	16111
   858   003EF0                     _ADRESH         set	16112
   859   003EFF                     _ADCLK          set	16127
   860   003EF1                     _ADPCH          set	16113
   861   003EF8                     _ADCON0bits     set	16120
   862   003FBD                     _LATDbits       set	16317
   863   003FBB                     _LATB           set	16315
   864   003FC5                     _TRISD          set	16325
   865   003FC3                     _TRISB          set	16323
   866   003FC2                     _TRISAbits      set	16322
   867                           
   868                           	psect	smallconst
   869   002000                     __psmallconst:
   870                           	callstack 0
   871   002000  00                 	db	0
   872   002001                     STR_1:
   873                           
   874                           ; BSR set to: 62
   875   002001  44                 	db	68	;'D'
   876   002002  69                 	db	105	;'i'
   877   002003  66                 	db	102	;'f'
   878   002004  66                 	db	102	;'f'
   879   002005  69                 	db	105	;'i'
   880   002006  63                 	db	99	;'c'
   881   002007  75                 	db	117	;'u'
   882   002008  6C                 	db	108	;'l'
   883   002009  74                 	db	116	;'t'
   884   00200A  79                 	db	121	;'y'
   885   00200B  3A                 	db	58	;':'
   886   00200C  20                 	db	32
   887   00200D  25                 	db	37
   888   00200E  64                 	db	100	;'d'
   889   00200F  20                 	db	32
   890   002010  20                 	db	32
   891   002011  20                 	db	32
   892   002012  00                 	db	0
   893   002013  00                 	db	0	; dummy byte at the end
   894   002000                     __smallconst    set	__psmallconst
   895   002000                     __mediumconst   set	__psmallconst
   896   000001                     __activetblptr  equ	1
   897                           
   898                           ; #config settings
   899                           
   900                           	psect	cinit
   901   002E16                     __pcinit:
   902                           	callstack 0
   903   002E16                     start_initialization:
   904                           	callstack 0
   905   002E16                     __initialization:
   906                           	callstack 0
   907                           
   908                           ; Clear objects allocated to BANK0 (32 bytes)
   909   002E16  EE00  F060         	lfsr	0,__pbssBANK0
   910   002E1A  0E20               	movlw	32
   911   002E1C                     clear_0:
   912   002E1C  6AEE               	clrf	postinc0,c
   913   002E1E  06E8               	decf	wreg,f,c
   914   002E20  E1FD               	bnz	clear_0
   915                           
   916                           ; Clear objects allocated to COMRAM (19 bytes)
   917   002E22  EE00  F02F         	lfsr	0,__pbssCOMRAM
   918   002E26  0E13               	movlw	19
   919   002E28                     clear_1:
   920   002E28  6AEE               	clrf	postinc0,c
   921   002E2A  06E8               	decf	wreg,f,c
   922   002E2C  E1FD               	bnz	clear_1
   923   002E2E                     end_of_initialization:
   924                           	callstack 0
   925   002E2E                     __end_of__initialization:
   926                           	callstack 0
   927   002E2E  0E00               	movlw	low (__Lsmallconst shr (0+16))
   928   002E30  6EF8               	movwf	tblptru,c
   929   002E32  0E20               	movlw	high __Lsmallconst
   930   002E34  6EF7               	movwf	tblptrh,c
   931   002E36  0100               	movlb	0
   932   002E38  EFF2  F015         	goto	_main	;jump to C main() function
   933                           
   934                           	psect	bssCOMRAM
   935   00002F                     __pbssCOMRAM:
   936                           	callstack 0
   937   00002F                     _lux_value:
   938                           	callstack 0
   939   00002F                     	ds	4
   940   000033                     _width:
   941                           	callstack 0
   942   000033                     	ds	2
   943   000035                     _prec:
   944                           	callstack 0
   945   000035                     	ds	2
   946   000037                     _flags:
   947                           	callstack 0
   948   000037                     	ds	1
   949   000038                     _data:
   950                           	callstack 0
   951   000038                     	ds	10
   952                           
   953                           	psect	bssBANK0
   954   000060                     __pbssBANK0:
   955                           	callstack 0
   956   000060                     _dbuf:
   957                           	callstack 0
   958   000060                     	ds	32
   959                           
   960                           	psect	cstackCOMRAM
   961   000001                     __pcstackCOMRAM:
   962                           	callstack 0
   963   000001                     ?_ADC_Read:
   964                           	callstack 0
   965   000001                     ?___awdiv:
   966                           	callstack 0
   967   000001                     ?___awmod:
   968                           	callstack 0
   969   000001                     ?___xxtofl:
   970                           	callstack 0
   971   000001                     MSdelay@val:
   972                           	callstack 0
   973   000001                     ___awdiv@dividend:
   974                           	callstack 0
   975   000001                     ___awmod@dividend:
   976                           	callstack 0
   977   000001                     fputc@c:
   978                           	callstack 0
   979   000001                     ___flge@ff1:
   980                           	callstack 0
   981   000001                     ___xxtofl@val:
   982                           	callstack 0
   983   000001                     
   984                           ; 1 bytes @ 0x0
   985   000001                     	ds	2
   986   000003                     fputc@fp:
   987                           	callstack 0
   988   000003                     MSdelay@i:
   989                           	callstack 0
   990   000003                     ___awdiv@divisor:
   991                           	callstack 0
   992   000003                     ___awmod@divisor:
   993                           	callstack 0
   994   000003                     ??_ADC_Read:
   995                           
   996                           ; 1 bytes @ 0x2
   997   000003                     	ds	1
   998   000004                     ??_fputc:
   999                           
  1000                           ; 1 bytes @ 0x3
  1001   000004                     	ds	1
  1002   000005                     ___awdiv@counter:
  1003                           	callstack 0
  1004   000005                     ___awmod@counter:
  1005                           	callstack 0
  1006   000005                     MSdelay@j:
  1007                           	callstack 0
  1008   000005                     ___flge@ff2:
  1009                           	callstack 0
  1010   000005                     ??___xxtofl:
  1011                           
  1012                           ; 1 bytes @ 0x4
  1013   000005                     	ds	1
  1014   000006                     ___awdiv@sign:
  1015                           	callstack 0
  1016   000006                     ___awmod@sign:
  1017                           	callstack 0
  1018                           
  1019                           ; 1 bytes @ 0x5
  1020   000006                     	ds	1
  1021   000007                     ?_abs:
  1022                           	callstack 0
  1023   000007                     LCD_Command@cmd:
  1024                           	callstack 0
  1025   000007                     LCD_Char@dat:
  1026                           	callstack 0
  1027   000007                     ___awdiv@quotient:
  1028                           	callstack 0
  1029   000007                     abs@a:
  1030                           	callstack 0
  1031   000007                     
  1032                           ; 1 bytes @ 0x6
  1033   000007                     	ds	1
  1034   000008                     LCD_String@msg:
  1035                           	callstack 0
  1036   000008                     
  1037                           ; 1 bytes @ 0x7
  1038   000008                     	ds	1
  1039   000009                     LCD_String_xy@pos:
  1040                           	callstack 0
  1041   000009                     ___xxtofl@sign:
  1042                           	callstack 0
  1043   000009                     ??_abs:
  1044   000009                     ??___flge:
  1045                           
  1046                           ; 1 bytes @ 0x8
  1047   000009                     	ds	1
  1048   00000A                     LCD_String_xy@msg:
  1049                           	callstack 0
  1050   00000A                     ___xxtofl@exp:
  1051                           	callstack 0
  1052                           
  1053                           ; 1 bytes @ 0x9
  1054   00000A                     	ds	1
  1055   00000B                     LCD_String_xy@row:
  1056                           	callstack 0
  1057   00000B                     vfpfcnvrt@fp:
  1058                           	callstack 0
  1059   00000B                     ___xxtofl@arg:
  1060                           	callstack 0
  1061   00000B                     
  1062                           ; 1 bytes @ 0xA
  1063   00000B                     	ds	1
  1064   00000C                     LCD_String_xy@location:
  1065                           	callstack 0
  1066   00000C                     vfpfcnvrt@fmt:
  1067                           	callstack 0
  1068                           
  1069                           ; 1 bytes @ 0xB
  1070   00000C                     	ds	1
  1071   00000D                     vfpfcnvrt@ap:
  1072                           	callstack 0
  1073                           
  1074                           ; 1 bytes @ 0xC
  1075   00000D                     	ds	1
  1076   00000E                     ??_vfpfcnvrt:
  1077                           
  1078                           ; 1 bytes @ 0xD
  1079   00000E                     	ds	1
  1080   00000F                     ?___flmul:
  1081                           	callstack 0
  1082   00000F                     vfpfcnvrt@done:
  1083                           	callstack 0
  1084   00000F                     ___flmul@b:
  1085                           	callstack 0
  1086                           
  1087                           ; 4 bytes @ 0xE
  1088   00000F                     	ds	1
  1089   000010                     vfpfcnvrt@cp:
  1090                           	callstack 0
  1091                           
  1092                           ; 1 bytes @ 0xF
  1093   000010                     	ds	1
  1094   000011                     vfpfcnvrt@convarg:
  1095                           	callstack 0
  1096                           
  1097                           ; 4 bytes @ 0x10
  1098   000011                     	ds	2
  1099   000013                     ___flmul@a:
  1100                           	callstack 0
  1101                           
  1102                           ; 4 bytes @ 0x12
  1103   000013                     	ds	2
  1104   000015                     vfpfcnvrt@c:
  1105                           	callstack 0
  1106                           
  1107                           ; 1 bytes @ 0x14
  1108   000015                     	ds	1
  1109   000016                     ?_vfprintf:
  1110                           	callstack 0
  1111   000016                     vfprintf@fp:
  1112                           	callstack 0
  1113                           
  1114                           ; 1 bytes @ 0x15
  1115   000016                     	ds	1
  1116   000017                     vfprintf@fmt:
  1117                           	callstack 0
  1118   000017                     ??___flmul:
  1119                           
  1120                           ; 1 bytes @ 0x16
  1121   000017                     	ds	1
  1122   000018                     vfprintf@ap:
  1123                           	callstack 0
  1124                           
  1125                           ; 1 bytes @ 0x17
  1126   000018                     	ds	1
  1127   000019                     vfprintf@cfmt:
  1128                           	callstack 0
  1129   000019                     
  1130                           ; 1 bytes @ 0x18
  1131   000019                     	ds	1
  1132   00001A                     ?_sprintf:
  1133                           	callstack 0
  1134   00001A                     sprintf@s:
  1135                           	callstack 0
  1136                           
  1137                           ; 1 bytes @ 0x19
  1138   00001A                     	ds	1
  1139   00001B                     ___flmul@sign:
  1140                           	callstack 0
  1141   00001B                     sprintf@fmt:
  1142                           	callstack 0
  1143                           
  1144                           ; 1 bytes @ 0x1A
  1145   00001B                     	ds	1
  1146   00001C                     ___flmul@grs:
  1147                           	callstack 0
  1148                           
  1149                           ; 4 bytes @ 0x1B
  1150   00001C                     	ds	2
  1151   00001E                     sprintf@ap:
  1152                           	callstack 0
  1153   00001E                     
  1154                           ; 1 bytes @ 0x1D
  1155   00001E                     	ds	1
  1156   00001F                     sprintf@f:
  1157                           	callstack 0
  1158                           
  1159                           ; 11 bytes @ 0x1E
  1160   00001F                     	ds	1
  1161   000020                     ___flmul@aexp:
  1162                           	callstack 0
  1163                           
  1164                           ; 1 bytes @ 0x1F
  1165   000020                     	ds	1
  1166   000021                     ___flmul@bexp:
  1167                           	callstack 0
  1168                           
  1169                           ; 1 bytes @ 0x20
  1170   000021                     	ds	1
  1171   000022                     ___flmul@prod:
  1172                           	callstack 0
  1173                           
  1174                           ; 4 bytes @ 0x21
  1175   000022                     	ds	4
  1176   000026                     ___flmul@temp:
  1177                           	callstack 0
  1178                           
  1179                           ; 2 bytes @ 0x25
  1180   000026                     	ds	2
  1181   000028                     getDifficulty@digital:
  1182                           	callstack 0
  1183   000028                     
  1184                           ; 1 bytes @ 0x27
  1185   000028                     	ds	2
  1186   00002A                     getDifficulty@voltage:
  1187                           	callstack 0
  1188                           
  1189                           ; 4 bytes @ 0x29
  1190   00002A                     	ds	4
  1191   00002E                     main@difficulty:
  1192                           	callstack 0
  1193   00002E                     
  1194                           ; 1 bytes @ 0x2D
  1195   00002E                     	ds	1
  1196                           
  1197 ;;
  1198 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1199 ;;
  1200 ;; *************** function _main *****************
  1201 ;; Defined at:
  1202 ;;		line 27 in file "310finalcode.c"
  1203 ;; Parameters:    Size  Location     Type
  1204 ;;		None
  1205 ;; Auto vars:     Size  Location     Type
  1206 ;;  difficulty      1   45[COMRAM] unsigned char 
  1207 ;; Return value:  Size  Location     Type
  1208 ;;                  1    wreg      void 
  1209 ;; Registers used:
  1210 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1211 ;; Tracked objects:
  1212 ;;		On entry : 0/0
  1213 ;;		On exit  : 0/0
  1214 ;;		Unchanged: 0/0
  1215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1217 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1219 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1220 ;;Total ram usage:        1 bytes
  1221 ;; Hardware stack levels required when called: 5
  1222 ;; This function calls:
  1223 ;;		_ADC_Init
  1224 ;;		_LCD_Init
  1225 ;;		_LCD_String_xy
  1226 ;;		_getDifficulty
  1227 ;;		_sprintf
  1228 ;; This function is called by:
  1229 ;;		Startup code after reset
  1230 ;; This function uses a non-reentrant model
  1231 ;;
  1232                           
  1233                           	psect	text0
  1234   002BE4                     __ptext0:
  1235                           	callstack 0
  1236   002BE4                     _main:
  1237                           	callstack 26
  1238   002BE4  ECE2  F016         	call	_LCD_Init	;wreg free
  1239   002BE8  ECF7  F016         	call	_ADC_Init	;wreg free
  1240   002BEC                     l1866:
  1241   002BEC  EC65  F014         	call	_getDifficulty	;wreg free
  1242   002BF0  6E2E               	movwf	main@difficulty^0,c
  1243   002BF2  0E38               	movlw	low _data
  1244   002BF4  6E1A               	movwf	sprintf@s^0,c
  1245   002BF6  0E01               	movlw	low STR_1
  1246   002BF8  6E1B               	movwf	sprintf@fmt^0,c
  1247   002BFA  C02E  F01C         	movff	main@difficulty,?_sprintf+2
  1248   002BFE  6A1D               	clrf	(?_sprintf+3)^0,c
  1249   002C00  EC83  F016         	call	_sprintf	;wreg free
  1250   002C04  0E00               	movlw	0
  1251   002C06  6E09               	movwf	LCD_String_xy@pos^0,c
  1252   002C08  0E38               	movlw	low _data
  1253   002C0A  6E0A               	movwf	LCD_String_xy@msg^0,c
  1254   002C0C  0E01               	movlw	1
  1255   002C0E  EC65  F016         	call	_LCD_String_xy
  1256   002C12  042E               	decf	main@difficulty^0,w,c
  1257   002C14  A4D8               	btfss	status,2,c
  1258   002C16  EF0F  F016         	goto	u1431
  1259   002C1A  EF11  F016         	goto	u1430
  1260   002C1E                     u1431:
  1261   002C1E  EF13  F016         	goto	l1876
  1262   002C22                     u1430:
  1263   002C22  EFF6  F015         	goto	l1866
  1264   002C26                     l1876:
  1265   002C26  0E02               	movlw	2
  1266   002C28  182E               	xorwf	main@difficulty^0,w,c
  1267   002C2A  A4D8               	btfss	status,2,c
  1268   002C2C  EF1A  F016         	goto	u1441
  1269   002C30  EF1C  F016         	goto	u1440
  1270   002C34                     u1441:
  1271   002C34  EF1E  F016         	goto	l1880
  1272   002C38                     u1440:
  1273   002C38  EFF6  F015         	goto	l1866
  1274   002C3C                     l1880:
  1275   002C3C  EFF6  F015         	goto	l1866
  1276   002C40  EFFE  F0FF         	goto	start
  1277   002C44                     __end_of_main:
  1278                           	callstack 0
  1279                           
  1280 ;; *************** function _sprintf *****************
  1281 ;; Defined at:
  1282 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_sprintf.c"
  1283 ;; Parameters:    Size  Location     Type
  1284 ;;  s               1   25[COMRAM] PTR unsigned char 
  1285 ;;		 -> data(10), 
  1286 ;;  fmt             1   26[COMRAM] PTR const unsigned char 
  1287 ;;		 -> STR_1(18), 
  1288 ;; Auto vars:     Size  Location     Type
  1289 ;;  f              11   30[COMRAM] struct _IO_FILE
  1290 ;;  ret             2    0        int 
  1291 ;;  ap              1   29[COMRAM] PTR void [1]
  1292 ;;		 -> ?_sprintf(2), 
  1293 ;; Return value:  Size  Location     Type
  1294 ;;                  2   25[COMRAM] int 
  1295 ;; Registers used:
  1296 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1297 ;; Tracked objects:
  1298 ;;		On entry : 0/0
  1299 ;;		On exit  : 0/0
  1300 ;;		Unchanged: 0/0
  1301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1302 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1303 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1305 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1306 ;;Total ram usage:       16 bytes
  1307 ;; Hardware stack levels used: 1
  1308 ;; Hardware stack levels required when called: 4
  1309 ;; This function calls:
  1310 ;;		_vfprintf
  1311 ;; This function is called by:
  1312 ;;		_main
  1313 ;; This function uses a non-reentrant model
  1314 ;;
  1315                           
  1316                           	psect	text1
  1317   002D06                     __ptext1:
  1318                           	callstack 0
  1319   002D06                     _sprintf:
  1320                           	callstack 26
  1321   002D06  0E1C               	movlw	low (?_sprintf+2)
  1322   002D08  6E1E               	movwf	sprintf@ap^0,c
  1323   002D0A  C01A  F01F         	movff	sprintf@s,sprintf@f
  1324   002D0E  0E00               	movlw	0
  1325   002D10  6E22               	movwf	(sprintf@f+3)^0,c
  1326   002D12  0E00               	movlw	0
  1327   002D14  6E21               	movwf	(sprintf@f+2)^0,c
  1328   002D16  0E00               	movlw	0
  1329   002D18  6E29               	movwf	(sprintf@f+10)^0,c
  1330   002D1A  0E00               	movlw	0
  1331   002D1C  6E28               	movwf	(sprintf@f+9)^0,c
  1332   002D1E  0E1F               	movlw	low sprintf@f
  1333   002D20  6E16               	movwf	vfprintf@fp^0,c
  1334   002D22  C01B  F017         	movff	sprintf@fmt,vfprintf@fmt
  1335   002D26  0E1E               	movlw	low sprintf@ap
  1336   002D28  6E18               	movwf	vfprintf@ap^0,c
  1337   002D2A  EC47  F016         	call	_vfprintf	;wreg free
  1338   002D2E  501A               	movf	sprintf@s^0,w,c
  1339   002D30  2421               	addwf	(sprintf@f+2)^0,w,c
  1340   002D32  6ED9               	movwf	fsr2l,c
  1341   002D34  6ADA               	clrf	fsr2h,c
  1342   002D36  6ADF               	clrf	indf2,c
  1343   002D38  0012               	return		;funcret
  1344   002D3A                     __end_of_sprintf:
  1345                           	callstack 0
  1346                           
  1347 ;; *************** function _vfprintf *****************
  1348 ;; Defined at:
  1349 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  1350 ;; Parameters:    Size  Location     Type
  1351 ;;  fp              1   21[COMRAM] PTR struct _IO_FILE
  1352 ;;		 -> sprintf@f(11), 
  1353 ;;  fmt             1   22[COMRAM] PTR const unsigned char 
  1354 ;;		 -> STR_1(18), 
  1355 ;;  ap              1   23[COMRAM] PTR PTR void 
  1356 ;;		 -> sprintf@ap(1), 
  1357 ;; Auto vars:     Size  Location     Type
  1358 ;;  cfmt            1   24[COMRAM] PTR unsigned char 
  1359 ;;		 -> STR_1(18), 
  1360 ;; Return value:  Size  Location     Type
  1361 ;;                  2   21[COMRAM] int 
  1362 ;; Registers used:
  1363 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1364 ;; Tracked objects:
  1365 ;;		On entry : 0/0
  1366 ;;		On exit  : 0/0
  1367 ;;		Unchanged: 0/0
  1368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1369 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1370 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1372 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1373 ;;Total ram usage:        4 bytes
  1374 ;; Hardware stack levels used: 1
  1375 ;; Hardware stack levels required when called: 3
  1376 ;; This function calls:
  1377 ;;		_vfpfcnvrt
  1378 ;; This function is called by:
  1379 ;;		_sprintf
  1380 ;; This function uses a non-reentrant model
  1381 ;;
  1382                           
  1383                           	psect	text2
  1384   002C8E                     __ptext2:
  1385                           	callstack 0
  1386   002C8E                     _vfprintf:
  1387                           	callstack 26
  1388   002C8E                     
  1389                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  1390   002C8E  C017  F019         	movff	vfprintf@fmt,vfprintf@cfmt
  1391                           
  1392                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1393   002C92  EF53  F016         	goto	l1790
  1394   002C96                     l1788:
  1395                           
  1396                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1397   002C96  C016  F00B         	movff	vfprintf@fp,vfpfcnvrt@fp
  1398   002C9A  0E19               	movlw	low vfprintf@cfmt
  1399   002C9C  6E0C               	movwf	vfpfcnvrt@fmt^0,c
  1400   002C9E  C018  F00D         	movff	vfprintf@ap,vfpfcnvrt@ap
  1401   002CA2  EC2F  F012         	call	_vfpfcnvrt	;wreg free
  1402   002CA6                     l1790:
  1403                           
  1404                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1405   002CA6  0060  F067  FFF6   	movff	vfprintf@cfmt,tblptrl
  1406   002CAC                     	if	0	;There is only one active tblptr byte
  1407   002CAC                     	endif
  1408   002CAC                     	if	0	;tblptru may be non-zero
  1409   002CAC                     	endif
  1410   002CAC                     	if	0	;tblptru may be non-zero
  1411   002CAC                     	endif
  1412   002CAC  0008               	tblrd		*
  1413   002CAE  50F5               	movf	tablat,w,c
  1414   002CB0  0900               	iorlw	0
  1415   002CB2  A4D8               	btfss	status,2,c
  1416   002CB4  EF5E  F016         	goto	u1381
  1417   002CB8  EF60  F016         	goto	u1380
  1418   002CBC                     u1381:
  1419   002CBC  EF4B  F016         	goto	l1788
  1420   002CC0                     u1380:
  1421   002CC0                     
  1422                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  1423   002CC0  0E00               	movlw	0
  1424   002CC2  6E17               	movwf	(?_vfprintf+1)^0,c
  1425   002CC4  0E00               	movlw	0
  1426   002CC6  6E16               	movwf	?_vfprintf^0,c
  1427   002CC8  0012               	return		;funcret
  1428   002CCA                     __end_of_vfprintf:
  1429                           	callstack 0
  1430                           
  1431 ;; *************** function _vfpfcnvrt *****************
  1432 ;; Defined at:
  1433 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  1434 ;; Parameters:    Size  Location     Type
  1435 ;;  fp              1   10[COMRAM] PTR struct _IO_FILE
  1436 ;;		 -> sprintf@f(11), 
  1437 ;;  fmt             1   11[COMRAM] PTR PTR unsigned char 
  1438 ;;		 -> vfprintf@cfmt(1), 
  1439 ;;  ap              1   12[COMRAM] PTR PTR void 
  1440 ;;		 -> sprintf@ap(1), 
  1441 ;; Auto vars:     Size  Location     Type
  1442 ;;  convarg         4   16[COMRAM] struct .
  1443 ;;  c               1   20[COMRAM] unsigned char 
  1444 ;;  cp              1   15[COMRAM] PTR unsigned char 
  1445 ;;		 -> STR_1(18), 
  1446 ;;  done            1   14[COMRAM] _Bool 
  1447 ;; Return value:  Size  Location     Type
  1448 ;;                  1    wreg      void 
  1449 ;; Registers used:
  1450 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1451 ;; Tracked objects:
  1452 ;;		On entry : 0/0
  1453 ;;		On exit  : 0/0
  1454 ;;		Unchanged: 0/0
  1455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1456 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1457 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1458 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1459 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1460 ;;Total ram usage:       11 bytes
  1461 ;; Hardware stack levels used: 1
  1462 ;; Hardware stack levels required when called: 2
  1463 ;; This function calls:
  1464 ;;		___awdiv
  1465 ;;		___awmod
  1466 ;;		_abs
  1467 ;;		_fputc
  1468 ;; This function is called by:
  1469 ;;		_vfprintf
  1470 ;; This function uses a non-reentrant model
  1471 ;;
  1472                           
  1473                           	psect	text3
  1474   00245E                     __ptext3:
  1475                           	callstack 0
  1476   00245E                     _vfpfcnvrt:
  1477                           	callstack 26
  1478   00245E                     
  1479                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  1480   00245E  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1481   002460  6ED9               	movwf	fsr2l,c
  1482   002462  6ADA               	clrf	fsr2h,c
  1483   002464  006F FF7F FFF6     	movff	indf2,tblptrl
  1484   00246A                     	if	0	;There is only one active tblptr byte
  1485   00246A                     	endif
  1486   00246A                     	if	0	;tblptru may be non-zero
  1487   00246A                     	endif
  1488   00246A                     	if	0	;tblptru may be non-zero
  1489   00246A                     	endif
  1490   00246A  0008               	tblrd		*
  1491   00246C  50F5               	movf	tablat,w,c
  1492   00246E  0A25               	xorlw	37
  1493   002470  A4D8               	btfss	status,2,c
  1494   002472  EF3D  F012         	goto	u921
  1495   002476  EF3F  F012         	goto	u920
  1496   00247A                     u921:
  1497   00247A  EFF8  F012         	goto	l1558
  1498   00247E                     u920:
  1499   00247E                     
  1500                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  1501   00247E  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1502   002480  6ED9               	movwf	fsr2l,c
  1503   002482  6ADA               	clrf	fsr2h,c
  1504   002484  2ADF               	incf	indf2,f,c
  1505   002486                     
  1506                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  1507   002486  0E00               	movlw	0
  1508   002488  6E34               	movwf	(_width+1)^0,c
  1509   00248A  0E00               	movlw	0
  1510   00248C  6E33               	movwf	_width^0,c
  1511   00248E  C033  F037         	movff	_width,_flags
  1512   002492                     
  1513                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  1514   002492  6835               	setf	_prec^0,c
  1515   002494  6836               	setf	(_prec+1)^0,c
  1516   002496                     
  1517                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  1518   002496  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1519   002498  6ED9               	movwf	fsr2l,c
  1520   00249A  6ADA               	clrf	fsr2h,c
  1521   00249C  50DF               	movf	indf2,w,c
  1522   00249E  6E10               	movwf	vfpfcnvrt@cp^0,c
  1523   0024A0                     
  1524                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1525   0024A0  0060  F043  FFF6   	movff	vfpfcnvrt@cp,tblptrl
  1526   0024A6                     	if	0	;There is only one active tblptr byte
  1527   0024A6                     	endif
  1528   0024A6                     	if	0	;tblptru may be non-zero
  1529   0024A6                     	endif
  1530   0024A6                     	if	0	;tblptru may be non-zero
  1531   0024A6                     	endif
  1532   0024A6  0008               	tblrd		*
  1533   0024A8  50F5               	movf	tablat,w,c
  1534   0024AA  0A64               	xorlw	100
  1535   0024AC  B4D8               	btfsc	status,2,c
  1536   0024AE  EF5B  F012         	goto	u931
  1537   0024B2  EF5D  F012         	goto	u930
  1538   0024B6                     u931:
  1539   0024B6  EF6A  F012         	goto	l1528
  1540   0024BA                     u930:
  1541   0024BA  0060  F043  FFF6   	movff	vfpfcnvrt@cp,tblptrl
  1542   0024C0                     	if	0	;There is only one active tblptr byte
  1543   0024C0                     	endif
  1544   0024C0                     	if	0	;tblptru may be non-zero
  1545   0024C0                     	endif
  1546   0024C0                     	if	0	;tblptru may be non-zero
  1547   0024C0                     	endif
  1548   0024C0  0008               	tblrd		*
  1549   0024C2  50F5               	movf	tablat,w,c
  1550   0024C4  0A69               	xorlw	105
  1551   0024C6  A4D8               	btfss	status,2,c
  1552   0024C8  EF68  F012         	goto	u941
  1553   0024CC  EF6A  F012         	goto	u940
  1554   0024D0                     u941:
  1555   0024D0  EFF2  F012         	goto	l1554
  1556   0024D4                     u940:
  1557   0024D4                     l1528:
  1558                           
  1559                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1560   0024D4  500D               	movf	vfpfcnvrt@ap^0,w,c
  1561   0024D6  6ED9               	movwf	fsr2l,c
  1562   0024D8  6ADA               	clrf	fsr2h,c
  1563   0024DA  0E02               	movlw	2
  1564   0024DC  26DF               	addwf	indf2,f,c
  1565   0024DE  5CDF               	subwf	indf2,w,c
  1566   0024E0  6ED9               	movwf	fsr2l,c
  1567   0024E2  6ADA               	clrf	fsr2h,c
  1568   0024E4  006F FF78  F011    	movff	postinc2,vfpfcnvrt@convarg
  1569   0024EA  006F FF78  F012    	movff	postinc2,vfpfcnvrt@convarg+1
  1570   0024F0                     
  1571                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  1572   0024F0  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1573   0024F2  6ED9               	movwf	fsr2l,c
  1574   0024F4  6ADA               	clrf	fsr2h,c
  1575   0024F6  2810               	incf	vfpfcnvrt@cp^0,w,c
  1576   0024F8  6EDF               	movwf	indf2,c
  1577   0024FA                     
  1578                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  1579   0024FA  0E20               	movlw	32
  1580   0024FC  6E15               	movwf	vfpfcnvrt@c^0,c
  1581                           
  1582                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  1583   0024FE  BE12               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  1584   002500  EF84  F012         	goto	u951
  1585   002504  EF87  F012         	goto	u950
  1586   002508                     u951:
  1587   002508  0E01               	movlw	1
  1588   00250A  EF88  F012         	goto	u960
  1589   00250E                     u950:
  1590   00250E  0E00               	movlw	0
  1591   002510                     u960:
  1592   002510  6E0F               	movwf	vfpfcnvrt@done^0,c
  1593   002512                     l1534:
  1594                           
  1595                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  1596   002512  0615               	decf	vfpfcnvrt@c^0,f,c
  1597   002514  5015               	movf	vfpfcnvrt@c^0,w,c
  1598   002516  0F60               	addlw	low _dbuf
  1599   002518  6ED9               	movwf	fsr2l,c
  1600   00251A  6ADA               	clrf	fsr2h,c
  1601   00251C  C011  F001         	movff	vfpfcnvrt@convarg,___awmod@dividend
  1602   002520  C012  F002         	movff	vfpfcnvrt@convarg+1,___awmod@dividend+1
  1603   002524  0E00               	movlw	0
  1604   002526  6E04               	movwf	(___awmod@divisor+1)^0,c
  1605   002528  0E0A               	movlw	10
  1606   00252A  6E03               	movwf	___awmod@divisor^0,c
  1607   00252C  EC45  F015         	call	___awmod	;wreg free
  1608   002530  C001  F007         	movff	?___awmod,abs@a
  1609   002534  C002  F008         	movff	?___awmod+1,abs@a+1
  1610   002538  EC9D  F016         	call	_abs	;wreg free
  1611   00253C  5007               	movf	?_abs^0,w,c
  1612   00253E  0F30               	addlw	48
  1613   002540  6EDF               	movwf	indf2,c
  1614   002542                     
  1615                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  1616   002542  C011  F001         	movff	vfpfcnvrt@convarg,___awdiv@dividend
  1617   002546  C012  F002         	movff	vfpfcnvrt@convarg+1,___awdiv@dividend+1
  1618   00254A  0E00               	movlw	0
  1619   00254C  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1620   00254E  0E0A               	movlw	10
  1621   002550  6E03               	movwf	___awdiv@divisor^0,c
  1622   002552  ECE4  F014         	call	___awdiv	;wreg free
  1623   002556  C001  F011         	movff	?___awdiv,vfpfcnvrt@convarg
  1624   00255A  C002  F012         	movff	?___awdiv+1,vfpfcnvrt@convarg+1
  1625   00255E                     
  1626                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  1627   00255E  5011               	movf	vfpfcnvrt@convarg^0,w,c
  1628   002560  1012               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
  1629   002562  B4D8               	btfsc	status,2,c
  1630   002564  EFB6  F012         	goto	u971
  1631   002568  EFB8  F012         	goto	u970
  1632   00256C                     u971:
  1633   00256C  EFC0  F012         	goto	l1542
  1634   002570                     u970:
  1635   002570  5015               	movf	vfpfcnvrt@c^0,w,c
  1636   002572  A4D8               	btfss	status,2,c
  1637   002574  EFBE  F012         	goto	u981
  1638   002578  EFC0  F012         	goto	u980
  1639   00257C                     u981:
  1640   00257C  EF89  F012         	goto	l1534
  1641   002580                     u980:
  1642   002580                     l1542:
  1643                           
  1644                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  1645   002580  5015               	movf	vfpfcnvrt@c^0,w,c
  1646   002582  B4D8               	btfsc	status,2,c
  1647   002584  EFC6  F012         	goto	u991
  1648   002588  EFC8  F012         	goto	u990
  1649   00258C                     u991:
  1650   00258C  EFE7  F012         	goto	l1552
  1651   002590                     u990:
  1652   002590  500F               	movf	vfpfcnvrt@done^0,w,c
  1653   002592  B4D8               	btfsc	status,2,c
  1654   002594  EFCE  F012         	goto	u1001
  1655   002598  EFD0  F012         	goto	u1000
  1656   00259C                     u1001:
  1657   00259C  EFE7  F012         	goto	l1552
  1658   0025A0                     u1000:
  1659   0025A0                     
  1660                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  1661   0025A0  0615               	decf	vfpfcnvrt@c^0,f,c
  1662   0025A2  5015               	movf	vfpfcnvrt@c^0,w,c
  1663   0025A4  0F60               	addlw	low _dbuf
  1664   0025A6  6ED9               	movwf	fsr2l,c
  1665   0025A8  6ADA               	clrf	fsr2h,c
  1666   0025AA  0E2D               	movlw	45
  1667   0025AC  6EDF               	movwf	indf2,c
  1668   0025AE  EFE7  F012         	goto	l1552
  1669   0025B2                     l1548:
  1670                           
  1671                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  1672   0025B2  5015               	movf	vfpfcnvrt@c^0,w,c
  1673   0025B4  0F60               	addlw	low _dbuf
  1674   0025B6  6ED9               	movwf	fsr2l,c
  1675   0025B8  6ADA               	clrf	fsr2h,c
  1676   0025BA  50DF               	movf	indf2,w,c
  1677   0025BC  6E0E               	movwf	??_vfpfcnvrt^0,c
  1678   0025BE  500E               	movf	??_vfpfcnvrt^0,w,c
  1679   0025C0  6E01               	movwf	fputc@c^0,c
  1680   0025C2  6A02               	clrf	(fputc@c+1)^0,c
  1681   0025C4  C00B  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1682   0025C8  EC9C  F015         	call	_fputc	;wreg free
  1683   0025CC  2A15               	incf	vfpfcnvrt@c^0,f,c
  1684   0025CE                     l1552:
  1685                           
  1686                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  1687   0025CE  0E20               	movlw	32
  1688   0025D0  1815               	xorwf	vfpfcnvrt@c^0,w,c
  1689   0025D2  A4D8               	btfss	status,2,c
  1690   0025D4  EFEE  F012         	goto	u1011
  1691   0025D8  EFF0  F012         	goto	u1010
  1692   0025DC                     u1011:
  1693   0025DC  EFD9  F012         	goto	l1548
  1694   0025E0                     u1010:
  1695   0025E0  EF08  F013         	goto	l828
  1696   0025E4                     l1554:
  1697                           
  1698                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  1699   0025E4  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1700   0025E6  6ED9               	movwf	fsr2l,c
  1701   0025E8  6ADA               	clrf	fsr2h,c
  1702   0025EA  2ADF               	incf	indf2,f,c
  1703   0025EC  EF08  F013         	goto	l828
  1704   0025F0                     l1558:
  1705                           
  1706                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  1707   0025F0  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1708   0025F2  6ED9               	movwf	fsr2l,c
  1709   0025F4  6ADA               	clrf	fsr2h,c
  1710   0025F6  006F FF7F FFF6     	movff	indf2,tblptrl
  1711   0025FC                     	if	0	;There is only one active tblptr byte
  1712   0025FC                     	endif
  1713   0025FC                     	if	0	;tblptru may be non-zero
  1714   0025FC                     	endif
  1715   0025FC                     	if	0	;tblptru may be non-zero
  1716   0025FC                     	endif
  1717   0025FC  0008               	tblrd		*
  1718   0025FE  50F5               	movf	tablat,w,c
  1719   002600  6E01               	movwf	fputc@c^0,c
  1720   002602  6A02               	clrf	(fputc@c+1)^0,c
  1721   002604  C00B  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1722   002608  EC9C  F015         	call	_fputc	;wreg free
  1723   00260C  EFF2  F012         	goto	l1554
  1724   002610                     l828:
  1725   002610  0012               	return		;funcret
  1726   002612                     __end_of_vfpfcnvrt:
  1727                           	callstack 0
  1728                           
  1729 ;; *************** function _fputc *****************
  1730 ;; Defined at:
  1731 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputc.c"
  1732 ;; Parameters:    Size  Location     Type
  1733 ;;  c               2    0[COMRAM] int 
  1734 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
  1735 ;;		 -> sprintf@f(11), 
  1736 ;; Auto vars:     Size  Location     Type
  1737 ;;		None
  1738 ;; Return value:  Size  Location     Type
  1739 ;;                  2    0[COMRAM] int 
  1740 ;; Registers used:
  1741 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1742 ;; Tracked objects:
  1743 ;;		On entry : 0/0
  1744 ;;		On exit  : 0/0
  1745 ;;		Unchanged: 0/0
  1746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1747 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1748 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1749 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1750 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1751 ;;Total ram usage:        8 bytes
  1752 ;; Hardware stack levels used: 1
  1753 ;; Hardware stack levels required when called: 1
  1754 ;; This function calls:
  1755 ;;		_putch
  1756 ;; This function is called by:
  1757 ;;		_vfpfcnvrt
  1758 ;; This function uses a non-reentrant model
  1759 ;;
  1760                           
  1761                           	psect	text4
  1762   002B38                     __ptext4:
  1763                           	callstack 0
  1764   002B38                     _fputc:
  1765                           	callstack 26
  1766   002B38  5003               	movf	fputc@fp^0,w,c
  1767   002B3A  B4D8               	btfsc	status,2,c
  1768   002B3C  EFA2  F015         	goto	u871
  1769   002B40  EFA4  F015         	goto	u870
  1770   002B44                     u871:
  1771   002B44  EFAC  F015         	goto	l1488
  1772   002B48                     u870:
  1773   002B48  5003               	movf	fputc@fp^0,w,c
  1774   002B4A  A4D8               	btfss	status,2,c
  1775   002B4C  EFAA  F015         	goto	u881
  1776   002B50  EFAC  F015         	goto	u880
  1777   002B54                     u881:
  1778   002B54  EFB1  F015         	goto	l1490
  1779   002B58                     u880:
  1780   002B58                     l1488:
  1781   002B58  5001               	movf	fputc@c^0,w,c
  1782   002B5A  EC3C  F017         	call	_putch
  1783   002B5E  EFF1  F015         	goto	l853
  1784   002B62                     l1490:
  1785   002B62  5003               	movf	fputc@fp^0,w,c
  1786   002B64  6ED9               	movwf	fsr2l,c
  1787   002B66  6ADA               	clrf	fsr2h,c
  1788   002B68  0E09               	movlw	9
  1789   002B6A  26D9               	addwf	fsr2l,f,c
  1790   002B6C  50DE               	movf	postinc2,w,c
  1791   002B6E  10DE               	iorwf	postinc2,w,c
  1792   002B70  B4D8               	btfsc	status,2,c
  1793   002B72  EFBD  F015         	goto	u891
  1794   002B76  EFBF  F015         	goto	u890
  1795   002B7A                     u891:
  1796   002B7A  EFD8  F015         	goto	l1494
  1797   002B7E                     u890:
  1798   002B7E  5003               	movf	fputc@fp^0,w,c
  1799   002B80  6ED9               	movwf	fsr2l,c
  1800   002B82  6ADA               	clrf	fsr2h,c
  1801   002B84  0E09               	movlw	9
  1802   002B86  26D9               	addwf	fsr2l,f,c
  1803   002B88  5003               	movf	fputc@fp^0,w,c
  1804   002B8A  6EE1               	movwf	fsr1l,c
  1805   002B8C  6AE2               	clrf	fsr1h,c
  1806   002B8E  0E02               	movlw	2
  1807   002B90  26E1               	addwf	fsr1l,f,c
  1808   002B92  50DE               	movf	postinc2,w,c
  1809   002B94  5CE6               	subwf	postinc1,w,c
  1810   002B96  50E6               	movf	postinc1,w,c
  1811   002B98  0A80               	xorlw	128
  1812   002B9A  6E08               	movwf	(??_fputc+4)^0,c
  1813   002B9C  50DE               	movf	postinc2,w,c
  1814   002B9E  0A80               	xorlw	128
  1815   002BA0  5808               	subwfb	(??_fputc+4)^0,w,c
  1816   002BA2  B0D8               	btfsc	status,0,c
  1817   002BA4  EFD6  F015         	goto	u901
  1818   002BA8  EFD8  F015         	goto	u900
  1819   002BAC                     u901:
  1820   002BAC  EFF1  F015         	goto	l853
  1821   002BB0                     u900:
  1822   002BB0                     l1494:
  1823   002BB0  5003               	movf	fputc@fp^0,w,c
  1824   002BB2  6ED9               	movwf	fsr2l,c
  1825   002BB4  6ADA               	clrf	fsr2h,c
  1826   002BB6  0E02               	movlw	2
  1827   002BB8  26D9               	addwf	fsr2l,f,c
  1828   002BBA  50DF               	movf	indf2,w,c
  1829   002BBC  6E04               	movwf	??_fputc^0,c
  1830   002BBE  5003               	movf	fputc@fp^0,w,c
  1831   002BC0  6ED9               	movwf	fsr2l,c
  1832   002BC2  6ADA               	clrf	fsr2h,c
  1833   002BC4  50DF               	movf	indf2,w,c
  1834   002BC6  2404               	addwf	??_fputc^0,w,c
  1835   002BC8  6ED9               	movwf	fsr2l,c
  1836   002BCA  6ADA               	clrf	fsr2h,c
  1837   002BCC  0060  F007  FFDF   	movff	fputc@c,indf2
  1838   002BD2  5003               	movf	fputc@fp^0,w,c
  1839   002BD4  6ED9               	movwf	fsr2l,c
  1840   002BD6  6ADA               	clrf	fsr2h,c
  1841   002BD8  0E02               	movlw	2
  1842   002BDA  26D9               	addwf	fsr2l,f,c
  1843   002BDC  2ADE               	incf	postinc2,f,c
  1844   002BDE  0E00               	movlw	0
  1845   002BE0  22DD               	addwfc	postdec2,f,c
  1846   002BE2                     l853:
  1847   002BE2  0012               	return		;funcret
  1848   002BE4                     __end_of_fputc:
  1849                           	callstack 0
  1850                           
  1851 ;; *************** function _putch *****************
  1852 ;; Defined at:
  1853 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\putch.c"
  1854 ;; Parameters:    Size  Location     Type
  1855 ;;  c               1    wreg     unsigned char 
  1856 ;; Auto vars:     Size  Location     Type
  1857 ;;  c               1    0[COMRAM] unsigned char 
  1858 ;; Return value:  Size  Location     Type
  1859 ;;                  1    wreg      void 
  1860 ;; Registers used:
  1861 ;;		wreg
  1862 ;; Tracked objects:
  1863 ;;		On entry : 0/0
  1864 ;;		On exit  : 0/0
  1865 ;;		Unchanged: 0/0
  1866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1870 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1871 ;;Total ram usage:        0 bytes
  1872 ;; Hardware stack levels used: 1
  1873 ;; This function calls:
  1874 ;;		Nothing
  1875 ;; This function is called by:
  1876 ;;		_fputc
  1877 ;; This function uses a non-reentrant model
  1878 ;;
  1879                           
  1880                           	psect	text5
  1881   002E78                     __ptext5:
  1882                           	callstack 0
  1883   002E78                     _putch:
  1884                           	callstack 26
  1885   002E78  0012               	return		;funcret
  1886   002E7A                     __end_of_putch:
  1887                           	callstack 0
  1888                           
  1889 ;; *************** function _abs *****************
  1890 ;; Defined at:
  1891 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\abs.c"
  1892 ;; Parameters:    Size  Location     Type
  1893 ;;  a               2    6[COMRAM] int 
  1894 ;; Auto vars:     Size  Location     Type
  1895 ;;		None
  1896 ;; Return value:  Size  Location     Type
  1897 ;;                  2    6[COMRAM] int 
  1898 ;; Registers used:
  1899 ;;		wreg, status,2, status,0
  1900 ;; Tracked objects:
  1901 ;;		On entry : 0/0
  1902 ;;		On exit  : 0/0
  1903 ;;		Unchanged: 0/0
  1904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1905 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1906 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1907 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1908 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1909 ;;Total ram usage:        4 bytes
  1910 ;; Hardware stack levels used: 1
  1911 ;; This function calls:
  1912 ;;		Nothing
  1913 ;; This function is called by:
  1914 ;;		_vfpfcnvrt
  1915 ;; This function uses a non-reentrant model
  1916 ;;
  1917                           
  1918                           	psect	text6
  1919   002D3A                     __ptext6:
  1920                           	callstack 0
  1921   002D3A                     _abs:
  1922                           	callstack 27
  1923   002D3A  BE08               	btfsc	(abs@a+1)^0,7,c
  1924   002D3C  EFA2  F016         	goto	u911
  1925   002D40  EFA4  F016         	goto	u910
  1926   002D44                     u911:
  1927   002D44  EFAA  F016         	goto	l838
  1928   002D48                     u910:
  1929   002D48  C007  F007         	movff	abs@a,?_abs
  1930   002D4C  C008  F008         	movff	abs@a+1,?_abs+1
  1931   002D50  EFB6  F016         	goto	l841
  1932   002D54                     l838:
  1933   002D54  C007  F009         	movff	abs@a,??_abs
  1934   002D58  C008  F00A         	movff	abs@a+1,??_abs+1
  1935   002D5C  1E09               	comf	??_abs^0,f,c
  1936   002D5E  1E0A               	comf	(??_abs+1)^0,f,c
  1937   002D60  4A09               	infsnz	??_abs^0,f,c
  1938   002D62  2A0A               	incf	(??_abs+1)^0,f,c
  1939   002D64  C009  F007         	movff	??_abs,?_abs
  1940   002D68  C00A  F008         	movff	??_abs+1,?_abs+1
  1941   002D6C                     l841:
  1942   002D6C  0012               	return		;funcret
  1943   002D6E                     __end_of_abs:
  1944                           	callstack 0
  1945                           
  1946 ;; *************** function ___awmod *****************
  1947 ;; Defined at:
  1948 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awmod.c"
  1949 ;; Parameters:    Size  Location     Type
  1950 ;;  dividend        2    0[COMRAM] int 
  1951 ;;  divisor         2    2[COMRAM] int 
  1952 ;; Auto vars:     Size  Location     Type
  1953 ;;  sign            1    5[COMRAM] unsigned char 
  1954 ;;  counter         1    4[COMRAM] unsigned char 
  1955 ;; Return value:  Size  Location     Type
  1956 ;;                  2    0[COMRAM] int 
  1957 ;; Registers used:
  1958 ;;		wreg, status,2, status,0
  1959 ;; Tracked objects:
  1960 ;;		On entry : 0/0
  1961 ;;		On exit  : 0/0
  1962 ;;		Unchanged: 0/0
  1963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1964 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1965 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1967 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1968 ;;Total ram usage:        6 bytes
  1969 ;; Hardware stack levels used: 1
  1970 ;; This function calls:
  1971 ;;		Nothing
  1972 ;; This function is called by:
  1973 ;;		_vfpfcnvrt
  1974 ;; This function uses a non-reentrant model
  1975 ;;
  1976                           
  1977                           	psect	text7
  1978   002A8A                     __ptext7:
  1979                           	callstack 0
  1980   002A8A                     ___awmod:
  1981                           	callstack 27
  1982   002A8A  6A06               	clrf	___awmod@sign^0,c
  1983   002A8C  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  1984   002A8E  EF4D  F015         	goto	u810
  1985   002A92  EF4B  F015         	goto	u811
  1986   002A96                     u811:
  1987   002A96  EF53  F015         	goto	l1456
  1988   002A9A                     u810:
  1989   002A9A  6C01               	negf	___awmod@dividend^0,c
  1990   002A9C  1E02               	comf	(___awmod@dividend+1)^0,f,c
  1991   002A9E  B0D8               	btfsc	status,0,c
  1992   002AA0  2A02               	incf	(___awmod@dividend+1)^0,f,c
  1993   002AA2  0E01               	movlw	1
  1994   002AA4  6E06               	movwf	___awmod@sign^0,c
  1995   002AA6                     l1456:
  1996   002AA6  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  1997   002AA8  EF5A  F015         	goto	u820
  1998   002AAC  EF58  F015         	goto	u821
  1999   002AB0                     u821:
  2000   002AB0  EF5E  F015         	goto	l1460
  2001   002AB4                     u820:
  2002   002AB4  6C03               	negf	___awmod@divisor^0,c
  2003   002AB6  1E04               	comf	(___awmod@divisor+1)^0,f,c
  2004   002AB8  B0D8               	btfsc	status,0,c
  2005   002ABA  2A04               	incf	(___awmod@divisor+1)^0,f,c
  2006   002ABC                     l1460:
  2007   002ABC  5003               	movf	___awmod@divisor^0,w,c
  2008   002ABE  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  2009   002AC0  B4D8               	btfsc	status,2,c
  2010   002AC2  EF65  F015         	goto	u831
  2011   002AC6  EF67  F015         	goto	u830
  2012   002ACA                     u831:
  2013   002ACA  EF8B  F015         	goto	l1476
  2014   002ACE                     u830:
  2015   002ACE  0E01               	movlw	1
  2016   002AD0  6E05               	movwf	___awmod@counter^0,c
  2017   002AD2  EF6F  F015         	goto	l1466
  2018   002AD6                     l1464:
  2019   002AD6  90D8               	bcf	status,0,c
  2020   002AD8  3603               	rlcf	___awmod@divisor^0,f,c
  2021   002ADA  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  2022   002ADC  2A05               	incf	___awmod@counter^0,f,c
  2023   002ADE                     l1466:
  2024   002ADE  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  2025   002AE0  EF74  F015         	goto	u841
  2026   002AE4  EF76  F015         	goto	u840
  2027   002AE8                     u841:
  2028   002AE8  EF6B  F015         	goto	l1464
  2029   002AEC                     u840:
  2030   002AEC                     l1468:
  2031   002AEC  5003               	movf	___awmod@divisor^0,w,c
  2032   002AEE  5C01               	subwf	___awmod@dividend^0,w,c
  2033   002AF0  5004               	movf	(___awmod@divisor+1)^0,w,c
  2034   002AF2  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  2035   002AF4  A0D8               	btfss	status,0,c
  2036   002AF6  EF7F  F015         	goto	u851
  2037   002AFA  EF81  F015         	goto	u850
  2038   002AFE                     u851:
  2039   002AFE  EF85  F015         	goto	l1472
  2040   002B02                     u850:
  2041   002B02  5003               	movf	___awmod@divisor^0,w,c
  2042   002B04  5E01               	subwf	___awmod@dividend^0,f,c
  2043   002B06  5004               	movf	(___awmod@divisor+1)^0,w,c
  2044   002B08  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  2045   002B0A                     l1472:
  2046   002B0A  90D8               	bcf	status,0,c
  2047   002B0C  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  2048   002B0E  3203               	rrcf	___awmod@divisor^0,f,c
  2049   002B10  2E05               	decfsz	___awmod@counter^0,f,c
  2050   002B12  EF76  F015         	goto	l1468
  2051   002B16                     l1476:
  2052   002B16  5006               	movf	___awmod@sign^0,w,c
  2053   002B18  B4D8               	btfsc	status,2,c
  2054   002B1A  EF91  F015         	goto	u861
  2055   002B1E  EF93  F015         	goto	u860
  2056   002B22                     u861:
  2057   002B22  EF97  F015         	goto	l1480
  2058   002B26                     u860:
  2059   002B26  6C01               	negf	___awmod@dividend^0,c
  2060   002B28  1E02               	comf	(___awmod@dividend+1)^0,f,c
  2061   002B2A  B0D8               	btfsc	status,0,c
  2062   002B2C  2A02               	incf	(___awmod@dividend+1)^0,f,c
  2063   002B2E                     l1480:
  2064   002B2E  C001  F001         	movff	___awmod@dividend,?___awmod
  2065   002B32  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  2066   002B36  0012               	return		;funcret
  2067   002B38                     __end_of___awmod:
  2068                           	callstack 0
  2069                           
  2070 ;; *************** function ___awdiv *****************
  2071 ;; Defined at:
  2072 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awdiv.c"
  2073 ;; Parameters:    Size  Location     Type
  2074 ;;  dividend        2    0[COMRAM] int 
  2075 ;;  divisor         2    2[COMRAM] int 
  2076 ;; Auto vars:     Size  Location     Type
  2077 ;;  quotient        2    6[COMRAM] int 
  2078 ;;  sign            1    5[COMRAM] unsigned char 
  2079 ;;  counter         1    4[COMRAM] unsigned char 
  2080 ;; Return value:  Size  Location     Type
  2081 ;;                  2    0[COMRAM] int 
  2082 ;; Registers used:
  2083 ;;		wreg, status,2, status,0
  2084 ;; Tracked objects:
  2085 ;;		On entry : 0/0
  2086 ;;		On exit  : 0/0
  2087 ;;		Unchanged: 0/0
  2088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2089 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2090 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2092 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2093 ;;Total ram usage:        8 bytes
  2094 ;; Hardware stack levels used: 1
  2095 ;; This function calls:
  2096 ;;		Nothing
  2097 ;; This function is called by:
  2098 ;;		_vfpfcnvrt
  2099 ;; This function uses a non-reentrant model
  2100 ;;
  2101                           
  2102                           	psect	text8
  2103   0029C8                     __ptext8:
  2104                           	callstack 0
  2105   0029C8                     ___awdiv:
  2106                           	callstack 27
  2107   0029C8  6A06               	clrf	___awdiv@sign^0,c
  2108   0029CA  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  2109   0029CC  EFEC  F014         	goto	u750
  2110   0029D0  EFEA  F014         	goto	u751
  2111   0029D4                     u751:
  2112   0029D4  EFF2  F014         	goto	l1412
  2113   0029D8                     u750:
  2114   0029D8  6C03               	negf	___awdiv@divisor^0,c
  2115   0029DA  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  2116   0029DC  B0D8               	btfsc	status,0,c
  2117   0029DE  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  2118   0029E0  0E01               	movlw	1
  2119   0029E2  6E06               	movwf	___awdiv@sign^0,c
  2120   0029E4                     l1412:
  2121   0029E4  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  2122   0029E6  EFF9  F014         	goto	u760
  2123   0029EA  EFF7  F014         	goto	u761
  2124   0029EE                     u761:
  2125   0029EE  EFFF  F014         	goto	l1418
  2126   0029F2                     u760:
  2127   0029F2  6C01               	negf	___awdiv@dividend^0,c
  2128   0029F4  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  2129   0029F6  B0D8               	btfsc	status,0,c
  2130   0029F8  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  2131   0029FA  0E01               	movlw	1
  2132   0029FC  1A06               	xorwf	___awdiv@sign^0,f,c
  2133   0029FE                     l1418:
  2134   0029FE  0E00               	movlw	0
  2135   002A00  6E08               	movwf	(___awdiv@quotient+1)^0,c
  2136   002A02  0E00               	movlw	0
  2137   002A04  6E07               	movwf	___awdiv@quotient^0,c
  2138   002A06  5003               	movf	___awdiv@divisor^0,w,c
  2139   002A08  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  2140   002A0A  B4D8               	btfsc	status,2,c
  2141   002A0C  EF0A  F015         	goto	u771
  2142   002A10  EF0C  F015         	goto	u770
  2143   002A14                     u771:
  2144   002A14  EF34  F015         	goto	l1440
  2145   002A18                     u770:
  2146   002A18  0E01               	movlw	1
  2147   002A1A  6E05               	movwf	___awdiv@counter^0,c
  2148   002A1C  EF14  F015         	goto	l1426
  2149   002A20                     l1424:
  2150   002A20  90D8               	bcf	status,0,c
  2151   002A22  3603               	rlcf	___awdiv@divisor^0,f,c
  2152   002A24  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  2153   002A26  2A05               	incf	___awdiv@counter^0,f,c
  2154   002A28                     l1426:
  2155   002A28  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  2156   002A2A  EF19  F015         	goto	u781
  2157   002A2E  EF1B  F015         	goto	u780
  2158   002A32                     u781:
  2159   002A32  EF10  F015         	goto	l1424
  2160   002A36                     u780:
  2161   002A36                     l1428:
  2162   002A36  90D8               	bcf	status,0,c
  2163   002A38  3607               	rlcf	___awdiv@quotient^0,f,c
  2164   002A3A  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  2165   002A3C  5003               	movf	___awdiv@divisor^0,w,c
  2166   002A3E  5C01               	subwf	___awdiv@dividend^0,w,c
  2167   002A40  5004               	movf	(___awdiv@divisor+1)^0,w,c
  2168   002A42  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  2169   002A44  A0D8               	btfss	status,0,c
  2170   002A46  EF27  F015         	goto	u791
  2171   002A4A  EF29  F015         	goto	u790
  2172   002A4E                     u791:
  2173   002A4E  EF2E  F015         	goto	l1436
  2174   002A52                     u790:
  2175   002A52  5003               	movf	___awdiv@divisor^0,w,c
  2176   002A54  5E01               	subwf	___awdiv@dividend^0,f,c
  2177   002A56  5004               	movf	(___awdiv@divisor+1)^0,w,c
  2178   002A58  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  2179   002A5A  8007               	bsf	___awdiv@quotient^0,0,c
  2180   002A5C                     l1436:
  2181   002A5C  90D8               	bcf	status,0,c
  2182   002A5E  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  2183   002A60  3203               	rrcf	___awdiv@divisor^0,f,c
  2184   002A62  2E05               	decfsz	___awdiv@counter^0,f,c
  2185   002A64  EF1B  F015         	goto	l1428
  2186   002A68                     l1440:
  2187   002A68  5006               	movf	___awdiv@sign^0,w,c
  2188   002A6A  B4D8               	btfsc	status,2,c
  2189   002A6C  EF3A  F015         	goto	u801
  2190   002A70  EF3C  F015         	goto	u800
  2191   002A74                     u801:
  2192   002A74  EF40  F015         	goto	l1444
  2193   002A78                     u800:
  2194   002A78  6C07               	negf	___awdiv@quotient^0,c
  2195   002A7A  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  2196   002A7C  B0D8               	btfsc	status,0,c
  2197   002A7E  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  2198   002A80                     l1444:
  2199   002A80  C007  F001         	movff	___awdiv@quotient,?___awdiv
  2200   002A84  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  2201   002A88  0012               	return		;funcret
  2202   002A8A                     __end_of___awdiv:
  2203                           	callstack 0
  2204                           
  2205 ;; *************** function _getDifficulty *****************
  2206 ;; Defined at:
  2207 ;;		line 81 in file "./functions.h"
  2208 ;; Parameters:    Size  Location     Type
  2209 ;;		None
  2210 ;; Auto vars:     Size  Location     Type
  2211 ;;  voltage         4   41[COMRAM] float 
  2212 ;;  digital         2   39[COMRAM] unsigned int 
  2213 ;; Return value:  Size  Location     Type
  2214 ;;                  1    wreg      unsigned char 
  2215 ;; Registers used:
  2216 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2217 ;; Tracked objects:
  2218 ;;		On entry : 0/0
  2219 ;;		On exit  : 0/0
  2220 ;;		Unchanged: 0/0
  2221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2222 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2223 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2225 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2226 ;;Total ram usage:        6 bytes
  2227 ;; Hardware stack levels used: 1
  2228 ;; Hardware stack levels required when called: 1
  2229 ;; This function calls:
  2230 ;;		_ADC_Read
  2231 ;;		___flge
  2232 ;;		___flmul
  2233 ;;		___xxtofl
  2234 ;; This function is called by:
  2235 ;;		_main
  2236 ;; This function uses a non-reentrant model
  2237 ;;
  2238                           
  2239                           	psect	text9
  2240   0028CA                     __ptext9:
  2241                           	callstack 0
  2242   0028CA                     _getDifficulty:
  2243                           	callstack 29
  2244   0028CA                     
  2245                           ;./functions.h: 82:     float voltage;;./functions.h: 83:     unsigned int digital = ADC
      +                          _Read();
  2246   0028CA  ECB7  F016         	call	_ADC_Read	;wreg free
  2247   0028CE  C001  F028         	movff	?_ADC_Read,getDifficulty@digital
  2248   0028D2  C002  F029         	movff	?_ADC_Read+1,getDifficulty@digital+1
  2249   0028D6                     
  2250                           ;./functions.h: 84:         voltage = digital*((float)3.3/(float)(4096));
  2251   0028D6  C028  F001         	movff	getDifficulty@digital,___xxtofl@val
  2252   0028DA  C029  F002         	movff	getDifficulty@digital+1,___xxtofl@val+1
  2253   0028DE  6A03               	clrf	(___xxtofl@val+2)^0,c
  2254   0028E0  6A04               	clrf	(___xxtofl@val+3)^0,c
  2255   0028E2  0E00               	movlw	0
  2256   0028E4  EC09  F013         	call	___xxtofl
  2257   0028E8  C001  F00F         	movff	?___xxtofl,___flmul@b
  2258   0028EC  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  2259   0028F0  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  2260   0028F4  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  2261   0028F8  0E33               	movlw	51
  2262   0028FA  6E13               	movwf	___flmul@a^0,c
  2263   0028FC  0E33               	movlw	51
  2264   0028FE  6E14               	movwf	(___flmul@a+1)^0,c
  2265   002900  0E53               	movlw	83
  2266   002902  6E15               	movwf	(___flmul@a+2)^0,c
  2267   002904  0E3A               	movlw	58
  2268   002906  6E16               	movwf	(___flmul@a+3)^0,c
  2269   002908  EC0A  F010         	call	___flmul	;wreg free
  2270   00290C  C00F  F02A         	movff	?___flmul,getDifficulty@voltage
  2271   002910  C010  F02B         	movff	?___flmul+1,getDifficulty@voltage+1
  2272   002914  C011  F02C         	movff	?___flmul+2,getDifficulty@voltage+2
  2273   002918  C012  F02D         	movff	?___flmul+3,getDifficulty@voltage+3
  2274   00291C                     
  2275                           ;./functions.h: 85:             if (voltage < 1)
  2276   00291C  C02A  F001         	movff	getDifficulty@voltage,___flge@ff1
  2277   002920  C02B  F002         	movff	getDifficulty@voltage+1,___flge@ff1+1
  2278   002924  C02C  F003         	movff	getDifficulty@voltage+2,___flge@ff1+2
  2279   002928  C02D  F004         	movff	getDifficulty@voltage+3,___flge@ff1+3
  2280   00292C  0E00               	movlw	0
  2281   00292E  6E05               	movwf	___flge@ff2^0,c
  2282   002930  0E00               	movlw	0
  2283   002932  6E06               	movwf	(___flge@ff2+1)^0,c
  2284   002934  0E80               	movlw	128
  2285   002936  6E07               	movwf	(___flge@ff2+2)^0,c
  2286   002938  0E3F               	movlw	63
  2287   00293A  6E08               	movwf	(___flge@ff2+3)^0,c
  2288   00293C  ECE3  F013         	call	___flge	;wreg free
  2289   002940  B0D8               	btfsc	status,0,c
  2290   002942  EFA5  F014         	goto	u1401
  2291   002946  EFA7  F014         	goto	u1400
  2292   00294A                     u1401:
  2293   00294A  EFAA  F014         	goto	l1828
  2294   00294E                     u1400:
  2295   00294E                     
  2296                           ;./functions.h: 86:         return 1;
  2297   00294E  0E01               	movlw	1
  2298   002950  EFE3  F014         	goto	l86
  2299   002954                     l1828:
  2300   002954  0E00               	movlw	0
  2301   002956  6E01               	movwf	___flge@ff1^0,c
  2302   002958  0E00               	movlw	0
  2303   00295A  6E02               	movwf	(___flge@ff1+1)^0,c
  2304   00295C  0E80               	movlw	128
  2305   00295E  6E03               	movwf	(___flge@ff1+2)^0,c
  2306   002960  0E3F               	movlw	63
  2307   002962  6E04               	movwf	(___flge@ff1+3)^0,c
  2308   002964  C02A  F005         	movff	getDifficulty@voltage,___flge@ff2
  2309   002968  C02B  F006         	movff	getDifficulty@voltage+1,___flge@ff2+1
  2310   00296C  C02C  F007         	movff	getDifficulty@voltage+2,___flge@ff2+2
  2311   002970  C02D  F008         	movff	getDifficulty@voltage+3,___flge@ff2+3
  2312   002974  ECE3  F013         	call	___flge	;wreg free
  2313   002978  B0D8               	btfsc	status,0,c
  2314   00297A  EFC1  F014         	goto	u1411
  2315   00297E  EFC3  F014         	goto	u1410
  2316   002982                     u1411:
  2317   002982  EFC6  F014         	goto	l1836
  2318   002986                     u1410:
  2319   002986                     
  2320                           ;./functions.h: 88:         return 2;
  2321   002986  0E02               	movlw	2
  2322   002988  EFE3  F014         	goto	l86
  2323   00298C                     l1836:
  2324   00298C  0E00               	movlw	0
  2325   00298E  6E01               	movwf	___flge@ff1^0,c
  2326   002990  0E00               	movlw	0
  2327   002992  6E02               	movwf	(___flge@ff1+1)^0,c
  2328   002994  0EC0               	movlw	192
  2329   002996  6E03               	movwf	(___flge@ff1+2)^0,c
  2330   002998  0E3F               	movlw	63
  2331   00299A  6E04               	movwf	(___flge@ff1+3)^0,c
  2332   00299C  C02A  F005         	movff	getDifficulty@voltage,___flge@ff2
  2333   0029A0  C02B  F006         	movff	getDifficulty@voltage+1,___flge@ff2+1
  2334   0029A4  C02C  F007         	movff	getDifficulty@voltage+2,___flge@ff2+2
  2335   0029A8  C02D  F008         	movff	getDifficulty@voltage+3,___flge@ff2+3
  2336   0029AC  ECE3  F013         	call	___flge	;wreg free
  2337   0029B0  B0D8               	btfsc	status,0,c
  2338   0029B2  EFDD  F014         	goto	u1421
  2339   0029B6  EFDF  F014         	goto	u1420
  2340   0029BA                     u1421:
  2341   0029BA  EFE2  F014         	goto	l1844
  2342   0029BE                     u1420:
  2343   0029BE                     
  2344                           ;./functions.h: 90:         return 3;
  2345   0029BE  0E03               	movlw	3
  2346   0029C0  EFE3  F014         	goto	l86
  2347   0029C4                     l1844:
  2348                           
  2349                           ;./functions.h: 92:         return 4;
  2350   0029C4  0E04               	movlw	4
  2351   0029C6                     l86:
  2352   0029C6  0012               	return		;funcret
  2353   0029C8                     __end_of_getDifficulty:
  2354                           	callstack 0
  2355                           
  2356 ;; *************** function ___xxtofl *****************
  2357 ;; Defined at:
  2358 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\xxtofl.c"
  2359 ;; Parameters:    Size  Location     Type
  2360 ;;  sign            1    wreg     unsigned char 
  2361 ;;  val             4    0[COMRAM] long 
  2362 ;; Auto vars:     Size  Location     Type
  2363 ;;  sign            1    8[COMRAM] unsigned char 
  2364 ;;  arg             4   10[COMRAM] unsigned long 
  2365 ;;  exp             1    9[COMRAM] unsigned char 
  2366 ;; Return value:  Size  Location     Type
  2367 ;;                  4    0[COMRAM] unsigned char 
  2368 ;; Registers used:
  2369 ;;		wreg, status,2, status,0
  2370 ;; Tracked objects:
  2371 ;;		On entry : 0/0
  2372 ;;		On exit  : 0/0
  2373 ;;		Unchanged: 0/0
  2374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2375 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2376 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2377 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2378 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2379 ;;Total ram usage:       14 bytes
  2380 ;; Hardware stack levels used: 1
  2381 ;; This function calls:
  2382 ;;		Nothing
  2383 ;; This function is called by:
  2384 ;;		_getDifficulty
  2385 ;; This function uses a non-reentrant model
  2386 ;;
  2387                           
  2388                           	psect	text10
  2389   002612                     __ptext10:
  2390                           	callstack 0
  2391   002612                     ___xxtofl:
  2392                           	callstack 29
  2393                           
  2394                           ;incstack = 0
  2395                           ;___xxtofl@sign stored from wreg
  2396   002612  6E09               	movwf	___xxtofl@sign^0,c
  2397   002614  5009               	movf	___xxtofl@sign^0,w,c
  2398   002616  B4D8               	btfsc	status,2,c
  2399   002618  EF10  F013         	goto	u1281
  2400   00261C  EF12  F013         	goto	u1280
  2401   002620                     u1281:
  2402   002620  EF34  F013         	goto	l767
  2403   002624                     u1280:
  2404   002624  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  2405   002626  EF19  F013         	goto	u1290
  2406   00262A  EF17  F013         	goto	u1291
  2407   00262E                     u1291:
  2408   00262E  EF34  F013         	goto	l767
  2409   002632                     u1290:
  2410   002632  C001  F005         	movff	___xxtofl@val,??___xxtofl
  2411   002636  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  2412   00263A  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  2413   00263E  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  2414   002642  1E05               	comf	??___xxtofl^0,f,c
  2415   002644  1E06               	comf	(??___xxtofl+1)^0,f,c
  2416   002646  1E07               	comf	(??___xxtofl+2)^0,f,c
  2417   002648  1E08               	comf	(??___xxtofl+3)^0,f,c
  2418   00264A  2A05               	incf	??___xxtofl^0,f,c
  2419   00264C  0E00               	movlw	0
  2420   00264E  2206               	addwfc	(??___xxtofl+1)^0,f,c
  2421   002650  2207               	addwfc	(??___xxtofl+2)^0,f,c
  2422   002652  2208               	addwfc	(??___xxtofl+3)^0,f,c
  2423   002654  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  2424   002658  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  2425   00265C  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  2426   002660  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  2427   002664  EF3C  F013         	goto	l1746
  2428   002668                     l767:
  2429   002668  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  2430   00266C  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  2431   002670  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  2432   002674  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  2433   002678                     l1746:
  2434   002678  5001               	movf	___xxtofl@val^0,w,c
  2435   00267A  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  2436   00267C  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  2437   00267E  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  2438   002680  A4D8               	btfss	status,2,c
  2439   002682  EF45  F013         	goto	u1301
  2440   002686  EF47  F013         	goto	u1300
  2441   00268A                     u1301:
  2442   00268A  EF51  F013         	goto	l1752
  2443   00268E                     u1300:
  2444   00268E  0E00               	movlw	0
  2445   002690  6E01               	movwf	?___xxtofl^0,c
  2446   002692  0E00               	movlw	0
  2447   002694  6E02               	movwf	(?___xxtofl+1)^0,c
  2448   002696  0E00               	movlw	0
  2449   002698  6E03               	movwf	(?___xxtofl+2)^0,c
  2450   00269A  0E00               	movlw	0
  2451   00269C  6E04               	movwf	(?___xxtofl+3)^0,c
  2452   00269E  EFE2  F013         	goto	l770
  2453   0026A2                     l1752:
  2454   0026A2  0E96               	movlw	150
  2455   0026A4  6E0A               	movwf	___xxtofl@exp^0,c
  2456   0026A6  EF5B  F013         	goto	l1756
  2457   0026AA                     l1754:
  2458   0026AA  2A0A               	incf	___xxtofl@exp^0,f,c
  2459   0026AC  90D8               	bcf	status,0,c
  2460   0026AE  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  2461   0026B0  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  2462   0026B2  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  2463   0026B4  320B               	rrcf	___xxtofl@arg^0,f,c
  2464   0026B6                     l1756:
  2465   0026B6  0E00               	movlw	0
  2466   0026B8  140B               	andwf	___xxtofl@arg^0,w,c
  2467   0026BA  6E05               	movwf	??___xxtofl^0,c
  2468   0026BC  0E00               	movlw	0
  2469   0026BE  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  2470   0026C0  6E06               	movwf	(??___xxtofl+1)^0,c
  2471   0026C2  0E00               	movlw	0
  2472   0026C4  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  2473   0026C6  6E07               	movwf	(??___xxtofl+2)^0,c
  2474   0026C8  0EFE               	movlw	254
  2475   0026CA  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  2476   0026CC  6E08               	movwf	(??___xxtofl+3)^0,c
  2477   0026CE  5005               	movf	??___xxtofl^0,w,c
  2478   0026D0  1006               	iorwf	(??___xxtofl+1)^0,w,c
  2479   0026D2  1007               	iorwf	(??___xxtofl+2)^0,w,c
  2480   0026D4  1008               	iorwf	(??___xxtofl+3)^0,w,c
  2481   0026D6  A4D8               	btfss	status,2,c
  2482   0026D8  EF70  F013         	goto	u1311
  2483   0026DC  EF72  F013         	goto	u1310
  2484   0026E0                     u1311:
  2485   0026E0  EF55  F013         	goto	l1754
  2486   0026E4                     u1310:
  2487   0026E4  EF80  F013         	goto	l774
  2488   0026E8                     l1758:
  2489   0026E8  2A0A               	incf	___xxtofl@exp^0,f,c
  2490   0026EA  0E01               	movlw	1
  2491   0026EC  260B               	addwf	___xxtofl@arg^0,f,c
  2492   0026EE  0E00               	movlw	0
  2493   0026F0  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  2494   0026F2  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  2495   0026F4  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  2496   0026F6  90D8               	bcf	status,0,c
  2497   0026F8  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  2498   0026FA  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  2499   0026FC  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  2500   0026FE  320B               	rrcf	___xxtofl@arg^0,f,c
  2501   002700                     l774:
  2502   002700  0E00               	movlw	0
  2503   002702  140B               	andwf	___xxtofl@arg^0,w,c
  2504   002704  6E05               	movwf	??___xxtofl^0,c
  2505   002706  0E00               	movlw	0
  2506   002708  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  2507   00270A  6E06               	movwf	(??___xxtofl+1)^0,c
  2508   00270C  0E00               	movlw	0
  2509   00270E  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  2510   002710  6E07               	movwf	(??___xxtofl+2)^0,c
  2511   002712  0EFF               	movlw	255
  2512   002714  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  2513   002716  6E08               	movwf	(??___xxtofl+3)^0,c
  2514   002718  5005               	movf	??___xxtofl^0,w,c
  2515   00271A  1006               	iorwf	(??___xxtofl+1)^0,w,c
  2516   00271C  1007               	iorwf	(??___xxtofl+2)^0,w,c
  2517   00271E  1008               	iorwf	(??___xxtofl+3)^0,w,c
  2518   002720  A4D8               	btfss	status,2,c
  2519   002722  EF95  F013         	goto	u1321
  2520   002726  EF97  F013         	goto	u1320
  2521   00272A                     u1321:
  2522   00272A  EF74  F013         	goto	l1758
  2523   00272E                     u1320:
  2524   00272E  EF9F  F013         	goto	l1766
  2525   002732                     l1764:
  2526   002732  060A               	decf	___xxtofl@exp^0,f,c
  2527   002734  90D8               	bcf	status,0,c
  2528   002736  360B               	rlcf	___xxtofl@arg^0,f,c
  2529   002738  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  2530   00273A  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  2531   00273C  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  2532   00273E                     l1766:
  2533   00273E  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  2534   002740  EFA4  F013         	goto	u1331
  2535   002744  EFA6  F013         	goto	u1330
  2536   002748                     u1331:
  2537   002748  EFAE  F013         	goto	l781
  2538   00274C                     u1330:
  2539   00274C  0E02               	movlw	2
  2540   00274E  600A               	cpfslt	___xxtofl@exp^0,c
  2541   002750  EFAC  F013         	goto	u1341
  2542   002754  EFAE  F013         	goto	u1340
  2543   002758                     u1341:
  2544   002758  EF99  F013         	goto	l1764
  2545   00275C                     u1340:
  2546   00275C                     l781:
  2547   00275C  B00A               	btfsc	___xxtofl@exp^0,0,c
  2548   00275E  EFB3  F013         	goto	u1351
  2549   002762  EFB5  F013         	goto	u1350
  2550   002766                     u1351:
  2551   002766  EFB6  F013         	goto	l1772
  2552   00276A                     u1350:
  2553   00276A  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  2554   00276C                     l1772:
  2555   00276C  90D8               	bcf	status,0,c
  2556   00276E  320A               	rrcf	___xxtofl@exp^0,f,c
  2557   002770  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  2558   002774  6A06               	clrf	(??___xxtofl+1)^0,c
  2559   002776  6A07               	clrf	(??___xxtofl+2)^0,c
  2560   002778  6A08               	clrf	(??___xxtofl+3)^0,c
  2561   00277A  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  2562   00277E  6A07               	clrf	(??___xxtofl+2)^0,c
  2563   002780  6A06               	clrf	(??___xxtofl+1)^0,c
  2564   002782  6A05               	clrf	??___xxtofl^0,c
  2565   002784  5005               	movf	??___xxtofl^0,w,c
  2566   002786  120B               	iorwf	___xxtofl@arg^0,f,c
  2567   002788  5006               	movf	(??___xxtofl+1)^0,w,c
  2568   00278A  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  2569   00278C  5007               	movf	(??___xxtofl+2)^0,w,c
  2570   00278E  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  2571   002790  5008               	movf	(??___xxtofl+3)^0,w,c
  2572   002792  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  2573   002794  5009               	movf	___xxtofl@sign^0,w,c
  2574   002796  B4D8               	btfsc	status,2,c
  2575   002798  EFD0  F013         	goto	u1361
  2576   00279C  EFD2  F013         	goto	u1360
  2577   0027A0                     u1361:
  2578   0027A0  EFDA  F013         	goto	l1782
  2579   0027A4                     u1360:
  2580   0027A4  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  2581   0027A6  EFD9  F013         	goto	u1370
  2582   0027AA  EFD7  F013         	goto	u1371
  2583   0027AE                     u1371:
  2584   0027AE  EFDA  F013         	goto	l1782
  2585   0027B2                     u1370:
  2586   0027B2  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  2587   0027B4                     l1782:
  2588   0027B4  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  2589   0027B8  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  2590   0027BC  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  2591   0027C0  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  2592   0027C4                     l770:
  2593   0027C4  0012               	return		;funcret
  2594   0027C6                     __end_of___xxtofl:
  2595                           	callstack 0
  2596                           
  2597 ;; *************** function ___flmul *****************
  2598 ;; Defined at:
  2599 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcmul.c"
  2600 ;; Parameters:    Size  Location     Type
  2601 ;;  b               4   14[COMRAM] unsigned char 
  2602 ;;  a               4   18[COMRAM] unsigned char 
  2603 ;; Auto vars:     Size  Location     Type
  2604 ;;  prod            4   33[COMRAM] struct .
  2605 ;;  grs             4   27[COMRAM] unsigned long 
  2606 ;;  temp            2   37[COMRAM] struct .
  2607 ;;  bexp            1   32[COMRAM] unsigned char 
  2608 ;;  aexp            1   31[COMRAM] unsigned char 
  2609 ;;  sign            1   26[COMRAM] unsigned char 
  2610 ;; Return value:  Size  Location     Type
  2611 ;;                  4   14[COMRAM] unsigned char 
  2612 ;; Registers used:
  2613 ;;		wreg, status,2, status,0, prodl, prodh
  2614 ;; Tracked objects:
  2615 ;;		On entry : 0/0
  2616 ;;		On exit  : 0/0
  2617 ;;		Unchanged: 0/0
  2618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2619 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2620 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2621 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2622 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2623 ;;Total ram usage:       25 bytes
  2624 ;; Hardware stack levels used: 1
  2625 ;; This function calls:
  2626 ;;		Nothing
  2627 ;; This function is called by:
  2628 ;;		_getDifficulty
  2629 ;; This function uses a non-reentrant model
  2630 ;;
  2631                           
  2632                           	psect	text11
  2633   002014                     __ptext11:
  2634                           	callstack 0
  2635   002014                     ___flmul:
  2636                           	callstack 29
  2637   002014  5012               	movf	(___flmul@b+3)^0,w,c
  2638   002016  0B80               	andlw	128
  2639   002018  6E1B               	movwf	___flmul@sign^0,c
  2640   00201A  5012               	movf	(___flmul@b+3)^0,w,c
  2641   00201C  2412               	addwf	(___flmul@b+3)^0,w,c
  2642   00201E  6E21               	movwf	___flmul@bexp^0,c
  2643   002020  AE11               	btfss	(___flmul@b+2)^0,7,c
  2644   002022  EF15  F010         	goto	u1041
  2645   002026  EF17  F010         	goto	u1040
  2646   00202A                     u1041:
  2647   00202A  EF18  F010         	goto	l1596
  2648   00202E                     u1040:
  2649   00202E  8021               	bsf	___flmul@bexp^0,0,c
  2650   002030                     l1596:
  2651   002030  5021               	movf	___flmul@bexp^0,w,c
  2652   002032  B4D8               	btfsc	status,2,c
  2653   002034  EF1E  F010         	goto	u1051
  2654   002038  EF20  F010         	goto	u1050
  2655   00203C                     u1051:
  2656   00203C  EF33  F010         	goto	l1604
  2657   002040                     u1050:
  2658   002040  2821               	incf	___flmul@bexp^0,w,c
  2659   002042  A4D8               	btfss	status,2,c
  2660   002044  EF26  F010         	goto	u1061
  2661   002048  EF28  F010         	goto	u1060
  2662   00204C                     u1061:
  2663   00204C  EF30  F010         	goto	l1602
  2664   002050                     u1060:
  2665   002050  0E00               	movlw	0
  2666   002052  6E0F               	movwf	___flmul@b^0,c
  2667   002054  0E00               	movlw	0
  2668   002056  6E10               	movwf	(___flmul@b+1)^0,c
  2669   002058  0E00               	movlw	0
  2670   00205A  6E11               	movwf	(___flmul@b+2)^0,c
  2671   00205C  0E00               	movlw	0
  2672   00205E  6E12               	movwf	(___flmul@b+3)^0,c
  2673   002060                     l1602:
  2674   002060  8E11               	bsf	(___flmul@b+2)^0,7,c
  2675   002062  EF3B  F010         	goto	l1606
  2676   002066                     l1604:
  2677   002066  0E00               	movlw	0
  2678   002068  6E0F               	movwf	___flmul@b^0,c
  2679   00206A  0E00               	movlw	0
  2680   00206C  6E10               	movwf	(___flmul@b+1)^0,c
  2681   00206E  0E00               	movlw	0
  2682   002070  6E11               	movwf	(___flmul@b+2)^0,c
  2683   002072  0E00               	movlw	0
  2684   002074  6E12               	movwf	(___flmul@b+3)^0,c
  2685   002076                     l1606:
  2686   002076  5016               	movf	(___flmul@a+3)^0,w,c
  2687   002078  0B80               	andlw	128
  2688   00207A  1A1B               	xorwf	___flmul@sign^0,f,c
  2689   00207C  5016               	movf	(___flmul@a+3)^0,w,c
  2690   00207E  2416               	addwf	(___flmul@a+3)^0,w,c
  2691   002080  6E20               	movwf	___flmul@aexp^0,c
  2692   002082  AE15               	btfss	(___flmul@a+2)^0,7,c
  2693   002084  EF46  F010         	goto	u1071
  2694   002088  EF48  F010         	goto	u1070
  2695   00208C                     u1071:
  2696   00208C  EF49  F010         	goto	l1614
  2697   002090                     u1070:
  2698   002090  8020               	bsf	___flmul@aexp^0,0,c
  2699   002092                     l1614:
  2700   002092  5020               	movf	___flmul@aexp^0,w,c
  2701   002094  B4D8               	btfsc	status,2,c
  2702   002096  EF4F  F010         	goto	u1081
  2703   00209A  EF51  F010         	goto	u1080
  2704   00209E                     u1081:
  2705   00209E  EF64  F010         	goto	l1622
  2706   0020A2                     u1080:
  2707   0020A2  2820               	incf	___flmul@aexp^0,w,c
  2708   0020A4  A4D8               	btfss	status,2,c
  2709   0020A6  EF57  F010         	goto	u1091
  2710   0020AA  EF59  F010         	goto	u1090
  2711   0020AE                     u1091:
  2712   0020AE  EF61  F010         	goto	l1620
  2713   0020B2                     u1090:
  2714   0020B2  0E00               	movlw	0
  2715   0020B4  6E13               	movwf	___flmul@a^0,c
  2716   0020B6  0E00               	movlw	0
  2717   0020B8  6E14               	movwf	(___flmul@a+1)^0,c
  2718   0020BA  0E00               	movlw	0
  2719   0020BC  6E15               	movwf	(___flmul@a+2)^0,c
  2720   0020BE  0E00               	movlw	0
  2721   0020C0  6E16               	movwf	(___flmul@a+3)^0,c
  2722   0020C2                     l1620:
  2723   0020C2  8E15               	bsf	(___flmul@a+2)^0,7,c
  2724   0020C4  EF6C  F010         	goto	l726
  2725   0020C8                     l1622:
  2726   0020C8  0E00               	movlw	0
  2727   0020CA  6E13               	movwf	___flmul@a^0,c
  2728   0020CC  0E00               	movlw	0
  2729   0020CE  6E14               	movwf	(___flmul@a+1)^0,c
  2730   0020D0  0E00               	movlw	0
  2731   0020D2  6E15               	movwf	(___flmul@a+2)^0,c
  2732   0020D4  0E00               	movlw	0
  2733   0020D6  6E16               	movwf	(___flmul@a+3)^0,c
  2734   0020D8                     l726:
  2735   0020D8  5020               	movf	___flmul@aexp^0,w,c
  2736   0020DA  B4D8               	btfsc	status,2,c
  2737   0020DC  EF72  F010         	goto	u1101
  2738   0020E0  EF74  F010         	goto	u1100
  2739   0020E4                     u1101:
  2740   0020E4  EF7C  F010         	goto	l1626
  2741   0020E8                     u1100:
  2742   0020E8  5021               	movf	___flmul@bexp^0,w,c
  2743   0020EA  A4D8               	btfss	status,2,c
  2744   0020EC  EF7A  F010         	goto	u1111
  2745   0020F0  EF7C  F010         	goto	u1110
  2746   0020F4                     u1111:
  2747   0020F4  EF86  F010         	goto	l1630
  2748   0020F8                     u1110:
  2749   0020F8                     l1626:
  2750   0020F8  0E00               	movlw	0
  2751   0020FA  6E0F               	movwf	?___flmul^0,c
  2752   0020FC  0E00               	movlw	0
  2753   0020FE  6E10               	movwf	(?___flmul+1)^0,c
  2754   002100  0E00               	movlw	0
  2755   002102  6E11               	movwf	(?___flmul+2)^0,c
  2756   002104  0E00               	movlw	0
  2757   002106  6E12               	movwf	(?___flmul+3)^0,c
  2758   002108  EF2E  F012         	goto	l730
  2759   00210C                     l1630:
  2760   00210C  5015               	movf	(___flmul@a+2)^0,w,c
  2761   00210E  020F               	mulwf	___flmul@b^0,c
  2762   002110  006F FFCC  F026    	movff	prodl,___flmul@temp
  2763   002116  006F FFD0  F027    	movff	prodh,___flmul@temp+1
  2764   00211C  5026               	movf	___flmul@temp^0,w,c
  2765   00211E  6E1C               	movwf	___flmul@grs^0,c
  2766   002120  6A1D               	clrf	(___flmul@grs+1)^0,c
  2767   002122  6A1E               	clrf	(___flmul@grs+2)^0,c
  2768   002124  6A1F               	clrf	(___flmul@grs+3)^0,c
  2769   002126  5027               	movf	(___flmul@temp+1)^0,w,c
  2770   002128  6E22               	movwf	___flmul@prod^0,c
  2771   00212A  6A23               	clrf	(___flmul@prod+1)^0,c
  2772   00212C  6A24               	clrf	(___flmul@prod+2)^0,c
  2773   00212E  6A25               	clrf	(___flmul@prod+3)^0,c
  2774   002130  5014               	movf	(___flmul@a+1)^0,w,c
  2775   002132  0210               	mulwf	(___flmul@b+1)^0,c
  2776   002134  006F FFCC  F026    	movff	prodl,___flmul@temp
  2777   00213A  006F FFD0  F027    	movff	prodh,___flmul@temp+1
  2778   002140  5026               	movf	___flmul@temp^0,w,c
  2779   002142  261C               	addwf	___flmul@grs^0,f,c
  2780   002144  0E00               	movlw	0
  2781   002146  221D               	addwfc	(___flmul@grs+1)^0,f,c
  2782   002148  221E               	addwfc	(___flmul@grs+2)^0,f,c
  2783   00214A  221F               	addwfc	(___flmul@grs+3)^0,f,c
  2784   00214C  5027               	movf	(___flmul@temp+1)^0,w,c
  2785   00214E  2622               	addwf	___flmul@prod^0,f,c
  2786   002150  0E00               	movlw	0
  2787   002152  2223               	addwfc	(___flmul@prod+1)^0,f,c
  2788   002154  2224               	addwfc	(___flmul@prod+2)^0,f,c
  2789   002156  2225               	addwfc	(___flmul@prod+3)^0,f,c
  2790   002158  5013               	movf	___flmul@a^0,w,c
  2791   00215A  0211               	mulwf	(___flmul@b+2)^0,c
  2792   00215C  006F FFCC  F026    	movff	prodl,___flmul@temp
  2793   002162  006F FFD0  F027    	movff	prodh,___flmul@temp+1
  2794   002168  5026               	movf	___flmul@temp^0,w,c
  2795   00216A  261C               	addwf	___flmul@grs^0,f,c
  2796   00216C  0E00               	movlw	0
  2797   00216E  221D               	addwfc	(___flmul@grs+1)^0,f,c
  2798   002170  221E               	addwfc	(___flmul@grs+2)^0,f,c
  2799   002172  221F               	addwfc	(___flmul@grs+3)^0,f,c
  2800   002174  5027               	movf	(___flmul@temp+1)^0,w,c
  2801   002176  2622               	addwf	___flmul@prod^0,f,c
  2802   002178  0E00               	movlw	0
  2803   00217A  2223               	addwfc	(___flmul@prod+1)^0,f,c
  2804   00217C  2224               	addwfc	(___flmul@prod+2)^0,f,c
  2805   00217E  2225               	addwfc	(___flmul@prod+3)^0,f,c
  2806   002180  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  2807   002184  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  2808   002188  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  2809   00218C  6A1C               	clrf	___flmul@grs^0,c
  2810   00218E  5013               	movf	___flmul@a^0,w,c
  2811   002190  0210               	mulwf	(___flmul@b+1)^0,c
  2812   002192  006F FFCC  F026    	movff	prodl,___flmul@temp
  2813   002198  006F FFD0  F027    	movff	prodh,___flmul@temp+1
  2814   00219E  5026               	movf	___flmul@temp^0,w,c
  2815   0021A0  261C               	addwf	___flmul@grs^0,f,c
  2816   0021A2  5027               	movf	(___flmul@temp+1)^0,w,c
  2817   0021A4  221D               	addwfc	(___flmul@grs+1)^0,f,c
  2818   0021A6  0E00               	movlw	0
  2819   0021A8  221E               	addwfc	(___flmul@grs+2)^0,f,c
  2820   0021AA  0E00               	movlw	0
  2821   0021AC  221F               	addwfc	(___flmul@grs+3)^0,f,c
  2822   0021AE  5014               	movf	(___flmul@a+1)^0,w,c
  2823   0021B0  020F               	mulwf	___flmul@b^0,c
  2824   0021B2  006F FFCC  F026    	movff	prodl,___flmul@temp
  2825   0021B8  006F FFD0  F027    	movff	prodh,___flmul@temp+1
  2826   0021BE  5026               	movf	___flmul@temp^0,w,c
  2827   0021C0  261C               	addwf	___flmul@grs^0,f,c
  2828   0021C2  5027               	movf	(___flmul@temp+1)^0,w,c
  2829   0021C4  221D               	addwfc	(___flmul@grs+1)^0,f,c
  2830   0021C6  0E00               	movlw	0
  2831   0021C8  221E               	addwfc	(___flmul@grs+2)^0,f,c
  2832   0021CA  0E00               	movlw	0
  2833   0021CC  221F               	addwfc	(___flmul@grs+3)^0,f,c
  2834   0021CE  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  2835   0021D2  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  2836   0021D6  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  2837   0021DA  6A1C               	clrf	___flmul@grs^0,c
  2838   0021DC  5013               	movf	___flmul@a^0,w,c
  2839   0021DE  020F               	mulwf	___flmul@b^0,c
  2840   0021E0  006F FFCC  F026    	movff	prodl,___flmul@temp
  2841   0021E6  006F FFD0  F027    	movff	prodh,___flmul@temp+1
  2842   0021EC  5026               	movf	___flmul@temp^0,w,c
  2843   0021EE  261C               	addwf	___flmul@grs^0,f,c
  2844   0021F0  5027               	movf	(___flmul@temp+1)^0,w,c
  2845   0021F2  221D               	addwfc	(___flmul@grs+1)^0,f,c
  2846   0021F4  0E00               	movlw	0
  2847   0021F6  221E               	addwfc	(___flmul@grs+2)^0,f,c
  2848   0021F8  0E00               	movlw	0
  2849   0021FA  221F               	addwfc	(___flmul@grs+3)^0,f,c
  2850   0021FC  5015               	movf	(___flmul@a+2)^0,w,c
  2851   0021FE  0210               	mulwf	(___flmul@b+1)^0,c
  2852   002200  006F FFCC  F026    	movff	prodl,___flmul@temp
  2853   002206  006F FFD0  F027    	movff	prodh,___flmul@temp+1
  2854   00220C  5026               	movf	___flmul@temp^0,w,c
  2855   00220E  2622               	addwf	___flmul@prod^0,f,c
  2856   002210  5027               	movf	(___flmul@temp+1)^0,w,c
  2857   002212  2223               	addwfc	(___flmul@prod+1)^0,f,c
  2858   002214  0E00               	movlw	0
  2859   002216  2224               	addwfc	(___flmul@prod+2)^0,f,c
  2860   002218  0E00               	movlw	0
  2861   00221A  2225               	addwfc	(___flmul@prod+3)^0,f,c
  2862   00221C  5014               	movf	(___flmul@a+1)^0,w,c
  2863   00221E  0211               	mulwf	(___flmul@b+2)^0,c
  2864   002220  006F FFCC  F026    	movff	prodl,___flmul@temp
  2865   002226  006F FFD0  F027    	movff	prodh,___flmul@temp+1
  2866   00222C  5026               	movf	___flmul@temp^0,w,c
  2867   00222E  2622               	addwf	___flmul@prod^0,f,c
  2868   002230  5027               	movf	(___flmul@temp+1)^0,w,c
  2869   002232  2223               	addwfc	(___flmul@prod+1)^0,f,c
  2870   002234  0E00               	movlw	0
  2871   002236  2224               	addwfc	(___flmul@prod+2)^0,f,c
  2872   002238  0E00               	movlw	0
  2873   00223A  2225               	addwfc	(___flmul@prod+3)^0,f,c
  2874   00223C  5015               	movf	(___flmul@a+2)^0,w,c
  2875   00223E  0211               	mulwf	(___flmul@b+2)^0,c
  2876   002240  006F FFCC  F026    	movff	prodl,___flmul@temp
  2877   002246  006F FFD0  F027    	movff	prodh,___flmul@temp+1
  2878   00224C  5026               	movf	___flmul@temp^0,w,c
  2879   00224E  6E17               	movwf	??___flmul^0,c
  2880   002250  5027               	movf	(___flmul@temp+1)^0,w,c
  2881   002252  6E18               	movwf	(??___flmul+1)^0,c
  2882   002254  6A19               	clrf	(??___flmul+2)^0,c
  2883   002256  6A1A               	clrf	(??___flmul+3)^0,c
  2884   002258  C019  F01A         	movff	??___flmul+2,??___flmul+3
  2885   00225C  C018  F019         	movff	??___flmul+1,??___flmul+2
  2886   002260  C017  F018         	movff	??___flmul,??___flmul+1
  2887   002264  6A17               	clrf	??___flmul^0,c
  2888   002266  5017               	movf	??___flmul^0,w,c
  2889   002268  2622               	addwf	___flmul@prod^0,f,c
  2890   00226A  5018               	movf	(??___flmul+1)^0,w,c
  2891   00226C  2223               	addwfc	(___flmul@prod+1)^0,f,c
  2892   00226E  5019               	movf	(??___flmul+2)^0,w,c
  2893   002270  2224               	addwfc	(___flmul@prod+2)^0,f,c
  2894   002272  501A               	movf	(??___flmul+3)^0,w,c
  2895   002274  2225               	addwfc	(___flmul@prod+3)^0,f,c
  2896   002276  C01C  F017         	movff	___flmul@grs,??___flmul
  2897   00227A  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  2898   00227E  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  2899   002282  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  2900   002286  0E19               	movlw	25
  2901   002288  EF4B  F011         	goto	u1120
  2902   00228C                     u1125:
  2903   00228C  90D8               	bcf	status,0,c
  2904   00228E  321A               	rrcf	(??___flmul+3)^0,f,c
  2905   002290  3219               	rrcf	(??___flmul+2)^0,f,c
  2906   002292  3218               	rrcf	(??___flmul+1)^0,f,c
  2907   002294  3217               	rrcf	??___flmul^0,f,c
  2908   002296                     u1120:
  2909   002296  2EE8               	decfsz	wreg,f,c
  2910   002298  EF46  F011         	goto	u1125
  2911   00229C  5017               	movf	??___flmul^0,w,c
  2912   00229E  2622               	addwf	___flmul@prod^0,f,c
  2913   0022A0  5018               	movf	(??___flmul+1)^0,w,c
  2914   0022A2  2223               	addwfc	(___flmul@prod+1)^0,f,c
  2915   0022A4  5019               	movf	(??___flmul+2)^0,w,c
  2916   0022A6  2224               	addwfc	(___flmul@prod+2)^0,f,c
  2917   0022A8  501A               	movf	(??___flmul+3)^0,w,c
  2918   0022AA  2225               	addwfc	(___flmul@prod+3)^0,f,c
  2919   0022AC  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  2920   0022B0  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  2921   0022B4  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  2922   0022B8  6A1C               	clrf	___flmul@grs^0,c
  2923   0022BA  5020               	movf	___flmul@aexp^0,w,c
  2924   0022BC  C021  F017         	movff	___flmul@bexp,??___flmul
  2925   0022C0  6A18               	clrf	(??___flmul+1)^0,c
  2926   0022C2  2617               	addwf	??___flmul^0,f,c
  2927   0022C4  0E00               	movlw	0
  2928   0022C6  2218               	addwfc	(??___flmul+1)^0,f,c
  2929   0022C8  0E82               	movlw	130
  2930   0022CA  2417               	addwf	??___flmul^0,w,c
  2931   0022CC  6E26               	movwf	___flmul@temp^0,c
  2932   0022CE  0EFF               	movlw	255
  2933   0022D0  2018               	addwfc	(??___flmul+1)^0,w,c
  2934   0022D2  6E27               	movwf	(___flmul@temp+1)^0,c
  2935   0022D4  EF81  F011         	goto	l1678
  2936   0022D8                     l1672:
  2937   0022D8  90D8               	bcf	status,0,c
  2938   0022DA  3622               	rlcf	___flmul@prod^0,f,c
  2939   0022DC  3623               	rlcf	(___flmul@prod+1)^0,f,c
  2940   0022DE  3624               	rlcf	(___flmul@prod+2)^0,f,c
  2941   0022E0  3625               	rlcf	(___flmul@prod+3)^0,f,c
  2942   0022E2  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  2943   0022E4  EF76  F011         	goto	u1131
  2944   0022E8  EF78  F011         	goto	u1130
  2945   0022EC                     u1131:
  2946   0022EC  EF79  F011         	goto	l733
  2947   0022F0                     u1130:
  2948   0022F0  8022               	bsf	___flmul@prod^0,0,c
  2949   0022F2                     l733:
  2950   0022F2  90D8               	bcf	status,0,c
  2951   0022F4  361C               	rlcf	___flmul@grs^0,f,c
  2952   0022F6  361D               	rlcf	(___flmul@grs+1)^0,f,c
  2953   0022F8  361E               	rlcf	(___flmul@grs+2)^0,f,c
  2954   0022FA  361F               	rlcf	(___flmul@grs+3)^0,f,c
  2955   0022FC  0626               	decf	___flmul@temp^0,f,c
  2956   0022FE  A0D8               	btfss	status,0,c
  2957   002300  0627               	decf	(___flmul@temp+1)^0,f,c
  2958   002302                     l1678:
  2959   002302  AE24               	btfss	(___flmul@prod+2)^0,7,c
  2960   002304  EF86  F011         	goto	u1141
  2961   002308  EF88  F011         	goto	u1140
  2962   00230C                     u1141:
  2963   00230C  EF6C  F011         	goto	l1672
  2964   002310                     u1140:
  2965   002310  6A20               	clrf	___flmul@aexp^0,c
  2966   002312  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  2967   002314  EF8E  F011         	goto	u1151
  2968   002318  EF90  F011         	goto	u1150
  2969   00231C                     u1151:
  2970   00231C  EFB4  F011         	goto	l735
  2971   002320                     u1150:
  2972   002320  0EFF               	movlw	255
  2973   002322  141C               	andwf	___flmul@grs^0,w,c
  2974   002324  6E17               	movwf	??___flmul^0,c
  2975   002326  0EFF               	movlw	255
  2976   002328  141D               	andwf	(___flmul@grs+1)^0,w,c
  2977   00232A  6E18               	movwf	(??___flmul+1)^0,c
  2978   00232C  0EFF               	movlw	255
  2979   00232E  141E               	andwf	(___flmul@grs+2)^0,w,c
  2980   002330  6E19               	movwf	(??___flmul+2)^0,c
  2981   002332  0E7F               	movlw	127
  2982   002334  141F               	andwf	(___flmul@grs+3)^0,w,c
  2983   002336  6E1A               	movwf	(??___flmul+3)^0,c
  2984   002338  5017               	movf	??___flmul^0,w,c
  2985   00233A  1018               	iorwf	(??___flmul+1)^0,w,c
  2986   00233C  1019               	iorwf	(??___flmul+2)^0,w,c
  2987   00233E  101A               	iorwf	(??___flmul+3)^0,w,c
  2988   002340  B4D8               	btfsc	status,2,c
  2989   002342  EFA5  F011         	goto	u1161
  2990   002346  EFA7  F011         	goto	u1160
  2991   00234A                     u1161:
  2992   00234A  EFAB  F011         	goto	l736
  2993   00234E                     u1160:
  2994   00234E                     l1682:
  2995   00234E  0E01               	movlw	1
  2996   002350  6E20               	movwf	___flmul@aexp^0,c
  2997   002352  EFB4  F011         	goto	l735
  2998   002356                     l736:
  2999   002356  A022               	btfss	___flmul@prod^0,0,c
  3000   002358  EFB0  F011         	goto	u1171
  3001   00235C  EFB2  F011         	goto	u1170
  3002   002360                     u1171:
  3003   002360  EFB4  F011         	goto	l735
  3004   002364                     u1170:
  3005   002364  EFA7  F011         	goto	l1682
  3006   002368                     l735:
  3007   002368  5020               	movf	___flmul@aexp^0,w,c
  3008   00236A  B4D8               	btfsc	status,2,c
  3009   00236C  EFBA  F011         	goto	u1181
  3010   002370  EFBC  F011         	goto	u1180
  3011   002374                     u1181:
  3012   002374  EFE0  F011         	goto	l1694
  3013   002378                     u1180:
  3014   002378  0E01               	movlw	1
  3015   00237A  2622               	addwf	___flmul@prod^0,f,c
  3016   00237C  0E00               	movlw	0
  3017   00237E  2223               	addwfc	(___flmul@prod+1)^0,f,c
  3018   002380  2224               	addwfc	(___flmul@prod+2)^0,f,c
  3019   002382  2225               	addwfc	(___flmul@prod+3)^0,f,c
  3020   002384  A025               	btfss	(___flmul@prod+3)^0,0,c
  3021   002386  EFC7  F011         	goto	u1191
  3022   00238A  EFC9  F011         	goto	u1190
  3023   00238E                     u1191:
  3024   00238E  EFE0  F011         	goto	l1694
  3025   002392                     u1190:
  3026   002392  C022  F017         	movff	___flmul@prod,??___flmul
  3027   002396  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  3028   00239A  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  3029   00239E  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  3030   0023A2  341A               	rlcf	(??___flmul+3)^0,w,c
  3031   0023A4  321A               	rrcf	(??___flmul+3)^0,f,c
  3032   0023A6  3219               	rrcf	(??___flmul+2)^0,f,c
  3033   0023A8  3218               	rrcf	(??___flmul+1)^0,f,c
  3034   0023AA  3217               	rrcf	??___flmul^0,f,c
  3035   0023AC  C017  F022         	movff	??___flmul,___flmul@prod
  3036   0023B0  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  3037   0023B4  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  3038   0023B8  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  3039   0023BC  4A26               	infsnz	___flmul@temp^0,f,c
  3040   0023BE  2A27               	incf	(___flmul@temp+1)^0,f,c
  3041   0023C0                     l1694:
  3042   0023C0  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  3043   0023C2  EFEB  F011         	goto	u1201
  3044   0023C6  5027               	movf	(___flmul@temp+1)^0,w,c
  3045   0023C8  E108               	bnz	u1200
  3046   0023CA  2826               	incf	___flmul@temp^0,w,c
  3047   0023CC  A0D8               	btfss	status,0,c
  3048   0023CE  EFEB  F011         	goto	u1201
  3049   0023D2  EFED  F011         	goto	u1200
  3050   0023D6                     u1201:
  3051   0023D6  EFF7  F011         	goto	l1698
  3052   0023DA                     u1200:
  3053   0023DA  0E00               	movlw	0
  3054   0023DC  6E22               	movwf	___flmul@prod^0,c
  3055   0023DE  0E00               	movlw	0
  3056   0023E0  6E23               	movwf	(___flmul@prod+1)^0,c
  3057   0023E2  0E80               	movlw	128
  3058   0023E4  6E24               	movwf	(___flmul@prod+2)^0,c
  3059   0023E6  0E7F               	movlw	127
  3060   0023E8  6E25               	movwf	(___flmul@prod+3)^0,c
  3061   0023EA  EF24  F012         	goto	l1712
  3062   0023EE                     l1698:
  3063   0023EE  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  3064   0023F0  EF04  F012         	goto	u1210
  3065   0023F4  5027               	movf	(___flmul@temp+1)^0,w,c
  3066   0023F6  E106               	bnz	u1211
  3067   0023F8  0426               	decf	___flmul@temp^0,w,c
  3068   0023FA  B0D8               	btfsc	status,0,c
  3069   0023FC  EF02  F012         	goto	u1211
  3070   002400  EF04  F012         	goto	u1210
  3071   002404                     u1211:
  3072   002404  EF0F  F012         	goto	l743
  3073   002408                     u1210:
  3074   002408  0E00               	movlw	0
  3075   00240A  6E22               	movwf	___flmul@prod^0,c
  3076   00240C  0E00               	movlw	0
  3077   00240E  6E23               	movwf	(___flmul@prod+1)^0,c
  3078   002410  0E00               	movlw	0
  3079   002412  6E24               	movwf	(___flmul@prod+2)^0,c
  3080   002414  0E00               	movlw	0
  3081   002416  6E25               	movwf	(___flmul@prod+3)^0,c
  3082   002418  6A1B               	clrf	___flmul@sign^0,c
  3083   00241A  EF24  F012         	goto	l1712
  3084   00241E                     l743:
  3085   00241E  C026  F021         	movff	___flmul@temp,___flmul@bexp
  3086   002422  0EFF               	movlw	255
  3087   002424  1622               	andwf	___flmul@prod^0,f,c
  3088   002426  0EFF               	movlw	255
  3089   002428  1623               	andwf	(___flmul@prod+1)^0,f,c
  3090   00242A  0E7F               	movlw	127
  3091   00242C  1624               	andwf	(___flmul@prod+2)^0,f,c
  3092   00242E  0E00               	movlw	0
  3093   002430  1625               	andwf	(___flmul@prod+3)^0,f,c
  3094   002432  A021               	btfss	___flmul@bexp^0,0,c
  3095   002434  EF1E  F012         	goto	u1221
  3096   002438  EF20  F012         	goto	u1220
  3097   00243C                     u1221:
  3098   00243C  EF21  F012         	goto	l1710
  3099   002440                     u1220:
  3100   002440  8E24               	bsf	(___flmul@prod+2)^0,7,c
  3101   002442                     l1710:
  3102   002442  90D8               	bcf	status,0,c
  3103   002444  3021               	rrcf	___flmul@bexp^0,w,c
  3104   002446  6E25               	movwf	(___flmul@prod+3)^0,c
  3105   002448                     l1712:
  3106   002448  501B               	movf	___flmul@sign^0,w,c
  3107   00244A  1225               	iorwf	(___flmul@prod+3)^0,f,c
  3108   00244C  C022  F00F         	movff	___flmul@prod,?___flmul
  3109   002450  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  3110   002454  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  3111   002458  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  3112   00245C                     l730:
  3113   00245C  0012               	return		;funcret
  3114   00245E                     __end_of___flmul:
  3115                           	callstack 0
  3116                           
  3117 ;; *************** function ___flge *****************
  3118 ;; Defined at:
  3119 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\flge.c"
  3120 ;; Parameters:    Size  Location     Type
  3121 ;;  ff1             4    0[COMRAM] unsigned char 
  3122 ;;  ff2             4    4[COMRAM] unsigned char 
  3123 ;; Auto vars:     Size  Location     Type
  3124 ;;		None
  3125 ;; Return value:  Size  Location     Type
  3126 ;;		None               void
  3127 ;; Registers used:
  3128 ;;		wreg, status,2, status,0
  3129 ;; Tracked objects:
  3130 ;;		On entry : 0/0
  3131 ;;		On exit  : 0/0
  3132 ;;		Unchanged: 0/0
  3133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3134 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3136 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3137 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3138 ;;Total ram usage:       12 bytes
  3139 ;; Hardware stack levels used: 1
  3140 ;; This function calls:
  3141 ;;		Nothing
  3142 ;; This function is called by:
  3143 ;;		_getDifficulty
  3144 ;; This function uses a non-reentrant model
  3145 ;;
  3146                           
  3147                           	psect	text12
  3148   0027C6                     __ptext12:
  3149                           	callstack 0
  3150   0027C6                     ___flge:
  3151                           	callstack 29
  3152   0027C6  0E00               	movlw	0
  3153   0027C8  1401               	andwf	___flge@ff1^0,w,c
  3154   0027CA  6E09               	movwf	??___flge^0,c
  3155   0027CC  0E00               	movlw	0
  3156   0027CE  1402               	andwf	(___flge@ff1+1)^0,w,c
  3157   0027D0  6E0A               	movwf	(??___flge+1)^0,c
  3158   0027D2  0E80               	movlw	128
  3159   0027D4  1403               	andwf	(___flge@ff1+2)^0,w,c
  3160   0027D6  6E0B               	movwf	(??___flge+2)^0,c
  3161   0027D8  0E7F               	movlw	127
  3162   0027DA  1404               	andwf	(___flge@ff1+3)^0,w,c
  3163   0027DC  6E0C               	movwf	(??___flge+3)^0,c
  3164   0027DE  5009               	movf	??___flge^0,w,c
  3165   0027E0  100A               	iorwf	(??___flge+1)^0,w,c
  3166   0027E2  100B               	iorwf	(??___flge+2)^0,w,c
  3167   0027E4  100C               	iorwf	(??___flge+3)^0,w,c
  3168   0027E6  A4D8               	btfss	status,2,c
  3169   0027E8  EFF8  F013         	goto	u1231
  3170   0027EC  EFFA  F013         	goto	u1230
  3171   0027F0                     u1231:
  3172   0027F0  EF02  F014         	goto	l1722
  3173   0027F4                     u1230:
  3174   0027F4  0E00               	movlw	0
  3175   0027F6  6E01               	movwf	___flge@ff1^0,c
  3176   0027F8  0E00               	movlw	0
  3177   0027FA  6E02               	movwf	(___flge@ff1+1)^0,c
  3178   0027FC  0E00               	movlw	0
  3179   0027FE  6E03               	movwf	(___flge@ff1+2)^0,c
  3180   002800  0E00               	movlw	0
  3181   002802  6E04               	movwf	(___flge@ff1+3)^0,c
  3182   002804                     l1722:
  3183   002804  0E00               	movlw	0
  3184   002806  1405               	andwf	___flge@ff2^0,w,c
  3185   002808  6E09               	movwf	??___flge^0,c
  3186   00280A  0E00               	movlw	0
  3187   00280C  1406               	andwf	(___flge@ff2+1)^0,w,c
  3188   00280E  6E0A               	movwf	(??___flge+1)^0,c
  3189   002810  0E80               	movlw	128
  3190   002812  1407               	andwf	(___flge@ff2+2)^0,w,c
  3191   002814  6E0B               	movwf	(??___flge+2)^0,c
  3192   002816  0E7F               	movlw	127
  3193   002818  1408               	andwf	(___flge@ff2+3)^0,w,c
  3194   00281A  6E0C               	movwf	(??___flge+3)^0,c
  3195   00281C  5009               	movf	??___flge^0,w,c
  3196   00281E  100A               	iorwf	(??___flge+1)^0,w,c
  3197   002820  100B               	iorwf	(??___flge+2)^0,w,c
  3198   002822  100C               	iorwf	(??___flge+3)^0,w,c
  3199   002824  A4D8               	btfss	status,2,c
  3200   002826  EF17  F014         	goto	u1241
  3201   00282A  EF19  F014         	goto	u1240
  3202   00282E                     u1241:
  3203   00282E  EF21  F014         	goto	l1726
  3204   002832                     u1240:
  3205   002832  0E00               	movlw	0
  3206   002834  6E05               	movwf	___flge@ff2^0,c
  3207   002836  0E00               	movlw	0
  3208   002838  6E06               	movwf	(___flge@ff2+1)^0,c
  3209   00283A  0E00               	movlw	0
  3210   00283C  6E07               	movwf	(___flge@ff2+2)^0,c
  3211   00283E  0E00               	movlw	0
  3212   002840  6E08               	movwf	(___flge@ff2+3)^0,c
  3213   002842                     l1726:
  3214   002842  AE04               	btfss	(___flge@ff1+3)^0,7,c
  3215   002844  EF26  F014         	goto	u1251
  3216   002848  EF28  F014         	goto	u1250
  3217   00284C                     u1251:
  3218   00284C  EF31  F014         	goto	l1730
  3219   002850                     u1250:
  3220   002850  6C01               	negf	___flge@ff1^0,c
  3221   002852  1E02               	comf	(___flge@ff1+1)^0,f,c
  3222   002854  B0D8               	btfsc	status,0,c
  3223   002856  2A02               	incf	(___flge@ff1+1)^0,f,c
  3224   002858  1E03               	comf	(___flge@ff1+2)^0,f,c
  3225   00285A  B0D8               	btfsc	status,0,c
  3226   00285C  2A03               	incf	(___flge@ff1+2)^0,f,c
  3227   00285E  0E80               	movlw	128
  3228   002860  5604               	subfwb	(___flge@ff1+3)^0,f,c
  3229   002862                     l1730:
  3230   002862  AE08               	btfss	(___flge@ff2+3)^0,7,c
  3231   002864  EF36  F014         	goto	u1261
  3232   002868  EF38  F014         	goto	u1260
  3233   00286C                     u1261:
  3234   00286C  EF41  F014         	goto	l377
  3235   002870                     u1260:
  3236   002870  6C05               	negf	___flge@ff2^0,c
  3237   002872  1E06               	comf	(___flge@ff2+1)^0,f,c
  3238   002874  B0D8               	btfsc	status,0,c
  3239   002876  2A06               	incf	(___flge@ff2+1)^0,f,c
  3240   002878  1E07               	comf	(___flge@ff2+2)^0,f,c
  3241   00287A  B0D8               	btfsc	status,0,c
  3242   00287C  2A07               	incf	(___flge@ff2+2)^0,f,c
  3243   00287E  0E80               	movlw	128
  3244   002880  5608               	subfwb	(___flge@ff2+3)^0,f,c
  3245   002882                     l377:
  3246   002882  0E00               	movlw	0
  3247   002884  1A01               	xorwf	___flge@ff1^0,f,c
  3248   002886  0E00               	movlw	0
  3249   002888  1A02               	xorwf	(___flge@ff1+1)^0,f,c
  3250   00288A  0E00               	movlw	0
  3251   00288C  1A03               	xorwf	(___flge@ff1+2)^0,f,c
  3252   00288E  0E80               	movlw	128
  3253   002890  1A04               	xorwf	(___flge@ff1+3)^0,f,c
  3254   002892  0E00               	movlw	0
  3255   002894  1A05               	xorwf	___flge@ff2^0,f,c
  3256   002896  0E00               	movlw	0
  3257   002898  1A06               	xorwf	(___flge@ff2+1)^0,f,c
  3258   00289A  0E00               	movlw	0
  3259   00289C  1A07               	xorwf	(___flge@ff2+2)^0,f,c
  3260   00289E  0E80               	movlw	128
  3261   0028A0  1A08               	xorwf	(___flge@ff2+3)^0,f,c
  3262   0028A2  5005               	movf	___flge@ff2^0,w,c
  3263   0028A4  5C01               	subwf	___flge@ff1^0,w,c
  3264   0028A6  5006               	movf	(___flge@ff2+1)^0,w,c
  3265   0028A8  5802               	subwfb	(___flge@ff1+1)^0,w,c
  3266   0028AA  5007               	movf	(___flge@ff2+2)^0,w,c
  3267   0028AC  5803               	subwfb	(___flge@ff1+2)^0,w,c
  3268   0028AE  5008               	movf	(___flge@ff2+3)^0,w,c
  3269   0028B0  5804               	subwfb	(___flge@ff1+3)^0,w,c
  3270   0028B2  B0D8               	btfsc	status,0,c
  3271   0028B4  EF5E  F014         	goto	u1271
  3272   0028B8  EF60  F014         	goto	u1270
  3273   0028BC                     u1271:
  3274   0028BC  EF63  F014         	goto	l1736
  3275   0028C0                     u1270:
  3276   0028C0  90D8               	bcf	status,0,c
  3277   0028C2  EF64  F014         	goto	l382
  3278   0028C6                     l1736:
  3279   0028C6  80D8               	bsf	status,0,c
  3280   0028C8                     l382:
  3281   0028C8  0012               	return		;funcret
  3282   0028CA                     __end_of___flge:
  3283                           	callstack 0
  3284                           
  3285 ;; *************** function _ADC_Read *****************
  3286 ;; Defined at:
  3287 ;;		line 75 in file "./functions.h"
  3288 ;; Parameters:    Size  Location     Type
  3289 ;;		None
  3290 ;; Auto vars:     Size  Location     Type
  3291 ;;		None
  3292 ;; Return value:  Size  Location     Type
  3293 ;;                  2    0[COMRAM] unsigned int 
  3294 ;; Registers used:
  3295 ;;		wreg, status,2, status,0
  3296 ;; Tracked objects:
  3297 ;;		On entry : 0/0
  3298 ;;		On exit  : 0/0
  3299 ;;		Unchanged: 0/0
  3300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3301 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3303 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3304 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3305 ;;Total ram usage:        4 bytes
  3306 ;; Hardware stack levels used: 1
  3307 ;; This function calls:
  3308 ;;		Nothing
  3309 ;; This function is called by:
  3310 ;;		_getDifficulty
  3311 ;; This function uses a non-reentrant model
  3312 ;;
  3313                           
  3314                           	psect	text13
  3315   002D6E                     __ptext13:
  3316                           	callstack 0
  3317   002D6E                     _ADC_Read:
  3318                           	callstack 29
  3319   002D6E                     
  3320                           ;./functions.h: 76:     ADCON0bits.GO = 1;
  3321   002D6E  013E               	movlb	62	; () banked
  3322   002D70  81F8               	bsf	248,0,b	;volatile
  3323   002D72                     l79:
  3324                           
  3325                           ; BSR set to: 62
  3326   002D72  B1F8               	btfsc	248,0,b	;volatile
  3327   002D74  EFBE  F016         	goto	u1031
  3328   002D78  EFC0  F016         	goto	u1030
  3329   002D7C                     u1031:
  3330   002D7C  EFB9  F016         	goto	l79
  3331   002D80                     u1030:
  3332   002D80                     
  3333                           ; BSR set to: 62
  3334                           ;./functions.h: 78:     return ((ADRESH << 8) | ADRESL);
  3335   002D80  51EF               	movf	239,w,b	;volatile
  3336   002D82  006F FBC0  F003    	movff	16112,??_ADC_Read	;volatile
  3337   002D88  6A04               	clrf	(??_ADC_Read+1)^0,c
  3338   002D8A  C003  F004         	movff	??_ADC_Read,??_ADC_Read+1
  3339   002D8E  6A03               	clrf	??_ADC_Read^0,c
  3340   002D90  1003               	iorwf	??_ADC_Read^0,w,c
  3341   002D92  6E01               	movwf	?_ADC_Read^0,c
  3342   002D94  5004               	movf	(??_ADC_Read+1)^0,w,c
  3343   002D96  6E02               	movwf	(?_ADC_Read+1)^0,c
  3344   002D98                     
  3345                           ; BSR set to: 62
  3346   002D98  0012               	return		;funcret
  3347   002D9A                     __end_of_ADC_Read:
  3348                           	callstack 0
  3349                           
  3350 ;; *************** function _LCD_String_xy *****************
  3351 ;; Defined at:
  3352 ;;		line 52 in file "./functions.h"
  3353 ;; Parameters:    Size  Location     Type
  3354 ;;  row             1    wreg     unsigned char 
  3355 ;;  pos             1    8[COMRAM] unsigned char 
  3356 ;;  msg             1    9[COMRAM] PTR const unsigned char 
  3357 ;;		 -> data(10), 
  3358 ;; Auto vars:     Size  Location     Type
  3359 ;;  row             1   10[COMRAM] unsigned char 
  3360 ;;  location        1   11[COMRAM] unsigned char 
  3361 ;; Return value:  Size  Location     Type
  3362 ;;                  1    wreg      void 
  3363 ;; Registers used:
  3364 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3365 ;; Tracked objects:
  3366 ;;		On entry : 0/0
  3367 ;;		On exit  : 0/0
  3368 ;;		Unchanged: 0/0
  3369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3370 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3371 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3373 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3374 ;;Total ram usage:        4 bytes
  3375 ;; Hardware stack levels used: 1
  3376 ;; Hardware stack levels required when called: 3
  3377 ;; This function calls:
  3378 ;;		_LCD_Command
  3379 ;;		_LCD_String
  3380 ;; This function is called by:
  3381 ;;		_main
  3382 ;; This function uses a non-reentrant model
  3383 ;;
  3384                           
  3385                           	psect	text14
  3386   002CCA                     __ptext14:
  3387                           	callstack 0
  3388   002CCA                     _LCD_String_xy:
  3389                           	callstack 27
  3390                           
  3391                           ; BSR set to: 62
  3392                           ;incstack = 0
  3393                           ;LCD_String_xy@row stored from wreg
  3394   002CCA  6E0B               	movwf	LCD_String_xy@row^0,c
  3395   002CCC                     
  3396                           ;./functions.h: 55:     if(row<=1)
  3397   002CCC  0E02               	movlw	2
  3398   002CCE  600B               	cpfslt	LCD_String_xy@row^0,c
  3399   002CD0  EF6C  F016         	goto	u1391
  3400   002CD4  EF6E  F016         	goto	u1390
  3401   002CD8                     u1391:
  3402   002CD8  EF77  F016         	goto	l1810
  3403   002CDC                     u1390:
  3404   002CDC                     
  3405                           ;./functions.h: 56:     {;./functions.h: 57:         location=(0x80) | ((pos) & 0x0f);
  3406   002CDC  5009               	movf	LCD_String_xy@pos^0,w,c
  3407   002CDE  0B0F               	andlw	15
  3408   002CE0  0980               	iorlw	128
  3409   002CE2  6E0C               	movwf	LCD_String_xy@location^0,c
  3410   002CE4                     
  3411                           ;./functions.h: 58:         LCD_Command(location);
  3412   002CE4  500C               	movf	LCD_String_xy@location^0,w,c
  3413   002CE6  EC2D  F017         	call	_LCD_Command
  3414                           
  3415                           ;./functions.h: 59:     }
  3416   002CEA  EF7E  F016         	goto	l1814
  3417   002CEE                     l1810:
  3418                           
  3419                           ;./functions.h: 61:     {;./functions.h: 62:         location=(0xC0) | ((pos) & 0x0f);
  3420   002CEE  5009               	movf	LCD_String_xy@pos^0,w,c
  3421   002CF0  0B0F               	andlw	15
  3422   002CF2  09C0               	iorlw	192
  3423   002CF4  6E0C               	movwf	LCD_String_xy@location^0,c
  3424   002CF6                     
  3425                           ;./functions.h: 63:         LCD_Command(location);
  3426   002CF6  500C               	movf	LCD_String_xy@location^0,w,c
  3427   002CF8  EC2D  F017         	call	_LCD_Command
  3428   002CFC                     l1814:
  3429                           
  3430                           ;./functions.h: 65:     LCD_String(msg);
  3431   002CFC  C00A  F008         	movff	LCD_String_xy@msg,LCD_String@msg
  3432   002D00  ECCD  F016         	call	_LCD_String	;wreg free
  3433   002D04  0012               	return		;funcret
  3434   002D06                     __end_of_LCD_String_xy:
  3435                           	callstack 0
  3436                           
  3437 ;; *************** function _LCD_String *****************
  3438 ;; Defined at:
  3439 ;;		line 43 in file "./functions.h"
  3440 ;; Parameters:    Size  Location     Type
  3441 ;;  msg             1    7[COMRAM] PTR const unsigned char 
  3442 ;;		 -> data(10), 
  3443 ;; Auto vars:     Size  Location     Type
  3444 ;;		None
  3445 ;; Return value:  Size  Location     Type
  3446 ;;                  1    wreg      void 
  3447 ;; Registers used:
  3448 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3449 ;; Tracked objects:
  3450 ;;		On entry : 0/0
  3451 ;;		On exit  : 0/0
  3452 ;;		Unchanged: 0/0
  3453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3454 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3457 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3458 ;;Total ram usage:        1 bytes
  3459 ;; Hardware stack levels used: 1
  3460 ;; Hardware stack levels required when called: 2
  3461 ;; This function calls:
  3462 ;;		_LCD_Char
  3463 ;; This function is called by:
  3464 ;;		_LCD_String_xy
  3465 ;; This function uses a non-reentrant model
  3466 ;;
  3467                           
  3468                           	psect	text15
  3469   002D9A                     __ptext15:
  3470                           	callstack 0
  3471   002D9A                     _LCD_String:
  3472                           	callstack 27
  3473   002D9A                     
  3474                           ;./functions.h: 43: void LCD_String(const char *msg);./functions.h: 44: {;./functions.h:
      +                           45:     while((*msg)!=0)
  3475   002D9A  EFD6  F016         	goto	l1582
  3476   002D9E                     l1578:
  3477                           
  3478                           ;./functions.h: 46:     {;./functions.h: 47:       LCD_Char(*msg);
  3479   002D9E  5008               	movf	LCD_String@msg^0,w,c
  3480   002DA0  6ED9               	movwf	fsr2l,c
  3481   002DA2  6ADA               	clrf	fsr2h,c
  3482   002DA4  50DF               	movf	indf2,w,c
  3483   002DA6  EC1E  F017         	call	_LCD_Char
  3484   002DAA                     
  3485                           ;./functions.h: 48:       msg++;
  3486   002DAA  2A08               	incf	LCD_String@msg^0,f,c
  3487   002DAC                     l1582:
  3488                           
  3489                           ;./functions.h: 45:     while((*msg)!=0)
  3490   002DAC  5008               	movf	LCD_String@msg^0,w,c
  3491   002DAE  6ED9               	movwf	fsr2l,c
  3492   002DB0  6ADA               	clrf	fsr2h,c
  3493   002DB2  50DF               	movf	indf2,w,c
  3494   002DB4  A4D8               	btfss	status,2,c
  3495   002DB6  EFDF  F016         	goto	u1021
  3496   002DBA  EFE1  F016         	goto	u1020
  3497   002DBE                     u1021:
  3498   002DBE  EFCF  F016         	goto	l1578
  3499   002DC2                     u1020:
  3500   002DC2  0012               	return		;funcret
  3501   002DC4                     __end_of_LCD_String:
  3502                           	callstack 0
  3503                           
  3504 ;; *************** function _LCD_Char *****************
  3505 ;; Defined at:
  3506 ;;		line 32 in file "./functions.h"
  3507 ;; Parameters:    Size  Location     Type
  3508 ;;  dat             1    wreg     unsigned char 
  3509 ;; Auto vars:     Size  Location     Type
  3510 ;;  dat             1    6[COMRAM] unsigned char 
  3511 ;; Return value:  Size  Location     Type
  3512 ;;                  1    wreg      void 
  3513 ;; Registers used:
  3514 ;;		wreg, status,2, status,0, cstack
  3515 ;; Tracked objects:
  3516 ;;		On entry : 0/0
  3517 ;;		On exit  : 0/0
  3518 ;;		Unchanged: 0/0
  3519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3520 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3521 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3523 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3524 ;;Total ram usage:        1 bytes
  3525 ;; Hardware stack levels used: 1
  3526 ;; Hardware stack levels required when called: 1
  3527 ;; This function calls:
  3528 ;;		_MSdelay
  3529 ;; This function is called by:
  3530 ;;		_LCD_String
  3531 ;; This function uses a non-reentrant model
  3532 ;;
  3533                           
  3534                           	psect	text16
  3535   002E3C                     __ptext16:
  3536                           	callstack 0
  3537   002E3C                     _LCD_Char:
  3538                           	callstack 27
  3539                           
  3540                           ;incstack = 0
  3541                           ;LCD_Char@dat stored from wreg
  3542   002E3C  6E07               	movwf	LCD_Char@dat^0,c
  3543   002E3E                     
  3544                           ;./functions.h: 32: void LCD_Char(char dat);./functions.h: 33: {;./functions.h: 34:     
      +                          LATB= dat;
  3545   002E3E  0060  F01F  FFBB   	movff	LCD_Char@dat,16315	;volatile
  3546   002E44                     
  3547                           ;./functions.h: 35:     LATDbits.LATD0 = 1;
  3548   002E44  80BD               	bsf	189,0,c	;volatile
  3549   002E46                     
  3550                           ;./functions.h: 36:     LATDbits.LATD1=1;
  3551   002E46  82BD               	bsf	189,1,c	;volatile
  3552   002E48                     
  3553                           ;./functions.h: 37:     __nop();
  3554   002E48  0000               	nop	
  3555   002E4A                     
  3556                           ;./functions.h: 38:     LATDbits.LATD1=0;
  3557   002E4A  92BD               	bcf	189,1,c	;volatile
  3558   002E4C                     
  3559                           ;./functions.h: 39:     MSdelay(1);
  3560   002E4C  0E00               	movlw	0
  3561   002E4E  6E02               	movwf	(MSdelay@val+1)^0,c
  3562   002E50  0E01               	movlw	1
  3563   002E52  6E01               	movwf	MSdelay@val^0,c
  3564   002E54  EC22  F016         	call	_MSdelay	;wreg free
  3565   002E58  0012               	return		;funcret
  3566   002E5A                     __end_of_LCD_Char:
  3567                           	callstack 0
  3568                           
  3569 ;; *************** function _LCD_Init *****************
  3570 ;; Defined at:
  3571 ;;		line 56 in file "./init.h"
  3572 ;; Parameters:    Size  Location     Type
  3573 ;;		None
  3574 ;; Auto vars:     Size  Location     Type
  3575 ;;		None
  3576 ;; Return value:  Size  Location     Type
  3577 ;;                  1    wreg      void 
  3578 ;; Registers used:
  3579 ;;		wreg, status,2, status,0, cstack
  3580 ;; Tracked objects:
  3581 ;;		On entry : 0/0
  3582 ;;		On exit  : 0/0
  3583 ;;		Unchanged: 0/0
  3584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3585 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3586 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3588 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3589 ;;Total ram usage:        0 bytes
  3590 ;; Hardware stack levels used: 1
  3591 ;; Hardware stack levels required when called: 2
  3592 ;; This function calls:
  3593 ;;		_LCD_Command
  3594 ;;		_MSdelay
  3595 ;; This function is called by:
  3596 ;;		_main
  3597 ;; This function uses a non-reentrant model
  3598 ;;
  3599                           
  3600                           	psect	text17
  3601   002DC4                     __ptext17:
  3602                           	callstack 0
  3603   002DC4                     _LCD_Init:
  3604                           	callstack 28
  3605   002DC4                     
  3606                           ;./init.h: 57:     MSdelay(15);
  3607   002DC4  0E00               	movlw	0
  3608   002DC6  6E02               	movwf	(MSdelay@val+1)^0,c
  3609   002DC8  0E0F               	movlw	15
  3610   002DCA  6E01               	movwf	MSdelay@val^0,c
  3611   002DCC  EC22  F016         	call	_MSdelay	;wreg free
  3612   002DD0                     
  3613                           ;./init.h: 58:     TRISB = 0x00;
  3614   002DD0  6AC3               	clrf	195,c	;volatile
  3615   002DD2                     
  3616                           ;./init.h: 59:     TRISD = 0x00;
  3617   002DD2  6AC5               	clrf	197,c	;volatile
  3618                           
  3619                           ;./init.h: 60:     LCD_Command(0x01);
  3620   002DD4  0E01               	movlw	1
  3621   002DD6  EC2D  F017         	call	_LCD_Command
  3622                           
  3623                           ;./init.h: 61:     LCD_Command(0x38);
  3624   002DDA  0E38               	movlw	56
  3625   002DDC  EC2D  F017         	call	_LCD_Command
  3626                           
  3627                           ;./init.h: 62:     LCD_Command(0x0c);
  3628   002DE0  0E0C               	movlw	12
  3629   002DE2  EC2D  F017         	call	_LCD_Command
  3630                           
  3631                           ;./init.h: 63:     LCD_Command(0x06);
  3632   002DE6  0E06               	movlw	6
  3633   002DE8  EC2D  F017         	call	_LCD_Command
  3634   002DEC  0012               	return		;funcret
  3635   002DEE                     __end_of_LCD_Init:
  3636                           	callstack 0
  3637                           
  3638 ;; *************** function _LCD_Command *****************
  3639 ;; Defined at:
  3640 ;;		line 22 in file "./functions.h"
  3641 ;; Parameters:    Size  Location     Type
  3642 ;;  cmd             1    wreg     unsigned char 
  3643 ;; Auto vars:     Size  Location     Type
  3644 ;;  cmd             1    6[COMRAM] unsigned char 
  3645 ;; Return value:  Size  Location     Type
  3646 ;;                  1    wreg      void 
  3647 ;; Registers used:
  3648 ;;		wreg, status,2, status,0, cstack
  3649 ;; Tracked objects:
  3650 ;;		On entry : 0/0
  3651 ;;		On exit  : 0/0
  3652 ;;		Unchanged: 0/0
  3653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3654 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3655 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3657 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3658 ;;Total ram usage:        1 bytes
  3659 ;; Hardware stack levels used: 1
  3660 ;; Hardware stack levels required when called: 1
  3661 ;; This function calls:
  3662 ;;		_MSdelay
  3663 ;; This function is called by:
  3664 ;;		_LCD_Init
  3665 ;;		_LCD_String_xy
  3666 ;;		_LCD_Clear
  3667 ;; This function uses a non-reentrant model
  3668 ;;
  3669                           
  3670                           	psect	text18
  3671   002E5A                     __ptext18:
  3672                           	callstack 0
  3673   002E5A                     _LCD_Command:
  3674                           	callstack 28
  3675                           
  3676                           ;incstack = 0
  3677                           ;LCD_Command@cmd stored from wreg
  3678   002E5A  6E07               	movwf	LCD_Command@cmd^0,c
  3679   002E5C                     
  3680                           ;./functions.h: 22: void LCD_Command(char cmd );./functions.h: 23: {;./functions.h: 24: 
      +                              LATB= cmd;
  3681   002E5C  0060  F01F  FFBB   	movff	LCD_Command@cmd,16315	;volatile
  3682   002E62                     
  3683                           ;./functions.h: 25:     LATDbits.LATD0 = 0;
  3684   002E62  90BD               	bcf	189,0,c	;volatile
  3685   002E64                     
  3686                           ;./functions.h: 26:     LATDbits.LATD1 = 1;
  3687   002E64  82BD               	bsf	189,1,c	;volatile
  3688   002E66                     
  3689                           ;./functions.h: 27:     __nop();
  3690   002E66  0000               	nop	
  3691   002E68                     
  3692                           ;./functions.h: 28:     LATDbits.LATD1 = 0;
  3693   002E68  92BD               	bcf	189,1,c	;volatile
  3694   002E6A                     
  3695                           ;./functions.h: 29:     MSdelay(3);
  3696   002E6A  0E00               	movlw	0
  3697   002E6C  6E02               	movwf	(MSdelay@val+1)^0,c
  3698   002E6E  0E03               	movlw	3
  3699   002E70  6E01               	movwf	MSdelay@val^0,c
  3700   002E72  EC22  F016         	call	_MSdelay	;wreg free
  3701   002E76  0012               	return		;funcret
  3702   002E78                     __end_of_LCD_Command:
  3703                           	callstack 0
  3704                           
  3705 ;; *************** function _MSdelay *****************
  3706 ;; Defined at:
  3707 ;;		line 69 in file "./functions.h"
  3708 ;; Parameters:    Size  Location     Type
  3709 ;;  val             2    0[COMRAM] unsigned int 
  3710 ;; Auto vars:     Size  Location     Type
  3711 ;;  j               2    4[COMRAM] unsigned int 
  3712 ;;  i               2    2[COMRAM] unsigned int 
  3713 ;; Return value:  Size  Location     Type
  3714 ;;                  1    wreg      void 
  3715 ;; Registers used:
  3716 ;;		wreg, status,2, status,0
  3717 ;; Tracked objects:
  3718 ;;		On entry : 0/0
  3719 ;;		On exit  : 0/0
  3720 ;;		Unchanged: 0/0
  3721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3722 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3723 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3725 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3726 ;;Total ram usage:        6 bytes
  3727 ;; Hardware stack levels used: 1
  3728 ;; This function calls:
  3729 ;;		Nothing
  3730 ;; This function is called by:
  3731 ;;		_LCD_Init
  3732 ;;		_LCD_Command
  3733 ;;		_LCD_Char
  3734 ;; This function uses a non-reentrant model
  3735 ;;
  3736                           
  3737                           	psect	text19
  3738   002C44                     __ptext19:
  3739                           	callstack 0
  3740   002C44                     _MSdelay:
  3741                           	callstack 27
  3742   002C44                     
  3743                           ;./functions.h: 69: void MSdelay(unsigned int val);./functions.h: 70: {;./functions.h: 7
      +                          1:      unsigned int i,j;;./functions.h: 72:         for(i=0;i<val;i++)
  3744   002C44  0E00               	movlw	0
  3745   002C46  6E04               	movwf	(MSdelay@i+1)^0,c
  3746   002C48  0E00               	movlw	0
  3747   002C4A  6E03               	movwf	MSdelay@i^0,c
  3748   002C4C  EF3B  F016         	goto	l1402
  3749   002C50                     l1390:
  3750                           
  3751                           ;./functions.h: 73:             for(j=0;j<165;j++);
  3752   002C50  0E00               	movlw	0
  3753   002C52  6E06               	movwf	(MSdelay@j+1)^0,c
  3754   002C54  0E00               	movlw	0
  3755   002C56  6E05               	movwf	MSdelay@j^0,c
  3756   002C58                     l1396:
  3757   002C58  4A05               	infsnz	MSdelay@j^0,f,c
  3758   002C5A  2A06               	incf	(MSdelay@j+1)^0,f,c
  3759   002C5C  5006               	movf	(MSdelay@j+1)^0,w,c
  3760   002C5E  E109               	bnz	u730
  3761   002C60  0EA5               	movlw	165
  3762   002C62  5C05               	subwf	MSdelay@j^0,w,c
  3763   002C64  A0D8               	btfss	status,0,c
  3764   002C66  EF37  F016         	goto	u731
  3765   002C6A  EF39  F016         	goto	u730
  3766   002C6E                     u731:
  3767   002C6E  EF2C  F016         	goto	l1396
  3768   002C72                     u730:
  3769   002C72  4A03               	infsnz	MSdelay@i^0,f,c
  3770   002C74  2A04               	incf	(MSdelay@i+1)^0,f,c
  3771   002C76                     l1402:
  3772   002C76  5001               	movf	MSdelay@val^0,w,c
  3773   002C78  5C03               	subwf	MSdelay@i^0,w,c
  3774   002C7A  5002               	movf	(MSdelay@val+1)^0,w,c
  3775   002C7C  5804               	subwfb	(MSdelay@i+1)^0,w,c
  3776   002C7E  A0D8               	btfss	status,0,c
  3777   002C80  EF44  F016         	goto	u741
  3778   002C84  EF46  F016         	goto	u740
  3779   002C88                     u741:
  3780   002C88  EF28  F016         	goto	l1390
  3781   002C8C                     u740:
  3782   002C8C  0012               	return		;funcret
  3783   002C8E                     __end_of_MSdelay:
  3784                           	callstack 0
  3785                           
  3786 ;; *************** function _ADC_Init *****************
  3787 ;; Defined at:
  3788 ;;		line 33 in file "./init.h"
  3789 ;; Parameters:    Size  Location     Type
  3790 ;;		None
  3791 ;; Auto vars:     Size  Location     Type
  3792 ;;		None
  3793 ;; Return value:  Size  Location     Type
  3794 ;;                  1    wreg      void 
  3795 ;; Registers used:
  3796 ;;		wreg, status,2
  3797 ;; Tracked objects:
  3798 ;;		On entry : 0/0
  3799 ;;		On exit  : 0/0
  3800 ;;		Unchanged: 0/0
  3801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3805 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3806 ;;Total ram usage:        0 bytes
  3807 ;; Hardware stack levels used: 1
  3808 ;; This function calls:
  3809 ;;		Nothing
  3810 ;; This function is called by:
  3811 ;;		_main
  3812 ;; This function uses a non-reentrant model
  3813 ;;
  3814                           
  3815                           	psect	text20
  3816   002DEE                     __ptext20:
  3817                           	callstack 0
  3818   002DEE                     _ADC_Init:
  3819                           	callstack 30
  3820   002DEE                     
  3821                           ;./init.h: 36:     ADCON0bits.FM = 1;
  3822   002DEE  013E               	movlb	62	; () banked
  3823   002DF0  51F8               	movf	248,w,b	;volatile
  3824   002DF2  0BF3               	andlw	-13
  3825   002DF4  0904               	iorlw	4
  3826   002DF6  6FF8               	movwf	248,b	;volatile
  3827   002DF8                     
  3828                           ; BSR set to: 62
  3829                           ;./init.h: 37:     ADCON0bits.CS = 1;
  3830   002DF8  89F8               	bsf	248,4,b	;volatile
  3831   002DFA                     
  3832                           ; BSR set to: 62
  3833                           ;./init.h: 39:     TRISAbits.TRISA0 = 1;
  3834   002DFA  80C2               	bsf	194,0,c	;volatile
  3835   002DFC                     
  3836                           ; BSR set to: 62
  3837                           ;./init.h: 40:     ANSELAbits.ANSELA0 = 1;
  3838   002DFC  013A               	movlb	58	; () banked
  3839   002DFE  8140               	bsf	64,0,b	;volatile
  3840   002E00                     
  3841                           ; BSR set to: 58
  3842                           ;./init.h: 42:     ADPCH = 0x00;
  3843   002E00  013E               	movlb	62	; () banked
  3844   002E02  6BF1               	clrf	241,b	;volatile
  3845   002E04                     
  3846                           ; BSR set to: 62
  3847                           ;./init.h: 43:     ADCLK = 0x00;
  3848   002E04  6BFF               	clrf	255,b	;volatile
  3849   002E06                     
  3850                           ; BSR set to: 62
  3851                           ;./init.h: 45:     ADRESH = 0x00;
  3852   002E06  6BF0               	clrf	240,b	;volatile
  3853   002E08                     
  3854                           ; BSR set to: 62
  3855                           ;./init.h: 46:     ADRESL = 0x00;
  3856   002E08  6BEF               	clrf	239,b	;volatile
  3857   002E0A                     
  3858                           ; BSR set to: 62
  3859                           ;./init.h: 48:     ADPREL = 0x00;
  3860   002E0A  6BF6               	clrf	246,b	;volatile
  3861   002E0C                     
  3862                           ; BSR set to: 62
  3863                           ;./init.h: 49:     ADPREH = 0x00;
  3864   002E0C  6BF7               	clrf	247,b	;volatile
  3865   002E0E                     
  3866                           ; BSR set to: 62
  3867                           ;./init.h: 51:     ADACQL = 0x00;
  3868   002E0E  6BF3               	clrf	243,b	;volatile
  3869   002E10                     
  3870                           ; BSR set to: 62
  3871                           ;./init.h: 52:     ADACQH = 0x00;
  3872   002E10  6BF4               	clrf	244,b	;volatile
  3873   002E12                     
  3874                           ; BSR set to: 62
  3875                           ;./init.h: 54:     ADCON0bits.ON = 1;
  3876   002E12  8FF8               	bsf	248,7,b	;volatile
  3877   002E14                     
  3878                           ; BSR set to: 62
  3879   002E14  0012               	return		;funcret
  3880   002E16                     __end_of_ADC_Init:
  3881                           	callstack 0
  3882                           
  3883                           	psect	rparam
  3884   000001                     ___rparam_used  equ	1
  3885   000000                     ___param_bank   equ	0
  3886   000000                     __Lparam        equ	__Lrparam
  3887   000000                     __Hparam        equ	__Hrparam
  3888                           
  3889                           	psect	config
  3890                           
  3891                           ;Config register CONFIG1L @ 0x300000
  3892                           ;	External Oscillator Selection
  3893                           ;	FEXTOSC = LP, LP (crystal oscillator) optimized for 32.768 kHz; PFM set to low power
  3894                           ;	Reset Oscillator Selection
  3895                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
  3896   300000                     	org	3145728
  3897   300000  F8                 	db	248
  3898                           
  3899                           ;Config register CONFIG1H @ 0x300001
  3900                           ;	Clock out Enable bit
  3901                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  3902                           ;	PRLOCKED One-Way Set Enable bit
  3903                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
  3904                           ;	Clock Switch Enable bit
  3905                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  3906                           ;	Fail-Safe Clock Monitor Enable bit
  3907                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  3908   300001                     	org	3145729
  3909   300001  FF                 	db	255
  3910                           
  3911                           ;Config register CONFIG2L @ 0x300002
  3912                           ;	MCLR Enable bit
  3913                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  3914                           ;	Power-up timer selection bits
  3915                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  3916                           ;	Multi-vector enable bit
  3917                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
  3918                           ;	IVTLOCK bit One-way set enable bit
  3919                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
  3920                           ;	Low Power BOR Enable bit
  3921                           ;	LPBOREN = OFF, ULPBOR disabled
  3922                           ;	Brown-out Reset Enable bits
  3923                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
  3924   300002                     	org	3145730
  3925   300002  FF                 	db	255
  3926                           
  3927                           ;Config register CONFIG2H @ 0x300003
  3928                           ;	Brown-out Reset Voltage Selection bits
  3929                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
  3930                           ;	ZCD Disable bit
  3931                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  3932                           ;	PPSLOCK bit One-Way Set Enable bit
  3933                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
  3934                           ;	Stack Full/Underflow Reset Enable bit
  3935                           ;	STVREN = ON, Stack full/underflow will cause Reset
  3936                           ;	Debugger Enable bit
  3937                           ;	DEBUG = OFF, Background debugger disabled
  3938                           ;	Extended Instruction Set Enable bit
  3939                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  3940   300003                     	org	3145731
  3941   300003  FF                 	db	255
  3942                           
  3943                           ;Config register CONFIG3L @ 0x300004
  3944                           ;	WDT Period selection bits
  3945                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  3946                           ;	WDT operating mode
  3947                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  3948   300004                     	org	3145732
  3949   300004  9F                 	db	159
  3950                           
  3951                           ;Config register CONFIG3H @ 0x300005
  3952                           ;	WDT Window Select bits
  3953                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  3954                           ;	WDT input clock selector
  3955                           ;	WDTCCS = SC, Software Control
  3956   300005                     	org	3145733
  3957   300005  FF                 	db	255
  3958                           
  3959                           ;Config register CONFIG4L @ 0x300006
  3960                           ;	Boot Block Size selection bits
  3961                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  3962                           ;	Boot Block enable bit
  3963                           ;	BBEN = OFF, Boot block disabled
  3964                           ;	Storage Area Flash enable bit
  3965                           ;	SAFEN = OFF, SAF disabled
  3966                           ;	Application Block write protection bit
  3967                           ;	WRTAPP = OFF, Application Block not write protected
  3968   300006                     	org	3145734
  3969   300006  FF                 	db	255
  3970                           
  3971                           ;Config register CONFIG4H @ 0x300007
  3972                           ;	Boot Block Write Protection bit
  3973                           ;	WRTB = OFF, Boot Block not write-protected
  3974                           ;	Configuration Register Write Protection bit
  3975                           ;	WRTC = OFF, Configuration registers not write-protected
  3976                           ;	Data EEPROM Write Protection bit
  3977                           ;	WRTD = OFF, Data EEPROM not write-protected
  3978                           ;	SAF Write protection bit
  3979                           ;	WRTSAF = OFF, SAF not Write Protected
  3980                           ;	Low Voltage Programming Enable bit
  3981                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
  3982   300007                     	org	3145735
  3983   300007  FF                 	db	255
  3984                           
  3985                           ;Config register CONFIG5L @ 0x300008
  3986                           ;	PFM and Data EEPROM Code Protection bit
  3987                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  3988   300008                     	org	3145736
  3989   300008  FF                 	db	255
  3990                           
  3991                           ;Config register CONFIG5H @ 0x300009
  3992                           ;	unspecified, using default values
  3993   300009                     	org	3145737
  3994   300009  FF                 	db	255
  3995                           tosu	equ	0x3FFF
  3996                           tosh	equ	0x3FFE
  3997                           tosl	equ	0x3FFD
  3998                           stkptr	equ	0x3FFC
  3999                           pclatu	equ	0x3FFB
  4000                           pclath	equ	0x3FFA
  4001                           pcl	equ	0x3FF9
  4002                           tblptru	equ	0x3FF8
  4003                           tblptrh	equ	0x3FF7
  4004                           tblptrl	equ	0x3FF6
  4005                           tablat	equ	0x3FF5
  4006                           prodh	equ	0x3FF4
  4007                           prodl	equ	0x3FF3
  4008                           indf0	equ	0x3FEF
  4009                           postinc0	equ	0x3FEE
  4010                           postdec0	equ	0x3FED
  4011                           preinc0	equ	0x3FEC
  4012                           plusw0	equ	0x3FEB
  4013                           fsr0h	equ	0x3FEA
  4014                           fsr0l	equ	0x3FE9
  4015                           wreg	equ	0x3FE8
  4016                           indf1	equ	0x3FE7
  4017                           postinc1	equ	0x3FE6
  4018                           postdec1	equ	0x3FE5
  4019                           preinc1	equ	0x3FE4
  4020                           plusw1	equ	0x3FE3
  4021                           fsr1h	equ	0x3FE2
  4022                           fsr1l	equ	0x3FE1
  4023                           bsr	equ	0x3FE0
  4024                           indf2	equ	0x3FDF
  4025                           postinc2	equ	0x3FDE
  4026                           postdec2	equ	0x3FDD
  4027                           preinc2	equ	0x3FDC
  4028                           plusw2	equ	0x3FDB
  4029                           fsr2h	equ	0x3FDA
  4030                           fsr2l	equ	0x3FD9
  4031                           status	equ	0x3FD8

Data Sizes:
    Strings     18
    Constant    0
    Data        0
    BSS         51
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     46      65
    BANK0           160      0      32
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    f$.$buffer	PTR unsigned char  size(1) Largest target is 10
		 -> data(COMRAM[10]), 

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(1) Largest target is 10
		 -> data(COMRAM[10]), 

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    LCD_String@msg	PTR const unsigned char  size(1) Largest target is 10
		 -> data(COMRAM[10]), 

    LCD_String_xy@msg	PTR const unsigned char  size(1) Largest target is 10
		 -> data(COMRAM[10]), 

    S704$buffer	PTR unsigned char  size(1) Largest target is 10
		 -> data(COMRAM[10]), 

    S704$source	PTR const unsigned char  size(2) Largest target is 0

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 18
		 -> STR_1(CODE[18]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 10
		 -> data(COMRAM[10]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 18
		 -> STR_1(CODE[18]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 18
		 -> STR_1(CODE[18]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 18
		 -> STR_1(CODE[18]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[11]), 


Critical Paths under _main in COMRAM

    _main->_getDifficulty
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_abs
    _abs->___awmod
    _getDifficulty->___flmul
    ___flmul->___xxtofl
    _LCD_String_xy->_LCD_String
    _LCD_String->_LCD_Char
    _LCD_Char->_MSdelay
    _LCD_Init->_LCD_Command
    _LCD_Command->_MSdelay

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    4589
                                             45 COMRAM     1     1      0
                           _ADC_Init
                           _LCD_Init
                      _LCD_String_xy
                      _getDifficulty
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             18    14      4    1760
                                             25 COMRAM    16    12      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             4     1      3    1559
                                             21 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           11     8      3    1434
                                             10 COMRAM    11     8      3
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     230
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (4) _abs                                                  4     2      2      67
                                              6 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4     298
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     302
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _getDifficulty                                        6     6      0    2083
                                             39 COMRAM     6     6      0
                           _ADC_Read
                             ___flge
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     337
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    1468
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     188
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) _ADC_Read                                             4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _LCD_String_xy                                        4     2      2     438
                                              8 COMRAM     4     2      2
                        _LCD_Command
                         _LCD_String
 ---------------------------------------------------------------------------------
 (2) _LCD_String                                           1     0      1     170
                                              7 COMRAM     1     0      1
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (3) _LCD_Char                                             1     1      0     124
                                              6 COMRAM     1     1      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             0     0      0     219
                        _LCD_Command
                            _MSdelay
 ---------------------------------------------------------------------------------
 (2) _LCD_Command                                          1     1      0     124
                                              6 COMRAM     1     1      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (4) _MSdelay                                              6     4      2      95
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _LCD_Init
     _LCD_Command
       _MSdelay
     _MSdelay
   _LCD_String_xy
     _LCD_Command
     _LCD_String
       _LCD_Char
         _MSdelay
   _getDifficulty
     _ADC_Read
     ___flge
     ___flmul
       ___xxtofl (ARG)
     ___xxtofl
   _sprintf
     _vfprintf
       _vfpfcnvrt
         ___awdiv
         ___awmod
         _abs
           ___awmod (ARG)
         _fputc
           _putch

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            8191      0       0      0.0%
BITBIGSFRlh       1205      0       0      0.0%
BITBIGSFRll        576      0       0      0.0%
BITBIGSFRh         263      0       0      0.0%
BITBANK31          256      0       0      0.0%
BANK31             256      0       0      0.0%
BITBANK30          256      0       0      0.0%
BANK30             256      0       0      0.0%
BITBANK29          256      0       0      0.0%
BANK29             256      0       0      0.0%
BITBANK28          256      0       0      0.0%
BANK28             256      0       0      0.0%
BITBANK27          256      0       0      0.0%
BANK27             256      0       0      0.0%
BITBANK26          256      0       0      0.0%
BANK26             256      0       0      0.0%
BITBANK25          256      0       0      0.0%
BANK25             256      0       0      0.0%
BITBANK24          256      0       0      0.0%
BANK24             256      0       0      0.0%
BITBANK23          256      0       0      0.0%
BANK23             256      0       0      0.0%
BITBANK22          256      0       0      0.0%
BANK22             256      0       0      0.0%
BITBANK21          256      0       0      0.0%
BANK21             256      0       0      0.0%
BITBANK20          256      0       0      0.0%
BANK20             256      0       0      0.0%
BITBANK19          256      0       0      0.0%
BANK19             256      0       0      0.0%
BITBANK18          256      0       0      0.0%
BANK18             256      0       0      0.0%
BITBANK17          256      0       0      0.0%
BANK17             256      0       0      0.0%
BITBANK16          256      0       0      0.0%
BANK16             256      0       0      0.0%
BITBANK15          256      0       0      0.0%
BANK15             256      0       0      0.0%
BITBANK14          256      0       0      0.0%
BANK14             256      0       0      0.0%
BITBANK13          256      0       0      0.0%
BANK13             256      0       0      0.0%
BITBANK12          256      0       0      0.0%
BANK12             256      0       0      0.0%
BITBANK11          256      0       0      0.0%
BANK11             256      0       0      0.0%
BITBANK10          256      0       0      0.0%
BANK10             256      0       0      0.0%
BITBANK9           256      0       0      0.0%
BANK9              256      0       0      0.0%
BITBANK8           256      0       0      0.0%
BANK8              256      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK0           160      0       0      0.0%
BANK0              160      0      32     20.0%
BITCOMRAM           95      0       0      0.0%
COMRAM              95     46      65     68.4%
STACK                0      0       0      0.0%
DATA                 0      0      97      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Sun May 04 17:40:24 2025

           ?_LCD_Command 0001                       l45 2E14                       l54 2E76  
                     l63 2DC2                       l48 2DEC                       l57 2E58  
                     l82 2D98                       l76 2C8C                       l68 2D04  
                     l86 29C6                       l79 2D72             ___awdiv@sign 0006  
            ?_LCD_String 0008                      l343 2A88                      l356 2B36  
                    l382 28C8                      l377 2882                      l730 245C  
                    l733 22F2                      l734 2310                      l726 20D8  
                    l743 241E                      l735 2368                      l736 2356  
                    l841 2D6C                      l770 27C4                      l834 2CC8  
                    l828 2610                      l781 275C                      l853 2BE2  
                    l774 2700                      l838 2D54                      l790 2D38  
                    l767 2668                      l864 2E78                      u800 2A78  
                    u801 2A74                      u730 2C72                      u810 2A9A  
                    u731 2C6E                      u811 2A96                      u740 2C8C  
                    u820 2AB4                      u900 2BB0                      u741 2C88  
                    u821 2AB0                      u901 2BAC                      u750 29D8  
                    u830 2ACE                      u910 2D48                      u751 29D4  
                    u831 2ACA                      u911 2D44                      u760 29F2  
                    u840 2AEC                      u920 247E                      u761 29EE  
                    u841 2AE8                      u921 247A                      u770 2A18  
                    u850 2B02                      u930 24BA                      u771 2A14  
                    u851 2AFE                      u931 24B6                      u780 2A36  
                    u860 2B26                      u940 24D4                      u781 2A32  
                    u861 2B22                      u941 24D0                      u790 2A52  
                    u870 2B48                      u950 250E                      u791 2A4E  
                    u871 2B44                      u951 2508                      u880 2B58  
                    u960 2510                      u881 2B54                      u890 2B7E  
                    u970 2570                      u891 2B7A                      u971 256C  
                    u980 2580                      u981 257C                      u990 2590  
                    u991 258C                      _abs 2D3A             ___awmod@sign 0006  
                    wreg 3FE8             ___flmul@aexp 0020             ___flmul@bexp 0021  
           ___flmul@sign 001B             ___flmul@temp 0026             ___flmul@prod 0022  
            LCD_Char@dat 0007                     ?_abs 0007                     l1400 2C72  
                   l1402 2C76                     l1410 29E0                     l1420 2A06  
                   l1412 29E4                     l1404 29C8                     l1500 2D48  
                   l1510 2E4A                     l1502 2E3E                     l1430 2A3C  
                   l1422 2A18                     l1414 29F2                     l1406 29CA  
                   l1280 2DFC                     l1512 2E4C                     l1504 2E44  
                   l1600 2050                     l1432 2A52                     l1424 2A20  
                   l1440 2A68                     l1416 29FA                     l1408 29D8  
                   l1520 2492                     l1290 2E0A                     l1282 2E00  
                   l1274 2DEE                     l1506 2E46                     l1610 2082  
                   l1602 2060                     l1442 2A78                     l1434 2A5A  
                   l1426 2A28                     l1418 29FE                     l1450 2A8C  
                   l1530 24F0                     l1522 2496                     l1514 245E  
                   l1292 2E0C                     l1284 2E04                     l1276 2DF8  
                   l1508 2E48                     l1700 2408                     l1620 20C2  
                   l1612 2090                     l1604 2066                     l1444 2A80  
                   l1436 2A5C                     l1428 2A36                     l1460 2ABC  
                   l1452 2A9A                     l1540 2570                     l1532 24FA  
                   l1524 24A0                     l1516 247E                     l1294 2E0E  
                   l1286 2E06                     l1278 2DFA                     l1390 2C50  
                   l1710 2442                     l1702 2418                     l1630 210C  
                   l1622 20C8                     l1614 2092                     l1606 2076  
                   l1438 2A62                     l1470 2B02                     l1462 2ACE  
                   l1454 2AA2                     l1550 25CC                     l1542 2580  
                   l1534 2512                     l1526 24BA                     l1518 2486  
                   l1296 2E10                     l1288 2E08                     l1800 2DD2  
                   l1720 27F4                     l1704 2422                     l1712 2448  
                   l1640 2168                     l1632 211C                     l1624 20E8  
                   l1616 20A2                     l1608 207C                     l1480 2B2E  
                   l1472 2B0A                     l1464 2AD6                     l1456 2AA6  
                   l1448 2A8A                     l1544 2590                     l1552 25CE  
                   l1536 2542                     l1528 24D4                     l1298 2E12  
                   l1570 2E66                     l1810 2CEE                     l1802 2CCC  
                   l1730 2862                     l1722 2804                     l1714 244C  
                   l1706 2432                     l1650 21AE                     l1642 2174  
                   l1634 2126                     l1626 20F8                     l1618 20B2  
                   l1474 2B10                     l1466 2ADE                     l1458 2AB4  
                   l1490 2B62                     l1546 25A0                     l1538 255E  
                   l1554 25E4                     l1396 2C58                     l1388 2C44  
                   l1572 2E68                     l1564 2E5C                     l1580 2DAA  
                   l1812 2CF6                     l1804 2CCC                     l1732 2870  
                   l1724 2832                     l1708 2440                     l1660 221C  
                   l1652 21BE                     l1644 2180                     l1636 2140  
                   l1740 2614                     l1820 291C                     l1468 2AEC  
                   l1476 2B16                     l1492 2B7E                     l1484 2B38  
                   l1548 25B2                     l1398 2C5C                     l1574 2E6A  
                   l1566 2E62                     l1582 2DAC                     l1814 2CFC  
                   l1806 2CDC                     l1734 28C0                     l1726 2842  
                   l1718 27C6                     l1670 22BA                     l1662 222C  
                   l1654 21CE                     l1646 218E                     l1638 214C  
                   l1590 2014                     l1742 2624                     l1830 2986  
                   l1822 294E                     l1478 2B26                     l1494 2BB0  
                   l1486 2B48                     l1558 25F0                     l1568 2E64  
                   l1576 2D9A                     l1808 2CE4                     l1584 2D6E  
                   l1736 28C6                     l1728 2850                     l1680 2320  
                   l1672 22D8                     l1664 224C                     l1656 21EC  
                   l1648 219E                     l1592 2020                     l1760 26EA  
                   l1752 26A2                     l1744 2632                     l1816 28CA  
                   l1488 2B58                     l1578 2D9E                     l1586 2D80  
                   l1690 2392                     l1682 234E                     l1674 22E2  
                   l1666 2276                     l1658 21FC                     l1594 202E  
                   l1770 276A                     l1762 26F6                     l1754 26AA  
                   l1746 2678                     l1818 28D6                     l1498 2D3A  
                   l1850 2D0E                     l1692 23BC                     l1676 22F0  
                   l1668 22AC                     l1596 2030                     l1780 27B2  
                   l1772 276C                     l1764 2732                     l1756 26B6  
                   l1748 268E                     l1844 29C4                     l1836 298C  
                   l1828 2954                     l1852 2D16                     l1686 2378  
                   l1694 23C0                     l1678 2302                     l1598 2040  
                   l1782 27B4                     l1774 2770                     l1766 273E  
                   l1758 26E8                     l1838 29BE                     l1790 2CA6  
                   l1854 2D1E                     l1870 2C04                     l1862 2BE4  
                   l1696 23DA                     l1688 2384                     l1776 2794  
                   l1768 274C                     l1792 2CC0                     l1856 2D2E  
                   l1848 2D06                     l1880 2C3C                     l1872 2C12  
                   l1864 2BE8                     l1698 23EE                     l1778 27A4  
                   l1786 2C8E                     l1866 2BEC                     l1796 2DC4  
                   l1788 2C96                     l1876 2C26                     l1868 2BF2  
                   l1798 2DD0                     STR_1 2001                     u1000 25A0  
                   u1001 259C                     u1010 25E0                     u1011 25DC  
                   u1020 2DC2                     u1100 20E8                     u1021 2DBE  
                   u1101 20E4                     u1030 2D80                     u1110 20F8  
                   u1031 2D7C                     u1111 20F4                     u1200 23DA  
                   u1120 2296                     u1040 202E                     u1201 23D6  
                   u1041 202A                     u1210 2408                     u1130 22F0  
                   u1050 2040                     u1211 2404                     u1131 22EC  
                   u1051 203C                     u1220 2440                     u1140 2310  
                   u1060 2050                     u1300 268E                     u1221 243C  
                   u1141 230C                     u1125 228C                     u1061 204C  
                   u1301 268A                     u1230 27F4                     u1150 2320  
                   u1070 2090                     u1310 26E4                     u1231 27F0  
                   u1151 231C                     u1071 208C                     u1311 26E0  
                   u1240 2832                     u1160 234E                     u1080 20A2  
                   u1320 272E                     u1400 294E                     u1241 282E  
                   u1161 234A                     u1081 209E                     u1321 272A  
                   u1401 294A                     u1250 2850                     u1170 2364  
                   u1090 20B2                     u1330 274C                     u1410 2986  
                   u1251 284C                     u1171 2360                     u1091 20AE  
                   u1331 2748                     u1411 2982                     u1260 2870  
                   u1180 2378                     u1340 275C                     u1420 29BE  
                   u1261 286C                     u1181 2374                     u1341 2758  
                   u1421 29BA                     u1270 28C0                     u1190 2392  
                   u1350 276A                     u1430 2C22                     _LATB 3FBB  
                   u1271 28BC                     u1191 238E                     u1351 2766  
                   u1431 2C1E                     u1360 27A4                     u1280 2624  
                   u1440 2C38                     u1361 27A0                     u1281 2620  
                   u1441 2C34                     u1370 27B2                     u1290 2632  
                   u1371 27AE                     u1291 262E                     u1380 2CC0  
                   u1381 2CBC                     u1390 2CDC                     u1391 2CD8  
                   abs@a 0007                     _data 0038                     _dbuf 0060  
                   _main 2BE4                     _prec 0035                     fsr1h 3FE2  
                   fsr2h 3FDA                     indf2 3FDF                     fsr1l 3FE1  
                   fsr2l 3FD9         __end_of_ADC_Init 2E16         __end_of_ADC_Read 2D9A  
                   prodh 3FF4                     prodl 3FF3                     start FFFC  
        __end_of_MSdelay 2C8E            _LCD_String_xy 2CCA             ___param_bank 0000  
                  ??_abs 0009         __end_of_LCD_Char 2E5A         __end_of_LCD_Init 2DEE  
                  ?_main 0001                    _ADCLK 3EFF                    _ADPCH 3EF1  
        __end_of___awdiv 2A8A          __end_of___awmod 2B38          __end_of___flmul 245E  
        ___awdiv@divisor 0003          ___awdiv@counter 0005             vfpfcnvrt@fmt 000C  
                  _TRISB 3FC3                    _TRISD 3FC5                    _flags 0037  
                  _fputc 2B38                    _width 0033                    _putch 2E78  
                  tablat 3FF5                    status 3FD8          __end_of_sprintf 2D3A  
         ?_LCD_String_xy 0009          __initialization 2E16             __end_of_main 2C44  
                 ??_main 002E            __activetblptr 0001                   _ADACQH 3EF4  
                 _ADACQL 3EF3                   ?_fputc 0001                   _ADRESH 3EF0  
                 _ADRESL 3EEF                   _ADPREH 3EF7                   _ADPREL 3EF6  
       ___awdiv@dividend 0001                   ?_putch 0001         LCD_String_xy@msg 000A  
       LCD_String_xy@pos 0009         LCD_String_xy@row 000B                ??_MSdelay 0003  
          vfpfcnvrt@done 000F         __end_of___xxtofl 27C6             vfprintf@cfmt 0019  
                 ___flge 27C6                ??___awdiv 0005    __end_of_getDifficulty 29C8  
              ??___awmod 0005                ??___flmul 0017                   clear_0 2E1C  
                 clear_1 2E28         ___awdiv@quotient 0007          ___awmod@divisor 0003  
                 isa$std 0001          ___awmod@counter 0005                   fputc@c 0001  
              ?_ADC_Init 0001                ?_ADC_Read 0001             __mediumconst 2000  
                 tblptrh 3FF7                   tblptrl 3FF6                   tblptru 3FF8  
                 putch@c 0001         __end_of_vfprintf 2CCA                ??_sprintf 001E  
             ___flge@ff1 0001               ___flge@ff2 0005             ___xxtofl@arg 000B  
           ___xxtofl@exp 000A             ___xxtofl@val 0001                ?_LCD_Char 0001  
             __accesstop 0060  __end_of__initialization 2E2E                ?_LCD_Init 0001  
        ??_LCD_String_xy 000B            ___rparam_used 0001           __pcstackCOMRAM 0001  
          __end_of_fputc 2BE4            __end_of_putch 2E7A             ??_LCD_String 0009  
             ??_ADC_Init 0001               ??_ADC_Read 0003           main@difficulty 002E  
                ??_fputc 0004                  ??_putch 0001               __pbssBANK0 0060  
             ??_LCD_Char 0007               ??_LCD_Init 0008       __end_of_LCD_String 2DC4  
                ?___flge 0001                ?___xxtofl 0001                  _MSdelay 2C44  
          LCD_String@msg 0008                  __Hparam 0000                  __Lparam 0000  
                ___awdiv 29C8                  ___awmod 2A8A                  ___flmul 2014  
              ?_vfprintf 0016             __psmallconst 2000                  __pcinit 2E16  
                __ramtop 2000                  __ptext0 2BE4                  __ptext1 2D06  
                __ptext2 2C8E                  __ptext3 245E                  __ptext4 2B38  
                __ptext5 2E78                  __ptext6 2D3A                  __ptext7 2A8A  
                __ptext8 29C8                  __ptext9 28CA               ??___xxtofl 0005  
       ___awmod@dividend 0001                  _sprintf 2D06     end_of_initialization 2E2E  
                fputc@fp 0003           LCD_Command@cmd 0007        __end_of_vfpfcnvrt 2612  
                postdec2 3FDD                  postinc0 3FEE                  postinc1 3FE6  
                postinc2 3FDE         vfpfcnvrt@convarg 0011               ??_vfprintf 0019  
          ___xxtofl@sign 0009                _TRISAbits 3FC2              ___flmul@grs 001C  
          ??_LCD_Command 0007           __end_of___flge 28CA              vfpfcnvrt@ap 000D  
            vfpfcnvrt@cp 0010              vfpfcnvrt@fp 000B      start_initialization 2E16  
            __end_of_abs 2D6E    __end_of_LCD_String_xy 2D06              vfprintf@fmt 0017  
               ??___flge 0009      __end_of_LCD_Command 2E78                ___flmul@a 0013  
              ___flmul@b 000F              __pbssCOMRAM 002F                 ?_MSdelay 0001  
               ?___awdiv 0001                 ?___awmod 0001                 ?___flmul 000F  
          _getDifficulty 28CA              __smallconst 2000                 _ADC_Init 2DEE  
               _ADC_Read 2D6E    LCD_String_xy@location 000C                 ?_sprintf 001A  
               MSdelay@i 0003                 MSdelay@j 0005                 _LCD_Char 2E3C  
               _LCD_Init 2DC4                 _LATDbits 3FBD           ?_getDifficulty 0001  
              _lux_value 002F              _LCD_Command 2E5A                _vfpfcnvrt 245E  
             _ADCON0bits 3EF8               vfpfcnvrt@c 0015                 __Hrparam 0000  
             vfprintf@ap 0018                 __Lrparam 0000               vfprintf@fp 0016  
           __Lsmallconst 2000               ?_vfpfcnvrt 000B               _ANSELAbits 3A40  
             sprintf@fmt 001B                 ___xxtofl 2612                 __ptext10 2612  
               __ptext11 2014                 __ptext20 2DEE                 __ptext12 27C6  
               __ptext13 2D6E                 __ptext14 2CCA                 __ptext15 2D9A  
               __ptext16 2E3C                 __ptext17 2DC4                 __ptext18 2E5A  
               __ptext19 2C44               MSdelay@val 0001          ??_getDifficulty 0028  
               isa$xinst 0000                 _vfprintf 2C8E               _LCD_String 2D9A  
              sprintf@ap 001E              ??_vfpfcnvrt 000E     getDifficulty@digital 0028  
               sprintf@f 001F                 sprintf@s 001A     getDifficulty@voltage 002A  
