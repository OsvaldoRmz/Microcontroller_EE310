

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
<<<<<<< HEAD
                                                                                               Thu Apr 17 15:01:13 2025
=======
                                                                                               Wed Apr 16 01:50:36 2025
>>>>>>> 16a26dc850c114406dd9f218296dc05fea644037

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	18F47K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
<<<<<<< HEAD
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text7,global,reloc=4,class=CODE,space=0,delta=1
    16                           	psect	ivt0x4008,global,reloc=2,class=CODE,space=0,delta=1,noexec,keep,optim=
=======
     5                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    10                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    11                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	text7,global,reloc=4,class=CODE,space=0,delta=1
    15                           	psect	ivt0x4008,global,reloc=2,class=CODE,space=0,delta=1,noexec,keep,optim=
    16                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
>>>>>>> 16a26dc850c114406dd9f218296dc05fea644037
    17                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    18                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    20   000000                     
<<<<<<< HEAD
    21                           ; Generated 12/10/2023 GMT
    22                           ; 
    23                           ; Copyright © 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
=======
    21                           ; Generated 13/12/2024 GMT
    22                           ; 
    23                           ; Copyright © 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
>>>>>>> 16a26dc850c114406dd9f218296dc05fea644037
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution. Publication is not required when
    37                           ;        this file is used in an embedded application.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC18F47K42 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55   003FE0                     bsr             equ	16352
    56   003FE9                     fsr0            equ	16361
    57   003FEA                     fsr0h           equ	16362
    58   003FE9                     fsr0l           equ	16361
    59   003FE1                     fsr1            equ	16353
    60   003FE2                     fsr1h           equ	16354
    61   003FE1                     fsr1l           equ	16353
    62   003FD9                     fsr2            equ	16345
    63   003FDA                     fsr2h           equ	16346
    64   003FD9                     fsr2l           equ	16345
    65   003FEF                     indf0           equ	16367
    66   003FE7                     indf1           equ	16359
    67   003FDF                     indf2           equ	16351
    68   003FD2                     intcon          equ	16338
    69   0039E5                     nvmcon          equ	14821
    70   003FF9                     pcl             equ	16377
    71   003FFA                     pclath          equ	16378
    72   003FFB                     pclatu          equ	16379
    73   003FEB                     plusw0          equ	16363
    74   003FE3                     plusw1          equ	16355
    75   003FDB                     plusw2          equ	16347
    76   003FED                     postdec0        equ	16365
    77   003FE5                     postdec1        equ	16357
    78   003FDD                     postdec2        equ	16349
    79   003FEE                     postinc0        equ	16366
    80   003FE6                     postinc1        equ	16358
    81   003FDE                     postinc2        equ	16350
    82   003FEC                     preinc0         equ	16364
    83   003FE4                     preinc1         equ	16356
    84   003FDC                     preinc2         equ	16348
    85   003FF3                     prod            equ	16371
    86   003FF4                     prodh           equ	16372
    87   003FF3                     prodl           equ	16371
    88   003FD8                     status          equ	16344
    89   003FF5                     tablat          equ	16373
    90   003FF6                     tblptr          equ	16374
    91   003FF7                     tblptrh         equ	16375
    92   003FF6                     tblptrl         equ	16374
    93   003FF8                     tblptru         equ	16376
    94   003FFD                     tosl            equ	16381
    95   003FE8                     wreg            equ	16360
    96   003880                     STATUS_CSHAD    equ	14464	;# 
    97   003881                     WREG_CSHAD      equ	14465	;# 
    98   003882                     BSR_CSHAD       equ	14466	;# 
    99   003883                     SHADCON         equ	14467	;# 
   100   003884                     STATUS_SHAD     equ	14468	;# 
   101   003885                     WREG_SHAD       equ	14469	;# 
   102   003886                     BSR_SHAD        equ	14470	;# 
   103   003887                     PCLATH_SHAD     equ	14471	;# 
   104   003888                     PCLATU_SHAD     equ	14472	;# 
   105   003889                     FSR0SH          equ	14473	;# 
   106   003889                     FSR0L_SHAD      equ	14473	;# 
   107   00388A                     FSR0H_SHAD      equ	14474	;# 
   108   00388B                     FSR1SH          equ	14475	;# 
   109   00388B                     FSR1L_SHAD      equ	14475	;# 
   110   00388C                     FSR1H_SHAD      equ	14476	;# 
   111   00388D                     FSR2SH          equ	14477	;# 
   112   00388D                     FSR2L_SHAD      equ	14477	;# 
   113   00388E                     FSR2H_SHAD      equ	14478	;# 
   114   00388F                     PRODSH          equ	14479	;# 
   115   00388F                     PRODL_SHAD      equ	14479	;# 
   116   003890                     PRODH_SHAD      equ	14480	;# 
   117   00389D                     IVTADL          equ	14493	;# 
   118   00389E                     IVTADH          equ	14494	;# 
   119   00389F                     IVTADU          equ	14495	;# 
   120   00395B                     WDTCON0         equ	14683	;# 
   121   00395C                     WDTCON1         equ	14684	;# 
   122   00395D                     WDTPSL          equ	14685	;# 
   123   00395E                     WDTPSH          equ	14686	;# 
   124   00395F                     WDTTMR          equ	14687	;# 
   125   003960                     CRCDATA         equ	14688	;# 
   126   003960                     CRCDATL         equ	14688	;# 
   127   003961                     CRCDATH         equ	14689	;# 
   128   003962                     CRCACC          equ	14690	;# 
   129   003962                     CRCACCL         equ	14690	;# 
   130   003963                     CRCACCH         equ	14691	;# 
   131   003964                     CRCSHFT         equ	14692	;# 
   132   003964                     CRCSHIFTL       equ	14692	;# 
   133   003965                     CRCSHIFTH       equ	14693	;# 
   134   003966                     CRCXOR          equ	14694	;# 
   135   003966                     CRCXORL         equ	14694	;# 
   136   003967                     CRCXORH         equ	14695	;# 
   137   003968                     CRCCON0         equ	14696	;# 
   138   003969                     CRCCON1         equ	14697	;# 
   139   003976                     SCANLADR        equ	14710	;# 
   140   003976                     SCANLADRL       equ	14710	;# 
   141   003977                     SCANLADRH       equ	14711	;# 
   142   003978                     SCANLADRU       equ	14712	;# 
   143   003979                     SCANHADR        equ	14713	;# 
   144   003979                     SCANHADRL       equ	14713	;# 
   145   00397A                     SCANHADRH       equ	14714	;# 
   146   00397B                     SCANHADRU       equ	14715	;# 
   147   00397C                     SCANCON0        equ	14716	;# 
   148   00397D                     SCANTRIG        equ	14717	;# 
   149   003980                     IPR0            equ	14720	;# 
   150   003981                     IPR1            equ	14721	;# 
   151   003982                     IPR2            equ	14722	;# 
   152   003983                     IPR3            equ	14723	;# 
   153   003984                     IPR4            equ	14724	;# 
   154   003985                     IPR5            equ	14725	;# 
   155   003986                     IPR6            equ	14726	;# 
   156   003987                     IPR7            equ	14727	;# 
   157   003988                     IPR8            equ	14728	;# 
   158   003989                     IPR9            equ	14729	;# 
   159   00398A                     IPR10           equ	14730	;# 
   160   003990                     PIE0            equ	14736	;# 
   161   003991                     PIE1            equ	14737	;# 
   162   003992                     PIE2            equ	14738	;# 
   163   003993                     PIE3            equ	14739	;# 
   164   003994                     PIE4            equ	14740	;# 
   165   003995                     PIE5            equ	14741	;# 
   166   003996                     PIE6            equ	14742	;# 
   167   003997                     PIE7            equ	14743	;# 
   168   003998                     PIE8            equ	14744	;# 
   169   003999                     PIE9            equ	14745	;# 
   170   00399A                     PIE10           equ	14746	;# 
   171   0039A0                     PIR0            equ	14752	;# 
   172   0039A1                     PIR1            equ	14753	;# 
   173   0039A2                     PIR2            equ	14754	;# 
   174   0039A3                     PIR3            equ	14755	;# 
   175   0039A4                     PIR4            equ	14756	;# 
   176   0039A5                     PIR5            equ	14757	;# 
   177   0039A6                     PIR6            equ	14758	;# 
   178   0039A7                     PIR7            equ	14759	;# 
   179   0039A8                     PIR8            equ	14760	;# 
   180   0039A9                     PIR9            equ	14761	;# 
   181   0039AA                     PIR10           equ	14762	;# 
   182   0039C0                     PMD0            equ	14784	;# 
   183   0039C1                     PMD1            equ	14785	;# 
   184   0039C2                     PMD2            equ	14786	;# 
   185   0039C3                     PMD3            equ	14787	;# 
   186   0039C4                     PMD4            equ	14788	;# 
   187   0039C5                     PMD5            equ	14789	;# 
   188   0039C6                     PMD6            equ	14790	;# 
   189   0039C7                     PMD7            equ	14791	;# 
   190   0039D0                     BORCON          equ	14800	;# 
   191   0039D1                     VREGCON         equ	14801	;# 
   192   0039D8                     CPUDOZE         equ	14808	;# 
   193   0039D9                     OSCCON1         equ	14809	;# 
   194   0039DA                     OSCCON2         equ	14810	;# 
   195   0039DB                     OSCCON3         equ	14811	;# 
   196   0039DC                     OSCSTAT         equ	14812	;# 
   197   0039DC                     OSCSTAT1        equ	14812	;# 
   198   0039DD                     OSCEN           equ	14813	;# 
   199   0039DE                     OSCTUNE         equ	14814	;# 
   200   0039DF                     OSCFRQ          equ	14815	;# 
   201   0039E0                     NVMADRL         equ	14816	;# 
   202   0039E1                     NVMADRH         equ	14817	;# 
   203   0039E3                     NVMDAT          equ	14819	;# 
   204   0039E5                     NVMCON1         equ	14821	;# 
   205   0039E6                     NVMCON2         equ	14822	;# 
   206   0039EF                     PRLOCK          equ	14831	;# 
   207   0039F1                     ISRPR           equ	14833	;# 
   208   0039F2                     MAINPR          equ	14834	;# 
   209   0039F3                     DMA1PR          equ	14835	;# 
   210   0039F4                     DMA2PR          equ	14836	;# 
   211   0039F7                     SCANPR          equ	14839	;# 
   212   003A00                     RA0PPS          equ	14848	;# 
   213   003A01                     RA1PPS          equ	14849	;# 
   214   003A02                     RA2PPS          equ	14850	;# 
   215   003A03                     RA3PPS          equ	14851	;# 
   216   003A04                     RA4PPS          equ	14852	;# 
   217   003A05                     RA5PPS          equ	14853	;# 
   218   003A06                     RA6PPS          equ	14854	;# 
   219   003A07                     RA7PPS          equ	14855	;# 
   220   003A08                     RB0PPS          equ	14856	;# 
   221   003A09                     RB1PPS          equ	14857	;# 
   222   003A0A                     RB2PPS          equ	14858	;# 
   223   003A0B                     RB3PPS          equ	14859	;# 
   224   003A0C                     RB4PPS          equ	14860	;# 
   225   003A0D                     RB5PPS          equ	14861	;# 
   226   003A0E                     RB6PPS          equ	14862	;# 
   227   003A0F                     RB7PPS          equ	14863	;# 
   228   003A10                     RC0PPS          equ	14864	;# 
   229   003A11                     RC1PPS          equ	14865	;# 
   230   003A12                     RC2PPS          equ	14866	;# 
   231   003A13                     RC3PPS          equ	14867	;# 
   232   003A14                     RC4PPS          equ	14868	;# 
   233   003A15                     RC5PPS          equ	14869	;# 
   234   003A16                     RC6PPS          equ	14870	;# 
   235   003A17                     RC7PPS          equ	14871	;# 
   236   003A18                     RD0PPS          equ	14872	;# 
   237   003A19                     RD1PPS          equ	14873	;# 
   238   003A1A                     RD2PPS          equ	14874	;# 
   239   003A1B                     RD3PPS          equ	14875	;# 
   240   003A1C                     RD4PPS          equ	14876	;# 
   241   003A1D                     RD5PPS          equ	14877	;# 
   242   003A1E                     RD6PPS          equ	14878	;# 
   243   003A1F                     RD7PPS          equ	14879	;# 
   244   003A20                     RE0PPS          equ	14880	;# 
   245   003A21                     RE1PPS          equ	14881	;# 
   246   003A22                     RE2PPS          equ	14882	;# 
   247   003A40                     ANSELA          equ	14912	;# 
   248   003A41                     WPUA            equ	14913	;# 
   249   003A42                     ODCONA          equ	14914	;# 
   250   003A43                     SLRCONA         equ	14915	;# 
   251   003A44                     INLVLA          equ	14916	;# 
   252   003A45                     IOCAP           equ	14917	;# 
   253   003A46                     IOCAN           equ	14918	;# 
   254   003A47                     IOCAF           equ	14919	;# 
   255   003A50                     ANSELB          equ	14928	;# 
   256   003A51                     WPUB            equ	14929	;# 
   257   003A52                     ODCONB          equ	14930	;# 
   258   003A53                     SLRCONB         equ	14931	;# 
   259   003A54                     INLVLB          equ	14932	;# 
   260   003A55                     IOCBP           equ	14933	;# 
   261   003A56                     IOCBN           equ	14934	;# 
   262   003A57                     IOCBF           equ	14935	;# 
   263   003A5A                     RB1I2C          equ	14938	;# 
   264   003A5B                     RB2I2C          equ	14939	;# 
   265   003A60                     ANSELC          equ	14944	;# 
   266   003A61                     WPUC            equ	14945	;# 
   267   003A62                     ODCONC          equ	14946	;# 
   268   003A63                     SLRCONC         equ	14947	;# 
   269   003A64                     INLVLC          equ	14948	;# 
   270   003A65                     IOCCP           equ	14949	;# 
   271   003A66                     IOCCN           equ	14950	;# 
   272   003A67                     IOCCF           equ	14951	;# 
   273   003A6A                     RC3I2C          equ	14954	;# 
   274   003A6B                     RC4I2C          equ	14955	;# 
   275   003A70                     ANSELD          equ	14960	;# 
   276   003A71                     WPUD            equ	14961	;# 
   277   003A72                     ODCOND          equ	14962	;# 
   278   003A73                     SLRCOND         equ	14963	;# 
   279   003A74                     INLVLD          equ	14964	;# 
   280   003A7A                     RD0I2C          equ	14970	;# 
   281   003A7B                     RD1I2C          equ	14971	;# 
   282   003A80                     ANSELE          equ	14976	;# 
   283   003A81                     WPUE            equ	14977	;# 
   284   003A82                     ODCONE          equ	14978	;# 
   285   003A83                     SLRCONE         equ	14979	;# 
   286   003A84                     INLVLE          equ	14980	;# 
   287   003A85                     IOCEP           equ	14981	;# 
   288   003A86                     IOCEN           equ	14982	;# 
   289   003A87                     IOCEF           equ	14983	;# 
   290   003ABF                     PPSLOCK         equ	15039	;# 
   291   003AC0                     INT0PPS         equ	15040	;# 
   292   003AC1                     INT1PPS         equ	15041	;# 
   293   003AC2                     INT2PPS         equ	15042	;# 
   294   003AC3                     T0CKIPPS        equ	15043	;# 
   295   003AC4                     T1CKIPPS        equ	15044	;# 
   296   003AC5                     T1GPPS          equ	15045	;# 
   297   003AC6                     T3CKIPPS        equ	15046	;# 
   298   003AC7                     T3GPPS          equ	15047	;# 
   299   003AC8                     T5CKIPPS        equ	15048	;# 
   300   003AC9                     T5GPPS          equ	15049	;# 
   301   003ACA                     T2INPPS         equ	15050	;# 
   302   003ACB                     T4INPPS         equ	15051	;# 
   303   003ACC                     T6INPPS         equ	15052	;# 
   304   003ACD                     CCP1PPS         equ	15053	;# 
   305   003ACE                     CCP2PPS         equ	15054	;# 
   306   003ACF                     CCP3PPS         equ	15055	;# 
   307   003AD0                     CCP4PPS         equ	15056	;# 
   308   003AD1                     SMT1WINPPS      equ	15057	;# 
   309   003AD2                     SMT1SIGPPS      equ	15058	;# 
   310   003AD3                     CWG1INPPS       equ	15059	;# 
   311   003AD4                     CWG2INPPS       equ	15060	;# 
   312   003AD5                     CWG3INPPS       equ	15061	;# 
   313   003AD6                     MD1CARLPPS      equ	15062	;# 
   314   003AD7                     MD1CARHPPS      equ	15063	;# 
   315   003AD8                     MD1SRCPPS       equ	15064	;# 
   316   003AD9                     CLCIN0PPS       equ	15065	;# 
   317   003ADA                     CLCIN1PPS       equ	15066	;# 
   318   003ADB                     CLCIN2PPS       equ	15067	;# 
   319   003ADC                     CLCIN3PPS       equ	15068	;# 
   320   003ADD                     ADACTPPS        equ	15069	;# 
   321   003ADE                     SPI1SCKPPS      equ	15070	;# 
   322   003ADF                     SPI1SDIPPS      equ	15071	;# 
   323   003AE0                     SPI1SSPPS       equ	15072	;# 
   324   003AE1                     I2C1SCLPPS      equ	15073	;# 
   325   003AE2                     I2C1SDAPPS      equ	15074	;# 
   326   003AE3                     I2C2SCLPPS      equ	15075	;# 
   327   003AE4                     I2C2SDAPPS      equ	15076	;# 
   328   003AE5                     U1RXPPS         equ	15077	;# 
   329   003AE6                     U1CTSPPS        equ	15078	;# 
   330   003AE8                     U2RXPPS         equ	15080	;# 
   331   003AE9                     U2CTSPPS        equ	15081	;# 
   332   003BC9                     DMA2BUF         equ	15305	;# 
   333   003BCA                     DMA2DCNT        equ	15306	;# 
   334   003BCA                     DMA2DCNTL       equ	15306	;# 
   335   003BCB                     DMA2DCNTH       equ	15307	;# 
   336   003BCC                     DMA2DPTR        equ	15308	;# 
   337   003BCC                     DMA2DPTRL       equ	15308	;# 
   338   003BCD                     DMA2DPTRH       equ	15309	;# 
   339   003BCE                     DMA2DSZ         equ	15310	;# 
   340   003BCE                     DMA2DSZL        equ	15310	;# 
   341   003BCF                     DMA2DSZH        equ	15311	;# 
   342   003BD0                     DMA2DSA         equ	15312	;# 
   343   003BD0                     DMA2DSAL        equ	15312	;# 
   344   003BD1                     DMA2DSAH        equ	15313	;# 
   345   003BD2                     DMA2SCNT        equ	15314	;# 
   346   003BD2                     DMA2SCNTL       equ	15314	;# 
   347   003BD3                     DMA2SCNTH       equ	15315	;# 
   348   003BD4                     DMA2SPTR        equ	15316	;# 
   349   003BD4                     DMA2SPTRL       equ	15316	;# 
   350   003BD5                     DMA2SPTRH       equ	15317	;# 
   351   003BD6                     DMA2SPTRU       equ	15318	;# 
   352   003BD7                     DMA2SSZ         equ	15319	;# 
   353   003BD7                     DMA2SSZL        equ	15319	;# 
   354   003BD8                     DMA2SSZH        equ	15320	;# 
   355   003BD9                     DMA2SSA         equ	15321	;# 
   356   003BD9                     DMA2SSAL        equ	15321	;# 
   357   003BDA                     DMA2SSAH        equ	15322	;# 
   358   003BDB                     DMA2SSAU        equ	15323	;# 
   359   003BDC                     DMA2CON0        equ	15324	;# 
   360   003BDD                     DMA2CON1        equ	15325	;# 
   361   003BDE                     DMA2AIRQ        equ	15326	;# 
   362   003BDF                     DMA2SIRQ        equ	15327	;# 
   363   003BE9                     DMA1BUF         equ	15337	;# 
   364   003BEA                     DMA1DCNT        equ	15338	;# 
   365   003BEA                     DMA1DCNTL       equ	15338	;# 
   366   003BEB                     DMA1DCNTH       equ	15339	;# 
   367   003BEC                     DMA1DPTR        equ	15340	;# 
   368   003BEC                     DMA1DPTRL       equ	15340	;# 
   369   003BED                     DMA1DPTRH       equ	15341	;# 
   370   003BEE                     DMA1DSZ         equ	15342	;# 
   371   003BEE                     DMA1DSZL        equ	15342	;# 
   372   003BEF                     DMA1DSZH        equ	15343	;# 
   373   003BF0                     DMA1DSA         equ	15344	;# 
   374   003BF0                     DMA1DSAL        equ	15344	;# 
   375   003BF1                     DMA1DSAH        equ	15345	;# 
   376   003BF2                     DMA1SCNT        equ	15346	;# 
   377   003BF2                     DMA1SCNTL       equ	15346	;# 
   378   003BF3                     DMA1SCNTH       equ	15347	;# 
   379   003BF4                     DMA1SPTR        equ	15348	;# 
   380   003BF4                     DMA1SPTRL       equ	15348	;# 
   381   003BF5                     DMA1SPTRH       equ	15349	;# 
   382   003BF6                     DMA1SPTRU       equ	15350	;# 
   383   003BF7                     DMA1SSZ         equ	15351	;# 
   384   003BF7                     DMA1SSZL        equ	15351	;# 
   385   003BF8                     DMA1SSZH        equ	15352	;# 
   386   003BF9                     DMA1SSA         equ	15353	;# 
   387   003BF9                     DMA1SSAL        equ	15353	;# 
   388   003BFA                     DMA1SSAH        equ	15354	;# 
   389   003BFB                     DMA1SSAU        equ	15355	;# 
   390   003BFC                     DMA1CON0        equ	15356	;# 
   391   003BFD                     DMA1CON1        equ	15357	;# 
   392   003BFE                     DMA1AIRQ        equ	15358	;# 
   393   003BFF                     DMA1SIRQ        equ	15359	;# 
   394   003C56                     CLC4CON         equ	15446	;# 
   395   003C57                     CLC4POL         equ	15447	;# 
   396   003C58                     CLC4SEL0        equ	15448	;# 
   397   003C59                     CLC4SEL1        equ	15449	;# 
   398   003C5A                     CLC4SEL2        equ	15450	;# 
   399   003C5B                     CLC4SEL3        equ	15451	;# 
   400   003C5C                     CLC4GLS0        equ	15452	;# 
   401   003C5D                     CLC4GLS1        equ	15453	;# 
   402   003C5E                     CLC4GLS2        equ	15454	;# 
   403   003C5F                     CLC4GLS3        equ	15455	;# 
   404   003C60                     CLC3CON         equ	15456	;# 
   405   003C61                     CLC3POL         equ	15457	;# 
   406   003C62                     CLC3SEL0        equ	15458	;# 
   407   003C63                     CLC3SEL1        equ	15459	;# 
   408   003C64                     CLC3SEL2        equ	15460	;# 
   409   003C65                     CLC3SEL3        equ	15461	;# 
   410   003C66                     CLC3GLS0        equ	15462	;# 
   411   003C67                     CLC3GLS1        equ	15463	;# 
   412   003C68                     CLC3GLS2        equ	15464	;# 
   413   003C69                     CLC3GLS3        equ	15465	;# 
   414   003C6A                     CLC2CON         equ	15466	;# 
   415   003C6B                     CLC2POL         equ	15467	;# 
   416   003C6C                     CLC2SEL0        equ	15468	;# 
   417   003C6D                     CLC2SEL1        equ	15469	;# 
   418   003C6E                     CLC2SEL2        equ	15470	;# 
   419   003C6F                     CLC2SEL3        equ	15471	;# 
   420   003C70                     CLC2GLS0        equ	15472	;# 
   421   003C71                     CLC2GLS1        equ	15473	;# 
   422   003C72                     CLC2GLS2        equ	15474	;# 
   423   003C73                     CLC2GLS3        equ	15475	;# 
   424   003C74                     CLC1CON         equ	15476	;# 
   425   003C75                     CLC1POL         equ	15477	;# 
   426   003C76                     CLC1SEL0        equ	15478	;# 
   427   003C77                     CLC1SEL1        equ	15479	;# 
   428   003C78                     CLC1SEL2        equ	15480	;# 
   429   003C79                     CLC1SEL3        equ	15481	;# 
   430   003C7A                     CLC1GLS0        equ	15482	;# 
   431   003C7B                     CLC1GLS1        equ	15483	;# 
   432   003C7C                     CLC1GLS2        equ	15484	;# 
   433   003C7D                     CLC1GLS3        equ	15485	;# 
   434   003C7E                     CLCDATA0        equ	15486	;# 
   435   003CE5                     CLKRCON         equ	15589	;# 
   436   003CE6                     CLKRCLK         equ	15590	;# 
   437   003CFA                     MD1CON0         equ	15610	;# 
   438   003CFB                     MD1CON1         equ	15611	;# 
   439   003CFC                     MD1SRC          equ	15612	;# 
   440   003CFD                     MD1CARL         equ	15613	;# 
   441   003CFE                     MD1CARH         equ	15614	;# 
   442   003D10                     SPI1RXB         equ	15632	;# 
   443   003D11                     SPI1TXB         equ	15633	;# 
   444   003D12                     SPI1TCNT        equ	15634	;# 
   445   003D12                     SPI1TCNTL       equ	15634	;# 
   446   003D13                     SPI1TCNTH       equ	15635	;# 
   447   003D14                     SPI1CON0        equ	15636	;# 
   448   003D15                     SPI1CON1        equ	15637	;# 
   449   003D16                     SPI1CON2        equ	15638	;# 
   450   003D17                     SPI1STATUS      equ	15639	;# 
   451   003D18                     SPI1TWIDTH      equ	15640	;# 
   452   003D19                     SPI1BAUD        equ	15641	;# 
   453   003D1A                     SPI1INTF        equ	15642	;# 
   454   003D1B                     SPI1INTE        equ	15643	;# 
   455   003D1C                     SPI1CLK         equ	15644	;# 
   456   003D54                     I2C2RXB         equ	15700	;# 
   457   003D55                     I2C2TXB         equ	15701	;# 
   458   003D56                     I2C2CNT         equ	15702	;# 
   459   003D57                     I2C2ADB0        equ	15703	;# 
   460   003D58                     I2C2ADB1        equ	15704	;# 
   461   003D59                     I2C2ADR0        equ	15705	;# 
   462   003D5A                     I2C2ADR1        equ	15706	;# 
   463   003D5B                     I2C2ADR2        equ	15707	;# 
   464   003D5C                     I2C2ADR3        equ	15708	;# 
   465   003D5D                     I2C2CON0        equ	15709	;# 
   466   003D5E                     I2C2CON1        equ	15710	;# 
   467   003D5F                     I2C2CON2        equ	15711	;# 
   468   003D60                     I2C2ERR         equ	15712	;# 
   469   003D61                     I2C2STAT0       equ	15713	;# 
   470   003D62                     I2C2STAT1       equ	15714	;# 
   471   003D63                     I2C2PIR         equ	15715	;# 
   472   003D64                     I2C2PIE         equ	15716	;# 
   473   003D65                     I2C2CLK         equ	15717	;# 
   474   003D66                     I2C2BTO         equ	15718	;# 
   475   003D6A                     I2C1RXB         equ	15722	;# 
   476   003D6B                     I2C1TXB         equ	15723	;# 
   477   003D6C                     I2C1CNT         equ	15724	;# 
   478   003D6D                     I2C1ADB0        equ	15725	;# 
   479   003D6E                     I2C1ADB1        equ	15726	;# 
   480   003D6F                     I2C1ADR0        equ	15727	;# 
   481   003D70                     I2C1ADR1        equ	15728	;# 
   482   003D71                     I2C1ADR2        equ	15729	;# 
   483   003D72                     I2C1ADR3        equ	15730	;# 
   484   003D73                     I2C1CON0        equ	15731	;# 
   485   003D74                     I2C1CON1        equ	15732	;# 
   486   003D75                     I2C1CON2        equ	15733	;# 
   487   003D76                     I2C1ERR         equ	15734	;# 
   488   003D77                     I2C1STAT0       equ	15735	;# 
   489   003D78                     I2C1STAT1       equ	15736	;# 
   490   003D79                     I2C1PIR         equ	15737	;# 
   491   003D7A                     I2C1PIE         equ	15738	;# 
   492   003D7B                     I2C1CLK         equ	15739	;# 
   493   003D7C                     I2C1BTO         equ	15740	;# 
   494   003DD0                     U2RXB           equ	15824	;# 
   495   003DD0                     U2RXBL          equ	15824	;# 
   496   003DD2                     U2TXB           equ	15826	;# 
   497   003DD2                     U2TXBL          equ	15826	;# 
   498   003DD4                     U2P1            equ	15828	;# 
   499   003DD4                     U2P1L           equ	15828	;# 
   500   003DD6                     U2P2            equ	15830	;# 
   501   003DD6                     U2P2L           equ	15830	;# 
   502   003DD8                     U2P3            equ	15832	;# 
   503   003DD8                     U2P3L           equ	15832	;# 
   504   003DDA                     U2CON0          equ	15834	;# 
   505   003DDB                     U2CON1          equ	15835	;# 
   506   003DDC                     U2CON2          equ	15836	;# 
   507   003DDD                     U2BRG           equ	15837	;# 
   508   003DDD                     U2BRGL          equ	15837	;# 
   509   003DDE                     U2BRGH          equ	15838	;# 
   510   003DDF                     U2FIFO          equ	15839	;# 
   511   003DE0                     U2UIR           equ	15840	;# 
   512   003DE1                     U2ERRIR         equ	15841	;# 
   513   003DE2                     U2ERRIE         equ	15842	;# 
   514   003DE8                     U1RXB           equ	15848	;# 
   515   003DE8                     U1RXBL          equ	15848	;# 
   516   003DE9                     U1RXCHK         equ	15849	;# 
   517   003DEA                     U1TXB           equ	15850	;# 
   518   003DEA                     U1TXBL          equ	15850	;# 
   519   003DEB                     U1TXCHK         equ	15851	;# 
   520   003DEC                     U1P1            equ	15852	;# 
   521   003DEC                     U1P1L           equ	15852	;# 
   522   003DED                     U1P1H           equ	15853	;# 
   523   003DEE                     U1P2            equ	15854	;# 
   524   003DEE                     U1P2L           equ	15854	;# 
   525   003DEF                     U1P2H           equ	15855	;# 
   526   003DF0                     U1P3            equ	15856	;# 
   527   003DF0                     U1P3L           equ	15856	;# 
   528   003DF1                     U1P3H           equ	15857	;# 
   529   003DF2                     U1CON0          equ	15858	;# 
   530   003DF3                     U1CON1          equ	15859	;# 
   531   003DF4                     U1CON2          equ	15860	;# 
   532   003DF5                     U1BRG           equ	15861	;# 
   533   003DF5                     U1BRGL          equ	15861	;# 
   534   003DF6                     U1BRGH          equ	15862	;# 
   535   003DF7                     U1FIFO          equ	15863	;# 
   536   003DF8                     U1UIR           equ	15864	;# 
   537   003DF9                     U1ERRIR         equ	15865	;# 
   538   003DFA                     U1ERRIE         equ	15866	;# 
   539   003E9C                     DAC1CON1        equ	16028	;# 
   540   003E9E                     DAC1CON0        equ	16030	;# 
   541   003EB8                     CM2CON0         equ	16056	;# 
   542   003EB9                     CM2CON1         equ	16057	;# 
   543   003EBA                     CM2NCH          equ	16058	;# 
   544   003EBB                     CM2PCH          equ	16059	;# 
   545   003EBC                     CM1CON0         equ	16060	;# 
   546   003EBD                     CM1CON1         equ	16061	;# 
   547   003EBE                     CM1NCH          equ	16062	;# 
   548   003EBF                     CM1PCH          equ	16063	;# 
   549   003EC0                     CMOUT           equ	16064	;# 
   550   003EC1                     FVRCON          equ	16065	;# 
   551   003EC3                     ZCDCON          equ	16067	;# 
   552   003EC9                     HLVDCON0        equ	16073	;# 
   553   003ECA                     HLVDCON1        equ	16074	;# 
   554   003ED7                     ADCP            equ	16087	;# 
   555   003EDE                     ADLTH           equ	16094	;# 
   556   003EDE                     ADLTHL          equ	16094	;# 
   557   003EDF                     ADLTHH          equ	16095	;# 
   558   003EE0                     ADUTH           equ	16096	;# 
   559   003EE0                     ADUTHL          equ	16096	;# 
   560   003EE1                     ADUTHH          equ	16097	;# 
   561   003EE2                     ADERR           equ	16098	;# 
   562   003EE2                     ADERRL          equ	16098	;# 
   563   003EE3                     ADERRH          equ	16099	;# 
   564   003EE4                     ADSTPT          equ	16100	;# 
   565   003EE4                     ADSTPTL         equ	16100	;# 
   566   003EE5                     ADSTPTH         equ	16101	;# 
   567   003EE6                     ADFLTR          equ	16102	;# 
   568   003EE6                     ADFLTRL         equ	16102	;# 
   569   003EE7                     ADFLTRH         equ	16103	;# 
   570   003EE8                     ADACC           equ	16104	;# 
   571   003EE8                     ADACCL          equ	16104	;# 
   572   003EE9                     ADACCH          equ	16105	;# 
   573   003EEA                     ADACCU          equ	16106	;# 
   574   003EEB                     ADCNT           equ	16107	;# 
   575   003EEC                     ADRPT           equ	16108	;# 
   576   003EED                     ADPREV          equ	16109	;# 
   577   003EED                     ADPREVL         equ	16109	;# 
   578   003EEE                     ADPREVH         equ	16110	;# 
   579   003EEF                     ADRES           equ	16111	;# 
   580   003EEF                     ADRESL          equ	16111	;# 
   581   003EF0                     ADRESH          equ	16112	;# 
   582   003EF1                     ADPCH           equ	16113	;# 
   583   003EF3                     ADACQ           equ	16115	;# 
   584   003EF3                     ADACQL          equ	16115	;# 
   585   003EF4                     ADACQH          equ	16116	;# 
   586   003EF5                     ADCAP           equ	16117	;# 
   587   003EF6                     ADPRE           equ	16118	;# 
   588   003EF6                     ADPREL          equ	16118	;# 
   589   003EF7                     ADPREH          equ	16119	;# 
   590   003EF8                     ADCON0          equ	16120	;# 
   591   003EF9                     ADCON1          equ	16121	;# 
   592   003EFA                     ADCON2          equ	16122	;# 
   593   003EFB                     ADCON3          equ	16123	;# 
   594   003EFC                     ADSTAT          equ	16124	;# 
   595   003EFD                     ADREF           equ	16125	;# 
   596   003EFE                     ADACT           equ	16126	;# 
   597   003EFF                     ADCLK           equ	16127	;# 
   598   003F12                     SMT1TMR         equ	16146	;# 
   599   003F12                     SMT1TMRL        equ	16146	;# 
   600   003F13                     SMT1TMRH        equ	16147	;# 
   601   003F14                     SMT1TMRU        equ	16148	;# 
   602   003F15                     SMT1CPR         equ	16149	;# 
   603   003F15                     SMT1CPRL        equ	16149	;# 
   604   003F16                     SMT1CPRH        equ	16150	;# 
   605   003F17                     SMT1CPRU        equ	16151	;# 
   606   003F18                     SMT1CPW         equ	16152	;# 
   607   003F18                     SMT1CPWL        equ	16152	;# 
   608   003F19                     SMT1CPWH        equ	16153	;# 
   609   003F1A                     SMT1CPWU        equ	16154	;# 
   610   003F1B                     SMT1PR          equ	16155	;# 
   611   003F1B                     SMT1PRL         equ	16155	;# 
   612   003F1C                     SMT1PRH         equ	16156	;# 
   613   003F1D                     SMT1PRU         equ	16157	;# 
   614   003F1E                     SMT1CON0        equ	16158	;# 
   615   003F1F                     SMT1CON1        equ	16159	;# 
   616   003F20                     SMT1STAT        equ	16160	;# 
   617   003F21                     SMT1CLK         equ	16161	;# 
   618   003F22                     SMT1SIG         equ	16162	;# 
   619   003F23                     SMT1WIN         equ	16163	;# 
   620   003F38                     NCO1ACC         equ	16184	;# 
   621   003F38                     NCO1ACCL        equ	16184	;# 
   622   003F39                     NCO1ACCH        equ	16185	;# 
   623   003F3A                     NCO1ACCU        equ	16186	;# 
   624   003F3B                     NCO1INC         equ	16187	;# 
   625   003F3B                     NCO1INCL        equ	16187	;# 
   626   003F3C                     NCO1INCH        equ	16188	;# 
   627   003F3D                     NCO1INCU        equ	16189	;# 
   628   003F3E                     NCO1CON         equ	16190	;# 
   629   003F3F                     NCO1CLK         equ	16191	;# 
   630   003F40                     CWG3CLK         equ	16192	;# 
   631   003F40                     CWG3CLKCON      equ	16192	;# 
   632   003F41                     CWG3ISM         equ	16193	;# 
   633   003F41                     CWG3DAT         equ	16193	;# 
   634   003F42                     CWG3DBR         equ	16194	;# 
   635   003F43                     CWG3DBF         equ	16195	;# 
   636   003F44                     CWG3CON0        equ	16196	;# 
   637   003F45                     CWG3CON1        equ	16197	;# 
   638   003F46                     CWG3AS0         equ	16198	;# 
   639   003F47                     CWG3AS1         equ	16199	;# 
   640   003F48                     CWG3STR         equ	16200	;# 
   641   003F49                     CWG2CLK         equ	16201	;# 
   642   003F49                     CWG2CLKCON      equ	16201	;# 
   643   003F4A                     CWG2ISM         equ	16202	;# 
   644   003F4A                     CWG2DAT         equ	16202	;# 
   645   003F4B                     CWG2DBR         equ	16203	;# 
   646   003F4C                     CWG2DBF         equ	16204	;# 
   647   003F4D                     CWG2CON0        equ	16205	;# 
   648   003F4E                     CWG2CON1        equ	16206	;# 
   649   003F4F                     CWG2AS0         equ	16207	;# 
   650   003F50                     CWG2AS1         equ	16208	;# 
   651   003F51                     CWG2STR         equ	16209	;# 
   652   003F52                     CWG1CLK         equ	16210	;# 
   653   003F52                     CWG1CLKCON      equ	16210	;# 
   654   003F53                     CWG1ISM         equ	16211	;# 
   655   003F53                     CWG1DAT         equ	16211	;# 
   656   003F54                     CWG1DBR         equ	16212	;# 
   657   003F55                     CWG1DBF         equ	16213	;# 
   658   003F56                     CWG1CON0        equ	16214	;# 
   659   003F57                     CWG1CON1        equ	16215	;# 
   660   003F58                     CWG1AS0         equ	16216	;# 
   661   003F59                     CWG1AS1         equ	16217	;# 
   662   003F5A                     CWG1STR         equ	16218	;# 
   663   003F5E                     CCPTMRS0        equ	16222	;# 
   664   003F5F                     CCPTMRS1        equ	16223	;# 
   665   003F60                     PWM8DC          equ	16224	;# 
   666   003F60                     PWM8DCL         equ	16224	;# 
   667   003F61                     PWM8DCH         equ	16225	;# 
   668   003F62                     PWM8CON         equ	16226	;# 
   669   003F64                     PWM7DC          equ	16228	;# 
   670   003F64                     PWM7DCL         equ	16228	;# 
   671   003F65                     PWM7DCH         equ	16229	;# 
   672   003F66                     PWM7CON         equ	16230	;# 
   673   003F68                     PWM6DC          equ	16232	;# 
   674   003F68                     PWM6DCL         equ	16232	;# 
   675   003F69                     PWM6DCH         equ	16233	;# 
   676   003F6A                     PWM6CON         equ	16234	;# 
   677   003F6C                     PWM5DC          equ	16236	;# 
   678   003F6C                     PWM5DCL         equ	16236	;# 
   679   003F6D                     PWM5DCH         equ	16237	;# 
   680   003F6E                     PWM5CON         equ	16238	;# 
   681   003F70                     CCPR4           equ	16240	;# 
   682   003F70                     CCPR4L          equ	16240	;# 
   683   003F71                     CCPR4H          equ	16241	;# 
   684   003F72                     CCP4CON         equ	16242	;# 
   685   003F73                     CCP4CAP         equ	16243	;# 
   686   003F74                     CCPR3           equ	16244	;# 
   687   003F74                     CCPR3L          equ	16244	;# 
   688   003F75                     CCPR3H          equ	16245	;# 
   689   003F76                     CCP3CON         equ	16246	;# 
   690   003F77                     CCP3CAP         equ	16247	;# 
   691   003F78                     CCPR2           equ	16248	;# 
   692   003F78                     CCPR2L          equ	16248	;# 
   693   003F79                     CCPR2H          equ	16249	;# 
   694   003F7A                     CCP2CON         equ	16250	;# 
   695   003F7B                     CCP2CAP         equ	16251	;# 
   696   003F7C                     CCPR1           equ	16252	;# 
   697   003F7C                     CCPR1L          equ	16252	;# 
   698   003F7D                     CCPR1H          equ	16253	;# 
   699   003F7E                     CCP1CON         equ	16254	;# 
   700   003F7F                     CCP1CAP         equ	16255	;# 
   701   003F92                     T6TMR           equ	16274	;# 
   702   003F92                     TMR6            equ	16274	;# 
   703   003F93                     T6PR            equ	16275	;# 
   704   003F93                     PR6             equ	16275	;# 
   705   003F94                     T6CON           equ	16276	;# 
   706   003F95                     T6HLT           equ	16277	;# 
   707   003F96                     T6CLKCON        equ	16278	;# 
   708   003F96                     T6CLK           equ	16278	;# 
   709   003F97                     T6RST           equ	16279	;# 
   710   003F98                     TMR5            equ	16280	;# 
   711   003F98                     TMR5L           equ	16280	;# 
   712   003F99                     TMR5H           equ	16281	;# 
   713   003F9A                     T5CON           equ	16282	;# 
   714   003F9A                     TMR5CON         equ	16282	;# 
   715   003F9B                     T5GCON          equ	16283	;# 
   716   003F9B                     TMR5GCON        equ	16283	;# 
   717   003F9C                     T5GATE          equ	16284	;# 
   718   003F9C                     TMR5GATE        equ	16284	;# 
   719   003F9D                     T5CLK           equ	16285	;# 
   720   003F9D                     TMR5CLK         equ	16285	;# 
   721   003F9D                     PR5             equ	16285	;# 
   722   003F9E                     T4TMR           equ	16286	;# 
   723   003F9E                     TMR4            equ	16286	;# 
   724   003F9F                     T4PR            equ	16287	;# 
   725   003F9F                     PR4             equ	16287	;# 
   726   003FA0                     T4CON           equ	16288	;# 
   727   003FA1                     T4HLT           equ	16289	;# 
   728   003FA2                     T4CLKCON        equ	16290	;# 
   729   003FA2                     T4CLK           equ	16290	;# 
   730   003FA3                     T4RST           equ	16291	;# 
   731   003FA4                     TMR3            equ	16292	;# 
   732   003FA4                     TMR3L           equ	16292	;# 
   733   003FA5                     TMR3H           equ	16293	;# 
   734   003FA6                     T3CON           equ	16294	;# 
   735   003FA6                     TMR3CON         equ	16294	;# 
   736   003FA7                     T3GCON          equ	16295	;# 
   737   003FA7                     TMR3GCON        equ	16295	;# 
   738   003FA8                     T3GATE          equ	16296	;# 
   739   003FA8                     TMR3GATE        equ	16296	;# 
   740   003FA9                     T3CLK           equ	16297	;# 
   741   003FA9                     TMR3CLK         equ	16297	;# 
   742   003FA9                     PR3             equ	16297	;# 
   743   003FAA                     T2TMR           equ	16298	;# 
   744   003FAA                     TMR2            equ	16298	;# 
   745   003FAB                     T2PR            equ	16299	;# 
   746   003FAB                     PR2             equ	16299	;# 
   747   003FAC                     T2CON           equ	16300	;# 
   748   003FAD                     T2HLT           equ	16301	;# 
   749   003FAE                     T2CLKCON        equ	16302	;# 
   750   003FAE                     T2CLK           equ	16302	;# 
   751   003FAF                     T2RST           equ	16303	;# 
   752   003FB0                     TMR1            equ	16304	;# 
   753   003FB0                     TMR1L           equ	16304	;# 
   754   003FB1                     TMR1H           equ	16305	;# 
   755   003FB2                     T1CON           equ	16306	;# 
   756   003FB2                     TMR1CON         equ	16306	;# 
   757   003FB3                     T1GCON          equ	16307	;# 
   758   003FB3                     TMR1GCON        equ	16307	;# 
   759   003FB4                     T1GATE          equ	16308	;# 
   760   003FB4                     TMR1GATE        equ	16308	;# 
   761   003FB5                     T1CLK           equ	16309	;# 
   762   003FB5                     TMR1CLK         equ	16309	;# 
   763   003FB5                     PR1             equ	16309	;# 
   764   003FB6                     TMR0L           equ	16310	;# 
   765   003FB6                     TMR0            equ	16310	;# 
   766   003FB7                     TMR0H           equ	16311	;# 
   767   003FB7                     PR0             equ	16311	;# 
   768   003FB8                     T0CON0          equ	16312	;# 
   769   003FB9                     T0CON1          equ	16313	;# 
   770   003FBA                     LATA            equ	16314	;# 
   771   003FBB                     LATB            equ	16315	;# 
   772   003FBC                     LATC            equ	16316	;# 
   773   003FBD                     LATD            equ	16317	;# 
   774   003FBE                     LATE            equ	16318	;# 
   775   003FC2                     TRISA           equ	16322	;# 
   776   003FC3                     TRISB           equ	16323	;# 
   777   003FC4                     TRISC           equ	16324	;# 
   778   003FC5                     TRISD           equ	16325	;# 
   779   003FC6                     TRISE           equ	16326	;# 
   780   003FCA                     PORTA           equ	16330	;# 
   781   003FCB                     PORTB           equ	16331	;# 
   782   003FCC                     PORTC           equ	16332	;# 
   783   003FCD                     PORTD           equ	16333	;# 
   784   003FCE                     PORTE           equ	16334	;# 
   785   003FD2                     INTCON0         equ	16338	;# 
   786   003FD3                     INTCON1         equ	16339	;# 
   787   003FD4                     IVTLOCK         equ	16340	;# 
   788   003FD5                     IVTBASE         equ	16341	;# 
   789   003FD5                     IVTBASEL        equ	16341	;# 
   790   003FD6                     IVTBASEH        equ	16342	;# 
   791   003FD7                     IVTBASEU        equ	16343	;# 
   792   003FD8                     STATUS          equ	16344	;# 
   793   003FD9                     FSR2            equ	16345	;# 
   794   003FD9                     FSR2L           equ	16345	;# 
   795   003FDA                     FSR2H           equ	16346	;# 
   796   003FDB                     PLUSW2          equ	16347	;# 
   797   003FDC                     PREINC2         equ	16348	;# 
   798   003FDD                     POSTDEC2        equ	16349	;# 
   799   003FDE                     POSTINC2        equ	16350	;# 
   800   003FDF                     INDF2           equ	16351	;# 
   801   003FE0                     BSR             equ	16352	;# 
   802   003FE1                     FSR1            equ	16353	;# 
   803   003FE1                     FSR1L           equ	16353	;# 
   804   003FE2                     FSR1H           equ	16354	;# 
   805   003FE3                     PLUSW1          equ	16355	;# 
   806   003FE4                     PREINC1         equ	16356	;# 
   807   003FE5                     POSTDEC1        equ	16357	;# 
   808   003FE6                     POSTINC1        equ	16358	;# 
   809   003FE7                     INDF1           equ	16359	;# 
   810   003FE8                     WREG            equ	16360	;# 
   811   003FE9                     FSR0            equ	16361	;# 
   812   003FE9                     FSR0L           equ	16361	;# 
   813   003FEA                     FSR0H           equ	16362	;# 
   814   003FEB                     PLUSW0          equ	16363	;# 
   815   003FEC                     PREINC0         equ	16364	;# 
   816   003FED                     POSTDEC0        equ	16365	;# 
   817   003FEE                     POSTINC0        equ	16366	;# 
   818   003FEF                     INDF0           equ	16367	;# 
   819   003FF0                     PCON0           equ	16368	;# 
   820   003FF1                     PCON1           equ	16369	;# 
   821   003FF3                     PROD            equ	16371	;# 
   822   003FF3                     PRODL           equ	16371	;# 
   823   003FF4                     PRODH           equ	16372	;# 
   824   003FF5                     TABLAT          equ	16373	;# 
   825   003FF6                     TBLPTR          equ	16374	;# 
   826   003FF6                     TBLPTRL         equ	16374	;# 
   827   003FF7                     TBLPTRH         equ	16375	;# 
   828   003FF8                     TBLPTRU         equ	16376	;# 
   829   003FF9                     PCLAT           equ	16377	;# 
   830   003FF9                     PCL             equ	16377	;# 
   831   003FFA                     PCLATH          equ	16378	;# 
   832   003FFB                     PCLATU          equ	16379	;# 
   833   003FFC                     STKPTR          equ	16380	;# 
   834   003FFD                     TOS             equ	16381	;# 
   835   003FFD                     TOSL            equ	16381	;# 
   836   003FFE                     TOSH            equ	16382	;# 
   837   003FFF                     TOSU            equ	16383	;# 
<<<<<<< HEAD
   838                           
   839                           	psect	smallconst
   840   002000                     __psmallconst:
   841                           	callstack 0
   842   002000  00                 	db	0
   843   002001                     display_digit@F16363:
   844                           	callstack 0
   845   002001  3F                 	db	63
   846   002002  06                 	db	6
   847   002003  5B                 	db	91
   848   002004  4F                 	db	79
   849   002005  66                 	db	102
   850   002006                     __end_ofdisplay_digit@F16363:
   851                           	callstack 0
   852   0039A1                     _PIR1bits       set	14753
   853   003991                     _PIE1bits       set	14737
   854   003981                     _IPR1bits       set	14721
   855   003A50                     _ANSELB         set	14928
   856   003A70                     _ANSELD         set	14960
   857   003FCB                     _PORTBbits      set	16331
   858   003FCB                     _PORTB          set	16331
   859   003FC3                     _TRISB          set	16323
   860   003FCD                     _PORTD          set	16333
   861   003FC5                     _TRISD          set	16325
   862   003FD2                     _INTCON0bits    set	16338
   863   002006  00                 	db	0	; dummy byte at the end
   864   002000                     __smallconst    set	__psmallconst
   865   002000                     __mediumconst   set	__psmallconst
   866   000001                     __activetblptr  equ	1
   867                           
   868                           ; #config settings
   869                           
   870                           	psect	cinit
   871   0042DC                     __pcinit:
   872                           	callstack 0
   873   0042DC                     start_initialization:
   874                           	callstack 0
   875   0042DC                     __initialization:
   876                           	callstack 0
   877                           
   878                           ;
   879                           ; Setup IVTBASE
   880                           ;
   881   003FD5                     IVTBASEL        equ	16341
   882   003FD6                     IVTBASEH        equ	16342
   883   003FD7                     IVTBASEU        equ	16343
   884   0042DC  0E08               	movlw	(ivt0x4008_base shr 0)& (0+255)
   885   0042DE  6ED5               	movwf	213,c
   886   0042E0  0E40               	movlw	(ivt0x4008_base shr (0+8))& (0+255)
   887   0042E2  6ED6               	movwf	214,c
   888   0042E4  0E00               	movlw	(ivt0x4008_base shr (0+16))& (0+255)
   889   0042E6  6ED7               	movwf	215,c
   890   0042E8                     end_of_initialization:
   891                           	callstack 0
   892   0042E8                     __end_of__initialization:
   893                           	callstack 0
   894   0042E8  0E00               	movlw	low (__Lsmallconst shr (0+16))
   895   0042EA  6EF8               	movwf	tblptru,c
   896   0042EC  0E20               	movlw	high __Lsmallconst
   897   0042EE  6EF7               	movwf	tblptrh,c
   898   0042F0  0100               	movlb	0
   899   0042F2  EFAC  F020         	goto	_main	;jump to C main() function
   900                           
   901                           	psect	cstackCOMRAM
   902   000001                     __pcstackCOMRAM:
   903                           	callstack 0
   904   000001                     ??_INT0_ISR:
   905                           
   906                           ; 1 bytes @ 0x0
   907   000001                     	ds	2
   908   000003                     INT0_ISR@k:
   909                           	callstack 0
   910                           
   911                           ; 2 bytes @ 0x2
   912   000003                     	ds	2
   913   000005                     wait@ms:
   914                           	callstack 0
   915   000005                     display_digit@seg_code:
   916                           	callstack 0
   917   000005                     
   918                           ; 1 bytes @ 0x4
   919   000005                     	ds	2
   920   000007                     wait@i:
   921                           	callstack 0
   922   000007                     
   923                           ; 1 bytes @ 0x6
   924   000007                     	ds	2
   925   000009                     play_buzzer_melody@i:
   926                           	callstack 0
   927   000009                     
   928                           ; 1 bytes @ 0x8
   929   000009                     	ds	1
   930   00000A                     display_digit@digit:
   931                           	callstack 0
   932                           
   933                           ; 1 bytes @ 0x9
   934   00000A                     	ds	1
   935   00000B                     ??_read_input:
   936                           
   937                           ; 1 bytes @ 0xA
   938   00000B                     	ds	2
   939   00000D                     read_input@inputPinBit:
   940                           	callstack 0
   941                           
   942                           ; 1 bytes @ 0xC
   943   00000D                     	ds	1
   944   00000E                     read_input@prev_state:
   945                           	callstack 0
   946                           
   947                           ; 1 bytes @ 0xD
   948   00000E                     	ds	1
   949   00000F                     read_input@curr_state:
   950                           	callstack 0
   951                           
   952                           ; 1 bytes @ 0xE
   953   00000F                     	ds	1
   954   000010                     read_input@count:
   955                           	callstack 0
   956                           
   957                           ; 1 bytes @ 0xF
   958   000010                     	ds	1
   959   000011                     ??_main:
   960                           
   961                           ; 1 bytes @ 0x10
   962   000011                     	ds	2
   963   000013                     main@first_input:
   964                           	callstack 0
   965                           
   966                           ; 1 bytes @ 0x12
   967   000013                     	ds	1
   968   000014                     main@second_input:
   969                           	callstack 0
   970                           
   971                           ; 1 bytes @ 0x13
   972   000014                     	ds	1
   973   000015                     main@code_entered:
   974                           	callstack 0
   975                           
   976                           ; 1 bytes @ 0x14
   977   000015                     	ds	1
   978                           
   979 ;;
   980 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   981 ;;
   982 ;; *************** function _main *****************
   983 ;; Defined at:
   984 ;;		line 15 in file "MainCode.c"
   985 ;; Parameters:    Size  Location     Type
   986 ;;		None
   987 ;; Auto vars:     Size  Location     Type
   988 ;;  code_entered    1   20[COMRAM] unsigned char 
   989 ;;  second_input    1   19[COMRAM] unsigned char 
   990 ;;  first_input     1   18[COMRAM] unsigned char 
   991 ;; Return value:  Size  Location     Type
   992 ;;                  1    wreg      void 
   993 ;; Registers used:
   994 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   995 ;; Tracked objects:
   996 ;;		On entry : 0/0
   997 ;;		On exit  : 0/0
   998 ;;		Unchanged: 0/0
   999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1001 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1002 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1003 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1004 ;;Total ram usage:        5 bytes
  1005 ;; Hardware stack levels required when called: 3
  1006 ;; This function calls:
  1007 ;;		_INTERRUPT_Initialize
  1008 ;;		_init_ports
  1009 ;;		_play_buzzer_melody
  1010 ;;		_read_input
  1011 ;;		_wait
  1012 ;; This function is called by:
  1013 ;;		Startup code after reset
  1014 ;; This function uses a non-reentrant model
  1015 ;;
  1016                           
  1017                           	psect	text0
  1018   004158                     __ptext0:
  1019                           	callstack 0
  1020   004158                     _main:
  1021                           	callstack 28
  1022   004158                     
  1023                           ;MainCode.c: 16:     init_ports();
  1024   004158  EC7B  F021         	call	_init_ports	;wreg free
  1025   00415C                     
  1026                           ;MainCode.c: 17:     INTERRUPT_Initialize();
  1027   00415C  EC84  F021         	call	_INTERRUPT_Initialize	;wreg free
  1028   004160                     l869:
  1029                           
  1030                           ;MainCode.c: 29:          first_input = read_input(1);
  1031   004160  0E01               	movlw	1
  1032   004162  EC59  F020         	call	_read_input
  1033   004166  6E13               	movwf	main@first_input^0,c
  1034   004168                     
  1035                           ;MainCode.c: 31:         wait(1500);
  1036   004168  0E05               	movlw	5
  1037   00416A  6E06               	movwf	(wait@ms+1)^0,c
  1038   00416C  0EDC               	movlw	220
  1039   00416E  6E05               	movwf	wait@ms^0,c
  1040   004170  EC43  F021         	call	_wait	;wreg free
  1041   004174                     
  1042                           ;MainCode.c: 36:          second_input = read_input(2);
  1043   004174  0E02               	movlw	2
  1044   004176  EC59  F020         	call	_read_input
  1045   00417A  6E14               	movwf	main@second_input^0,c
  1046   00417C                     
  1047                           ;MainCode.c: 38:         wait(1500);
  1048   00417C  0E05               	movlw	5
  1049   00417E  6E06               	movwf	(wait@ms+1)^0,c
  1050   004180  0EDC               	movlw	220
  1051   004182  6E05               	movwf	wait@ms^0,c
  1052   004184  EC43  F021         	call	_wait	;wreg free
  1053   004188                     
  1054                           ;MainCode.c: 40:          code_entered = (first_input << 4) | second_input;
  1055   004188  3813               	swapf	main@first_input^0,w,c
  1056   00418A  0BF0               	andlw	240
  1057   00418C  1014               	iorwf	main@second_input^0,w,c
  1058   00418E  6E15               	movwf	main@code_entered^0,c
  1059   004190                     
  1060                           ;MainCode.c: 42:         if (code_entered == 0x23) {
  1061   004190  0E23               	movlw	35
  1062   004192  1815               	xorwf	main@code_entered^0,w,c
  1063   004194  A4D8               	btfss	status,2,c
  1064   004196  EFCF  F020         	goto	u141
  1065   00419A  EFD1  F020         	goto	u140
  1066   00419E                     u141:
  1067   00419E  EFE1  F020         	goto	l887
  1068   0041A2                     u140:
  1069   0041A2                     
  1070                           ;MainCode.c: 44:         PORTBbits.RB6 = 1;
  1071   0041A2  8CCB               	bsf	203,6,c	;volatile
  1072   0041A4                     
  1073                           ;MainCode.c: 45:         _delay((unsigned long)((4000)*(4000000/4000.0)));
  1074   0041A4  0E15               	movlw	21
  1075   0041A6  6E12               	movwf	(??_main+1)^0,c
  1076   0041A8  0E4B               	movlw	75
  1077   0041AA  6E11               	movwf	??_main^0,c
  1078   0041AC  0EBE               	movlw	190
  1079   0041AE                     u157:
  1080   0041AE  2EE8               	decfsz	wreg,f,c
  1081   0041B0  D7FE               	bra	u157
  1082   0041B2  2E11               	decfsz	??_main^0,f,c
  1083   0041B4  D7FC               	bra	u157
  1084   0041B6  2E12               	decfsz	(??_main+1)^0,f,c
  1085   0041B8  D7FA               	bra	u157
  1086   0041BA  D000               	nop2	
  1087   0041BC                     
  1088                           ;MainCode.c: 46:         PORTBbits.RB6 = 0;
  1089   0041BC  9CCB               	bcf	203,6,c	;volatile
  1090                           
  1091                           ;MainCode.c: 49:         }else {
  1092   0041BE  EFB0  F020         	goto	l869
  1093   0041C2                     l887:
  1094                           
  1095                           ;MainCode.c: 51:     play_buzzer_melody();
  1096   0041C2  EC20  F021         	call	_play_buzzer_melody	;wreg free
  1097   0041C6  EFB0  F020         	goto	l869
  1098   0041CA  EF57  F020         	goto	start
  1099   0041CE                     __end_of_main:
  1100                           	callstack 0
  1101                           
  1102 ;; *************** function _read_input *****************
  1103 ;; Defined at:
  1104 ;;		line 21 in file "./functions.h"
  1105 ;; Parameters:    Size  Location     Type
  1106 ;;  inputPinBit     1    wreg     unsigned char 
  1107 ;; Auto vars:     Size  Location     Type
  1108 ;;  inputPinBit     1   12[COMRAM] unsigned char 
  1109 ;;  count           1   15[COMRAM] unsigned char 
  1110 ;;  curr_state      1   14[COMRAM] unsigned char 
  1111 ;;  prev_state      1   13[COMRAM] unsigned char 
  1112 ;; Return value:  Size  Location     Type
  1113 ;;                  1    wreg      unsigned char 
  1114 ;; Registers used:
  1115 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1116 ;; Tracked objects:
  1117 ;;		On entry : 0/0
  1118 ;;		On exit  : 0/0
  1119 ;;		Unchanged: 0/0
  1120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1121 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1122 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1123 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1124 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1125 ;;Total ram usage:        6 bytes
  1126 ;; Hardware stack levels used: 1
  1127 ;; Hardware stack levels required when called: 2
  1128 ;; This function calls:
  1129 ;;		_display_digit
  1130 ;; This function is called by:
  1131 ;;		_main
  1132 ;; This function uses a non-reentrant model
  1133 ;;
  1134                           
  1135                           	psect	text1
  1136   0040B2                     __ptext1:
  1137                           	callstack 0
  1138   0040B2                     _read_input:
  1139                           	callstack 28
  1140                           
  1141                           ;incstack = 0
  1142                           ;read_input@inputPinBit stored from wreg
  1143   0040B2  6E0D               	movwf	read_input@inputPinBit^0,c
  1144   0040B4                     
  1145                           ;./functions.h: 22:     unsigned char count = 0;
  1146   0040B4  6A10               	clrf	read_input@count^0,c
  1147                           
  1148                           ;./functions.h: 23:     unsigned char prev_state = 0;
  1149   0040B6  6A0E               	clrf	read_input@prev_state^0,c
  1150                           
  1151                           ;./functions.h: 24:     unsigned char curr_state;;./functions.h: 26:     while (count < 
      +                          4 && PORTBbits.RB3 == 0) {
  1152   0040B8  EF90  F020         	goto	l783
  1153   0040BC                     l771:
  1154                           
  1155                           ;./functions.h: 27:         curr_state = (PORTB >> inputPinBit) & 1;
  1156   0040BC  C00D  F00B         	movff	read_input@inputPinBit,??_read_input
  1157   0040C0  006F FF2C  F00C    	movff	16331,??_read_input+1	;volatile
  1158   0040C6  2A0B               	incf	??_read_input^0,f,c
  1159   0040C8  EF68  F020         	goto	u34
  1160   0040CC                     u35:
  1161   0040CC  90D8               	bcf	status,0,c
  1162   0040CE  320C               	rrcf	(??_read_input+1)^0,f,c
  1163   0040D0                     u34:
  1164   0040D0  2E0B               	decfsz	??_read_input^0,f,c
  1165   0040D2  EF66  F020         	goto	u35
  1166   0040D6  500C               	movf	(??_read_input+1)^0,w,c
  1167   0040D8  0B01               	andlw	1
  1168   0040DA  6E0F               	movwf	read_input@curr_state^0,c
  1169                           
  1170                           ;./functions.h: 30:         if (curr_state == 1 && prev_state == 0) {
  1171   0040DC  040F               	decf	read_input@curr_state^0,w,c
  1172   0040DE  A4D8               	btfss	status,2,c
  1173   0040E0  EF74  F020         	goto	u41
  1174   0040E4  EF76  F020         	goto	u40
  1175   0040E8                     u41:
  1176   0040E8  EF8E  F020         	goto	l781
  1177   0040EC                     u40:
  1178   0040EC  500E               	movf	read_input@prev_state^0,w,c
  1179   0040EE  A4D8               	btfss	status,2,c
  1180   0040F0  EF7C  F020         	goto	u51
  1181   0040F4  EF7E  F020         	goto	u50
  1182   0040F8                     u51:
  1183   0040F8  EF8E  F020         	goto	l781
  1184   0040FC                     u50:
  1185   0040FC                     
  1186                           ;./functions.h: 31:             count++;
  1187   0040FC  2A10               	incf	read_input@count^0,f,c
  1188   0040FE                     
  1189                           ;./functions.h: 32:             display_digit(count);
  1190   0040FE  5010               	movf	read_input@count^0,w,c
  1191   004100  EC5B  F021         	call	_display_digit
  1192   004104                     
  1193                           ;./functions.h: 33:             _delay((unsigned long)((300)*(4000000/4000.0)));
  1194   004104  0E02               	movlw	2
  1195   004106  6E0C               	movwf	(??_read_input+1)^0,c
  1196   004108  0E86               	movlw	134
  1197   00410A  6E0B               	movwf	??_read_input^0,c
  1198   00410C  0E99               	movlw	153
  1199   00410E                     u167:
  1200   00410E  2EE8               	decfsz	wreg,f,c
  1201   004110  D7FE               	bra	u167
  1202   004112  2E0B               	decfsz	??_read_input^0,f,c
  1203   004114  D7FC               	bra	u167
  1204   004116  2E0C               	decfsz	(??_read_input+1)^0,f,c
  1205   004118  D7FA               	bra	u167
  1206   00411A  0000               	nop	
  1207   00411C                     l781:
  1208                           
  1209                           ;./functions.h: 36:         prev_state = curr_state;
  1210   00411C  C00F  F00E         	movff	read_input@curr_state,read_input@prev_state
  1211   004120                     l783:
  1212                           
  1213                           ;./functions.h: 26:     while (count < 4 && PORTBbits.RB3 == 0) {
  1214   004120  0E04               	movlw	4
  1215   004122  6010               	cpfslt	read_input@count^0,c
  1216   004124  EF96  F020         	goto	u61
  1217   004128  EF98  F020         	goto	u60
  1218   00412C                     u61:
  1219   00412C  EF9F  F020         	goto	l787
  1220   004130                     u60:
  1221   004130  A6CB               	btfss	203,3,c	;volatile
  1222   004132  EF9D  F020         	goto	u71
  1223   004136  EF9F  F020         	goto	u70
  1224   00413A                     u71:
  1225   00413A  EF5E  F020         	goto	l771
  1226   00413E                     u70:
  1227   00413E                     l787:
  1228                           
  1229                           ;./functions.h: 38:     _delay((unsigned long)((1000)*(4000000/4000.0)));
  1230   00413E  0E06               	movlw	6
  1231   004140  6E0C               	movwf	(??_read_input+1)^0,c
  1232   004142  0E13               	movlw	19
  1233   004144  6E0B               	movwf	??_read_input^0,c
  1234   004146  0EAE               	movlw	174
  1235   004148                     u177:
  1236   004148  2EE8               	decfsz	wreg,f,c
  1237   00414A  D7FE               	bra	u177
  1238   00414C  2E0B               	decfsz	??_read_input^0,f,c
  1239   00414E  D7FC               	bra	u177
  1240   004150  2E0C               	decfsz	(??_read_input+1)^0,f,c
  1241   004152  D7FA               	bra	u177
  1242   004154                     
  1243                           ;./functions.h: 40:     return count;
  1244   004154  5010               	movf	read_input@count^0,w,c
  1245   004156  0012               	return		;funcret
  1246   004158                     __end_of_read_input:
  1247                           	callstack 0
  1248                           
  1249 ;; *************** function _display_digit *****************
  1250 ;; Defined at:
  1251 ;;		line 44 in file "./functions.h"
  1252 ;; Parameters:    Size  Location     Type
  1253 ;;  digit           1    wreg     unsigned char 
  1254 ;; Auto vars:     Size  Location     Type
  1255 ;;  digit           1    9[COMRAM] unsigned char 
  1256 ;;  seg_code        5    4[COMRAM] const unsigned char [5]
  1257 ;; Return value:  Size  Location     Type
  1258 ;;                  1    wreg      void 
  1259 ;; Registers used:
  1260 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  1261 ;; Tracked objects:
  1262 ;;		On entry : 0/0
  1263 ;;		On exit  : 0/0
  1264 ;;		Unchanged: 0/0
  1265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1267 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1269 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1270 ;;Total ram usage:        6 bytes
  1271 ;; Hardware stack levels used: 1
  1272 ;; Hardware stack levels required when called: 1
  1273 ;; This function calls:
  1274 ;;		Nothing
  1275 ;; This function is called by:
  1276 ;;		_read_input
  1277 ;; This function uses a non-reentrant model
  1278 ;;
  1279                           
  1280                           	psect	text2
  1281   0042B6                     __ptext2:
  1282                           	callstack 0
  1283   0042B6                     _display_digit:
  1284                           	callstack 28
  1285                           
  1286                           ;incstack = 0
  1287                           ;display_digit@digit stored from wreg
  1288   0042B6  6E0A               	movwf	display_digit@digit^0,c
  1289   0042B8                     
  1290                           ;./functions.h: 45:     const char seg_code[] __attribute__((address(0x200))) = {0x3F, 0
      +                          x06, 0x5B, 0x4F,0x66};
  1291   0042B8  0E01               	movlw	low display_digit@F16363
  1292   0042BA  6EF6               	movwf	tblptrl,c
  1293   0042BC                     	if	0	;There is only one active tblptr byte
  1294   0042BC                     	endif
  1295   0042BC                     	if	0	;There are less than 3 active tblptr bytes
  1296   0042BC                     	endif
  1297   0042BC  EE20  F005         	lfsr	2,display_digit@seg_code
  1298   0042C0  0E04               	movlw	4
  1299   0042C2                     u20:
  1300   0042C2  0009               	tblrd		*+
  1301   0042C4  006F FFD7 FFDE     	movff	tablat,postinc2
  1302   0042CA  06E8               	decf	wreg,f,c
  1303   0042CC  E2FA               	bc	u20
  1304   0042CE                     
  1305                           ;./functions.h: 46:     PORTD = seg_code[digit];
  1306   0042CE  500A               	movf	display_digit@digit^0,w,c
  1307   0042D0  0F05               	addlw	low display_digit@seg_code
  1308   0042D2  6ED9               	movwf	fsr2l,c
  1309   0042D4  6ADA               	clrf	fsr2h,c
  1310   0042D6  50DF               	movf	indf2,w,c
  1311   0042D8  6ECD               	movwf	205,c	;volatile
  1312   0042DA  0012               	return		;funcret
  1313   0042DC                     __end_of_display_digit:
  1314                           	callstack 0
  1315                           
  1316 ;; *************** function _play_buzzer_melody *****************
  1317 ;; Defined at:
  1318 ;;		line 50 in file "./functions.h"
  1319 ;; Parameters:    Size  Location     Type
  1320 ;;		None
  1321 ;; Auto vars:     Size  Location     Type
  1322 ;;  i               2    8[COMRAM] int 
  1323 ;; Return value:  Size  Location     Type
  1324 ;;                  1    wreg      void 
  1325 ;; Registers used:
  1326 ;;		wreg, status,2, status,0, cstack
  1327 ;; Tracked objects:
  1328 ;;		On entry : 0/0
  1329 ;;		On exit  : 0/0
  1330 ;;		Unchanged: 0/0
  1331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1332 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1333 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1335 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1336 ;;Total ram usage:        2 bytes
  1337 ;; Hardware stack levels used: 1
  1338 ;; Hardware stack levels required when called: 2
  1339 ;; This function calls:
  1340 ;;		_wait
  1341 ;; This function is called by:
  1342 ;;		_main
  1343 ;; This function uses a non-reentrant model
  1344 ;;
  1345                           
  1346                           	psect	text3
  1347   004240                     __ptext3:
  1348                           	callstack 0
  1349   004240                     _play_buzzer_melody:
  1350                           	callstack 28
  1351   004240                     
  1352                           ;./functions.h: 51:     for (int i = 0; i < 5; i++) {
  1353   004240  0E00               	movlw	0
  1354   004242  6E0A               	movwf	(play_buzzer_melody@i+1)^0,c
  1355   004244  0E00               	movlw	0
  1356   004246  6E09               	movwf	play_buzzer_melody@i^0,c
  1357   004248                     l55:
  1358                           
  1359                           ;./functions.h: 52:         PORTBbits.RB5 = 1;
  1360   004248  8ACB               	bsf	203,5,c	;volatile
  1361   00424A                     
  1362                           ;./functions.h: 53:         wait(500);
  1363   00424A  0E01               	movlw	1
  1364   00424C  6E06               	movwf	(wait@ms+1)^0,c
  1365   00424E  0EF4               	movlw	244
  1366   004250  6E05               	movwf	wait@ms^0,c
  1367   004252  EC43  F021         	call	_wait	;wreg free
  1368   004256                     
  1369                           ;./functions.h: 54:         PORTBbits.RB5 = 0;
  1370   004256  9ACB               	bcf	203,5,c	;volatile
  1371                           
  1372                           ;./functions.h: 55:         wait(100);
  1373   004258  0E00               	movlw	0
  1374   00425A  6E06               	movwf	(wait@ms+1)^0,c
  1375   00425C  0E64               	movlw	100
  1376   00425E  6E05               	movwf	wait@ms^0,c
  1377   004260  EC43  F021         	call	_wait	;wreg free
  1378   004264                     
  1379                           ;./functions.h: 56:     }
  1380   004264  4A09               	infsnz	play_buzzer_melody@i^0,f,c
  1381   004266  2A0A               	incf	(play_buzzer_melody@i+1)^0,f,c
  1382   004268  BE0A               	btfsc	(play_buzzer_melody@i+1)^0,7,c
  1383   00426A  EF40  F021         	goto	u131
  1384   00426E  500A               	movf	(play_buzzer_melody@i+1)^0,w,c
  1385   004270  E109               	bnz	u130
  1386   004272  0E05               	movlw	5
  1387   004274  5C09               	subwf	play_buzzer_melody@i^0,w,c
  1388   004276  A0D8               	btfss	status,0,c
  1389   004278  EF40  F021         	goto	u131
  1390   00427C  EF42  F021         	goto	u130
  1391   004280                     u131:
  1392   004280  EF24  F021         	goto	l55
  1393   004284                     u130:
  1394   004284  0012               	return		;funcret
  1395   004286                     __end_of_play_buzzer_melody:
  1396                           	callstack 0
  1397                           
  1398 ;; *************** function _wait *****************
  1399 ;; Defined at:
  1400 ;;		line 14 in file "./functions.h"
  1401 ;; Parameters:    Size  Location     Type
  1402 ;;  ms              2    4[COMRAM] unsigned int 
  1403 ;; Auto vars:     Size  Location     Type
  1404 ;;  i               2    6[COMRAM] unsigned int 
  1405 ;; Return value:  Size  Location     Type
  1406 ;;                  1    wreg      void 
  1407 ;; Registers used:
  1408 ;;		wreg, status,2, status,0
  1409 ;; Tracked objects:
  1410 ;;		On entry : 0/0
  1411 ;;		On exit  : 0/0
  1412 ;;		Unchanged: 0/0
  1413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1414 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1415 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1417 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1418 ;;Total ram usage:        4 bytes
  1419 ;; Hardware stack levels used: 1
  1420 ;; Hardware stack levels required when called: 1
  1421 ;; This function calls:
  1422 ;;		Nothing
  1423 ;; This function is called by:
  1424 ;;		_play_buzzer_melody
  1425 ;;		_main
  1426 ;; This function uses a non-reentrant model
  1427 ;;
  1428                           
  1429                           	psect	text4
  1430   004286                     __ptext4:
  1431                           	callstack 0
  1432   004286                     _wait:
  1433                           	callstack 29
  1434   004286                     
  1435                           ;./functions.h: 15:     for (unsigned int i = 0; i < ms; i++) {
  1436   004286  0E00               	movlw	0
  1437   004288  6E08               	movwf	(wait@i+1)^0,c
  1438   00428A  0E00               	movlw	0
  1439   00428C  6E07               	movwf	wait@i^0,c
  1440   00428E  EF4F  F021         	goto	l35
  1441   004292                     l847:
  1442                           
  1443                           ;./functions.h: 16:         _delay((unsigned long)((1)*(4000000/4000.0)));
  1444   004292  0EC8               	movlw	200
  1445   004294                     u187:
  1446   004294  D000               	nop2	
  1447   004296  2EE8               	decfsz	wreg,f,c
  1448   004298  D7FD               	bra	u187
  1449   00429A                     
  1450                           ;./functions.h: 17:     }
  1451   00429A  4A07               	infsnz	wait@i^0,f,c
  1452   00429C  2A08               	incf	(wait@i+1)^0,f,c
  1453   00429E                     l35:
  1454   00429E  5005               	movf	wait@ms^0,w,c
  1455   0042A0  5C07               	subwf	wait@i^0,w,c
  1456   0042A2  5006               	movf	(wait@ms+1)^0,w,c
  1457   0042A4  5808               	subwfb	(wait@i+1)^0,w,c
  1458   0042A6  A0D8               	btfss	status,0,c
  1459   0042A8  EF58  F021         	goto	u121
  1460   0042AC  EF5A  F021         	goto	u120
  1461   0042B0                     u121:
  1462   0042B0  EF49  F021         	goto	l847
  1463   0042B4                     u120:
  1464   0042B4  0012               	return		;funcret
  1465   0042B6                     __end_of_wait:
  1466                           	callstack 0
  1467                           
  1468 ;; *************** function _init_ports *****************
  1469 ;; Defined at:
  1470 ;;		line 33 in file "./init.h"
  1471 ;; Parameters:    Size  Location     Type
  1472 ;;		None
  1473 ;; Auto vars:     Size  Location     Type
  1474 ;;		None
  1475 ;; Return value:  Size  Location     Type
  1476 ;;                  1    wreg      void 
  1477 ;; Registers used:
  1478 ;;		wreg, status,2
  1479 ;; Tracked objects:
  1480 ;;		On entry : 0/0
  1481 ;;		On exit  : 0/0
  1482 ;;		Unchanged: 0/0
  1483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1485 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1487 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1488 ;;Total ram usage:        0 bytes
  1489 ;; Hardware stack levels used: 1
  1490 ;; Hardware stack levels required when called: 1
  1491 ;; This function calls:
  1492 ;;		Nothing
  1493 ;; This function is called by:
  1494 ;;		_main
  1495 ;; This function uses a non-reentrant model
  1496 ;;
  1497                           
  1498                           	psect	text5
  1499   0042F6                     __ptext5:
  1500                           	callstack 0
  1501   0042F6                     _init_ports:
  1502                           	callstack 29
  1503   0042F6                     
  1504                           ;./init.h: 34:     ANSELD = 0b00000000;
  1505   0042F6  013A               	movlb	58	; () banked
  1506   0042F8  6B70               	clrf	112,b	;volatile
  1507                           
  1508                           ;./init.h: 35:     TRISD = 0b00000000;
  1509   0042FA  6AC5               	clrf	197,c	;volatile
  1510                           
  1511                           ;./init.h: 36:     PORTD = 0b00000000;
  1512   0042FC  6ACD               	clrf	205,c	;volatile
  1513                           
  1514                           ;./init.h: 38:     ANSELB = 0b00000000;
  1515   0042FE  6B50               	clrf	80,b	;volatile
  1516   004300                     
  1517                           ; BSR set to: 58
  1518                           ;./init.h: 39:     TRISB = 0b00001111;
  1519   004300  0E0F               	movlw	15
  1520   004302  6EC3               	movwf	195,c	;volatile
  1521   004304                     
  1522                           ; BSR set to: 58
  1523                           ;./init.h: 40:     PORTB = 0b00000000;
  1524   004304  6ACB               	clrf	203,c	;volatile
  1525   004306                     
  1526                           ; BSR set to: 58
  1527   004306  0012               	return		;funcret
  1528   004308                     __end_of_init_ports:
  1529                           	callstack 0
  1530                           
  1531 ;; *************** function _INTERRUPT_Initialize *****************
  1532 ;; Defined at:
  1533 ;;		line 21 in file "./init.h"
  1534 ;; Parameters:    Size  Location     Type
  1535 ;;		None
  1536 ;; Auto vars:     Size  Location     Type
  1537 ;;		None
  1538 ;; Return value:  Size  Location     Type
  1539 ;;                  1    wreg      void 
  1540 ;; Registers used:
  1541 ;;		None
  1542 ;; Tracked objects:
  1543 ;;		On entry : 0/0
  1544 ;;		On exit  : 0/0
  1545 ;;		Unchanged: 0/0
  1546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1547 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1548 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1550 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1551 ;;Total ram usage:        0 bytes
  1552 ;; Hardware stack levels used: 1
  1553 ;; Hardware stack levels required when called: 1
  1554 ;; This function calls:
  1555 ;;		Nothing
  1556 ;; This function is called by:
  1557 ;;		_main
  1558 ;; This function uses a non-reentrant model
  1559 ;;
  1560                           
  1561                           	psect	text6
  1562   004308                     __ptext6:
  1563                           	callstack 0
  1564   004308                     _INTERRUPT_Initialize:
  1565                           	callstack 29
  1566   004308                     
  1567                           ;./init.h: 22:     INTCON0bits.IPEN = 1;
  1568   004308  8AD2               	bsf	210,5,c	;volatile
  1569                           
  1570                           ;./init.h: 23:     INTCON0bits.GIEH = 1;
  1571   00430A  8ED2               	bsf	210,7,c	;volatile
  1572                           
  1573                           ;./init.h: 24:     INTCON0bits.GIEL = 1;
  1574   00430C  8CD2               	bsf	210,6,c	;volatile
  1575                           
  1576                           ;./init.h: 25:     INTCON0bits.INT0EDG = 1;
  1577   00430E  80D2               	bsf	210,0,c	;volatile
  1578                           
  1579                           ;./init.h: 26:     IPR1bits.INT0IP = 1;
  1580   004310  0139               	movlb	57	; () banked
  1581   004312  8181               	bsf	129,0,b	;volatile
  1582                           
  1583                           ;./init.h: 27:     PIE1bits.INT0IE = 1;
  1584   004314  8191               	bsf	145,0,b	;volatile
  1585                           
  1586                           ;./init.h: 28:     PIR1bits.INT0IF = 0;
  1587   004316  91A1               	bcf	161,0,b	;volatile
  1588   004318                     
  1589                           ; BSR set to: 57
  1590   004318  0012               	return		;funcret
  1591   00431A                     __end_of_INTERRUPT_Initialize:
  1592                           	callstack 0
  1593                           
  1594 ;; *************** function _INT0_ISR *****************
  1595 ;; Defined at:
  1596 ;;		line 60 in file "./functions.h"
  1597 ;; Parameters:    Size  Location     Type
  1598 ;;		None
  1599 ;; Auto vars:     Size  Location     Type
  1600 ;;  k               2    2[COMRAM] int 
  1601 ;; Return value:  Size  Location     Type
  1602 ;;                  1    wreg      void 
  1603 ;; Registers used:
  1604 ;;		wreg, status,2, status,0
  1605 ;; Tracked objects:
  1606 ;;		On entry : 0/0
  1607 ;;		On exit  : 0/0
  1608 ;;		Unchanged: 0/0
  1609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1611 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1612 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1613 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1614 ;;Total ram usage:        4 bytes
  1615 ;; Hardware stack levels used: 1
  1616 ;; This function calls:
  1617 ;;		Nothing
  1618 ;; This function is called by:
  1619 ;;		Interrupt level 2
  1620 ;; This function uses a non-reentrant model
  1621 ;;
  1622                           
  1623                           	psect	text7
  1624   0041D0                     __ptext7:
  1625                           	callstack 0
  1626   0041D0                     _INT0_ISR:
  1627                           	callstack 28
  1628   0041D0                     
  1629                           ;./functions.h: 61:     if (PIR1bits.INT0IF == 1) {
  1630   0041D0  0139               	movlb	57	; () banked
  1631   0041D2  A1A1               	btfss	161,0,b	;volatile
  1632   0041D4  EFEE  F020         	goto	i2u9_41
  1633   0041D8  EFF0  F020         	goto	i2u9_40
  1634   0041DC                     i2u9_41:
  1635   0041DC  EF1F  F021         	goto	i2l65
  1636   0041E0                     i2u9_40:
  1637   0041E0                     
  1638                           ; BSR set to: 57
  1639                           ;./functions.h: 62:         for (int k = 0; k < 10; k++) {
  1640   0041E0  0E00               	movlw	0
  1641   0041E2  6E04               	movwf	(INT0_ISR@k+1)^0,c
  1642   0041E4  0E00               	movlw	0
  1643   0041E6  6E03               	movwf	INT0_ISR@k^0,c
  1644   0041E8                     i2l63:
  1645                           
  1646                           ;./functions.h: 63:             PORTBbits.RB5 = 0;
  1647   0041E8  9ACB               	bcf	203,5,c	;volatile
  1648   0041EA                     
  1649                           ;./functions.h: 64:             _delay((unsigned long)((250)*(4000000/4000.0)));
  1650   0041EA  0E02               	movlw	2
  1651   0041EC  6E02               	movwf	(??_INT0_ISR+1)^0,c
  1652   0041EE  0E45               	movlw	69
  1653   0041F0  6E01               	movwf	??_INT0_ISR^0,c
  1654   0041F2  0EAA               	movlw	170
  1655   0041F4                     i2u19_47:
  1656   0041F4  2EE8               	decfsz	wreg,f,c
  1657   0041F6  D7FE               	bra	i2u19_47
  1658   0041F8  2E01               	decfsz	??_INT0_ISR^0,f,c
  1659   0041FA  D7FC               	bra	i2u19_47
  1660   0041FC  2E02               	decfsz	(??_INT0_ISR+1)^0,f,c
  1661   0041FE  D7FA               	bra	i2u19_47
  1662   004200                     
  1663                           ;./functions.h: 65:             PORTBbits.RB5 = 1;
  1664   004200  8ACB               	bsf	203,5,c	;volatile
  1665                           
  1666                           ;./functions.h: 66:             _delay((unsigned long)((250)*(4000000/4000.0)));
  1667   004202  0E02               	movlw	2
  1668   004204  6E02               	movwf	(??_INT0_ISR+1)^0,c
  1669   004206  0E45               	movlw	69
  1670   004208  6E01               	movwf	??_INT0_ISR^0,c
  1671   00420A  0EAA               	movlw	170
  1672   00420C                     i2u20_47:
  1673   00420C  2EE8               	decfsz	wreg,f,c
  1674   00420E  D7FE               	bra	i2u20_47
  1675   004210  2E01               	decfsz	??_INT0_ISR^0,f,c
  1676   004212  D7FC               	bra	i2u20_47
  1677   004214  2E02               	decfsz	(??_INT0_ISR+1)^0,f,c
  1678   004216  D7FA               	bra	i2u20_47
  1679   004218                     
  1680                           ;./functions.h: 67:         }
  1681   004218  4A03               	infsnz	INT0_ISR@k^0,f,c
  1682   00421A  2A04               	incf	(INT0_ISR@k+1)^0,f,c
  1683   00421C  BE04               	btfsc	(INT0_ISR@k+1)^0,7,c
  1684   00421E  EF1A  F021         	goto	i2u10_41
  1685   004222  5004               	movf	(INT0_ISR@k+1)^0,w,c
  1686   004224  E109               	bnz	i2u10_40
  1687   004226  0E0A               	movlw	10
  1688   004228  5C03               	subwf	INT0_ISR@k^0,w,c
  1689   00422A  A0D8               	btfss	status,0,c
  1690   00422C  EF1A  F021         	goto	i2u10_41
  1691   004230  EF1C  F021         	goto	i2u10_40
  1692   004234                     i2u10_41:
  1693   004234  EFF4  F020         	goto	i2l63
  1694   004238                     i2u10_40:
  1695   004238                     
  1696                           ;./functions.h: 68:         PIR1bits.INT0IF = 0;
  1697   004238  0139               	movlb	57	; () banked
  1698   00423A  91A1               	bcf	161,0,b	;volatile
  1699                           
  1700                           ;./functions.h: 69:         PORTBbits.RB5 = 0;
  1701   00423C  9ACB               	bcf	203,5,c	;volatile
  1702   00423E                     i2l65:
  1703                           
  1704                           ; BSR set to: 57
  1705   00423E  0011               	retfie		f
  1706   004240                     __end_of_INT0_ISR:
  1707                           	callstack 0
  1708                           
  1709                           ;
  1710                           ; H/W Interrupt Vector Table @ 0x4008
  1711                           ;
  1712                           
  1713                           	psect	ivt0x4008
  1714   004008                     __pivt0x4008:
  1715                           	callstack 0
  1716   004008                     ivt0x4008_base:
  1717                           	callstack 0
  1718                           
  1719                           ; Vector 0 : SWINT
  1720   004008  102B               	dw	ivt0x4008_undefint shr (0+2)
  1721                           
  1722                           ; Vector 1 : HLVD
  1723   00400A  102B               	dw	ivt0x4008_undefint shr (0+2)
  1724                           
  1725                           ; Vector 2 : OSF
  1726   00400C  102B               	dw	ivt0x4008_undefint shr (0+2)
  1727                           
  1728                           ; Vector 3 : CSW
  1729   00400E  102B               	dw	ivt0x4008_undefint shr (0+2)
  1730                           
  1731                           ; Vector 4 : NVM
  1732   004010  102B               	dw	ivt0x4008_undefint shr (0+2)
  1733                           
  1734                           ; Vector 5 : SCAN
  1735   004012  102B               	dw	ivt0x4008_undefint shr (0+2)
  1736                           
  1737                           ; Vector 6 : CRC
  1738   004014  102B               	dw	ivt0x4008_undefint shr (0+2)
  1739                           
  1740                           ; Vector 7 : IOC
  1741   004016  102B               	dw	ivt0x4008_undefint shr (0+2)
  1742                           
  1743                           ; Vector 8 : INT0
  1744   004018  1074               	dw	_INT0_ISR shr (0+2)
  1745                           
  1746                           ; Vector 9 : ZCD
  1747   00401A  102B               	dw	ivt0x4008_undefint shr (0+2)
  1748                           
  1749                           ; Vector 10 : AD
  1750   00401C  102B               	dw	ivt0x4008_undefint shr (0+2)
  1751                           
  1752                           ; Vector 11 : ADT
  1753   00401E  102B               	dw	ivt0x4008_undefint shr (0+2)
  1754                           
  1755                           ; Vector 12 : CMP1
  1756   004020  102B               	dw	ivt0x4008_undefint shr (0+2)
  1757                           
  1758                           ; Vector 13 : SMT1
  1759   004022  102B               	dw	ivt0x4008_undefint shr (0+2)
  1760                           
  1761                           ; Vector 14 : SMT1PRA
  1762   004024  102B               	dw	ivt0x4008_undefint shr (0+2)
  1763                           
  1764                           ; Vector 15 : SMT1PRW
  1765   004026  102B               	dw	ivt0x4008_undefint shr (0+2)
  1766                           
  1767                           ; Vector 16 : DMA1SCNT
  1768   004028  102B               	dw	ivt0x4008_undefint shr (0+2)
  1769                           
  1770                           ; Vector 17 : DMA1DCNT
  1771   00402A  102B               	dw	ivt0x4008_undefint shr (0+2)
  1772                           
  1773                           ; Vector 18 : DMA1OR
  1774   00402C  102B               	dw	ivt0x4008_undefint shr (0+2)
  1775                           
  1776                           ; Vector 19 : DMA1A
  1777   00402E  102B               	dw	ivt0x4008_undefint shr (0+2)
  1778                           
  1779                           ; Vector 20 : SPI1RX
  1780   004030  102B               	dw	ivt0x4008_undefint shr (0+2)
  1781                           
  1782                           ; Vector 21 : SPI1TX
  1783   004032  102B               	dw	ivt0x4008_undefint shr (0+2)
  1784                           
  1785                           ; Vector 22 : SPI1
  1786   004034  102B               	dw	ivt0x4008_undefint shr (0+2)
  1787                           
  1788                           ; Vector 23 : I2C1RX
  1789   004036  102B               	dw	ivt0x4008_undefint shr (0+2)
  1790                           
  1791                           ; Vector 24 : I2C1TX
  1792   004038  102B               	dw	ivt0x4008_undefint shr (0+2)
  1793                           
  1794                           ; Vector 25 : I2C1
  1795   00403A  102B               	dw	ivt0x4008_undefint shr (0+2)
  1796                           
  1797                           ; Vector 26 : I2C1E
  1798   00403C  102B               	dw	ivt0x4008_undefint shr (0+2)
  1799                           
  1800                           ; Vector 27 : U1RX
  1801   00403E  102B               	dw	ivt0x4008_undefint shr (0+2)
  1802                           
  1803                           ; Vector 28 : U1TX
  1804   004040  102B               	dw	ivt0x4008_undefint shr (0+2)
  1805                           
  1806                           ; Vector 29 : U1E
  1807   004042  102B               	dw	ivt0x4008_undefint shr (0+2)
  1808                           
  1809                           ; Vector 30 : U1
  1810   004044  102B               	dw	ivt0x4008_undefint shr (0+2)
  1811                           
  1812                           ; Vector 31 : TMR0
  1813   004046  102B               	dw	ivt0x4008_undefint shr (0+2)
  1814                           
  1815                           ; Vector 32 : TMR1
  1816   004048  102B               	dw	ivt0x4008_undefint shr (0+2)
  1817                           
  1818                           ; Vector 33 : TMR1G
  1819   00404A  102B               	dw	ivt0x4008_undefint shr (0+2)
  1820                           
  1821                           ; Vector 34 : TMR2
  1822   00404C  102B               	dw	ivt0x4008_undefint shr (0+2)
  1823                           
  1824                           ; Vector 35 : CCP1
  1825   00404E  102B               	dw	ivt0x4008_undefint shr (0+2)
  1826                           
  1827                           ; Vector 36 : Undefined
  1828   004050  102B               	dw	ivt0x4008_undefint shr (0+2)
  1829                           
  1830                           ; Vector 37 : NCO1
  1831   004052  102B               	dw	ivt0x4008_undefint shr (0+2)
  1832                           
  1833                           ; Vector 38 : CWG1
  1834   004054  102B               	dw	ivt0x4008_undefint shr (0+2)
  1835                           
  1836                           ; Vector 39 : CLC1
  1837   004056  102B               	dw	ivt0x4008_undefint shr (0+2)
  1838                           
  1839                           ; Vector 40 : INT1
  1840   004058  102B               	dw	ivt0x4008_undefint shr (0+2)
  1841                           
  1842                           ; Vector 41 : CMP2
  1843   00405A  102B               	dw	ivt0x4008_undefint shr (0+2)
  1844                           
  1845                           ; Vector 42 : DMA2SCNT
  1846   00405C  102B               	dw	ivt0x4008_undefint shr (0+2)
  1847                           
  1848                           ; Vector 43 : DMA2DCNT
  1849   00405E  102B               	dw	ivt0x4008_undefint shr (0+2)
  1850                           
  1851                           ; Vector 44 : DMA2OR
  1852   004060  102B               	dw	ivt0x4008_undefint shr (0+2)
  1853                           
  1854                           ; Vector 45 : DMA2A
  1855   004062  102B               	dw	ivt0x4008_undefint shr (0+2)
  1856                           
  1857                           ; Vector 46 : I2C2RX
  1858   004064  102B               	dw	ivt0x4008_undefint shr (0+2)
  1859                           
  1860                           ; Vector 47 : I2C2TX
  1861   004066  102B               	dw	ivt0x4008_undefint shr (0+2)
  1862                           
  1863                           ; Vector 48 : I2C2
  1864   004068  102B               	dw	ivt0x4008_undefint shr (0+2)
  1865                           
  1866                           ; Vector 49 : I2C2E
  1867   00406A  102B               	dw	ivt0x4008_undefint shr (0+2)
  1868                           
  1869                           ; Vector 50 : U2RX
  1870   00406C  102B               	dw	ivt0x4008_undefint shr (0+2)
  1871                           
  1872                           ; Vector 51 : U2TX
  1873   00406E  102B               	dw	ivt0x4008_undefint shr (0+2)
  1874                           
  1875                           ; Vector 52 : U2E
  1876   004070  102B               	dw	ivt0x4008_undefint shr (0+2)
  1877                           
  1878                           ; Vector 53 : U2
  1879   004072  102B               	dw	ivt0x4008_undefint shr (0+2)
  1880                           
  1881                           ; Vector 54 : TMR3
  1882   004074  102B               	dw	ivt0x4008_undefint shr (0+2)
  1883                           
  1884                           ; Vector 55 : TMR3G
  1885   004076  102B               	dw	ivt0x4008_undefint shr (0+2)
  1886                           
  1887                           ; Vector 56 : TMR4
  1888   004078  102B               	dw	ivt0x4008_undefint shr (0+2)
  1889                           
  1890                           ; Vector 57 : CCP2
  1891   00407A  102B               	dw	ivt0x4008_undefint shr (0+2)
  1892                           
  1893                           ; Vector 58 : Undefined
  1894   00407C  102B               	dw	ivt0x4008_undefint shr (0+2)
  1895                           
  1896                           ; Vector 59 : CWG2
  1897   00407E  102B               	dw	ivt0x4008_undefint shr (0+2)
  1898                           
  1899                           ; Vector 60 : CLC2
  1900   004080  102B               	dw	ivt0x4008_undefint shr (0+2)
  1901                           
  1902                           ; Vector 61 : INT2
  1903   004082  102B               	dw	ivt0x4008_undefint shr (0+2)
  1904                           
  1905                           ; Vector 62 : Undefined
  1906   004084  102B               	dw	ivt0x4008_undefint shr (0+2)
  1907                           
  1908                           ; Vector 63 : Undefined
  1909   004086  102B               	dw	ivt0x4008_undefint shr (0+2)
  1910                           
  1911                           ; Vector 64 : Undefined
  1912   004088  102B               	dw	ivt0x4008_undefint shr (0+2)
  1913                           
  1914                           ; Vector 65 : Undefined
  1915   00408A  102B               	dw	ivt0x4008_undefint shr (0+2)
  1916                           
  1917                           ; Vector 66 : Undefined
  1918   00408C  102B               	dw	ivt0x4008_undefint shr (0+2)
  1919                           
  1920                           ; Vector 67 : Undefined
  1921   00408E  102B               	dw	ivt0x4008_undefint shr (0+2)
  1922                           
  1923                           ; Vector 68 : Undefined
  1924   004090  102B               	dw	ivt0x4008_undefint shr (0+2)
  1925                           
  1926                           ; Vector 69 : Undefined
  1927   004092  102B               	dw	ivt0x4008_undefint shr (0+2)
  1928                           
  1929                           ; Vector 70 : TMR5
  1930   004094  102B               	dw	ivt0x4008_undefint shr (0+2)
  1931                           
  1932                           ; Vector 71 : TMR5G
  1933   004096  102B               	dw	ivt0x4008_undefint shr (0+2)
  1934                           
  1935                           ; Vector 72 : TMR6
  1936   004098  102B               	dw	ivt0x4008_undefint shr (0+2)
  1937                           
  1938                           ; Vector 73 : CCP3
  1939   00409A  102B               	dw	ivt0x4008_undefint shr (0+2)
  1940                           
  1941                           ; Vector 74 : CWG3
  1942   00409C  102B               	dw	ivt0x4008_undefint shr (0+2)
  1943                           
  1944                           ; Vector 75 : CLC3
  1945   00409E  102B               	dw	ivt0x4008_undefint shr (0+2)
  1946                           
  1947                           ; Vector 76 : Undefined
  1948   0040A0  102B               	dw	ivt0x4008_undefint shr (0+2)
  1949                           
  1950                           ; Vector 77 : Undefined
  1951   0040A2  102B               	dw	ivt0x4008_undefint shr (0+2)
  1952                           
  1953                           ; Vector 78 : Undefined
  1954   0040A4  102B               	dw	ivt0x4008_undefint shr (0+2)
  1955                           
  1956                           ; Vector 79 : Undefined
  1957   0040A6  102B               	dw	ivt0x4008_undefint shr (0+2)
  1958                           
  1959                           ; Vector 80 : CCP4
  1960   0040A8  102B               	dw	ivt0x4008_undefint shr (0+2)
  1961                           
  1962                           ; Vector 81 : CLC4
  1963   0040AA  102B               	dw	ivt0x4008_undefint shr (0+2)
  1964   0040AC                     ivt0x4008_undefint:
  1965                           	callstack 0
  1966   0040AC  00FF               	reset	
  1967                           
  1968                           	psect	rparam
  1969   000001                     ___rparam_used  equ	1
  1970   000000                     ___param_bank   equ	0
  1971   000000                     __Lparam        equ	__Lrparam
  1972   000000                     __Hparam        equ	__Hrparam
  1973                           
  1974                           	psect	config
  1975                           
  1976                           ;Config register CONFIG1L @ 0x300000
  1977                           ;	External Oscillator Selection
  1978                           ;	FEXTOSC = LP, LP (crystal oscillator) optimized for 32.768 kHz; PFM set to low power
  1979                           ;	Reset Oscillator Selection
  1980                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
  1981   300000                     	org	3145728
  1982   300000  F8                 	db	248
  1983                           
  1984                           ;Config register CONFIG1H @ 0x300001
  1985                           ;	Clock out Enable bit
  1986                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  1987                           ;	PRLOCKED One-Way Set Enable bit
  1988                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
  1989                           ;	Clock Switch Enable bit
  1990                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  1991                           ;	Fail-Safe Clock Monitor Enable bit
  1992                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  1993   300001                     	org	3145729
  1994   300001  FF                 	db	255
  1995                           
  1996                           ;Config register CONFIG2L @ 0x300002
  1997                           ;	MCLR Enable bit
  1998                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  1999                           ;	Power-up timer selection bits
  2000                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  2001                           ;	Multi-vector enable bit
  2002                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
  2003                           ;	IVTLOCK bit One-way set enable bit
  2004                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
  2005                           ;	Low Power BOR Enable bit
  2006                           ;	LPBOREN = OFF, ULPBOR disabled
  2007                           ;	Brown-out Reset Enable bits
  2008                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
  2009   300002                     	org	3145730
  2010   300002  FF                 	db	255
  2011                           
  2012                           ;Config register CONFIG2H @ 0x300003
  2013                           ;	Brown-out Reset Voltage Selection bits
  2014                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
  2015                           ;	ZCD Disable bit
  2016                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  2017                           ;	PPSLOCK bit One-Way Set Enable bit
  2018                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
  2019                           ;	Stack Full/Underflow Reset Enable bit
  2020                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2021                           ;	Debugger Enable bit
  2022                           ;	DEBUG = OFF, Background debugger disabled
  2023                           ;	Extended Instruction Set Enable bit
  2024                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  2025   300003                     	org	3145731
  2026   300003  FF                 	db	255
  2027                           
  2028                           ;Config register CONFIG3L @ 0x300004
  2029                           ;	WDT Period selection bits
  2030                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  2031                           ;	WDT operating mode
  2032                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  2033   300004                     	org	3145732
  2034   300004  9F                 	db	159
  2035                           
  2036                           ;Config register CONFIG3H @ 0x300005
  2037                           ;	WDT Window Select bits
  2038                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  2039                           ;	WDT input clock selector
  2040                           ;	WDTCCS = SC, Software Control
  2041   300005                     	org	3145733
  2042   300005  FF                 	db	255
  2043                           
  2044                           ;Config register CONFIG4L @ 0x300006
  2045                           ;	Boot Block Size selection bits
  2046                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  2047                           ;	Boot Block enable bit
  2048                           ;	BBEN = OFF, Boot block disabled
  2049                           ;	Storage Area Flash enable bit
  2050                           ;	SAFEN = OFF, SAF disabled
  2051                           ;	Application Block write protection bit
  2052                           ;	WRTAPP = OFF, Application Block not write protected
  2053   300006                     	org	3145734
  2054   300006  FF                 	db	255
  2055                           
  2056                           ;Config register CONFIG4H @ 0x300007
  2057                           ;	Boot Block Write Protection bit
  2058                           ;	WRTB = OFF, Boot Block not write-protected
  2059                           ;	Configuration Register Write Protection bit
  2060                           ;	WRTC = OFF, Configuration registers not write-protected
  2061                           ;	Data EEPROM Write Protection bit
  2062                           ;	WRTD = OFF, Data EEPROM not write-protected
  2063                           ;	SAF Write protection bit
  2064                           ;	WRTSAF = OFF, SAF not Write Protected
  2065                           ;	Low Voltage Programming Enable bit
  2066                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
  2067   300007                     	org	3145735
  2068   300007  FF                 	db	255
  2069                           
  2070                           ;Config register CONFIG5L @ 0x300008
  2071                           ;	PFM and Data EEPROM Code Protection bit
  2072                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  2073   300008                     	org	3145736
  2074   300008  FF                 	db	255
  2075                           
  2076                           ;Config register CONFIG5H @ 0x300009
  2077                           ;	unspecified, using default values
  2078   300009                     	org	3145737
  2079   300009  FF                 	db	255
  2080                           tosu	equ	0x3FFF
  2081                           tosh	equ	0x3FFE
  2082                           tosl	equ	0x3FFD
  2083                           stkptr	equ	0x3FFC
  2084                           pclatu	equ	0x3FFB
  2085                           pclath	equ	0x3FFA
  2086                           pcl	equ	0x3FF9
  2087                           tblptru	equ	0x3FF8
  2088                           tblptrh	equ	0x3FF7
  2089                           tblptrl	equ	0x3FF6
  2090                           tablat	equ	0x3FF5
  2091                           prodh	equ	0x3FF4
  2092                           prodl	equ	0x3FF3
  2093                           indf0	equ	0x3FEF
  2094                           postinc0	equ	0x3FEE
  2095                           postdec0	equ	0x3FED
  2096                           preinc0	equ	0x3FEC
  2097                           plusw0	equ	0x3FEB
  2098                           fsr0h	equ	0x3FEA
  2099                           fsr0l	equ	0x3FE9
  2100                           wreg	equ	0x3FE8
  2101                           indf1	equ	0x3FE7
  2102                           postinc1	equ	0x3FE6
  2103                           postdec1	equ	0x3FE5
  2104                           preinc1	equ	0x3FE4
  2105                           plusw1	equ	0x3FE3
  2106                           fsr1h	equ	0x3FE2
  2107                           fsr1l	equ	0x3FE1
  2108                           bsr	equ	0x3FE0
  2109                           indf2	equ	0x3FDF
  2110                           postinc2	equ	0x3FDE
  2111                           postdec2	equ	0x3FDD
  2112                           preinc2	equ	0x3FDC
  2113                           plusw2	equ	0x3FDB
  2114                           fsr2h	equ	0x3FDA
  2115                           fsr2l	equ	0x3FD9
  2116                           status	equ	0x3FD8

Data Sizes:
    Strings     0
    Constant    5
=======
   838   0039A1                     _PIR1bits       set	14753
   839   003991                     _PIE1bits       set	14737
   840   003981                     _IPR1bits       set	14721
   841   003A50                     _ANSELB         set	14928
   842   003A70                     _ANSELD         set	14960
   843   003FCB                     _PORTBbits      set	16331
   844   003FCB                     _PORTB          set	16331
   845   003FC3                     _TRISB          set	16323
   846   003FCD                     _PORTD          set	16333
   847   003FC5                     _TRISD          set	16325
   848   003FD5                     _IVTBASEL       set	16341
   849   003FD6                     _IVTBASEH       set	16342
   850   003FD7                     _IVTBASEU       set	16343
   851   003FD2                     _INTCON0bits    set	16338
   852                           
   853                           ; #config settings
   854                           
   855                           	psect	cinit
   856   004322                     __pcinit:
   857                           	callstack 0
   858   004322                     start_initialization:
   859                           	callstack 0
   860   004322                     __initialization:
   861                           	callstack 0
   862                           
   863                           ;
   864                           ; Setup IVTBASE
   865                           ;
   866   003FD5                     IVTBASEL        equ	16341
   867   003FD6                     IVTBASEH        equ	16342
   868   003FD7                     IVTBASEU        equ	16343
   869   004322  0E08               	movlw	(ivt0x4008_base shr 0)& (0+255)
   870   004324  6ED5               	movwf	213,c
   871   004326  0E40               	movlw	(ivt0x4008_base shr (0+8))& (0+255)
   872   004328  6ED6               	movwf	214,c
   873   00432A  0E00               	movlw	(ivt0x4008_base shr (0+16))& (0+255)
   874   00432C  6ED7               	movwf	215,c
   875   00432E                     end_of_initialization:
   876                           	callstack 0
   877   00432E                     __end_of__initialization:
   878                           	callstack 0
   879   00432E  0100               	movlb	0
   880   004330  EFC5  F020         	goto	_main	;jump to C main() function
   881                           
   882                           	psect	cstackCOMRAM
   883   000001                     __pcstackCOMRAM:
   884                           	callstack 0
   885   000001                     ??_INT0_ISR:
   886                           
   887                           ; 1 bytes @ 0x0
   888   000001                     	ds	2
   889   000003                     INT0_ISR@k:
   890                           	callstack 0
   891                           
   892                           ; 2 bytes @ 0x2
   893   000003                     	ds	2
   894   000005                     display_digit@digit:
   895                           	callstack 0
   896   000005                     wait@ms:
   897                           	callstack 0
   898   000005                     
   899                           ; 1 bytes @ 0x4
   900   000005                     	ds	2
   901   000007                     wait@i:
   902                           	callstack 0
   903   000007                     
   904                           ; 1 bytes @ 0x6
   905   000007                     	ds	2
   906   000009                     play_buzzer_melody@i:
   907                           	callstack 0
   908   000009                     ??_read_input:
   909   000009                     
   910                           ; 1 bytes @ 0x8
   911   000009                     	ds	1
   912   00000A                     read_input@timeout:
   913                           	callstack 0
   914                           
   915                           ; 2 bytes @ 0x9
   916   00000A                     	ds	2
   917   00000C                     read_input@pr_input:
   918                           	callstack 0
   919                           
   920                           ; 1 bytes @ 0xB
   921   00000C                     	ds	1
   922   00000D                     read_input@elapsed:
   923                           	callstack 0
   924                           
   925                           ; 2 bytes @ 0xC
   926   00000D                     	ds	2
   927   00000F                     _read_input$202:
   928                           	callstack 0
   929                           
   930                           ; 2 bytes @ 0xE
   931   00000F                     	ds	2
   932   000011                     read_input@last_state:
   933                           	callstack 0
   934                           
   935                           ; 1 bytes @ 0x10
   936   000011                     	ds	1
   937   000012                     read_input@current_state:
   938                           	callstack 0
   939                           
   940                           ; 1 bytes @ 0x11
   941   000012                     	ds	1
   942   000013                     read_input@count:
   943                           	callstack 0
   944                           
   945                           ; 1 bytes @ 0x12
   946   000013                     	ds	1
   947   000014                     main@code_entered:
   948                           	callstack 0
   949   000014                     
   950                           ; 1 bytes @ 0x13
   951   000014                     	ds	1
   952   000015                     main@first_input:
   953                           	callstack 0
   954                           
   955                           ; 1 bytes @ 0x14
   956   000015                     	ds	1
   957   000016                     main@second_input:
   958                           	callstack 0
   959                           
   960                           ; 1 bytes @ 0x15
   961   000016                     	ds	1
   962                           
   963 ;;
   964 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   965 ;;
   966 ;; *************** function _main *****************
   967 ;; Defined at:
   968 ;;		line 15 in file "SystemMainCode.c"
   969 ;; Parameters:    Size  Location     Type
   970 ;;		None
   971 ;; Auto vars:     Size  Location     Type
   972 ;;  second_input    1   21[COMRAM] unsigned char 
   973 ;;  first_input     1   20[COMRAM] unsigned char 
   974 ;;  code_entered    1   19[COMRAM] unsigned char 
   975 ;; Return value:  Size  Location     Type
   976 ;;                  1    wreg      void 
   977 ;; Registers used:
   978 ;;		wreg, status,2, status,0, cstack
   979 ;; Tracked objects:
   980 ;;		On entry : 0/0
   981 ;;		On exit  : 0/0
   982 ;;		Unchanged: 0/0
   983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   984 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   985 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   987 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   988 ;;Total ram usage:        3 bytes
   989 ;; Hardware stack levels required when called: 3
   990 ;; This function calls:
   991 ;;		_INTERRUPT_Initialize
   992 ;;		_display_digit
   993 ;;		_init_ports
   994 ;;		_play_buzzer_melody
   995 ;;		_read_input
   996 ;;		_wait
   997 ;; This function is called by:
   998 ;;		Startup code after reset
   999 ;; This function uses a non-reentrant model
  1000 ;;
  1001                           
  1002                           	psect	text0
  1003   00418A                     __ptext0:
  1004                           	callstack 0
  1005   00418A                     _main:
  1006                           	callstack 28
  1007   00418A                     
  1008                           ;SystemMainCode.c: 16:     init_ports();
  1009   00418A  EC9A  F021         	call	_init_ports	;wreg free
  1010                           
  1011                           ;SystemMainCode.c: 17:     INTERRUPT_Initialize();
  1012   00418E  EC83  F021         	call	_INTERRUPT_Initialize	;wreg free
  1013   004192                     l922:
  1014                           
  1015                           ;SystemMainCode.c: 29:          first_input = read_input(1);
  1016   004192  0E01               	movlw	1
  1017   004194  EC59  F020         	call	_read_input
  1018   004198  6E15               	movwf	main@first_input^0,c
  1019   00419A                     
  1020                           ;SystemMainCode.c: 30:         display_digit(first_input);
  1021   00419A  5015               	movf	main@first_input^0,w,c
  1022   00419C  ECA3  F021         	call	_display_digit
  1023                           
  1024                           ;SystemMainCode.c: 31:         wait(1500);
  1025   0041A0  0E05               	movlw	5
  1026   0041A2  6E06               	movwf	(wait@ms+1)^0,c
  1027   0041A4  0EDC               	movlw	220
  1028   0041A6  6E05               	movwf	wait@ms^0,c
  1029   0041A8  EC6B  F021         	call	_wait	;wreg free
  1030                           
  1031                           ;SystemMainCode.c: 34:         while (PORTBbits.RB3 != 1)
  1032   0041AC  EFDC  F020         	goto	l928
  1033   0041B0                     l926:
  1034                           
  1035                           ;SystemMainCode.c: 38:          second_input = read_input(2);
  1036   0041B0  0E02               	movlw	2
  1037   0041B2  EC59  F020         	call	_read_input
  1038   0041B6  6E16               	movwf	main@second_input^0,c
  1039   0041B8                     l928:
  1040                           
  1041                           ;SystemMainCode.c: 34:         while (PORTBbits.RB3 != 1)
  1042   0041B8  A6CB               	btfss	203,3,c	;volatile
  1043   0041BA  EFE1  F020         	goto	u231
  1044   0041BE  EFE3  F020         	goto	u230
  1045   0041C2                     u231:
  1046   0041C2  EFD8  F020         	goto	l926
  1047   0041C6                     u230:
  1048   0041C6                     
  1049                           ;SystemMainCode.c: 39:         display_digit(second_input);
  1050   0041C6  5016               	movf	main@second_input^0,w,c
  1051   0041C8  ECA3  F021         	call	_display_digit
  1052   0041CC                     
  1053                           ;SystemMainCode.c: 40:         wait(1500);
  1054   0041CC  0E05               	movlw	5
  1055   0041CE  6E06               	movwf	(wait@ms+1)^0,c
  1056   0041D0  0EDC               	movlw	220
  1057   0041D2  6E05               	movwf	wait@ms^0,c
  1058   0041D4  EC6B  F021         	call	_wait	;wreg free
  1059   0041D8                     
  1060                           ;SystemMainCode.c: 42:          code_entered = (second_input << 4) | first_input;
  1061   0041D8  3816               	swapf	main@second_input^0,w,c
  1062   0041DA  0BF0               	andlw	240
  1063   0041DC  1015               	iorwf	main@first_input^0,w,c
  1064   0041DE  6E14               	movwf	main@code_entered^0,c
  1065   0041E0                     
  1066                           ;SystemMainCode.c: 44:         if (code_entered == 0x23) {
  1067   0041E0  0E23               	movlw	35
  1068   0041E2  1814               	xorwf	main@code_entered^0,w,c
  1069   0041E4  A4D8               	btfss	status,2,c
  1070   0041E6  EFF7  F020         	goto	u241
  1071   0041EA  EFF9  F020         	goto	u240
  1072   0041EE                     u241:
  1073   0041EE  EF09  F021         	goto	l944
  1074   0041F2                     u240:
  1075   0041F2                     
  1076                           ;SystemMainCode.c: 46:         PORTBbits.RB6 = 1;
  1077   0041F2  8CCB               	bsf	203,6,c	;volatile
  1078   0041F4                     
  1079                           ;SystemMainCode.c: 47:         wait(1000);
  1080   0041F4  0E03               	movlw	3
  1081   0041F6  6E06               	movwf	(wait@ms+1)^0,c
  1082   0041F8  0EE8               	movlw	232
  1083   0041FA  6E05               	movwf	wait@ms^0,c
  1084   0041FC  EC6B  F021         	call	_wait	;wreg free
  1085   004200                     
  1086                           ;SystemMainCode.c: 48:         PORTBbits.RB6 = 0;
  1087   004200  9CCB               	bcf	203,6,c	;volatile
  1088                           
  1089                           ;SystemMainCode.c: 49:         wait(1000);
  1090   004202  0E03               	movlw	3
  1091   004204  6E06               	movwf	(wait@ms+1)^0,c
  1092   004206  0EE8               	movlw	232
  1093   004208  6E05               	movwf	wait@ms^0,c
  1094   00420A  EC6B  F021         	call	_wait	;wreg free
  1095                           
  1096                           ;SystemMainCode.c: 51:         }else {
  1097   00420E  EFC9  F020         	goto	l922
  1098   004212                     l944:
  1099                           
  1100                           ;SystemMainCode.c: 53:     play_buzzer_melody();
  1101   004212  EC48  F021         	call	_play_buzzer_melody	;wreg free
  1102   004216  EFC9  F020         	goto	l922
  1103   00421A  EF57  F020         	goto	start
  1104   00421E                     __end_of_main:
  1105                           	callstack 0
  1106                           
  1107 ;; *************** function _read_input *****************
  1108 ;; Defined at:
  1109 ;;		line 17 in file "./functions.h"
  1110 ;; Parameters:    Size  Location     Type
  1111 ;;  pr_input        1    wreg     unsigned char 
  1112 ;; Auto vars:     Size  Location     Type
  1113 ;;  pr_input        1   11[COMRAM] unsigned char 
  1114 ;;  current_stat    1   17[COMRAM] unsigned char 
  1115 ;;  elapsed         2   12[COMRAM] unsigned int 
  1116 ;;  timeout         2    9[COMRAM] unsigned int 
  1117 ;;  count           1   18[COMRAM] unsigned char 
  1118 ;;  last_state      1   16[COMRAM] unsigned char 
  1119 ;; Return value:  Size  Location     Type
  1120 ;;                  1    wreg      unsigned char 
  1121 ;; Registers used:
  1122 ;;		wreg, status,2, status,0, cstack
  1123 ;; Tracked objects:
  1124 ;;		On entry : 0/0
  1125 ;;		On exit  : 0/0
  1126 ;;		Unchanged: 0/0
  1127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1129 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1130 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1131 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1132 ;;Total ram usage:       11 bytes
  1133 ;; Hardware stack levels used: 1
  1134 ;; Hardware stack levels required when called: 2
  1135 ;; This function calls:
  1136 ;;		_wait
  1137 ;; This function is called by:
  1138 ;;		_main
  1139 ;; This function uses a non-reentrant model
  1140 ;;
  1141                           
  1142                           	psect	text1
  1143   0040B2                     __ptext1:
  1144                           	callstack 0
  1145   0040B2                     _read_input:
  1146                           	callstack 28
  1147                           
  1148                           ;incstack = 0
  1149                           ;read_input@pr_input stored from wreg
  1150   0040B2  6E0C               	movwf	read_input@pr_input^0,c
  1151   0040B4                     
  1152                           ;./functions.h: 18:     unsigned char count = 0;
  1153   0040B4  6A13               	clrf	read_input@count^0,c
  1154   0040B6                     
  1155                           ;./functions.h: 19:     unsigned char last_state = 1;
  1156   0040B6  0E01               	movlw	1
  1157   0040B8  6E11               	movwf	read_input@last_state^0,c
  1158                           
  1159                           ;./functions.h: 20:     unsigned int timeout = 3000;
  1160   0040BA  0E0B               	movlw	11
  1161   0040BC  6E0B               	movwf	(read_input@timeout+1)^0,c
  1162   0040BE  0EB8               	movlw	184
  1163   0040C0  6E0A               	movwf	read_input@timeout^0,c
  1164                           
  1165                           ;./functions.h: 21:     unsigned int elapsed = 0;
  1166   0040C2  0E00               	movlw	0
  1167   0040C4  6E0E               	movwf	(read_input@elapsed+1)^0,c
  1168   0040C6  0E00               	movlw	0
  1169   0040C8  6E0D               	movwf	read_input@elapsed^0,c
  1170                           
  1171                           ;./functions.h: 23:     while (elapsed < timeout && count < 4) {
  1172   0040CA  EFB0  F020         	goto	l898
  1173   0040CE                     l876:
  1174                           
  1175                           ;./functions.h: 24:         unsigned char current_state = (pr_input == 1) ? PORTBbits.RB
      +                          1 : PORTBbits.RB2;
  1176   0040CE  040C               	decf	read_input@pr_input^0,w,c
  1177   0040D0  B4D8               	btfsc	status,2,c
  1178   0040D2  EF6D  F020         	goto	u151
  1179   0040D6  EF6F  F020         	goto	u150
  1180   0040DA                     u151:
  1181   0040DA  EF7E  F020         	goto	l880
  1182   0040DE                     u150:
  1183   0040DE  B4CB               	btfsc	203,2,c	;volatile
  1184   0040E0  EF74  F020         	goto	u161
  1185   0040E4  EF78  F020         	goto	u160
  1186   0040E8                     u161:
  1187   0040E8  6A09               	clrf	??_read_input^0,c
  1188   0040EA  2A09               	incf	??_read_input^0,f,c
  1189   0040EC  EF79  F020         	goto	u168
  1190   0040F0                     u160:
  1191   0040F0  6A09               	clrf	??_read_input^0,c
  1192   0040F2                     u168:
  1193   0040F2  5009               	movf	??_read_input^0,w,c
  1194   0040F4  6E0F               	movwf	_read_input$202^0,c
  1195   0040F6  6A10               	clrf	(_read_input$202+1)^0,c
  1196   0040F8  EF8B  F020         	goto	l882
  1197   0040FC                     l880:
  1198   0040FC  B2CB               	btfsc	203,1,c	;volatile
  1199   0040FE  EF83  F020         	goto	u171
  1200   004102  EF87  F020         	goto	u170
  1201   004106                     u171:
  1202   004106  6A09               	clrf	??_read_input^0,c
  1203   004108  2A09               	incf	??_read_input^0,f,c
  1204   00410A  EF88  F020         	goto	u178
  1205   00410E                     u170:
  1206   00410E  6A09               	clrf	??_read_input^0,c
  1207   004110                     u178:
  1208   004110  5009               	movf	??_read_input^0,w,c
  1209   004112  6E0F               	movwf	_read_input$202^0,c
  1210   004114  6A10               	clrf	(_read_input$202+1)^0,c
  1211   004116                     l882:
  1212   004116  C00F  F012         	movff	_read_input$202,read_input@current_state
  1213   00411A                     
  1214                           ;./functions.h: 26:         if (current_state == 0 && last_state == 1) {
  1215   00411A  5012               	movf	read_input@current_state^0,w,c
  1216   00411C  A4D8               	btfss	status,2,c
  1217   00411E  EF93  F020         	goto	u181
  1218   004122  EF95  F020         	goto	u180
  1219   004126                     u181:
  1220   004126  EFA4  F020         	goto	l892
  1221   00412A                     u180:
  1222   00412A  0411               	decf	read_input@last_state^0,w,c
  1223   00412C  A4D8               	btfss	status,2,c
  1224   00412E  EF9B  F020         	goto	u191
  1225   004132  EF9D  F020         	goto	u190
  1226   004136                     u191:
  1227   004136  EFA4  F020         	goto	l892
  1228   00413A                     u190:
  1229   00413A                     
  1230                           ;./functions.h: 27:             count++;
  1231   00413A  2A13               	incf	read_input@count^0,f,c
  1232   00413C                     
  1233                           ;./functions.h: 28:             wait(300);
  1234   00413C  0E01               	movlw	1
  1235   00413E  6E06               	movwf	(wait@ms+1)^0,c
  1236   004140  0E2C               	movlw	44
  1237   004142  6E05               	movwf	wait@ms^0,c
  1238   004144  EC6B  F021         	call	_wait	;wreg free
  1239   004148                     l892:
  1240                           
  1241                           ;./functions.h: 31:         last_state = current_state;
  1242   004148  C012  F011         	movff	read_input@current_state,read_input@last_state
  1243   00414C                     
  1244                           ;./functions.h: 32:         wait(50);
  1245   00414C  0E00               	movlw	0
  1246   00414E  6E06               	movwf	(wait@ms+1)^0,c
  1247   004150  0E32               	movlw	50
  1248   004152  6E05               	movwf	wait@ms^0,c
  1249   004154  EC6B  F021         	call	_wait	;wreg free
  1250   004158                     
  1251                           ;./functions.h: 33:         elapsed += 50;
  1252   004158  0E32               	movlw	50
  1253   00415A  260D               	addwf	read_input@elapsed^0,f,c
  1254   00415C  0E00               	movlw	0
  1255   00415E  220E               	addwfc	(read_input@elapsed+1)^0,f,c
  1256   004160                     l898:
  1257                           
  1258                           ;./functions.h: 23:     while (elapsed < timeout && count < 4) {
  1259   004160  500A               	movf	read_input@timeout^0,w,c
  1260   004162  5C0D               	subwf	read_input@elapsed^0,w,c
  1261   004164  500B               	movf	(read_input@timeout+1)^0,w,c
  1262   004166  580E               	subwfb	(read_input@elapsed+1)^0,w,c
  1263   004168  B0D8               	btfsc	status,0,c
  1264   00416A  EFB9  F020         	goto	u201
  1265   00416E  EFBB  F020         	goto	u200
  1266   004172                     u201:
  1267   004172  EFC3  F020         	goto	l902
  1268   004176                     u200:
  1269   004176  0E03               	movlw	3
  1270   004178  6413               	cpfsgt	read_input@count^0,c
  1271   00417A  EFC1  F020         	goto	u211
  1272   00417E  EFC3  F020         	goto	u210
  1273   004182                     u211:
  1274   004182  EF67  F020         	goto	l876
  1275   004186                     u210:
  1276   004186                     l902:
  1277                           
  1278                           ;./functions.h: 36:     return count;
  1279   004186  5013               	movf	read_input@count^0,w,c
  1280   004188  0012               	return		;funcret
  1281   00418A                     __end_of_read_input:
  1282                           	callstack 0
  1283                           
  1284 ;; *************** function _play_buzzer_melody *****************
  1285 ;; Defined at:
  1286 ;;		line 45 in file "./functions.h"
  1287 ;; Parameters:    Size  Location     Type
  1288 ;;		None
  1289 ;; Auto vars:     Size  Location     Type
  1290 ;;  i               2    8[COMRAM] int 
  1291 ;; Return value:  Size  Location     Type
  1292 ;;                  1    wreg      void 
  1293 ;; Registers used:
  1294 ;;		wreg, status,2, status,0, cstack
  1295 ;; Tracked objects:
  1296 ;;		On entry : 0/0
  1297 ;;		On exit  : 0/0
  1298 ;;		Unchanged: 0/0
  1299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1300 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1301 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1303 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1304 ;;Total ram usage:        2 bytes
  1305 ;; Hardware stack levels used: 1
  1306 ;; Hardware stack levels required when called: 2
  1307 ;; This function calls:
  1308 ;;		_wait
  1309 ;; This function is called by:
  1310 ;;		_main
  1311 ;; This function uses a non-reentrant model
  1312 ;;
  1313                           
  1314                           	psect	text2
  1315   004290                     __ptext2:
  1316                           	callstack 0
  1317   004290                     _play_buzzer_melody:
  1318                           	callstack 28
  1319   004290                     
  1320                           ;./functions.h: 46:     for (int i = 0; i < 5; i++) {
  1321   004290  0E00               	movlw	0
  1322   004292  6E0A               	movwf	(play_buzzer_melody@i+1)^0,c
  1323   004294  0E00               	movlw	0
  1324   004296  6E09               	movwf	play_buzzer_melody@i^0,c
  1325   004298                     l61:
  1326                           
  1327                           ;./functions.h: 47:         PORTBbits.RB5 = 1;
  1328   004298  8ACB               	bsf	203,5,c	;volatile
  1329   00429A                     
  1330                           ;./functions.h: 48:         wait(500);
  1331   00429A  0E01               	movlw	1
  1332   00429C  6E06               	movwf	(wait@ms+1)^0,c
  1333   00429E  0EF4               	movlw	244
  1334   0042A0  6E05               	movwf	wait@ms^0,c
  1335   0042A2  EC6B  F021         	call	_wait	;wreg free
  1336   0042A6                     
  1337                           ;./functions.h: 49:         PORTBbits.RB5 = 0;
  1338   0042A6  9ACB               	bcf	203,5,c	;volatile
  1339                           
  1340                           ;./functions.h: 50:         wait(100);
  1341   0042A8  0E00               	movlw	0
  1342   0042AA  6E06               	movwf	(wait@ms+1)^0,c
  1343   0042AC  0E64               	movlw	100
  1344   0042AE  6E05               	movwf	wait@ms^0,c
  1345   0042B0  EC6B  F021         	call	_wait	;wreg free
  1346   0042B4                     
  1347                           ;./functions.h: 51:     }
  1348   0042B4  4A09               	infsnz	play_buzzer_melody@i^0,f,c
  1349   0042B6  2A0A               	incf	(play_buzzer_melody@i+1)^0,f,c
  1350   0042B8  BE0A               	btfsc	(play_buzzer_melody@i+1)^0,7,c
  1351   0042BA  EF68  F021         	goto	u221
  1352   0042BE  500A               	movf	(play_buzzer_melody@i+1)^0,w,c
  1353   0042C0  E109               	bnz	u220
  1354   0042C2  0E05               	movlw	5
  1355   0042C4  5C09               	subwf	play_buzzer_melody@i^0,w,c
  1356   0042C6  A0D8               	btfss	status,0,c
  1357   0042C8  EF68  F021         	goto	u221
  1358   0042CC  EF6A  F021         	goto	u220
  1359   0042D0                     u221:
  1360   0042D0  EF4C  F021         	goto	l61
  1361   0042D4                     u220:
  1362   0042D4  0012               	return		;funcret
  1363   0042D6                     __end_of_play_buzzer_melody:
  1364                           	callstack 0
  1365                           
  1366 ;; *************** function _wait *****************
  1367 ;; Defined at:
  1368 ;;		line 10 in file "./functions.h"
  1369 ;; Parameters:    Size  Location     Type
  1370 ;;  ms              2    4[COMRAM] unsigned int 
  1371 ;; Auto vars:     Size  Location     Type
  1372 ;;  i               2    6[COMRAM] unsigned int 
  1373 ;; Return value:  Size  Location     Type
  1374 ;;                  1    wreg      void 
  1375 ;; Registers used:
  1376 ;;		wreg, status,2, status,0
  1377 ;; Tracked objects:
  1378 ;;		On entry : 0/0
  1379 ;;		On exit  : 0/0
  1380 ;;		Unchanged: 0/0
  1381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1382 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1383 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1385 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1386 ;;Total ram usage:        4 bytes
  1387 ;; Hardware stack levels used: 1
  1388 ;; Hardware stack levels required when called: 1
  1389 ;; This function calls:
  1390 ;;		Nothing
  1391 ;; This function is called by:
  1392 ;;		_read_input
  1393 ;;		_play_buzzer_melody
  1394 ;;		_main
  1395 ;; This function uses a non-reentrant model
  1396 ;;
  1397                           
  1398                           	psect	text3
  1399   0042D6                     __ptext3:
  1400                           	callstack 0
  1401   0042D6                     _wait:
  1402                           	callstack 29
  1403   0042D6                     
  1404                           ;./functions.h: 11:     for (unsigned int i = 0; i < ms; i++) {
  1405   0042D6  0E00               	movlw	0
  1406   0042D8  6E08               	movwf	(wait@i+1)^0,c
  1407   0042DA  0E00               	movlw	0
  1408   0042DC  6E07               	movwf	wait@i^0,c
  1409   0042DE  EF77  F021         	goto	l39
  1410   0042E2                     l868:
  1411                           
  1412                           ;./functions.h: 12:         _delay((unsigned long)((1)*(4000000/4000.0)));
  1413   0042E2  0EC8               	movlw	200
  1414   0042E4                     u257:
  1415   0042E4  D000               	nop2	
  1416   0042E6  2EE8               	decfsz	wreg,f,c
  1417   0042E8  D7FD               	bra	u257
  1418   0042EA                     
  1419                           ;./functions.h: 13:     }
  1420   0042EA  4A07               	infsnz	wait@i^0,f,c
  1421   0042EC  2A08               	incf	(wait@i+1)^0,f,c
  1422   0042EE                     l39:
  1423   0042EE  5005               	movf	wait@ms^0,w,c
  1424   0042F0  5C07               	subwf	wait@i^0,w,c
  1425   0042F2  5006               	movf	(wait@ms+1)^0,w,c
  1426   0042F4  5808               	subwfb	(wait@i+1)^0,w,c
  1427   0042F6  A0D8               	btfss	status,0,c
  1428   0042F8  EF80  F021         	goto	u141
  1429   0042FC  EF82  F021         	goto	u140
  1430   004300                     u141:
  1431   004300  EF71  F021         	goto	l868
  1432   004304                     u140:
  1433   004304  0012               	return		;funcret
  1434   004306                     __end_of_wait:
  1435                           	callstack 0
  1436                           
  1437 ;; *************** function _init_ports *****************
  1438 ;; Defined at:
  1439 ;;		line 35 in file "./init.h"
  1440 ;; Parameters:    Size  Location     Type
  1441 ;;		None
  1442 ;; Auto vars:     Size  Location     Type
  1443 ;;		None
  1444 ;; Return value:  Size  Location     Type
  1445 ;;                  1    wreg      void 
  1446 ;; Registers used:
  1447 ;;		wreg, status,2
  1448 ;; Tracked objects:
  1449 ;;		On entry : 0/0
  1450 ;;		On exit  : 0/0
  1451 ;;		Unchanged: 0/0
  1452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1453 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1454 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1456 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1457 ;;Total ram usage:        0 bytes
  1458 ;; Hardware stack levels used: 1
  1459 ;; Hardware stack levels required when called: 1
  1460 ;; This function calls:
  1461 ;;		Nothing
  1462 ;; This function is called by:
  1463 ;;		_main
  1464 ;; This function uses a non-reentrant model
  1465 ;;
  1466                           
  1467                           	psect	text4
  1468   004334                     __ptext4:
  1469                           	callstack 0
  1470   004334                     _init_ports:
  1471                           	callstack 29
  1472   004334                     
  1473                           ;./init.h: 36:     ANSELD = 0b00000000;
  1474   004334  013A               	movlb	58	; () banked
  1475   004336  6B70               	clrf	112,b	;volatile
  1476                           
  1477                           ;./init.h: 37:     TRISD = 0b00000000;
  1478   004338  6AC5               	clrf	197,c	;volatile
  1479                           
  1480                           ;./init.h: 38:     PORTD = 0b00000000;
  1481   00433A  6ACD               	clrf	205,c	;volatile
  1482                           
  1483                           ;./init.h: 40:     ANSELB = 0b00000000;
  1484   00433C  6B50               	clrf	80,b	;volatile
  1485   00433E                     
  1486                           ; BSR set to: 58
  1487                           ;./init.h: 41:     TRISB = 0b00001111;
  1488   00433E  0E0F               	movlw	15
  1489   004340  6EC3               	movwf	195,c	;volatile
  1490   004342                     
  1491                           ; BSR set to: 58
  1492                           ;./init.h: 42:     PORTB = 0b00000000;
  1493   004342  6ACB               	clrf	203,c	;volatile
  1494   004344                     
  1495                           ; BSR set to: 58
  1496   004344  0012               	return		;funcret
  1497   004346                     __end_of_init_ports:
  1498                           	callstack 0
  1499                           
  1500 ;; *************** function _display_digit *****************
  1501 ;; Defined at:
  1502 ;;		line 40 in file "./functions.h"
  1503 ;; Parameters:    Size  Location     Type
  1504 ;;  digit           1    wreg     unsigned char 
  1505 ;; Auto vars:     Size  Location     Type
  1506 ;;  digit           1    4[COMRAM] unsigned char 
  1507 ;; Return value:  Size  Location     Type
  1508 ;;                  1    wreg      void 
  1509 ;; Registers used:
  1510 ;;		wreg
  1511 ;; Tracked objects:
  1512 ;;		On entry : 0/0
  1513 ;;		On exit  : 0/0
  1514 ;;		Unchanged: 0/0
  1515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1516 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1517 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1519 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1520 ;;Total ram usage:        1 bytes
  1521 ;; Hardware stack levels used: 1
  1522 ;; Hardware stack levels required when called: 1
  1523 ;; This function calls:
  1524 ;;		Nothing
  1525 ;; This function is called by:
  1526 ;;		_main
  1527 ;; This function uses a non-reentrant model
  1528 ;;
  1529                           
  1530                           	psect	text5
  1531   004346                     __ptext5:
  1532                           	callstack 0
  1533   004346                     _display_digit:
  1534                           	callstack 29
  1535                           
  1536                           ; BSR set to: 58
  1537                           ;incstack = 0
  1538                           ;display_digit@digit stored from wreg
  1539   004346  6E05               	movwf	display_digit@digit^0,c
  1540   004348                     
  1541                           ;./functions.h: 41:     PORTD = digit;
  1542   004348  0060  F017  FFCD   	movff	display_digit@digit,16333	;volatile
  1543   00434E  0012               	return		;funcret
  1544   004350                     __end_of_display_digit:
  1545                           	callstack 0
  1546                           
  1547 ;; *************** function _INTERRUPT_Initialize *****************
  1548 ;; Defined at:
  1549 ;;		line 21 in file "./init.h"
  1550 ;; Parameters:    Size  Location     Type
  1551 ;;		None
  1552 ;; Auto vars:     Size  Location     Type
  1553 ;;		None
  1554 ;; Return value:  Size  Location     Type
  1555 ;;                  1    wreg      void 
  1556 ;; Registers used:
  1557 ;;		wreg, status,2
  1558 ;; Tracked objects:
  1559 ;;		On entry : 0/0
  1560 ;;		On exit  : 0/0
  1561 ;;		Unchanged: 0/0
  1562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1566 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1567 ;;Total ram usage:        0 bytes
  1568 ;; Hardware stack levels used: 1
  1569 ;; Hardware stack levels required when called: 1
  1570 ;; This function calls:
  1571 ;;		Nothing
  1572 ;; This function is called by:
  1573 ;;		_main
  1574 ;; This function uses a non-reentrant model
  1575 ;;
  1576                           
  1577                           	psect	text6
  1578   004306                     __ptext6:
  1579                           	callstack 0
  1580   004306                     _INTERRUPT_Initialize:
  1581                           	callstack 29
  1582   004306                     
  1583                           ;./init.h: 22:     INTCON0bits.IPEN = 1;
  1584   004306  8AD2               	bsf	210,5,c	;volatile
  1585                           
  1586                           ;./init.h: 23:     INTCON0bits.GIEH = 1;
  1587   004308  8ED2               	bsf	210,7,c	;volatile
  1588                           
  1589                           ;./init.h: 24:     INTCON0bits.GIEL = 1;
  1590   00430A  8CD2               	bsf	210,6,c	;volatile
  1591                           
  1592                           ;./init.h: 25:     INTCON0bits.INT0EDG = 1;
  1593   00430C  80D2               	bsf	210,0,c	;volatile
  1594                           
  1595                           ;./init.h: 26:     IPR1bits.INT0IP = 1;
  1596   00430E  0139               	movlb	57	; () banked
  1597   004310  8181               	bsf	129,0,b	;volatile
  1598                           
  1599                           ;./init.h: 27:     PIE1bits.INT0IE = 1;
  1600   004312  8191               	bsf	145,0,b	;volatile
  1601                           
  1602                           ;./init.h: 28:     PIR1bits.INT0IF = 0;
  1603   004314  91A1               	bcf	161,0,b	;volatile
  1604                           
  1605                           ;./init.h: 30:     IVTBASEU = 0x00;
  1606   004316  6AD7               	clrf	215,c	;volatile
  1607   004318                     
  1608                           ; BSR set to: 57
  1609                           ;./init.h: 31:     IVTBASEH = 0x40;
  1610   004318  0E40               	movlw	64
  1611   00431A  6ED6               	movwf	214,c	;volatile
  1612                           
  1613                           ;./init.h: 32:     IVTBASEL = 0x08;
  1614   00431C  0E08               	movlw	8
  1615   00431E  6ED5               	movwf	213,c	;volatile
  1616   004320                     
  1617                           ; BSR set to: 57
  1618   004320  0012               	return		;funcret
  1619   004322                     __end_of_INTERRUPT_Initialize:
  1620                           	callstack 0
  1621                           
  1622 ;; *************** function _INT0_ISR *****************
  1623 ;; Defined at:
  1624 ;;		line 55 in file "./functions.h"
  1625 ;; Parameters:    Size  Location     Type
  1626 ;;		None
  1627 ;; Auto vars:     Size  Location     Type
  1628 ;;  k               2    2[COMRAM] int 
  1629 ;; Return value:  Size  Location     Type
  1630 ;;                  1    wreg      void 
  1631 ;; Registers used:
  1632 ;;		wreg, status,2, status,0
  1633 ;; Tracked objects:
  1634 ;;		On entry : 0/0
  1635 ;;		On exit  : 0/0
  1636 ;;		Unchanged: 0/0
  1637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1639 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1640 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1641 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1642 ;;Total ram usage:        4 bytes
  1643 ;; Hardware stack levels used: 1
  1644 ;; This function calls:
  1645 ;;		Nothing
  1646 ;; This function is called by:
  1647 ;;		Interrupt level 2
  1648 ;; This function uses a non-reentrant model
  1649 ;;
  1650                           
  1651                           	psect	text7
  1652   004220                     __ptext7:
  1653                           	callstack 0
  1654   004220                     _INT0_ISR:
  1655                           	callstack 28
  1656   004220                     
  1657                           ;./functions.h: 56:     if (PIR1bits.INT0IF == 1) {
  1658   004220  0139               	movlb	57	; () banked
  1659   004222  A1A1               	btfss	161,0,b	;volatile
  1660   004224  EF16  F021         	goto	i2u10_41
  1661   004228  EF18  F021         	goto	i2u10_40
  1662   00422C                     i2u10_41:
  1663   00422C  EF47  F021         	goto	i2l71
  1664   004230                     i2u10_40:
  1665   004230                     
  1666                           ; BSR set to: 57
  1667                           ;./functions.h: 57:         for (int k = 0; k < 10; k++) {
  1668   004230  0E00               	movlw	0
  1669   004232  6E04               	movwf	(INT0_ISR@k+1)^0,c
  1670   004234  0E00               	movlw	0
  1671   004236  6E03               	movwf	INT0_ISR@k^0,c
  1672   004238                     i2l69:
  1673                           
  1674                           ;./functions.h: 58:             PORTBbits.RB5 = 0;
  1675   004238  9ACB               	bcf	203,5,c	;volatile
  1676   00423A                     
  1677                           ;./functions.h: 59:             _delay((unsigned long)((250)*(4000000/4000.0)));
  1678   00423A  0E02               	movlw	2
  1679   00423C  6E02               	movwf	(??_INT0_ISR+1)^0,c
  1680   00423E  0E45               	movlw	69
  1681   004240  6E01               	movwf	??_INT0_ISR^0,c
  1682   004242  0EAA               	movlw	170
  1683   004244                     i2u26_47:
  1684   004244  2EE8               	decfsz	wreg,f,c
  1685   004246  D7FE               	bra	i2u26_47
  1686   004248  2E01               	decfsz	??_INT0_ISR^0,f,c
  1687   00424A  D7FC               	bra	i2u26_47
  1688   00424C  2E02               	decfsz	(??_INT0_ISR+1)^0,f,c
  1689   00424E  D7FA               	bra	i2u26_47
  1690   004250                     
  1691                           ;./functions.h: 60:             PORTBbits.RB5 = 1;
  1692   004250  8ACB               	bsf	203,5,c	;volatile
  1693                           
  1694                           ;./functions.h: 61:             _delay((unsigned long)((250)*(4000000/4000.0)));
  1695   004252  0E02               	movlw	2
  1696   004254  6E02               	movwf	(??_INT0_ISR+1)^0,c
  1697   004256  0E45               	movlw	69
  1698   004258  6E01               	movwf	??_INT0_ISR^0,c
  1699   00425A  0EAA               	movlw	170
  1700   00425C                     i2u27_47:
  1701   00425C  2EE8               	decfsz	wreg,f,c
  1702   00425E  D7FE               	bra	i2u27_47
  1703   004260  2E01               	decfsz	??_INT0_ISR^0,f,c
  1704   004262  D7FC               	bra	i2u27_47
  1705   004264  2E02               	decfsz	(??_INT0_ISR+1)^0,f,c
  1706   004266  D7FA               	bra	i2u27_47
  1707   004268                     
  1708                           ;./functions.h: 62:         }
  1709   004268  4A03               	infsnz	INT0_ISR@k^0,f,c
  1710   00426A  2A04               	incf	(INT0_ISR@k+1)^0,f,c
  1711   00426C  BE04               	btfsc	(INT0_ISR@k+1)^0,7,c
  1712   00426E  EF42  F021         	goto	i2u11_41
  1713   004272  5004               	movf	(INT0_ISR@k+1)^0,w,c
  1714   004274  E109               	bnz	i2u11_40
  1715   004276  0E0A               	movlw	10
  1716   004278  5C03               	subwf	INT0_ISR@k^0,w,c
  1717   00427A  A0D8               	btfss	status,0,c
  1718   00427C  EF42  F021         	goto	i2u11_41
  1719   004280  EF44  F021         	goto	i2u11_40
  1720   004284                     i2u11_41:
  1721   004284  EF1C  F021         	goto	i2l69
  1722   004288                     i2u11_40:
  1723   004288                     
  1724                           ;./functions.h: 63:         PIR1bits.INT0IF = 0;
  1725   004288  0139               	movlb	57	; () banked
  1726   00428A  91A1               	bcf	161,0,b	;volatile
  1727                           
  1728                           ;./functions.h: 64:         PORTBbits.RB5 = 0;
  1729   00428C  9ACB               	bcf	203,5,c	;volatile
  1730   00428E                     i2l71:
  1731                           
  1732                           ; BSR set to: 57
  1733   00428E  0011               	retfie		f
  1734   004290                     __end_of_INT0_ISR:
  1735                           	callstack 0
  1736                           
  1737                           ;
  1738                           ; H/W Interrupt Vector Table @ 0x4008
  1739                           ;
  1740                           
  1741                           	psect	ivt0x4008
  1742   004008                     __pivt0x4008:
  1743                           	callstack 0
  1744   004008                     ivt0x4008_base:
  1745                           	callstack 0
  1746                           
  1747                           ; Vector 0 : SWINT
  1748   004008  102B               	dw	ivt0x4008_undefint shr (0+2)
  1749                           
  1750                           ; Vector 1 : HLVD
  1751   00400A  102B               	dw	ivt0x4008_undefint shr (0+2)
  1752                           
  1753                           ; Vector 2 : OSF
  1754   00400C  102B               	dw	ivt0x4008_undefint shr (0+2)
  1755                           
  1756                           ; Vector 3 : CSW
  1757   00400E  102B               	dw	ivt0x4008_undefint shr (0+2)
  1758                           
  1759                           ; Vector 4 : NVM
  1760   004010  102B               	dw	ivt0x4008_undefint shr (0+2)
  1761                           
  1762                           ; Vector 5 : SCAN
  1763   004012  102B               	dw	ivt0x4008_undefint shr (0+2)
  1764                           
  1765                           ; Vector 6 : CRC
  1766   004014  102B               	dw	ivt0x4008_undefint shr (0+2)
  1767                           
  1768                           ; Vector 7 : IOC
  1769   004016  102B               	dw	ivt0x4008_undefint shr (0+2)
  1770                           
  1771                           ; Vector 8 : INT0
  1772   004018  1088               	dw	_INT0_ISR shr (0+2)
  1773                           
  1774                           ; Vector 9 : ZCD
  1775   00401A  102B               	dw	ivt0x4008_undefint shr (0+2)
  1776                           
  1777                           ; Vector 10 : AD
  1778   00401C  102B               	dw	ivt0x4008_undefint shr (0+2)
  1779                           
  1780                           ; Vector 11 : ADT
  1781   00401E  102B               	dw	ivt0x4008_undefint shr (0+2)
  1782                           
  1783                           ; Vector 12 : CMP1
  1784   004020  102B               	dw	ivt0x4008_undefint shr (0+2)
  1785                           
  1786                           ; Vector 13 : SMT1
  1787   004022  102B               	dw	ivt0x4008_undefint shr (0+2)
  1788                           
  1789                           ; Vector 14 : SMT1PRA
  1790   004024  102B               	dw	ivt0x4008_undefint shr (0+2)
  1791                           
  1792                           ; Vector 15 : SMT1PRW
  1793   004026  102B               	dw	ivt0x4008_undefint shr (0+2)
  1794                           
  1795                           ; Vector 16 : DMA1SCNT
  1796   004028  102B               	dw	ivt0x4008_undefint shr (0+2)
  1797                           
  1798                           ; Vector 17 : DMA1DCNT
  1799   00402A  102B               	dw	ivt0x4008_undefint shr (0+2)
  1800                           
  1801                           ; Vector 18 : DMA1OR
  1802   00402C  102B               	dw	ivt0x4008_undefint shr (0+2)
  1803                           
  1804                           ; Vector 19 : DMA1A
  1805   00402E  102B               	dw	ivt0x4008_undefint shr (0+2)
  1806                           
  1807                           ; Vector 20 : SPI1RX
  1808   004030  102B               	dw	ivt0x4008_undefint shr (0+2)
  1809                           
  1810                           ; Vector 21 : SPI1TX
  1811   004032  102B               	dw	ivt0x4008_undefint shr (0+2)
  1812                           
  1813                           ; Vector 22 : SPI1
  1814   004034  102B               	dw	ivt0x4008_undefint shr (0+2)
  1815                           
  1816                           ; Vector 23 : I2C1RX
  1817   004036  102B               	dw	ivt0x4008_undefint shr (0+2)
  1818                           
  1819                           ; Vector 24 : I2C1TX
  1820   004038  102B               	dw	ivt0x4008_undefint shr (0+2)
  1821                           
  1822                           ; Vector 25 : I2C1
  1823   00403A  102B               	dw	ivt0x4008_undefint shr (0+2)
  1824                           
  1825                           ; Vector 26 : I2C1E
  1826   00403C  102B               	dw	ivt0x4008_undefint shr (0+2)
  1827                           
  1828                           ; Vector 27 : U1RX
  1829   00403E  102B               	dw	ivt0x4008_undefint shr (0+2)
  1830                           
  1831                           ; Vector 28 : U1TX
  1832   004040  102B               	dw	ivt0x4008_undefint shr (0+2)
  1833                           
  1834                           ; Vector 29 : U1E
  1835   004042  102B               	dw	ivt0x4008_undefint shr (0+2)
  1836                           
  1837                           ; Vector 30 : U1
  1838   004044  102B               	dw	ivt0x4008_undefint shr (0+2)
  1839                           
  1840                           ; Vector 31 : TMR0
  1841   004046  102B               	dw	ivt0x4008_undefint shr (0+2)
  1842                           
  1843                           ; Vector 32 : TMR1
  1844   004048  102B               	dw	ivt0x4008_undefint shr (0+2)
  1845                           
  1846                           ; Vector 33 : TMR1G
  1847   00404A  102B               	dw	ivt0x4008_undefint shr (0+2)
  1848                           
  1849                           ; Vector 34 : TMR2
  1850   00404C  102B               	dw	ivt0x4008_undefint shr (0+2)
  1851                           
  1852                           ; Vector 35 : CCP1
  1853   00404E  102B               	dw	ivt0x4008_undefint shr (0+2)
  1854                           
  1855                           ; Vector 36 : Undefined
  1856   004050  102B               	dw	ivt0x4008_undefint shr (0+2)
  1857                           
  1858                           ; Vector 37 : NCO1
  1859   004052  102B               	dw	ivt0x4008_undefint shr (0+2)
  1860                           
  1861                           ; Vector 38 : CWG1
  1862   004054  102B               	dw	ivt0x4008_undefint shr (0+2)
  1863                           
  1864                           ; Vector 39 : CLC1
  1865   004056  102B               	dw	ivt0x4008_undefint shr (0+2)
  1866                           
  1867                           ; Vector 40 : INT1
  1868   004058  102B               	dw	ivt0x4008_undefint shr (0+2)
  1869                           
  1870                           ; Vector 41 : CMP2
  1871   00405A  102B               	dw	ivt0x4008_undefint shr (0+2)
  1872                           
  1873                           ; Vector 42 : DMA2SCNT
  1874   00405C  102B               	dw	ivt0x4008_undefint shr (0+2)
  1875                           
  1876                           ; Vector 43 : DMA2DCNT
  1877   00405E  102B               	dw	ivt0x4008_undefint shr (0+2)
  1878                           
  1879                           ; Vector 44 : DMA2OR
  1880   004060  102B               	dw	ivt0x4008_undefint shr (0+2)
  1881                           
  1882                           ; Vector 45 : DMA2A
  1883   004062  102B               	dw	ivt0x4008_undefint shr (0+2)
  1884                           
  1885                           ; Vector 46 : I2C2RX
  1886   004064  102B               	dw	ivt0x4008_undefint shr (0+2)
  1887                           
  1888                           ; Vector 47 : I2C2TX
  1889   004066  102B               	dw	ivt0x4008_undefint shr (0+2)
  1890                           
  1891                           ; Vector 48 : I2C2
  1892   004068  102B               	dw	ivt0x4008_undefint shr (0+2)
  1893                           
  1894                           ; Vector 49 : I2C2E
  1895   00406A  102B               	dw	ivt0x4008_undefint shr (0+2)
  1896                           
  1897                           ; Vector 50 : U2RX
  1898   00406C  102B               	dw	ivt0x4008_undefint shr (0+2)
  1899                           
  1900                           ; Vector 51 : U2TX
  1901   00406E  102B               	dw	ivt0x4008_undefint shr (0+2)
  1902                           
  1903                           ; Vector 52 : U2E
  1904   004070  102B               	dw	ivt0x4008_undefint shr (0+2)
  1905                           
  1906                           ; Vector 53 : U2
  1907   004072  102B               	dw	ivt0x4008_undefint shr (0+2)
  1908                           
  1909                           ; Vector 54 : TMR3
  1910   004074  102B               	dw	ivt0x4008_undefint shr (0+2)
  1911                           
  1912                           ; Vector 55 : TMR3G
  1913   004076  102B               	dw	ivt0x4008_undefint shr (0+2)
  1914                           
  1915                           ; Vector 56 : TMR4
  1916   004078  102B               	dw	ivt0x4008_undefint shr (0+2)
  1917                           
  1918                           ; Vector 57 : CCP2
  1919   00407A  102B               	dw	ivt0x4008_undefint shr (0+2)
  1920                           
  1921                           ; Vector 58 : Undefined
  1922   00407C  102B               	dw	ivt0x4008_undefint shr (0+2)
  1923                           
  1924                           ; Vector 59 : CWG2
  1925   00407E  102B               	dw	ivt0x4008_undefint shr (0+2)
  1926                           
  1927                           ; Vector 60 : CLC2
  1928   004080  102B               	dw	ivt0x4008_undefint shr (0+2)
  1929                           
  1930                           ; Vector 61 : INT2
  1931   004082  102B               	dw	ivt0x4008_undefint shr (0+2)
  1932                           
  1933                           ; Vector 62 : Undefined
  1934   004084  102B               	dw	ivt0x4008_undefint shr (0+2)
  1935                           
  1936                           ; Vector 63 : Undefined
  1937   004086  102B               	dw	ivt0x4008_undefint shr (0+2)
  1938                           
  1939                           ; Vector 64 : Undefined
  1940   004088  102B               	dw	ivt0x4008_undefint shr (0+2)
  1941                           
  1942                           ; Vector 65 : Undefined
  1943   00408A  102B               	dw	ivt0x4008_undefint shr (0+2)
  1944                           
  1945                           ; Vector 66 : Undefined
  1946   00408C  102B               	dw	ivt0x4008_undefint shr (0+2)
  1947                           
  1948                           ; Vector 67 : Undefined
  1949   00408E  102B               	dw	ivt0x4008_undefint shr (0+2)
  1950                           
  1951                           ; Vector 68 : Undefined
  1952   004090  102B               	dw	ivt0x4008_undefint shr (0+2)
  1953                           
  1954                           ; Vector 69 : Undefined
  1955   004092  102B               	dw	ivt0x4008_undefint shr (0+2)
  1956                           
  1957                           ; Vector 70 : TMR5
  1958   004094  102B               	dw	ivt0x4008_undefint shr (0+2)
  1959                           
  1960                           ; Vector 71 : TMR5G
  1961   004096  102B               	dw	ivt0x4008_undefint shr (0+2)
  1962                           
  1963                           ; Vector 72 : TMR6
  1964   004098  102B               	dw	ivt0x4008_undefint shr (0+2)
  1965                           
  1966                           ; Vector 73 : CCP3
  1967   00409A  102B               	dw	ivt0x4008_undefint shr (0+2)
  1968                           
  1969                           ; Vector 74 : CWG3
  1970   00409C  102B               	dw	ivt0x4008_undefint shr (0+2)
  1971                           
  1972                           ; Vector 75 : CLC3
  1973   00409E  102B               	dw	ivt0x4008_undefint shr (0+2)
  1974                           
  1975                           ; Vector 76 : Undefined
  1976   0040A0  102B               	dw	ivt0x4008_undefint shr (0+2)
  1977                           
  1978                           ; Vector 77 : Undefined
  1979   0040A2  102B               	dw	ivt0x4008_undefint shr (0+2)
  1980                           
  1981                           ; Vector 78 : Undefined
  1982   0040A4  102B               	dw	ivt0x4008_undefint shr (0+2)
  1983                           
  1984                           ; Vector 79 : Undefined
  1985   0040A6  102B               	dw	ivt0x4008_undefint shr (0+2)
  1986                           
  1987                           ; Vector 80 : CCP4
  1988   0040A8  102B               	dw	ivt0x4008_undefint shr (0+2)
  1989                           
  1990                           ; Vector 81 : CLC4
  1991   0040AA  102B               	dw	ivt0x4008_undefint shr (0+2)
  1992   0040AC                     ivt0x4008_undefint:
  1993                           	callstack 0
  1994   0040AC  00FF               	reset	
  1995                           
  1996                           	psect	smallconst
  1997   002000                     __psmallconst:
  1998                           	callstack 0
  1999   002000  00                 	db	0
  2000   002001  00                 	db	0	; dummy byte at the end
  2001   002000                     __smallconst    set	__psmallconst
  2002   002000                     __mediumconst   set	__psmallconst
  2003   000000                     __activetblptr  equ	0
  2004                           
  2005                           	psect	rparam
  2006   000001                     ___rparam_used  equ	1
  2007   000000                     ___param_bank   equ	0
  2008   000000                     __Lparam        equ	__Lrparam
  2009   000000                     __Hparam        equ	__Hrparam
  2010                           
  2011                           	psect	config
  2012                           
  2013                           ;Config register CONFIG1L @ 0x300000
  2014                           ;	External Oscillator Selection
  2015                           ;	FEXTOSC = LP, LP (crystal oscillator) optimized for 32.768 kHz; PFM set to low power
  2016                           ;	Reset Oscillator Selection
  2017                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
  2018   300000                     	org	3145728
  2019   300000  F8                 	db	248
  2020                           
  2021                           ;Config register CONFIG1H @ 0x300001
  2022                           ;	Clock out Enable bit
  2023                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  2024                           ;	PRLOCKED One-Way Set Enable bit
  2025                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
  2026                           ;	Clock Switch Enable bit
  2027                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  2028                           ;	Fail-Safe Clock Monitor Enable bit
  2029                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  2030   300001                     	org	3145729
  2031   300001  FF                 	db	255
  2032                           
  2033                           ;Config register CONFIG2L @ 0x300002
  2034                           ;	MCLR Enable bit
  2035                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  2036                           ;	Power-up timer selection bits
  2037                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  2038                           ;	Multi-vector enable bit
  2039                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
  2040                           ;	IVTLOCK bit One-way set enable bit
  2041                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
  2042                           ;	Low Power BOR Enable bit
  2043                           ;	LPBOREN = OFF, ULPBOR disabled
  2044                           ;	Brown-out Reset Enable bits
  2045                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
  2046   300002                     	org	3145730
  2047   300002  FF                 	db	255
  2048                           
  2049                           ;Config register CONFIG2H @ 0x300003
  2050                           ;	Brown-out Reset Voltage Selection bits
  2051                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
  2052                           ;	ZCD Disable bit
  2053                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  2054                           ;	PPSLOCK bit One-Way Set Enable bit
  2055                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
  2056                           ;	Stack Full/Underflow Reset Enable bit
  2057                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2058                           ;	Debugger Enable bit
  2059                           ;	DEBUG = OFF, Background debugger disabled
  2060                           ;	Extended Instruction Set Enable bit
  2061                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  2062   300003                     	org	3145731
  2063   300003  FF                 	db	255
  2064                           
  2065                           ;Config register CONFIG3L @ 0x300004
  2066                           ;	WDT Period selection bits
  2067                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  2068                           ;	WDT operating mode
  2069                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  2070   300004                     	org	3145732
  2071   300004  9F                 	db	159
  2072                           
  2073                           ;Config register CONFIG3H @ 0x300005
  2074                           ;	WDT Window Select bits
  2075                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  2076                           ;	WDT input clock selector
  2077                           ;	WDTCCS = SC, Software Control
  2078   300005                     	org	3145733
  2079   300005  FF                 	db	255
  2080                           
  2081                           ;Config register CONFIG4L @ 0x300006
  2082                           ;	Boot Block Size selection bits
  2083                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  2084                           ;	Boot Block enable bit
  2085                           ;	BBEN = OFF, Boot block disabled
  2086                           ;	Storage Area Flash enable bit
  2087                           ;	SAFEN = OFF, SAF disabled
  2088                           ;	Application Block write protection bit
  2089                           ;	WRTAPP = OFF, Application Block not write protected
  2090   300006                     	org	3145734
  2091   300006  FF                 	db	255
  2092                           
  2093                           ;Config register CONFIG4H @ 0x300007
  2094                           ;	Boot Block Write Protection bit
  2095                           ;	WRTB = OFF, Boot Block not write-protected
  2096                           ;	Configuration Register Write Protection bit
  2097                           ;	WRTC = OFF, Configuration registers not write-protected
  2098                           ;	Data EEPROM Write Protection bit
  2099                           ;	WRTD = OFF, Data EEPROM not write-protected
  2100                           ;	SAF Write protection bit
  2101                           ;	WRTSAF = OFF, SAF not Write Protected
  2102                           ;	Low Voltage Programming Enable bit
  2103                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
  2104   300007                     	org	3145735
  2105   300007  FF                 	db	255
  2106                           
  2107                           ;Config register CONFIG5L @ 0x300008
  2108                           ;	PFM and Data EEPROM Code Protection bit
  2109                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  2110   300008                     	org	3145736
  2111   300008  FF                 	db	255
  2112                           
  2113                           ;Config register CONFIG5H @ 0x300009
  2114                           ;	unspecified, using default values
  2115   300009                     	org	3145737
  2116   300009  FF                 	db	255
  2117                           tosu	equ	0x3FFF
  2118                           tosh	equ	0x3FFE
  2119                           tosl	equ	0x3FFD
  2120                           stkptr	equ	0x3FFC
  2121                           pclatu	equ	0x3FFB
  2122                           pclath	equ	0x3FFA
  2123                           pcl	equ	0x3FF9
  2124                           tblptru	equ	0x3FF8
  2125                           tblptrh	equ	0x3FF7
  2126                           tblptrl	equ	0x3FF6
  2127                           tablat	equ	0x3FF5
  2128                           prodh	equ	0x3FF4
  2129                           prodl	equ	0x3FF3
  2130                           indf0	equ	0x3FEF
  2131                           postinc0	equ	0x3FEE
  2132                           postdec0	equ	0x3FED
  2133                           preinc0	equ	0x3FEC
  2134                           plusw0	equ	0x3FEB
  2135                           fsr0h	equ	0x3FEA
  2136                           fsr0l	equ	0x3FE9
  2137                           wreg	equ	0x3FE8
  2138                           indf1	equ	0x3FE7
  2139                           postinc1	equ	0x3FE6
  2140                           postdec1	equ	0x3FE5
  2141                           preinc1	equ	0x3FE4
  2142                           plusw1	equ	0x3FE3
  2143                           fsr1h	equ	0x3FE2
  2144                           fsr1l	equ	0x3FE1
  2145                           bsr	equ	0x3FE0
  2146                           indf2	equ	0x3FDF
  2147                           postinc2	equ	0x3FDE
  2148                           postdec2	equ	0x3FDD
  2149                           preinc2	equ	0x3FDC
  2150                           plusw2	equ	0x3FDB
  2151                           fsr2h	equ	0x3FDA
  2152                           fsr2l	equ	0x3FD9
  2153                           status	equ	0x3FD8

Data Sizes:
    Strings     0
    Constant    0
>>>>>>> 16a26dc850c114406dd9f218296dc05fea644037
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
<<<<<<< HEAD
    COMRAM           95     21      21
=======
    COMRAM           95     22      22
>>>>>>> 16a26dc850c114406dd9f218296dc05fea644037
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_read_input
<<<<<<< HEAD
    _read_input->_display_digit
=======
    _read_input->_wait
>>>>>>> 16a26dc850c114406dd9f218296dc05fea644037
    _play_buzzer_melody->_wait

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
<<<<<<< HEAD
 (0) _main                                                 5     5      0     350
                                             16 COMRAM     5     5      0
               _INTERRUPT_Initialize
=======
 (0) _main                                                 3     3      0     551
                                             19 COMRAM     3     3      0
               _INTERRUPT_Initialize
                      _display_digit
>>>>>>> 16a26dc850c114406dd9f218296dc05fea644037
                         _init_ports
                 _play_buzzer_melody
                         _read_input
                               _wait
 ---------------------------------------------------------------------------------
<<<<<<< HEAD
 (1) _read_input                                           6     6      0     135
                                             10 COMRAM     6     6      0
                      _display_digit
 ---------------------------------------------------------------------------------
 (2) _display_digit                                        6     6      0      30
                                              4 COMRAM     6     6      0
 ---------------------------------------------------------------------------------
 (1) _play_buzzer_melody                                   2     2      0      96
                                              8 COMRAM     2     2      0
                               _wait
 ---------------------------------------------------------------------------------
 (1) _wait                                                 4     2      2      50
=======
 (1) _read_input                                          11    11      0     269
                                              8 COMRAM    11    11      0
                               _wait
 ---------------------------------------------------------------------------------
 (1) _play_buzzer_melody                                   2     2      0     100
                                              8 COMRAM     2     2      0
                               _wait
 ---------------------------------------------------------------------------------
 (1) _wait                                                 4     2      2      54
>>>>>>> 16a26dc850c114406dd9f218296dc05fea644037
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _init_ports                                           0     0      0       0
 ---------------------------------------------------------------------------------
<<<<<<< HEAD
 (1) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
=======
 (1) _display_digit                                        1     1      0      15
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
>>>>>>> 16a26dc850c114406dd9f218296dc05fea644037
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _INT0_ISR                                             4     4      0      30
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _INTERRUPT_Initialize
<<<<<<< HEAD
=======
   _display_digit
>>>>>>> 16a26dc850c114406dd9f218296dc05fea644037
   _init_ports
   _play_buzzer_melody
     _wait
   _read_input
<<<<<<< HEAD
     _display_digit
=======
     _wait
>>>>>>> 16a26dc850c114406dd9f218296dc05fea644037
   _wait

 _INT0_ISR (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMRAM           95      0       0      0.0%
BITBANK0           160      0       0      0.0%
BITBANK1           256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BITBANK7           256      0       0      0.0%
BITBANK8           256      0       0      0.0%
BITBANK9           256      0       0      0.0%
BITBANK10          256      0       0      0.0%
BITBANK11          256      0       0      0.0%
BITBANK12          256      0       0      0.0%
BITBANK13          256      0       0      0.0%
BITBANK14          256      0       0      0.0%
BITBANK15          256      0       0      0.0%
BITBANK16          256      0       0      0.0%
BITBANK17          256      0       0      0.0%
BITBANK18          256      0       0      0.0%
BITBANK19          256      0       0      0.0%
BITBANK20          256      0       0      0.0%
BITBANK21          256      0       0      0.0%
BITBANK22          256      0       0      0.0%
BITBANK23          256      0       0      0.0%
BITBANK24          256      0       0      0.0%
BITBANK25          256      0       0      0.0%
BITBANK26          256      0       0      0.0%
BITBANK27          256      0       0      0.0%
BITBANK28          256      0       0      0.0%
BITBANK29          256      0       0      0.0%
BITBANK30          256      0       0      0.0%
BITBANK31          256      0       0      0.0%
BITBIGSFRlh       1577      0       0      0.0%
BITBIGSFRlll       385      0       0      0.0%
BITBIGSFRh          52      0       0      0.0%
BITBIGSFRllh        31      0       0      0.0%
<<<<<<< HEAD
COMRAM              95     21      21     22.1%
=======
COMRAM              95     22      22     23.2%
>>>>>>> 16a26dc850c114406dd9f218296dc05fea644037
BANK0              160      0       0      0.0%
BANK1              256      0       0      0.0%
BANK2              256      0       0      0.0%
BANK3              256      0       0      0.0%
BANK4              256      0       0      0.0%
BANK5              256      0       0      0.0%
BANK6              256      0       0      0.0%
BANK7              256      0       0      0.0%
BANK8              256      0       0      0.0%
BANK9              256      0       0      0.0%
BANK10             256      0       0      0.0%
BANK11             256      0       0      0.0%
BANK12             256      0       0      0.0%
BANK13             256      0       0      0.0%
BANK14             256      0       0      0.0%
BANK15             256      0       0      0.0%
BANK16             256      0       0      0.0%
BANK17             256      0       0      0.0%
BANK18             256      0       0      0.0%
BANK19             256      0       0      0.0%
BANK20             256      0       0      0.0%
BANK21             256      0       0      0.0%
BANK22             256      0       0      0.0%
BANK23             256      0       0      0.0%
BANK24             256      0       0      0.0%
BANK25             256      0       0      0.0%
BANK26             256      0       0      0.0%
BANK27             256      0       0      0.0%
BANK28             256      0       0      0.0%
BANK29             256      0       0      0.0%
BANK30             256      0       0      0.0%
BANK31             256      0       0      0.0%
BIGRAM            8191      0       0      0.0%
STACK                0      0       0      0.0%
<<<<<<< HEAD
DATA                 0      0      21      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Thu Apr 17 15:01:13 2025

        read_input@prev_state 000E                            l32 4306                            l35 429E  
                          l52 42DA                            l29 4318                            l38 42B4  
                          l55 4248                            l47 4156                            l57 4284  
                          u20 42C2                            u40 40EC                            u41 40E8  
                          u50 40FC                            u34 40D0                            u51 40F8  
                          u35 40CC                            u60 4130                            u61 412C  
                          u70 413E                            u71 413A                           l761 4308  
                         l763 42F6                           l851 4240                           l771 40BC  
                         l765 4300                           l845 4286                           l861 4264  
                         l757 42B8                           l773 40EC                           l781 411C  
                         l767 4304                           l847 4292                           l863 4268  
                         l759 42CE                           l775 40FC                           l783 4120  
                         l871 4168                           l849 429A                           l857 424A  
                         l785 4130                           l777 40FE                           l769 40B4  
                         l881 41A2                           l873 4174                           l865 4158  
                         l859 4256                           l787 413E                           l779 4104  
                         l883 41A4                           l875 417C                           l867 415C  
                         l789 4154                           l885 41BC                           l877 4188  
                         l869 4160                           l887 41C2                           l879 4190  
                         u120 42B4                           u121 42B0                           u130 4284  
                         u131 4280                           u140 41A2                           u141 419E  
                         u157 41AE                           u167 410E                           u177 4148  
                         u187 4294                           wreg 3FE8                ?_display_digit 0001  
                        i2l63 41E8                          i2l64 4238                          i2l65 423E  
                        _main 4158                          _wait 4286                          fsr2h 3FDA  
                        indf2 3FDF                          fsr2l 3FD9                          start 40AE  
                ___param_bank 0000   __end_ofdisplay_digit@F16363 2006              __end_of_INT0_ISR 4240  
                       ?_main 0001                         ?_wait 0005                         i2l815 41EA  
                       i2l807 41D0                         i2l817 4200                         i2l809 41E0  
                       i2l819 4218                         _PORTB 3FCB                         _PORTD 3FCD  
                       _TRISB 3FC3                         _TRISD 3FC5            _play_buzzer_melody 4240  
                       tablat 3FF5                         wait@i 0007                         status 3FD8  
         ?_play_buzzer_melody 0001               __initialization 42DC                  __end_of_main 41CE  
                __end_of_wait 42B6                        ??_main 0011                        ??_wait 0007  
               __activetblptr 0001          ??_play_buzzer_melody 0009               ??_display_digit 0005  
                      _ANSELB 3A50                        _ANSELD 3A70                        i2u9_40 41E0  
                      i2u9_41 41DC                        isa$std 0001              main@code_entered 0015  
                __mediumconst 2000                        wait@ms 0005                        tblptrh 3FF7  
                      tblptrl 3FF6                        tblptru 3FF8                    __accesstop 0060  
     __end_of__initialization 42E8                     ?_INT0_ISR 0001                 ___rparam_used 0001  
                   INT0_ISR@k 0003                __pcstackCOMRAM 0001                    ??_INT0_ISR 0001  
                     IVTBASEH 3FD6                       IVTBASEL 3FD5                       IVTBASEU 3FD7  
          display_digit@digit 000A                       i2u10_40 4238                       i2u10_41 4234  
                     i2u20_47 420C                       i2u19_47 41F4                       __Hparam 0000  
                     __Lparam 0000                  __psmallconst 2000                       __pcinit 42DC  
                  _init_ports 42F6                       __ramtop 2000                 ivt0x4008_base 4008  
                  _read_input 40B2                       __ptext0 4158                       __ptext1 40B2  
                     __ptext2 42B6                       __ptext3 4240                       __ptext4 4286  
                     __ptext5 42F6                       __ptext6 4308                       __ptext7 41D0  
        end_of_initialization 42E8                       postinc2 3FDE                     _PORTBbits 3FCB  
       __end_of_display_digit 42DC  __end_of_INTERRUPT_Initialize 431A                   ?_init_ports 0001  
                 ?_read_input 0001           start_initialization 42DC              main@second_input 0014  
                 __pivt0x4008 4008           display_digit@F16363 2001                   __smallconst 2000  
        _INTERRUPT_Initialize 4308                      _INT0_ISR 41D0               main@first_input 0013  
                    _IPR1bits 3981                      _PIE1bits 3991                      _PIR1bits 39A1  
         play_buzzer_melody@i 0009             ivt0x4008_undefint 40AC                   _INTCON0bits 3FD2  
       ?_INTERRUPT_Initialize 0001                      __Hrparam 0000                      __Lrparam 0000  
                __Lsmallconst 2000                  ??_init_ports 0005                  ??_read_input 000B  
  __end_of_play_buzzer_melody 4286         display_digit@seg_code 0005            __end_of_init_ports 4308  
          __end_of_read_input 4158                      isa$xinst 0000               read_input@count 0010  
       read_input@inputPinBit 000D        ??_INTERRUPT_Initialize 0005                      intlevel2 0000  
        read_input@curr_state 000F                 _display_digit 42B6  
=======
DATA                 0      0      22      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Wed Apr 16 01:50:36 2025

                          l33 4320                            l42 4304                            l36 4344  
                          l61 4298                            l39 42EE                            l63 42D4  
                          l55 4188                            l58 434E                           l810 4348  
                         l900 4176                           l902 4186                           l912 429A  
                         l920 418A                           l770 4334                           l914 42A6  
                         l906 4290                           l930 41C6                           l922 4192  
                         l772 433E                           l916 42B4                           l940 41F4  
                         l932 41CC                           l924 419A                           l766 4306  
                         l774 4342                           l870 42EA                           l918 42B8  
                         l942 4200                           l934 41D8                           l926 41B0  
                         l768 4318                           l880 40FC                           l872 40B4  
                         l944 4212                           l936 41E0                           l928 41B8  
                         l866 42D6                           l890 413C                           l882 4116  
                         l874 40B6                           l938 41F2                           l868 42E2  
                         l892 4148                           l884 411A                           l876 40CE  
                         l894 414C                           l886 412A                           l878 40DE  
                         l896 4158                           l888 413A                           l898 4160  
                         u200 4176                           u201 4172                           u210 4186  
                         u211 4182                           u140 4304                           u220 42D4  
                         u141 4300                           u221 42D0                           u150 40DE  
                         u230 41C6                           u151 40DA                           u231 41C2  
                         u160 40F0                           u240 41F2                           u161 40E8  
                         u241 41EE                           u170 410E                           u171 4106  
                         u180 412A                           u181 4126                           u190 413A  
                         u191 4136                           u168 40F2                           u257 42E4  
                         u178 4110                           wreg 3FE8                ?_display_digit 0001  
                        i2l70 4288                          i2l71 428E                          i2l69 4238  
                        _main 418A                          _wait 42D6                          start 40AE  
                ___param_bank 0000              __end_of_INT0_ISR 4290                         ?_main 0001  
                       ?_wait 0005                         i2l834 423A                         i2l826 4220  
                       i2l836 4250                         i2l828 4230                         i2l838 4268  
                       _PORTB 3FCB                         _PORTD 3FCD                         _TRISB 3FC3  
                       _TRISD 3FC5            _play_buzzer_melody 4290                         wait@i 0007  
                       status 3FD8           ?_play_buzzer_melody 0001               __initialization 4322  
                __end_of_main 421E                  __end_of_wait 4306                        ??_main 0014  
                      ??_wait 0007                 __activetblptr 0000          ??_play_buzzer_melody 0009  
             ??_display_digit 0005                        _ANSELB 3A50                        _ANSELD 3A70  
                      isa$std 0001              main@code_entered 0014                  __mediumconst 2000  
                      wait@ms 0005                    __accesstop 0060       __end_of__initialization 432E  
                   ?_INT0_ISR 0001                 ___rparam_used 0001                     INT0_ISR@k 0003  
              __pcstackCOMRAM 0001                    ??_INT0_ISR 0001                       IVTBASEH 3FD6  
                     IVTBASEL 3FD5                       IVTBASEU 3FD7            display_digit@digit 0005  
                     i2u10_40 4230                       i2u10_41 422C                       i2u11_40 4288  
                     i2u11_41 4284                       i2u26_47 4244                       i2u27_47 425C  
                     __Hparam 0000                       __Lparam 0000                  __psmallconst 2000  
                     __pcinit 4322                    _init_ports 4334                       __ramtop 2000  
               ivt0x4008_base 4008                    _read_input 40B2                       __ptext0 418A  
                     __ptext1 40B2                       __ptext2 4290                       __ptext3 42D6  
                     __ptext4 4334                       __ptext5 4346                       __ptext6 4306  
                     __ptext7 4220       read_input@current_state 0012          end_of_initialization 432E  
           read_input@elapsed 000D                     _PORTBbits 3FCB             read_input@timeout 000A  
       __end_of_display_digit 4350  __end_of_INTERRUPT_Initialize 4322                   ?_init_ports 0001  
                 ?_read_input 0001           start_initialization 4322              main@second_input 0016  
                 __pivt0x4008 4008                _read_input$202 000F                   __smallconst 2000  
        _INTERRUPT_Initialize 4306                      _INT0_ISR 4220               main@first_input 0015  
                    _IPR1bits 3981                      _PIE1bits 3991                      _IVTBASEH 3FD6  
                    _IVTBASEL 3FD5                      _IVTBASEU 3FD7                      _PIR1bits 39A1  
         play_buzzer_melody@i 0009             ivt0x4008_undefint 40AC                   _INTCON0bits 3FD2  
       ?_INTERRUPT_Initialize 0001                      __Hrparam 0000                      __Lrparam 0000  
                ??_init_ports 0005                  ??_read_input 0009    __end_of_play_buzzer_melody 42D6  
          __end_of_init_ports 4346            __end_of_read_input 418A                      isa$xinst 0000  
             read_input@count 0013        ??_INTERRUPT_Initialize 0005                      intlevel2 0000  
        read_input@last_state 0011                 _display_digit 4346            read_input@pr_input 000C  
>>>>>>> 16a26dc850c114406dd9f218296dc05fea644037
