

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Mon Apr 28 14:41:21 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	18F47K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1,group=3
    14                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1,group=3
    15                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1,group=1
    16                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1,group=1
    17                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1,group=1
    18                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1,group=1
    19                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1,group=3
    20                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1,group=1
    21                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1,group=3
    22                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1,group=3
    23                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1,group=3
    24                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1,group=3
    25                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1,group=3
    26                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1,group=3
    27                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1,group=3
    28                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1,group=2
    29                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1,group=2
    30                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1,group=2
    31                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1,group=2
    32                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1,group=2
    33                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1,group=2
    34                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1,group=2
    35                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1,group=2
    36                           	psect	text24,global,reloc=2,class=CODE,space=0,delta=1,group=2
    37                           	psect	text25,global,reloc=2,class=CODE,space=0,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,space=0,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,space=0,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,space=0,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,space=0,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,space=0,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,space=0,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,space=0,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,space=0,delta=1
    46                           	psect	text34,global,reloc=4,class=CODE,space=0,delta=1
    47                           	psect	ivt0x4008,global,reloc=2,class=CODE,space=0,delta=1,noexec,keep,optim=
    48                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    49                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    50                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    51   000000                     
    52                           ; Generated 12/10/2023 GMT
    53                           ; 
    54                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    55                           ; All rights reserved.
    56                           ; 
    57                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    58                           ; 
    59                           ; Redistribution and use in source and binary forms, with or without modification, are
    60                           ; permitted provided that the following conditions are met:
    61                           ; 
    62                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    63                           ;        conditions and the following disclaimer.
    64                           ; 
    65                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    66                           ;        of conditions and the following disclaimer in the documentation and/or other
    67                           ;        materials provided with the distribution. Publication is not required when
    68                           ;        this file is used in an embedded application.
    69                           ; 
    70                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    71                           ;        software without specific prior written permission.
    72                           ; 
    73                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    74                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    75                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    76                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    77                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    78                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    79                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    80                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    81                           ; 
    82                           ; 
    83                           ; Code-generator required, PIC18F47K42 Definitions
    84                           ; 
    85                           ; SFR Addresses
    86   003FE0                     bsr             equ	16352
    87   003FE9                     fsr0            equ	16361
    88   003FEA                     fsr0h           equ	16362
    89   003FE9                     fsr0l           equ	16361
    90   003FE1                     fsr1            equ	16353
    91   003FE2                     fsr1h           equ	16354
    92   003FE1                     fsr1l           equ	16353
    93   003FD9                     fsr2            equ	16345
    94   003FDA                     fsr2h           equ	16346
    95   003FD9                     fsr2l           equ	16345
    96   003FEF                     indf0           equ	16367
    97   003FE7                     indf1           equ	16359
    98   003FDF                     indf2           equ	16351
    99   003FD2                     intcon          equ	16338
   100   0039E5                     nvmcon          equ	14821
   101   003FF9                     pcl             equ	16377
   102   003FFA                     pclath          equ	16378
   103   003FFB                     pclatu          equ	16379
   104   003FEB                     plusw0          equ	16363
   105   003FE3                     plusw1          equ	16355
   106   003FDB                     plusw2          equ	16347
   107   003FED                     postdec0        equ	16365
   108   003FE5                     postdec1        equ	16357
   109   003FDD                     postdec2        equ	16349
   110   003FEE                     postinc0        equ	16366
   111   003FE6                     postinc1        equ	16358
   112   003FDE                     postinc2        equ	16350
   113   003FEC                     preinc0         equ	16364
   114   003FE4                     preinc1         equ	16356
   115   003FDC                     preinc2         equ	16348
   116   003FF3                     prod            equ	16371
   117   003FF4                     prodh           equ	16372
   118   003FF3                     prodl           equ	16371
   119   003FD8                     status          equ	16344
   120   003FF5                     tablat          equ	16373
   121   003FF6                     tblptr          equ	16374
   122   003FF7                     tblptrh         equ	16375
   123   003FF6                     tblptrl         equ	16374
   124   003FF8                     tblptru         equ	16376
   125   003FFD                     tosl            equ	16381
   126   003FE8                     wreg            equ	16360
   127   003880                     STATUS_CSHAD    equ	14464	;# 
   128   003881                     WREG_CSHAD      equ	14465	;# 
   129   003882                     BSR_CSHAD       equ	14466	;# 
   130   003883                     SHADCON         equ	14467	;# 
   131   003884                     STATUS_SHAD     equ	14468	;# 
   132   003885                     WREG_SHAD       equ	14469	;# 
   133   003886                     BSR_SHAD        equ	14470	;# 
   134   003887                     PCLATH_SHAD     equ	14471	;# 
   135   003888                     PCLATU_SHAD     equ	14472	;# 
   136   003889                     FSR0SH          equ	14473	;# 
   137   003889                     FSR0L_SHAD      equ	14473	;# 
   138   00388A                     FSR0H_SHAD      equ	14474	;# 
   139   00388B                     FSR1SH          equ	14475	;# 
   140   00388B                     FSR1L_SHAD      equ	14475	;# 
   141   00388C                     FSR1H_SHAD      equ	14476	;# 
   142   00388D                     FSR2SH          equ	14477	;# 
   143   00388D                     FSR2L_SHAD      equ	14477	;# 
   144   00388E                     FSR2H_SHAD      equ	14478	;# 
   145   00388F                     PRODSH          equ	14479	;# 
   146   00388F                     PRODL_SHAD      equ	14479	;# 
   147   003890                     PRODH_SHAD      equ	14480	;# 
   148   00389D                     IVTADL          equ	14493	;# 
   149   00389E                     IVTADH          equ	14494	;# 
   150   00389F                     IVTADU          equ	14495	;# 
   151   00395B                     WDTCON0         equ	14683	;# 
   152   00395C                     WDTCON1         equ	14684	;# 
   153   00395D                     WDTPSL          equ	14685	;# 
   154   00395E                     WDTPSH          equ	14686	;# 
   155   00395F                     WDTTMR          equ	14687	;# 
   156   003960                     CRCDATA         equ	14688	;# 
   157   003960                     CRCDATL         equ	14688	;# 
   158   003961                     CRCDATH         equ	14689	;# 
   159   003962                     CRCACC          equ	14690	;# 
   160   003962                     CRCACCL         equ	14690	;# 
   161   003963                     CRCACCH         equ	14691	;# 
   162   003964                     CRCSHFT         equ	14692	;# 
   163   003964                     CRCSHIFTL       equ	14692	;# 
   164   003965                     CRCSHIFTH       equ	14693	;# 
   165   003966                     CRCXOR          equ	14694	;# 
   166   003966                     CRCXORL         equ	14694	;# 
   167   003967                     CRCXORH         equ	14695	;# 
   168   003968                     CRCCON0         equ	14696	;# 
   169   003969                     CRCCON1         equ	14697	;# 
   170   003976                     SCANLADR        equ	14710	;# 
   171   003976                     SCANLADRL       equ	14710	;# 
   172   003977                     SCANLADRH       equ	14711	;# 
   173   003978                     SCANLADRU       equ	14712	;# 
   174   003979                     SCANHADR        equ	14713	;# 
   175   003979                     SCANHADRL       equ	14713	;# 
   176   00397A                     SCANHADRH       equ	14714	;# 
   177   00397B                     SCANHADRU       equ	14715	;# 
   178   00397C                     SCANCON0        equ	14716	;# 
   179   00397D                     SCANTRIG        equ	14717	;# 
   180   003980                     IPR0            equ	14720	;# 
   181   003981                     IPR1            equ	14721	;# 
   182   003982                     IPR2            equ	14722	;# 
   183   003983                     IPR3            equ	14723	;# 
   184   003984                     IPR4            equ	14724	;# 
   185   003985                     IPR5            equ	14725	;# 
   186   003986                     IPR6            equ	14726	;# 
   187   003987                     IPR7            equ	14727	;# 
   188   003988                     IPR8            equ	14728	;# 
   189   003989                     IPR9            equ	14729	;# 
   190   00398A                     IPR10           equ	14730	;# 
   191   003990                     PIE0            equ	14736	;# 
   192   003991                     PIE1            equ	14737	;# 
   193   003992                     PIE2            equ	14738	;# 
   194   003993                     PIE3            equ	14739	;# 
   195   003994                     PIE4            equ	14740	;# 
   196   003995                     PIE5            equ	14741	;# 
   197   003996                     PIE6            equ	14742	;# 
   198   003997                     PIE7            equ	14743	;# 
   199   003998                     PIE8            equ	14744	;# 
   200   003999                     PIE9            equ	14745	;# 
   201   00399A                     PIE10           equ	14746	;# 
   202   0039A0                     PIR0            equ	14752	;# 
   203   0039A1                     PIR1            equ	14753	;# 
   204   0039A2                     PIR2            equ	14754	;# 
   205   0039A3                     PIR3            equ	14755	;# 
   206   0039A4                     PIR4            equ	14756	;# 
   207   0039A5                     PIR5            equ	14757	;# 
   208   0039A6                     PIR6            equ	14758	;# 
   209   0039A7                     PIR7            equ	14759	;# 
   210   0039A8                     PIR8            equ	14760	;# 
   211   0039A9                     PIR9            equ	14761	;# 
   212   0039AA                     PIR10           equ	14762	;# 
   213   0039C0                     PMD0            equ	14784	;# 
   214   0039C1                     PMD1            equ	14785	;# 
   215   0039C2                     PMD2            equ	14786	;# 
   216   0039C3                     PMD3            equ	14787	;# 
   217   0039C4                     PMD4            equ	14788	;# 
   218   0039C5                     PMD5            equ	14789	;# 
   219   0039C6                     PMD6            equ	14790	;# 
   220   0039C7                     PMD7            equ	14791	;# 
   221   0039D0                     BORCON          equ	14800	;# 
   222   0039D1                     VREGCON         equ	14801	;# 
   223   0039D8                     CPUDOZE         equ	14808	;# 
   224   0039D9                     OSCCON1         equ	14809	;# 
   225   0039DA                     OSCCON2         equ	14810	;# 
   226   0039DB                     OSCCON3         equ	14811	;# 
   227   0039DC                     OSCSTAT         equ	14812	;# 
   228   0039DC                     OSCSTAT1        equ	14812	;# 
   229   0039DD                     OSCEN           equ	14813	;# 
   230   0039DE                     OSCTUNE         equ	14814	;# 
   231   0039DF                     OSCFRQ          equ	14815	;# 
   232   0039E0                     NVMADRL         equ	14816	;# 
   233   0039E1                     NVMADRH         equ	14817	;# 
   234   0039E3                     NVMDAT          equ	14819	;# 
   235   0039E5                     NVMCON1         equ	14821	;# 
   236   0039E6                     NVMCON2         equ	14822	;# 
   237   0039EF                     PRLOCK          equ	14831	;# 
   238   0039F1                     ISRPR           equ	14833	;# 
   239   0039F2                     MAINPR          equ	14834	;# 
   240   0039F3                     DMA1PR          equ	14835	;# 
   241   0039F4                     DMA2PR          equ	14836	;# 
   242   0039F7                     SCANPR          equ	14839	;# 
   243   003A00                     RA0PPS          equ	14848	;# 
   244   003A01                     RA1PPS          equ	14849	;# 
   245   003A02                     RA2PPS          equ	14850	;# 
   246   003A03                     RA3PPS          equ	14851	;# 
   247   003A04                     RA4PPS          equ	14852	;# 
   248   003A05                     RA5PPS          equ	14853	;# 
   249   003A06                     RA6PPS          equ	14854	;# 
   250   003A07                     RA7PPS          equ	14855	;# 
   251   003A08                     RB0PPS          equ	14856	;# 
   252   003A09                     RB1PPS          equ	14857	;# 
   253   003A0A                     RB2PPS          equ	14858	;# 
   254   003A0B                     RB3PPS          equ	14859	;# 
   255   003A0C                     RB4PPS          equ	14860	;# 
   256   003A0D                     RB5PPS          equ	14861	;# 
   257   003A0E                     RB6PPS          equ	14862	;# 
   258   003A0F                     RB7PPS          equ	14863	;# 
   259   003A10                     RC0PPS          equ	14864	;# 
   260   003A11                     RC1PPS          equ	14865	;# 
   261   003A12                     RC2PPS          equ	14866	;# 
   262   003A13                     RC3PPS          equ	14867	;# 
   263   003A14                     RC4PPS          equ	14868	;# 
   264   003A15                     RC5PPS          equ	14869	;# 
   265   003A16                     RC6PPS          equ	14870	;# 
   266   003A17                     RC7PPS          equ	14871	;# 
   267   003A18                     RD0PPS          equ	14872	;# 
   268   003A19                     RD1PPS          equ	14873	;# 
   269   003A1A                     RD2PPS          equ	14874	;# 
   270   003A1B                     RD3PPS          equ	14875	;# 
   271   003A1C                     RD4PPS          equ	14876	;# 
   272   003A1D                     RD5PPS          equ	14877	;# 
   273   003A1E                     RD6PPS          equ	14878	;# 
   274   003A1F                     RD7PPS          equ	14879	;# 
   275   003A20                     RE0PPS          equ	14880	;# 
   276   003A21                     RE1PPS          equ	14881	;# 
   277   003A22                     RE2PPS          equ	14882	;# 
   278   003A40                     ANSELA          equ	14912	;# 
   279   003A41                     WPUA            equ	14913	;# 
   280   003A42                     ODCONA          equ	14914	;# 
   281   003A43                     SLRCONA         equ	14915	;# 
   282   003A44                     INLVLA          equ	14916	;# 
   283   003A45                     IOCAP           equ	14917	;# 
   284   003A46                     IOCAN           equ	14918	;# 
   285   003A47                     IOCAF           equ	14919	;# 
   286   003A50                     ANSELB          equ	14928	;# 
   287   003A51                     WPUB            equ	14929	;# 
   288   003A52                     ODCONB          equ	14930	;# 
   289   003A53                     SLRCONB         equ	14931	;# 
   290   003A54                     INLVLB          equ	14932	;# 
   291   003A55                     IOCBP           equ	14933	;# 
   292   003A56                     IOCBN           equ	14934	;# 
   293   003A57                     IOCBF           equ	14935	;# 
   294   003A5A                     RB1I2C          equ	14938	;# 
   295   003A5B                     RB2I2C          equ	14939	;# 
   296   003A60                     ANSELC          equ	14944	;# 
   297   003A61                     WPUC            equ	14945	;# 
   298   003A62                     ODCONC          equ	14946	;# 
   299   003A63                     SLRCONC         equ	14947	;# 
   300   003A64                     INLVLC          equ	14948	;# 
   301   003A65                     IOCCP           equ	14949	;# 
   302   003A66                     IOCCN           equ	14950	;# 
   303   003A67                     IOCCF           equ	14951	;# 
   304   003A6A                     RC3I2C          equ	14954	;# 
   305   003A6B                     RC4I2C          equ	14955	;# 
   306   003A70                     ANSELD          equ	14960	;# 
   307   003A71                     WPUD            equ	14961	;# 
   308   003A72                     ODCOND          equ	14962	;# 
   309   003A73                     SLRCOND         equ	14963	;# 
   310   003A74                     INLVLD          equ	14964	;# 
   311   003A7A                     RD0I2C          equ	14970	;# 
   312   003A7B                     RD1I2C          equ	14971	;# 
   313   003A80                     ANSELE          equ	14976	;# 
   314   003A81                     WPUE            equ	14977	;# 
   315   003A82                     ODCONE          equ	14978	;# 
   316   003A83                     SLRCONE         equ	14979	;# 
   317   003A84                     INLVLE          equ	14980	;# 
   318   003A85                     IOCEP           equ	14981	;# 
   319   003A86                     IOCEN           equ	14982	;# 
   320   003A87                     IOCEF           equ	14983	;# 
   321   003ABF                     PPSLOCK         equ	15039	;# 
   322   003AC0                     INT0PPS         equ	15040	;# 
   323   003AC1                     INT1PPS         equ	15041	;# 
   324   003AC2                     INT2PPS         equ	15042	;# 
   325   003AC3                     T0CKIPPS        equ	15043	;# 
   326   003AC4                     T1CKIPPS        equ	15044	;# 
   327   003AC5                     T1GPPS          equ	15045	;# 
   328   003AC6                     T3CKIPPS        equ	15046	;# 
   329   003AC7                     T3GPPS          equ	15047	;# 
   330   003AC8                     T5CKIPPS        equ	15048	;# 
   331   003AC9                     T5GPPS          equ	15049	;# 
   332   003ACA                     T2INPPS         equ	15050	;# 
   333   003ACB                     T4INPPS         equ	15051	;# 
   334   003ACC                     T6INPPS         equ	15052	;# 
   335   003ACD                     CCP1PPS         equ	15053	;# 
   336   003ACE                     CCP2PPS         equ	15054	;# 
   337   003ACF                     CCP3PPS         equ	15055	;# 
   338   003AD0                     CCP4PPS         equ	15056	;# 
   339   003AD1                     SMT1WINPPS      equ	15057	;# 
   340   003AD2                     SMT1SIGPPS      equ	15058	;# 
   341   003AD3                     CWG1INPPS       equ	15059	;# 
   342   003AD4                     CWG2INPPS       equ	15060	;# 
   343   003AD5                     CWG3INPPS       equ	15061	;# 
   344   003AD6                     MD1CARLPPS      equ	15062	;# 
   345   003AD7                     MD1CARHPPS      equ	15063	;# 
   346   003AD8                     MD1SRCPPS       equ	15064	;# 
   347   003AD9                     CLCIN0PPS       equ	15065	;# 
   348   003ADA                     CLCIN1PPS       equ	15066	;# 
   349   003ADB                     CLCIN2PPS       equ	15067	;# 
   350   003ADC                     CLCIN3PPS       equ	15068	;# 
   351   003ADD                     ADACTPPS        equ	15069	;# 
   352   003ADE                     SPI1SCKPPS      equ	15070	;# 
   353   003ADF                     SPI1SDIPPS      equ	15071	;# 
   354   003AE0                     SPI1SSPPS       equ	15072	;# 
   355   003AE1                     I2C1SCLPPS      equ	15073	;# 
   356   003AE2                     I2C1SDAPPS      equ	15074	;# 
   357   003AE3                     I2C2SCLPPS      equ	15075	;# 
   358   003AE4                     I2C2SDAPPS      equ	15076	;# 
   359   003AE5                     U1RXPPS         equ	15077	;# 
   360   003AE6                     U1CTSPPS        equ	15078	;# 
   361   003AE8                     U2RXPPS         equ	15080	;# 
   362   003AE9                     U2CTSPPS        equ	15081	;# 
   363   003BC9                     DMA2BUF         equ	15305	;# 
   364   003BCA                     DMA2DCNT        equ	15306	;# 
   365   003BCA                     DMA2DCNTL       equ	15306	;# 
   366   003BCB                     DMA2DCNTH       equ	15307	;# 
   367   003BCC                     DMA2DPTR        equ	15308	;# 
   368   003BCC                     DMA2DPTRL       equ	15308	;# 
   369   003BCD                     DMA2DPTRH       equ	15309	;# 
   370   003BCE                     DMA2DSZ         equ	15310	;# 
   371   003BCE                     DMA2DSZL        equ	15310	;# 
   372   003BCF                     DMA2DSZH        equ	15311	;# 
   373   003BD0                     DMA2DSA         equ	15312	;# 
   374   003BD0                     DMA2DSAL        equ	15312	;# 
   375   003BD1                     DMA2DSAH        equ	15313	;# 
   376   003BD2                     DMA2SCNT        equ	15314	;# 
   377   003BD2                     DMA2SCNTL       equ	15314	;# 
   378   003BD3                     DMA2SCNTH       equ	15315	;# 
   379   003BD4                     DMA2SPTR        equ	15316	;# 
   380   003BD4                     DMA2SPTRL       equ	15316	;# 
   381   003BD5                     DMA2SPTRH       equ	15317	;# 
   382   003BD6                     DMA2SPTRU       equ	15318	;# 
   383   003BD7                     DMA2SSZ         equ	15319	;# 
   384   003BD7                     DMA2SSZL        equ	15319	;# 
   385   003BD8                     DMA2SSZH        equ	15320	;# 
   386   003BD9                     DMA2SSA         equ	15321	;# 
   387   003BD9                     DMA2SSAL        equ	15321	;# 
   388   003BDA                     DMA2SSAH        equ	15322	;# 
   389   003BDB                     DMA2SSAU        equ	15323	;# 
   390   003BDC                     DMA2CON0        equ	15324	;# 
   391   003BDD                     DMA2CON1        equ	15325	;# 
   392   003BDE                     DMA2AIRQ        equ	15326	;# 
   393   003BDF                     DMA2SIRQ        equ	15327	;# 
   394   003BE9                     DMA1BUF         equ	15337	;# 
   395   003BEA                     DMA1DCNT        equ	15338	;# 
   396   003BEA                     DMA1DCNTL       equ	15338	;# 
   397   003BEB                     DMA1DCNTH       equ	15339	;# 
   398   003BEC                     DMA1DPTR        equ	15340	;# 
   399   003BEC                     DMA1DPTRL       equ	15340	;# 
   400   003BED                     DMA1DPTRH       equ	15341	;# 
   401   003BEE                     DMA1DSZ         equ	15342	;# 
   402   003BEE                     DMA1DSZL        equ	15342	;# 
   403   003BEF                     DMA1DSZH        equ	15343	;# 
   404   003BF0                     DMA1DSA         equ	15344	;# 
   405   003BF0                     DMA1DSAL        equ	15344	;# 
   406   003BF1                     DMA1DSAH        equ	15345	;# 
   407   003BF2                     DMA1SCNT        equ	15346	;# 
   408   003BF2                     DMA1SCNTL       equ	15346	;# 
   409   003BF3                     DMA1SCNTH       equ	15347	;# 
   410   003BF4                     DMA1SPTR        equ	15348	;# 
   411   003BF4                     DMA1SPTRL       equ	15348	;# 
   412   003BF5                     DMA1SPTRH       equ	15349	;# 
   413   003BF6                     DMA1SPTRU       equ	15350	;# 
   414   003BF7                     DMA1SSZ         equ	15351	;# 
   415   003BF7                     DMA1SSZL        equ	15351	;# 
   416   003BF8                     DMA1SSZH        equ	15352	;# 
   417   003BF9                     DMA1SSA         equ	15353	;# 
   418   003BF9                     DMA1SSAL        equ	15353	;# 
   419   003BFA                     DMA1SSAH        equ	15354	;# 
   420   003BFB                     DMA1SSAU        equ	15355	;# 
   421   003BFC                     DMA1CON0        equ	15356	;# 
   422   003BFD                     DMA1CON1        equ	15357	;# 
   423   003BFE                     DMA1AIRQ        equ	15358	;# 
   424   003BFF                     DMA1SIRQ        equ	15359	;# 
   425   003C56                     CLC4CON         equ	15446	;# 
   426   003C57                     CLC4POL         equ	15447	;# 
   427   003C58                     CLC4SEL0        equ	15448	;# 
   428   003C59                     CLC4SEL1        equ	15449	;# 
   429   003C5A                     CLC4SEL2        equ	15450	;# 
   430   003C5B                     CLC4SEL3        equ	15451	;# 
   431   003C5C                     CLC4GLS0        equ	15452	;# 
   432   003C5D                     CLC4GLS1        equ	15453	;# 
   433   003C5E                     CLC4GLS2        equ	15454	;# 
   434   003C5F                     CLC4GLS3        equ	15455	;# 
   435   003C60                     CLC3CON         equ	15456	;# 
   436   003C61                     CLC3POL         equ	15457	;# 
   437   003C62                     CLC3SEL0        equ	15458	;# 
   438   003C63                     CLC3SEL1        equ	15459	;# 
   439   003C64                     CLC3SEL2        equ	15460	;# 
   440   003C65                     CLC3SEL3        equ	15461	;# 
   441   003C66                     CLC3GLS0        equ	15462	;# 
   442   003C67                     CLC3GLS1        equ	15463	;# 
   443   003C68                     CLC3GLS2        equ	15464	;# 
   444   003C69                     CLC3GLS3        equ	15465	;# 
   445   003C6A                     CLC2CON         equ	15466	;# 
   446   003C6B                     CLC2POL         equ	15467	;# 
   447   003C6C                     CLC2SEL0        equ	15468	;# 
   448   003C6D                     CLC2SEL1        equ	15469	;# 
   449   003C6E                     CLC2SEL2        equ	15470	;# 
   450   003C6F                     CLC2SEL3        equ	15471	;# 
   451   003C70                     CLC2GLS0        equ	15472	;# 
   452   003C71                     CLC2GLS1        equ	15473	;# 
   453   003C72                     CLC2GLS2        equ	15474	;# 
   454   003C73                     CLC2GLS3        equ	15475	;# 
   455   003C74                     CLC1CON         equ	15476	;# 
   456   003C75                     CLC1POL         equ	15477	;# 
   457   003C76                     CLC1SEL0        equ	15478	;# 
   458   003C77                     CLC1SEL1        equ	15479	;# 
   459   003C78                     CLC1SEL2        equ	15480	;# 
   460   003C79                     CLC1SEL3        equ	15481	;# 
   461   003C7A                     CLC1GLS0        equ	15482	;# 
   462   003C7B                     CLC1GLS1        equ	15483	;# 
   463   003C7C                     CLC1GLS2        equ	15484	;# 
   464   003C7D                     CLC1GLS3        equ	15485	;# 
   465   003C7E                     CLCDATA0        equ	15486	;# 
   466   003CE5                     CLKRCON         equ	15589	;# 
   467   003CE6                     CLKRCLK         equ	15590	;# 
   468   003CFA                     MD1CON0         equ	15610	;# 
   469   003CFB                     MD1CON1         equ	15611	;# 
   470   003CFC                     MD1SRC          equ	15612	;# 
   471   003CFD                     MD1CARL         equ	15613	;# 
   472   003CFE                     MD1CARH         equ	15614	;# 
   473   003D10                     SPI1RXB         equ	15632	;# 
   474   003D11                     SPI1TXB         equ	15633	;# 
   475   003D12                     SPI1TCNT        equ	15634	;# 
   476   003D12                     SPI1TCNTL       equ	15634	;# 
   477   003D13                     SPI1TCNTH       equ	15635	;# 
   478   003D14                     SPI1CON0        equ	15636	;# 
   479   003D15                     SPI1CON1        equ	15637	;# 
   480   003D16                     SPI1CON2        equ	15638	;# 
   481   003D17                     SPI1STATUS      equ	15639	;# 
   482   003D18                     SPI1TWIDTH      equ	15640	;# 
   483   003D19                     SPI1BAUD        equ	15641	;# 
   484   003D1A                     SPI1INTF        equ	15642	;# 
   485   003D1B                     SPI1INTE        equ	15643	;# 
   486   003D1C                     SPI1CLK         equ	15644	;# 
   487   003D54                     I2C2RXB         equ	15700	;# 
   488   003D55                     I2C2TXB         equ	15701	;# 
   489   003D56                     I2C2CNT         equ	15702	;# 
   490   003D57                     I2C2ADB0        equ	15703	;# 
   491   003D58                     I2C2ADB1        equ	15704	;# 
   492   003D59                     I2C2ADR0        equ	15705	;# 
   493   003D5A                     I2C2ADR1        equ	15706	;# 
   494   003D5B                     I2C2ADR2        equ	15707	;# 
   495   003D5C                     I2C2ADR3        equ	15708	;# 
   496   003D5D                     I2C2CON0        equ	15709	;# 
   497   003D5E                     I2C2CON1        equ	15710	;# 
   498   003D5F                     I2C2CON2        equ	15711	;# 
   499   003D60                     I2C2ERR         equ	15712	;# 
   500   003D61                     I2C2STAT0       equ	15713	;# 
   501   003D62                     I2C2STAT1       equ	15714	;# 
   502   003D63                     I2C2PIR         equ	15715	;# 
   503   003D64                     I2C2PIE         equ	15716	;# 
   504   003D65                     I2C2CLK         equ	15717	;# 
   505   003D66                     I2C2BTO         equ	15718	;# 
   506   003D6A                     I2C1RXB         equ	15722	;# 
   507   003D6B                     I2C1TXB         equ	15723	;# 
   508   003D6C                     I2C1CNT         equ	15724	;# 
   509   003D6D                     I2C1ADB0        equ	15725	;# 
   510   003D6E                     I2C1ADB1        equ	15726	;# 
   511   003D6F                     I2C1ADR0        equ	15727	;# 
   512   003D70                     I2C1ADR1        equ	15728	;# 
   513   003D71                     I2C1ADR2        equ	15729	;# 
   514   003D72                     I2C1ADR3        equ	15730	;# 
   515   003D73                     I2C1CON0        equ	15731	;# 
   516   003D74                     I2C1CON1        equ	15732	;# 
   517   003D75                     I2C1CON2        equ	15733	;# 
   518   003D76                     I2C1ERR         equ	15734	;# 
   519   003D77                     I2C1STAT0       equ	15735	;# 
   520   003D78                     I2C1STAT1       equ	15736	;# 
   521   003D79                     I2C1PIR         equ	15737	;# 
   522   003D7A                     I2C1PIE         equ	15738	;# 
   523   003D7B                     I2C1CLK         equ	15739	;# 
   524   003D7C                     I2C1BTO         equ	15740	;# 
   525   003DD0                     U2RXB           equ	15824	;# 
   526   003DD0                     U2RXBL          equ	15824	;# 
   527   003DD2                     U2TXB           equ	15826	;# 
   528   003DD2                     U2TXBL          equ	15826	;# 
   529   003DD4                     U2P1            equ	15828	;# 
   530   003DD4                     U2P1L           equ	15828	;# 
   531   003DD6                     U2P2            equ	15830	;# 
   532   003DD6                     U2P2L           equ	15830	;# 
   533   003DD8                     U2P3            equ	15832	;# 
   534   003DD8                     U2P3L           equ	15832	;# 
   535   003DDA                     U2CON0          equ	15834	;# 
   536   003DDB                     U2CON1          equ	15835	;# 
   537   003DDC                     U2CON2          equ	15836	;# 
   538   003DDD                     U2BRG           equ	15837	;# 
   539   003DDD                     U2BRGL          equ	15837	;# 
   540   003DDE                     U2BRGH          equ	15838	;# 
   541   003DDF                     U2FIFO          equ	15839	;# 
   542   003DE0                     U2UIR           equ	15840	;# 
   543   003DE1                     U2ERRIR         equ	15841	;# 
   544   003DE2                     U2ERRIE         equ	15842	;# 
   545   003DE8                     U1RXB           equ	15848	;# 
   546   003DE8                     U1RXBL          equ	15848	;# 
   547   003DE9                     U1RXCHK         equ	15849	;# 
   548   003DEA                     U1TXB           equ	15850	;# 
   549   003DEA                     U1TXBL          equ	15850	;# 
   550   003DEB                     U1TXCHK         equ	15851	;# 
   551   003DEC                     U1P1            equ	15852	;# 
   552   003DEC                     U1P1L           equ	15852	;# 
   553   003DED                     U1P1H           equ	15853	;# 
   554   003DEE                     U1P2            equ	15854	;# 
   555   003DEE                     U1P2L           equ	15854	;# 
   556   003DEF                     U1P2H           equ	15855	;# 
   557   003DF0                     U1P3            equ	15856	;# 
   558   003DF0                     U1P3L           equ	15856	;# 
   559   003DF1                     U1P3H           equ	15857	;# 
   560   003DF2                     U1CON0          equ	15858	;# 
   561   003DF3                     U1CON1          equ	15859	;# 
   562   003DF4                     U1CON2          equ	15860	;# 
   563   003DF5                     U1BRG           equ	15861	;# 
   564   003DF5                     U1BRGL          equ	15861	;# 
   565   003DF6                     U1BRGH          equ	15862	;# 
   566   003DF7                     U1FIFO          equ	15863	;# 
   567   003DF8                     U1UIR           equ	15864	;# 
   568   003DF9                     U1ERRIR         equ	15865	;# 
   569   003DFA                     U1ERRIE         equ	15866	;# 
   570   003E9C                     DAC1CON1        equ	16028	;# 
   571   003E9E                     DAC1CON0        equ	16030	;# 
   572   003EB8                     CM2CON0         equ	16056	;# 
   573   003EB9                     CM2CON1         equ	16057	;# 
   574   003EBA                     CM2NCH          equ	16058	;# 
   575   003EBB                     CM2PCH          equ	16059	;# 
   576   003EBC                     CM1CON0         equ	16060	;# 
   577   003EBD                     CM1CON1         equ	16061	;# 
   578   003EBE                     CM1NCH          equ	16062	;# 
   579   003EBF                     CM1PCH          equ	16063	;# 
   580   003EC0                     CMOUT           equ	16064	;# 
   581   003EC1                     FVRCON          equ	16065	;# 
   582   003EC3                     ZCDCON          equ	16067	;# 
   583   003EC9                     HLVDCON0        equ	16073	;# 
   584   003ECA                     HLVDCON1        equ	16074	;# 
   585   003ED7                     ADCP            equ	16087	;# 
   586   003EDE                     ADLTH           equ	16094	;# 
   587   003EDE                     ADLTHL          equ	16094	;# 
   588   003EDF                     ADLTHH          equ	16095	;# 
   589   003EE0                     ADUTH           equ	16096	;# 
   590   003EE0                     ADUTHL          equ	16096	;# 
   591   003EE1                     ADUTHH          equ	16097	;# 
   592   003EE2                     ADERR           equ	16098	;# 
   593   003EE2                     ADERRL          equ	16098	;# 
   594   003EE3                     ADERRH          equ	16099	;# 
   595   003EE4                     ADSTPT          equ	16100	;# 
   596   003EE4                     ADSTPTL         equ	16100	;# 
   597   003EE5                     ADSTPTH         equ	16101	;# 
   598   003EE6                     ADFLTR          equ	16102	;# 
   599   003EE6                     ADFLTRL         equ	16102	;# 
   600   003EE7                     ADFLTRH         equ	16103	;# 
   601   003EE8                     ADACC           equ	16104	;# 
   602   003EE8                     ADACCL          equ	16104	;# 
   603   003EE9                     ADACCH          equ	16105	;# 
   604   003EEA                     ADACCU          equ	16106	;# 
   605   003EEB                     ADCNT           equ	16107	;# 
   606   003EEC                     ADRPT           equ	16108	;# 
   607   003EED                     ADPREV          equ	16109	;# 
   608   003EED                     ADPREVL         equ	16109	;# 
   609   003EEE                     ADPREVH         equ	16110	;# 
   610   003EEF                     ADRES           equ	16111	;# 
   611   003EEF                     ADRESL          equ	16111	;# 
   612   003EF0                     ADRESH          equ	16112	;# 
   613   003EF1                     ADPCH           equ	16113	;# 
   614   003EF3                     ADACQ           equ	16115	;# 
   615   003EF3                     ADACQL          equ	16115	;# 
   616   003EF4                     ADACQH          equ	16116	;# 
   617   003EF5                     ADCAP           equ	16117	;# 
   618   003EF6                     ADPRE           equ	16118	;# 
   619   003EF6                     ADPREL          equ	16118	;# 
   620   003EF7                     ADPREH          equ	16119	;# 
   621   003EF8                     ADCON0          equ	16120	;# 
   622   003EF9                     ADCON1          equ	16121	;# 
   623   003EFA                     ADCON2          equ	16122	;# 
   624   003EFB                     ADCON3          equ	16123	;# 
   625   003EFC                     ADSTAT          equ	16124	;# 
   626   003EFD                     ADREF           equ	16125	;# 
   627   003EFE                     ADACT           equ	16126	;# 
   628   003EFF                     ADCLK           equ	16127	;# 
   629   003F12                     SMT1TMR         equ	16146	;# 
   630   003F12                     SMT1TMRL        equ	16146	;# 
   631   003F13                     SMT1TMRH        equ	16147	;# 
   632   003F14                     SMT1TMRU        equ	16148	;# 
   633   003F15                     SMT1CPR         equ	16149	;# 
   634   003F15                     SMT1CPRL        equ	16149	;# 
   635   003F16                     SMT1CPRH        equ	16150	;# 
   636   003F17                     SMT1CPRU        equ	16151	;# 
   637   003F18                     SMT1CPW         equ	16152	;# 
   638   003F18                     SMT1CPWL        equ	16152	;# 
   639   003F19                     SMT1CPWH        equ	16153	;# 
   640   003F1A                     SMT1CPWU        equ	16154	;# 
   641   003F1B                     SMT1PR          equ	16155	;# 
   642   003F1B                     SMT1PRL         equ	16155	;# 
   643   003F1C                     SMT1PRH         equ	16156	;# 
   644   003F1D                     SMT1PRU         equ	16157	;# 
   645   003F1E                     SMT1CON0        equ	16158	;# 
   646   003F1F                     SMT1CON1        equ	16159	;# 
   647   003F20                     SMT1STAT        equ	16160	;# 
   648   003F21                     SMT1CLK         equ	16161	;# 
   649   003F22                     SMT1SIG         equ	16162	;# 
   650   003F23                     SMT1WIN         equ	16163	;# 
   651   003F38                     NCO1ACC         equ	16184	;# 
   652   003F38                     NCO1ACCL        equ	16184	;# 
   653   003F39                     NCO1ACCH        equ	16185	;# 
   654   003F3A                     NCO1ACCU        equ	16186	;# 
   655   003F3B                     NCO1INC         equ	16187	;# 
   656   003F3B                     NCO1INCL        equ	16187	;# 
   657   003F3C                     NCO1INCH        equ	16188	;# 
   658   003F3D                     NCO1INCU        equ	16189	;# 
   659   003F3E                     NCO1CON         equ	16190	;# 
   660   003F3F                     NCO1CLK         equ	16191	;# 
   661   003F40                     CWG3CLK         equ	16192	;# 
   662   003F40                     CWG3CLKCON      equ	16192	;# 
   663   003F41                     CWG3ISM         equ	16193	;# 
   664   003F41                     CWG3DAT         equ	16193	;# 
   665   003F42                     CWG3DBR         equ	16194	;# 
   666   003F43                     CWG3DBF         equ	16195	;# 
   667   003F44                     CWG3CON0        equ	16196	;# 
   668   003F45                     CWG3CON1        equ	16197	;# 
   669   003F46                     CWG3AS0         equ	16198	;# 
   670   003F47                     CWG3AS1         equ	16199	;# 
   671   003F48                     CWG3STR         equ	16200	;# 
   672   003F49                     CWG2CLK         equ	16201	;# 
   673   003F49                     CWG2CLKCON      equ	16201	;# 
   674   003F4A                     CWG2ISM         equ	16202	;# 
   675   003F4A                     CWG2DAT         equ	16202	;# 
   676   003F4B                     CWG2DBR         equ	16203	;# 
   677   003F4C                     CWG2DBF         equ	16204	;# 
   678   003F4D                     CWG2CON0        equ	16205	;# 
   679   003F4E                     CWG2CON1        equ	16206	;# 
   680   003F4F                     CWG2AS0         equ	16207	;# 
   681   003F50                     CWG2AS1         equ	16208	;# 
   682   003F51                     CWG2STR         equ	16209	;# 
   683   003F52                     CWG1CLK         equ	16210	;# 
   684   003F52                     CWG1CLKCON      equ	16210	;# 
   685   003F53                     CWG1ISM         equ	16211	;# 
   686   003F53                     CWG1DAT         equ	16211	;# 
   687   003F54                     CWG1DBR         equ	16212	;# 
   688   003F55                     CWG1DBF         equ	16213	;# 
   689   003F56                     CWG1CON0        equ	16214	;# 
   690   003F57                     CWG1CON1        equ	16215	;# 
   691   003F58                     CWG1AS0         equ	16216	;# 
   692   003F59                     CWG1AS1         equ	16217	;# 
   693   003F5A                     CWG1STR         equ	16218	;# 
   694   003F5E                     CCPTMRS0        equ	16222	;# 
   695   003F5F                     CCPTMRS1        equ	16223	;# 
   696   003F60                     PWM8DC          equ	16224	;# 
   697   003F60                     PWM8DCL         equ	16224	;# 
   698   003F61                     PWM8DCH         equ	16225	;# 
   699   003F62                     PWM8CON         equ	16226	;# 
   700   003F64                     PWM7DC          equ	16228	;# 
   701   003F64                     PWM7DCL         equ	16228	;# 
   702   003F65                     PWM7DCH         equ	16229	;# 
   703   003F66                     PWM7CON         equ	16230	;# 
   704   003F68                     PWM6DC          equ	16232	;# 
   705   003F68                     PWM6DCL         equ	16232	;# 
   706   003F69                     PWM6DCH         equ	16233	;# 
   707   003F6A                     PWM6CON         equ	16234	;# 
   708   003F6C                     PWM5DC          equ	16236	;# 
   709   003F6C                     PWM5DCL         equ	16236	;# 
   710   003F6D                     PWM5DCH         equ	16237	;# 
   711   003F6E                     PWM5CON         equ	16238	;# 
   712   003F70                     CCPR4           equ	16240	;# 
   713   003F70                     CCPR4L          equ	16240	;# 
   714   003F71                     CCPR4H          equ	16241	;# 
   715   003F72                     CCP4CON         equ	16242	;# 
   716   003F73                     CCP4CAP         equ	16243	;# 
   717   003F74                     CCPR3           equ	16244	;# 
   718   003F74                     CCPR3L          equ	16244	;# 
   719   003F75                     CCPR3H          equ	16245	;# 
   720   003F76                     CCP3CON         equ	16246	;# 
   721   003F77                     CCP3CAP         equ	16247	;# 
   722   003F78                     CCPR2           equ	16248	;# 
   723   003F78                     CCPR2L          equ	16248	;# 
   724   003F79                     CCPR2H          equ	16249	;# 
   725   003F7A                     CCP2CON         equ	16250	;# 
   726   003F7B                     CCP2CAP         equ	16251	;# 
   727   003F7C                     CCPR1           equ	16252	;# 
   728   003F7C                     CCPR1L          equ	16252	;# 
   729   003F7D                     CCPR1H          equ	16253	;# 
   730   003F7E                     CCP1CON         equ	16254	;# 
   731   003F7F                     CCP1CAP         equ	16255	;# 
   732   003F92                     T6TMR           equ	16274	;# 
   733   003F92                     TMR6            equ	16274	;# 
   734   003F93                     T6PR            equ	16275	;# 
   735   003F93                     PR6             equ	16275	;# 
   736   003F94                     T6CON           equ	16276	;# 
   737   003F95                     T6HLT           equ	16277	;# 
   738   003F96                     T6CLKCON        equ	16278	;# 
   739   003F96                     T6CLK           equ	16278	;# 
   740   003F97                     T6RST           equ	16279	;# 
   741   003F98                     TMR5            equ	16280	;# 
   742   003F98                     TMR5L           equ	16280	;# 
   743   003F99                     TMR5H           equ	16281	;# 
   744   003F9A                     T5CON           equ	16282	;# 
   745   003F9A                     TMR5CON         equ	16282	;# 
   746   003F9B                     T5GCON          equ	16283	;# 
   747   003F9B                     TMR5GCON        equ	16283	;# 
   748   003F9C                     T5GATE          equ	16284	;# 
   749   003F9C                     TMR5GATE        equ	16284	;# 
   750   003F9D                     T5CLK           equ	16285	;# 
   751   003F9D                     TMR5CLK         equ	16285	;# 
   752   003F9D                     PR5             equ	16285	;# 
   753   003F9E                     T4TMR           equ	16286	;# 
   754   003F9E                     TMR4            equ	16286	;# 
   755   003F9F                     T4PR            equ	16287	;# 
   756   003F9F                     PR4             equ	16287	;# 
   757   003FA0                     T4CON           equ	16288	;# 
   758   003FA1                     T4HLT           equ	16289	;# 
   759   003FA2                     T4CLKCON        equ	16290	;# 
   760   003FA2                     T4CLK           equ	16290	;# 
   761   003FA3                     T4RST           equ	16291	;# 
   762   003FA4                     TMR3            equ	16292	;# 
   763   003FA4                     TMR3L           equ	16292	;# 
   764   003FA5                     TMR3H           equ	16293	;# 
   765   003FA6                     T3CON           equ	16294	;# 
   766   003FA6                     TMR3CON         equ	16294	;# 
   767   003FA7                     T3GCON          equ	16295	;# 
   768   003FA7                     TMR3GCON        equ	16295	;# 
   769   003FA8                     T3GATE          equ	16296	;# 
   770   003FA8                     TMR3GATE        equ	16296	;# 
   771   003FA9                     T3CLK           equ	16297	;# 
   772   003FA9                     TMR3CLK         equ	16297	;# 
   773   003FA9                     PR3             equ	16297	;# 
   774   003FAA                     T2TMR           equ	16298	;# 
   775   003FAA                     TMR2            equ	16298	;# 
   776   003FAB                     T2PR            equ	16299	;# 
   777   003FAB                     PR2             equ	16299	;# 
   778   003FAC                     T2CON           equ	16300	;# 
   779   003FAD                     T2HLT           equ	16301	;# 
   780   003FAE                     T2CLKCON        equ	16302	;# 
   781   003FAE                     T2CLK           equ	16302	;# 
   782   003FAF                     T2RST           equ	16303	;# 
   783   003FB0                     TMR1            equ	16304	;# 
   784   003FB0                     TMR1L           equ	16304	;# 
   785   003FB1                     TMR1H           equ	16305	;# 
   786   003FB2                     T1CON           equ	16306	;# 
   787   003FB2                     TMR1CON         equ	16306	;# 
   788   003FB3                     T1GCON          equ	16307	;# 
   789   003FB3                     TMR1GCON        equ	16307	;# 
   790   003FB4                     T1GATE          equ	16308	;# 
   791   003FB4                     TMR1GATE        equ	16308	;# 
   792   003FB5                     T1CLK           equ	16309	;# 
   793   003FB5                     TMR1CLK         equ	16309	;# 
   794   003FB5                     PR1             equ	16309	;# 
   795   003FB6                     TMR0L           equ	16310	;# 
   796   003FB6                     TMR0            equ	16310	;# 
   797   003FB7                     TMR0H           equ	16311	;# 
   798   003FB7                     PR0             equ	16311	;# 
   799   003FB8                     T0CON0          equ	16312	;# 
   800   003FB9                     T0CON1          equ	16313	;# 
   801   003FBA                     LATA            equ	16314	;# 
   802   003FBB                     LATB            equ	16315	;# 
   803   003FBC                     LATC            equ	16316	;# 
   804   003FBD                     LATD            equ	16317	;# 
   805   003FBE                     LATE            equ	16318	;# 
   806   003FC2                     TRISA           equ	16322	;# 
   807   003FC3                     TRISB           equ	16323	;# 
   808   003FC4                     TRISC           equ	16324	;# 
   809   003FC5                     TRISD           equ	16325	;# 
   810   003FC6                     TRISE           equ	16326	;# 
   811   003FCA                     PORTA           equ	16330	;# 
   812   003FCB                     PORTB           equ	16331	;# 
   813   003FCC                     PORTC           equ	16332	;# 
   814   003FCD                     PORTD           equ	16333	;# 
   815   003FCE                     PORTE           equ	16334	;# 
   816   003FD2                     INTCON0         equ	16338	;# 
   817   003FD3                     INTCON1         equ	16339	;# 
   818   003FD4                     IVTLOCK         equ	16340	;# 
   819   003FD5                     IVTBASE         equ	16341	;# 
   820   003FD5                     IVTBASEL        equ	16341	;# 
   821   003FD6                     IVTBASEH        equ	16342	;# 
   822   003FD7                     IVTBASEU        equ	16343	;# 
   823   003FD8                     STATUS          equ	16344	;# 
   824   003FD9                     FSR2            equ	16345	;# 
   825   003FD9                     FSR2L           equ	16345	;# 
   826   003FDA                     FSR2H           equ	16346	;# 
   827   003FDB                     PLUSW2          equ	16347	;# 
   828   003FDC                     PREINC2         equ	16348	;# 
   829   003FDD                     POSTDEC2        equ	16349	;# 
   830   003FDE                     POSTINC2        equ	16350	;# 
   831   003FDF                     INDF2           equ	16351	;# 
   832   003FE0                     BSR             equ	16352	;# 
   833   003FE1                     FSR1            equ	16353	;# 
   834   003FE1                     FSR1L           equ	16353	;# 
   835   003FE2                     FSR1H           equ	16354	;# 
   836   003FE3                     PLUSW1          equ	16355	;# 
   837   003FE4                     PREINC1         equ	16356	;# 
   838   003FE5                     POSTDEC1        equ	16357	;# 
   839   003FE6                     POSTINC1        equ	16358	;# 
   840   003FE7                     INDF1           equ	16359	;# 
   841   003FE8                     WREG            equ	16360	;# 
   842   003FE9                     FSR0            equ	16361	;# 
   843   003FE9                     FSR0L           equ	16361	;# 
   844   003FEA                     FSR0H           equ	16362	;# 
   845   003FEB                     PLUSW0          equ	16363	;# 
   846   003FEC                     PREINC0         equ	16364	;# 
   847   003FED                     POSTDEC0        equ	16365	;# 
   848   003FEE                     POSTINC0        equ	16366	;# 
   849   003FEF                     INDF0           equ	16367	;# 
   850   003FF0                     PCON0           equ	16368	;# 
   851   003FF1                     PCON1           equ	16369	;# 
   852   003FF3                     PROD            equ	16371	;# 
   853   003FF3                     PRODL           equ	16371	;# 
   854   003FF4                     PRODH           equ	16372	;# 
   855   003FF5                     TABLAT          equ	16373	;# 
   856   003FF6                     TBLPTR          equ	16374	;# 
   857   003FF6                     TBLPTRL         equ	16374	;# 
   858   003FF7                     TBLPTRH         equ	16375	;# 
   859   003FF8                     TBLPTRU         equ	16376	;# 
   860   003FF9                     PCLAT           equ	16377	;# 
   861   003FF9                     PCL             equ	16377	;# 
   862   003FFA                     PCLATH          equ	16378	;# 
   863   003FFB                     PCLATU          equ	16379	;# 
   864   003FFC                     STKPTR          equ	16380	;# 
   865   003FFD                     TOS             equ	16381	;# 
   866   003FFD                     TOSL            equ	16381	;# 
   867   003FFE                     TOSH            equ	16382	;# 
   868   003FFF                     TOSU            equ	16383	;# 
   869   003990                     _PIE0bits       set	14736
   870   0039A0                     _PIR0bits       set	14752
   871   003A40                     _ANSELAbits     set	14912
   872   003A67                     _IOCCFbits      set	14951
   873   003A65                     _IOCCPbits      set	14949
   874   003A66                     _IOCCNbits      set	14950
   875   003A60                     _ANSELCbits     set	14944
   876   003EF4                     _ADACQH         set	16116
   877   003EF3                     _ADACQL         set	16115
   878   003EF7                     _ADPREH         set	16119
   879   003EF6                     _ADPREL         set	16118
   880   003EEF                     _ADRESL         set	16111
   881   003EF0                     _ADRESH         set	16112
   882   003EFF                     _ADCLK          set	16127
   883   003EF1                     _ADPCH          set	16113
   884   003EF8                     _ADCON0bits     set	16120
   885   003FCD                     _PORTDbits      set	16333
   886   003FBD                     _LATDbits       set	16317
   887   003FBB                     _LATB           set	16315
   888   003FC5                     _TRISD          set	16325
   889   003FC3                     _TRISB          set	16323
   890   003FC2                     _TRISAbits      set	16322
   891   003FD2                     _INTCON0bits    set	16338
   892   003FC4                     _TRISCbits      set	16324
   893                           
   894                           	psect	smallconst
   895   002000                     __psmallconst:
   896                           	callstack 0
   897   002000  00                 	db	0
   898   002001                     STR_1:
   899                           
   900                           ; BSR set to: 58
   901   002001  25                 	db	37
   902   002002  2E                 	db	46
   903   002003  32                 	db	50	;'2'
   904   002004  66                 	db	102	;'f'
   905   002005  00                 	db	0
   906   002006                     STR_3:
   907                           
   908                           ; BSR set to: 58
   909   002006  69                 	db	105	;'i'
   910   002007  6E                 	db	110	;'n'
   911   002008  66                 	db	102	;'f'
   912   002009  00                 	db	0
   913   00200A                     STR_6:
   914                           
   915                           ; BSR set to: 58
   916   00200A  6E                 	db	110	;'n'
   917   00200B  61                 	db	97	;'a'
   918   00200C  6E                 	db	110	;'n'
   919   00200D  00                 	db	0
   920   00200E                     STR_2:
   921                           
   922                           ; BSR set to: 58
   923   00200E  20                 	db	32
   924   00200F  56                 	db	86	;'V'
   925   002010  00                 	db	0
   926   00200A                     STR_7           equ	STR_6
   927   00200A                     STR_8           equ	STR_6
   928   002006                     STR_4           equ	STR_3
   929   002006                     STR_5           equ	STR_3
   930   002011  00                 	db	0	; dummy byte at the end
   931   002000                     __smallconst    set	__psmallconst
   932   002000                     __mediumconst   set	__psmallconst
   933   000003                     __activetblptr  equ	3
   934                           
   935                           ; #config settings
   936                           
   937                           	psect	cinit
   938   0066DE                     __pcinit:
   939                           	callstack 0
   940   0066DE                     start_initialization:
   941                           	callstack 0
   942   0066DE                     __initialization:
   943                           	callstack 0
   944                           
   945                           ; Clear objects allocated to BANK1 (80 bytes)
   946   0066DE  EE00  F100         	lfsr	0,__pbssBANK1
   947   0066E2  0E50               	movlw	80
   948   0066E4                     clear_0:
   949   0066E4  6AEE               	clrf	postinc0,c
   950   0066E6  06E8               	decf	wreg,f,c
   951   0066E8  E1FD               	bnz	clear_0
   952                           
   953                           ; Clear objects allocated to BANK0 (26 bytes)
   954   0066EA  EE00  F0A4         	lfsr	0,__pbssBANK0
   955   0066EE  0E1A               	movlw	26
   956   0066F0                     clear_1:
   957   0066F0  6AEE               	clrf	postinc0,c
   958   0066F2  06E8               	decf	wreg,f,c
   959   0066F4  E1FD               	bnz	clear_1
   960                           
   961                           ; Clear objects allocated to COMRAM (11 bytes)
   962   0066F6  EE00  F04A         	lfsr	0,__pbssCOMRAM
   963   0066FA  0E0B               	movlw	11
   964   0066FC                     clear_2:
   965   0066FC  6AEE               	clrf	postinc0,c
   966   0066FE  06E8               	decf	wreg,f,c
   967   006700  E1FD               	bnz	clear_2
   968                           
   969                           ;
   970                           ; Setup IVTBASE
   971                           ;
   972   003FD5                     IVTBASEL        equ	16341
   973   003FD6                     IVTBASEH        equ	16342
   974   003FD7                     IVTBASEU        equ	16343
   975   006702  0E08               	movlw	(ivt0x4008_base shr 0)& (0+255)
   976   006704  6ED5               	movwf	213,c
   977   006706  0E40               	movlw	(ivt0x4008_base shr (0+8))& (0+255)
   978   006708  6ED6               	movwf	214,c
   979   00670A  0E00               	movlw	(ivt0x4008_base shr (0+16))& (0+255)
   980   00670C  6ED7               	movwf	215,c
   981   00670E                     end_of_initialization:
   982                           	callstack 0
   983   00670E                     __end_of__initialization:
   984                           	callstack 0
   985   00670E  0100               	movlb	0
   986   006710  EF05  F030         	goto	_main	;jump to C main() function
   987                           
   988                           	psect	bssCOMRAM
   989   00004A                     __pbssCOMRAM:
   990                           	callstack 0
   991   00004A                     ___fpclassifyf@F465:
   992                           	callstack 0
   993   00004A                     	ds	4
   994   00004E                     _voltage:
   995                           	callstack 0
   996   00004E                     	ds	4
   997   000052                     _digital:
   998                           	callstack 0
   999   000052                     	ds	2
  1000   000054                     _flags:
  1001                           	callstack 0
  1002   000054                     	ds	1
  1003                           
  1004                           	psect	bssBANK0
  1005   0000A4                     __pbssBANK0:
  1006                           	callstack 0
  1007   0000A4                     floorf@F521:
  1008                           	callstack 0
  1009   0000A4                     	ds	4
  1010   0000A8                     _lux_value:
  1011                           	callstack 0
  1012   0000A8                     	ds	4
  1013   0000AC                     _result:
  1014                           	callstack 0
  1015   0000AC                     	ds	4
  1016   0000B0                     _width:
  1017                           	callstack 0
  1018   0000B0                     	ds	2
  1019   0000B2                     _prec:
  1020                           	callstack 0
  1021   0000B2                     	ds	2
  1022   0000B4                     _data:
  1023                           	callstack 0
  1024   0000B4                     	ds	10
  1025                           
  1026                           	psect	bssBANK1
  1027   000100                     __pbssBANK1:
  1028                           	callstack 0
  1029   000100                     _dbuf:
  1030                           	callstack 0
  1031   000100                     	ds	80
  1032                           
  1033                           	psect	cstackBANK0
  1034   000060                     __pcstackBANK0:
  1035                           	callstack 0
  1036   000060                     efgtoa@ne:
  1037                           	callstack 0
  1038                           
  1039                           ; 2 bytes @ 0x0
  1040   000060                     	ds	2
  1041   000062                     efgtoa@p:
  1042                           	callstack 0
  1043                           
  1044                           ; 2 bytes @ 0x2
  1045   000062                     	ds	2
  1046   000064                     efgtoa@t:
  1047                           	callstack 0
  1048                           
  1049                           ; 2 bytes @ 0x4
  1050   000064                     	ds	2
  1051   000066                     _efgtoa$1114:
  1052                           	callstack 0
  1053                           
  1054                           ; 2 bytes @ 0x6
  1055   000066                     	ds	2
  1056   000068                     efgtoa@pp:
  1057                           	callstack 0
  1058                           
  1059                           ; 1 bytes @ 0x8
  1060   000068                     	ds	1
  1061   000069                     efgtoa@mode:
  1062                           	callstack 0
  1063                           
  1064                           ; 1 bytes @ 0x9
  1065   000069                     	ds	1
  1066   00006A                     efgtoa@nmode:
  1067                           	callstack 0
  1068                           
  1069                           ; 1 bytes @ 0xA
  1070   00006A                     	ds	1
  1071   00006B                     efgtoa@d:
  1072                           	callstack 0
  1073                           
  1074                           ; 2 bytes @ 0xB
  1075   00006B                     	ds	2
  1076   00006D                     efgtoa@m:
  1077                           	callstack 0
  1078                           
  1079                           ; 2 bytes @ 0xD
  1080   00006D                     	ds	2
  1081   00006F                     efgtoa@e:
  1082                           	callstack 0
  1083                           
  1084                           ; 2 bytes @ 0xF
  1085   00006F                     	ds	2
  1086   000071                     efgtoa@w:
  1087                           	callstack 0
  1088                           
  1089                           ; 2 bytes @ 0x11
  1090   000071                     	ds	2
  1091   000073                     efgtoa@ou:
  1092                           	callstack 0
  1093                           
  1094                           ; 4 bytes @ 0x13
  1095   000073                     	ds	4
  1096   000077                     efgtoa@i:
  1097                           	callstack 0
  1098                           
  1099                           ; 2 bytes @ 0x17
  1100   000077                     	ds	2
  1101   000079                     efgtoa@h:
  1102                           	callstack 0
  1103                           
  1104                           ; 4 bytes @ 0x19
  1105   000079                     	ds	4
  1106   00007D                     efgtoa@l:
  1107                           	callstack 0
  1108                           
  1109                           ; 4 bytes @ 0x1D
  1110   00007D                     	ds	4
  1111   000081                     efgtoa@sign:
  1112                           	callstack 0
  1113                           
  1114                           ; 1 bytes @ 0x21
  1115   000081                     	ds	1
  1116   000082                     efgtoa@g:
  1117                           	callstack 0
  1118                           
  1119                           ; 4 bytes @ 0x22
  1120   000082                     	ds	4
  1121   000086                     efgtoa@n:
  1122                           	callstack 0
  1123                           
  1124                           ; 2 bytes @ 0x26
  1125   000086                     	ds	2
  1126   000088                     efgtoa@u:
  1127                           	callstack 0
  1128                           
  1129                           ; 4 bytes @ 0x28
  1130   000088                     	ds	4
  1131   00008C                     vfpfcnvrt@fp:
  1132                           	callstack 0
  1133                           
  1134                           ; 1 bytes @ 0x2C
  1135   00008C                     	ds	1
  1136   00008D                     vfpfcnvrt@fmt:
  1137                           	callstack 0
  1138                           
  1139                           ; 1 bytes @ 0x2D
  1140   00008D                     	ds	1
  1141   00008E                     vfpfcnvrt@ap:
  1142                           	callstack 0
  1143                           
  1144                           ; 1 bytes @ 0x2E
  1145   00008E                     	ds	1
  1146   00008F                     ?_vfprintf:
  1147                           	callstack 0
  1148   00008F                     vfprintf@fp:
  1149                           	callstack 0
  1150                           
  1151                           ; 1 bytes @ 0x2F
  1152   00008F                     	ds	1
  1153   000090                     vfprintf@fmt:
  1154                           	callstack 0
  1155                           
  1156                           ; 1 bytes @ 0x30
  1157   000090                     	ds	1
  1158   000091                     vfprintf@ap:
  1159                           	callstack 0
  1160                           
  1161                           ; 1 bytes @ 0x31
  1162   000091                     	ds	1
  1163   000092                     ?_sprintf:
  1164                           	callstack 0
  1165   000092                     sprintf@s:
  1166                           	callstack 0
  1167                           
  1168                           ; 1 bytes @ 0x32
  1169   000092                     	ds	1
  1170   000093                     sprintf@fmt:
  1171                           	callstack 0
  1172                           
  1173                           ; 1 bytes @ 0x33
  1174   000093                     	ds	5
  1175   000098                     sprintf@ap:
  1176                           	callstack 0
  1177                           
  1178                           ; 1 bytes @ 0x38
  1179   000098                     	ds	1
  1180   000099                     sprintf@f:
  1181                           	callstack 0
  1182                           
  1183                           ; 11 bytes @ 0x39
  1184   000099                     	ds	11
  1185                           
  1186                           	psect	cstackCOMRAM
  1187   000001                     __pcstackCOMRAM:
  1188                           	callstack 0
  1189   000001                     ??_IOC_ISR:
  1190                           
  1191                           ; 1 bytes @ 0x0
  1192   000001                     	ds	2
  1193   000003                     IOC_ISR@k:
  1194                           	callstack 0
  1195                           
  1196                           ; 2 bytes @ 0x2
  1197   000003                     	ds	2
  1198   000005                     ?___fpclassifyf:
  1199                           	callstack 0
  1200   000005                     ?_read_prec_or_width:
  1201                           	callstack 0
  1202   000005                     ?___fladd:
  1203                           	callstack 0
  1204   000005                     ?___fldiv:
  1205                           	callstack 0
  1206   000005                     ?_labs:
  1207                           	callstack 0
  1208   000005                     ?___flneg:
  1209                           	callstack 0
  1210   000005                     ?___fltol:
  1211                           	callstack 0
  1212   000005                     ?___xxtofl:
  1213                           	callstack 0
  1214   000005                     read_prec_or_width@fmt:
  1215                           	callstack 0
  1216   000005                     strcat@dest:
  1217                           	callstack 0
  1218   000005                     MSdelay@val:
  1219                           	callstack 0
  1220   000005                     memcpy@d1:
  1221                           	callstack 0
  1222   000005                     fputc@c:
  1223                           	callstack 0
  1224   000005                     strcpy@dest:
  1225                           	callstack 0
  1226   000005                     ___fleq@ff1:
  1227                           	callstack 0
  1228   000005                     ___flneg@f1:
  1229                           	callstack 0
  1230   000005                     ___fltol@f1:
  1231                           	callstack 0
  1232   000005                     ___fladd@b:
  1233                           	callstack 0
  1234   000005                     ___fldiv@b:
  1235                           	callstack 0
  1236   000005                     ___xxtofl@val:
  1237                           	callstack 0
  1238   000005                     ___fpclassifyf@x:
  1239                           	callstack 0
  1240   000005                     labs@a:
  1241                           	callstack 0
  1242   000005                     
  1243                           ; 1 bytes @ 0x4
  1244   000005                     	ds	1
  1245   000006                     read_prec_or_width@ap:
  1246                           	callstack 0
  1247   000006                     strcat@src:
  1248                           	callstack 0
  1249                           
  1250                           ; 1 bytes @ 0x5
  1251   000006                     	ds	1
  1252   000007                     fputc@fp:
  1253                           	callstack 0
  1254   000007                     strcpy@src:
  1255                           	callstack 0
  1256   000007                     MSdelay@i:
  1257                           	callstack 0
  1258   000007                     memcpy@s1:
  1259                           	callstack 0
  1260   000007                     strcat@i:
  1261                           	callstack 0
  1262   000007                     ??_read_prec_or_width:
  1263                           
  1264                           ; 1 bytes @ 0x6
  1265   000007                     	ds	1
  1266   000008                     ??_fputc:
  1267   000008                     ??_strcpy:
  1268                           
  1269                           ; 1 bytes @ 0x7
  1270   000008                     	ds	1
  1271   000009                     read_prec_or_width@c:
  1272                           	callstack 0
  1273   000009                     MSdelay@j:
  1274                           	callstack 0
  1275   000009                     memcpy@n:
  1276                           	callstack 0
  1277   000009                     strcpy@d:
  1278                           	callstack 0
  1279   000009                     ___fleq@ff2:
  1280                           	callstack 0
  1281   000009                     ___fladd@a:
  1282                           	callstack 0
  1283   000009                     ___fldiv@a:
  1284                           	callstack 0
  1285   000009                     ??___fpclassifyf:
  1286   000009                     ??_labs:
  1287   000009                     ??___fltol:
  1288   000009                     ??___xxtofl:
  1289                           
  1290                           ; 1 bytes @ 0x8
  1291   000009                     	ds	1
  1292   00000A                     read_prec_or_width@n:
  1293                           	callstack 0
  1294                           
  1295                           ; 2 bytes @ 0x9
  1296   00000A                     	ds	1
  1297   00000B                     LCD_Command@cmd:
  1298                           	callstack 0
  1299   00000B                     LCD_Char@dat:
  1300                           	callstack 0
  1301   00000B                     memcpy@tmp:
  1302                           	callstack 0
  1303   00000B                     
  1304                           ; 1 bytes @ 0xA
  1305   00000B                     	ds	1
  1306   00000C                     LCD_String@msg:
  1307                           	callstack 0
  1308   00000C                     memcpy@d:
  1309                           	callstack 0
  1310   00000C                     
  1311                           ; 1 bytes @ 0xB
  1312   00000C                     	ds	1
  1313   00000D                     LCD_String_xy@pos:
  1314                           	callstack 0
  1315   00000D                     ___fltol@sign1:
  1316                           	callstack 0
  1317   00000D                     ___xxtofl@sign:
  1318                           	callstack 0
  1319   00000D                     ___fpclassifyf@e:
  1320                           	callstack 0
  1321   00000D                     fputs@s:
  1322                           	callstack 0
  1323   00000D                     ??___fladd:
  1324   00000D                     ??___fldiv:
  1325   00000D                     ??___fleq:
  1326                           
  1327                           ; 1 bytes @ 0xC
  1328   00000D                     	ds	1
  1329   00000E                     LCD_String_xy@msg:
  1330                           	callstack 0
  1331   00000E                     ___fltol@exp1:
  1332                           	callstack 0
  1333   00000E                     ___xxtofl@exp:
  1334                           	callstack 0
  1335   00000E                     memcpy@s:
  1336                           	callstack 0
  1337                           
  1338                           ; 2 bytes @ 0xD
  1339   00000E                     	ds	1
  1340   00000F                     LCD_String_xy@row:
  1341                           	callstack 0
  1342   00000F                     fputs@fp:
  1343                           	callstack 0
  1344   00000F                     ___xxtofl@arg:
  1345                           	callstack 0
  1346   00000F                     ___fpclassifyf@u:
  1347                           	callstack 0
  1348   00000F                     
  1349                           ; 1 bytes @ 0xE
  1350   00000F                     	ds	1
  1351   000010                     LCD_String_xy@location:
  1352                           	callstack 0
  1353   000010                     fputs@c:
  1354                           	callstack 0
  1355   000010                     
  1356                           ; 1 bytes @ 0xF
  1357   000010                     	ds	1
  1358   000011                     ___fladd@signs:
  1359                           	callstack 0
  1360   000011                     fputs@i:
  1361                           	callstack 0
  1362   000011                     ___fldiv@rem:
  1363                           	callstack 0
  1364                           
  1365                           ; 4 bytes @ 0x10
  1366   000011                     	ds	1
  1367   000012                     ___fladd@aexp:
  1368                           	callstack 0
  1369                           
  1370                           ; 1 bytes @ 0x11
  1371   000012                     	ds	1
  1372   000013                     ?___flmul:
  1373                           	callstack 0
  1374   000013                     ___fladd@bexp:
  1375                           	callstack 0
  1376   000013                     pad@fp:
  1377                           	callstack 0
  1378   000013                     ___flmul@b:
  1379                           	callstack 0
  1380                           
  1381                           ; 4 bytes @ 0x12
  1382   000013                     	ds	1
  1383   000014                     ___fladd@grs:
  1384                           	callstack 0
  1385   000014                     pad@buf:
  1386                           	callstack 0
  1387                           
  1388                           ; 2 bytes @ 0x13
  1389   000014                     	ds	1
  1390   000015                     ___fldiv@sign:
  1391                           	callstack 0
  1392                           
  1393                           ; 1 bytes @ 0x14
  1394   000015                     	ds	1
  1395   000016                     ___fldiv@new_exp:
  1396                           	callstack 0
  1397   000016                     pad@p:
  1398                           	callstack 0
  1399                           
  1400                           ; 2 bytes @ 0x15
  1401   000016                     	ds	1
  1402   000017                     ___flmul@a:
  1403                           	callstack 0
  1404                           
  1405                           ; 4 bytes @ 0x16
  1406   000017                     	ds	1
  1407   000018                     ___fldiv@grs:
  1408                           	callstack 0
  1409   000018                     ??_pad:
  1410                           
  1411                           ; 1 bytes @ 0x17
  1412   000018                     	ds	1
  1413   000019                     pad@i:
  1414                           	callstack 0
  1415                           
  1416                           ; 2 bytes @ 0x18
  1417   000019                     	ds	2
  1418   00001B                     ??___flmul:
  1419                           
  1420                           ; 1 bytes @ 0x1A
  1421   00001B                     	ds	1
  1422   00001C                     ___fldiv@bexp:
  1423                           	callstack 0
  1424                           
  1425                           ; 1 bytes @ 0x1B
  1426   00001C                     	ds	1
  1427   00001D                     ___fldiv@aexp:
  1428                           	callstack 0
  1429                           
  1430                           ; 1 bytes @ 0x1C
  1431   00001D                     	ds	1
  1432   00001E                     ?_floorf:
  1433                           	callstack 0
  1434   00001E                     floorf@x:
  1435                           	callstack 0
  1436                           
  1437                           ; 4 bytes @ 0x1D
  1438   00001E                     	ds	1
  1439   00001F                     ___flmul@sign:
  1440                           	callstack 0
  1441                           
  1442                           ; 1 bytes @ 0x1E
  1443   00001F                     	ds	1
  1444   000020                     ___flmul@aexp:
  1445                           	callstack 0
  1446                           
  1447                           ; 1 bytes @ 0x1F
  1448   000020                     	ds	1
  1449   000021                     ___flmul@grs:
  1450                           	callstack 0
  1451                           
  1452                           ; 4 bytes @ 0x20
  1453   000021                     	ds	1
  1454   000022                     ??_floorf:
  1455                           
  1456                           ; 1 bytes @ 0x21
  1457   000022                     	ds	3
  1458   000025                     ___flmul@bexp:
  1459                           	callstack 0
  1460                           
  1461                           ; 1 bytes @ 0x24
  1462   000025                     	ds	1
  1463   000026                     ___flmul@prod:
  1464                           	callstack 0
  1465                           
  1466                           ; 4 bytes @ 0x25
  1467   000026                     	ds	2
  1468   000028                     floorf@m:
  1469                           	callstack 0
  1470                           
  1471                           ; 4 bytes @ 0x27
  1472   000028                     	ds	2
  1473   00002A                     ___flmul@temp:
  1474                           	callstack 0
  1475                           
  1476                           ; 2 bytes @ 0x29
  1477   00002A                     	ds	2
  1478   00002C                     ?___flsub:
  1479                           	callstack 0
  1480   00002C                     floorf@e:
  1481                           	callstack 0
  1482   00002C                     ___flge@ff1:
  1483                           	callstack 0
  1484   00002C                     ___flsub@b:
  1485                           	callstack 0
  1486                           
  1487                           ; 4 bytes @ 0x2B
  1488   00002C                     	ds	2
  1489   00002E                     floorf@u:
  1490                           	callstack 0
  1491                           
  1492                           ; 4 bytes @ 0x2D
  1493   00002E                     	ds	2
  1494   000030                     ___flge@ff2:
  1495                           	callstack 0
  1496   000030                     ___flsub@a:
  1497                           	callstack 0
  1498                           
  1499                           ; 4 bytes @ 0x2F
  1500   000030                     	ds	4
  1501   000034                     ??___flge:
  1502                           
  1503                           ; 1 bytes @ 0x33
  1504   000034                     	ds	4
  1505   000038                     efgtoa@fp:
  1506                           	callstack 0
  1507                           
  1508                           ; 1 bytes @ 0x37
  1509   000038                     	ds	1
  1510   000039                     efgtoa@f:
  1511                           	callstack 0
  1512                           
  1513                           ; 4 bytes @ 0x38
  1514   000039                     	ds	4
  1515   00003D                     efgtoa@c:
  1516                           	callstack 0
  1517                           
  1518                           ; 1 bytes @ 0x3C
  1519   00003D                     	ds	1
  1520   00003E                     ??_efgtoa:
  1521                           
  1522                           ; 1 bytes @ 0x3D
  1523   00003E                     	ds	2
  1524   000040                     ??_vfpfcnvrt:
  1525                           
  1526                           ; 1 bytes @ 0x3F
  1527   000040                     	ds	1
  1528   000041                     vfpfcnvrt@convarg:
  1529                           	callstack 0
  1530                           
  1531                           ; 4 bytes @ 0x40
  1532   000041                     	ds	4
  1533   000045                     vfpfcnvrt@c:
  1534                           	callstack 0
  1535                           
  1536                           ; 1 bytes @ 0x44
  1537   000045                     	ds	1
  1538   000046                     vfpfcnvrt@cp:
  1539                           	callstack 0
  1540                           
  1541                           ; 1 bytes @ 0x45
  1542   000046                     	ds	1
  1543   000047                     vfprintf@cfmt:
  1544                           	callstack 0
  1545   000047                     
  1546                           ; 1 bytes @ 0x46
  1547   000047                     	ds	1
  1548   000048                     ??_main:
  1549                           
  1550                           ; 1 bytes @ 0x47
  1551   000048                     	ds	2
  1552                           
  1553 ;;
  1554 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1555 ;;
  1556 ;; *************** function _main *****************
  1557 ;; Defined at:
  1558 ;;		line 19 in file "Adccode.c"
  1559 ;; Parameters:    Size  Location     Type
  1560 ;;		None
  1561 ;; Auto vars:     Size  Location     Type
  1562 ;;		None
  1563 ;; Return value:  Size  Location     Type
  1564 ;;                  1    wreg      void 
  1565 ;; Registers used:
  1566 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1567 ;; Tracked objects:
  1568 ;;		On entry : 0/0
  1569 ;;		On exit  : 0/0
  1570 ;;		Unchanged: 0/0
  1571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1572 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1573 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1574 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1575 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1576 ;;Total ram usage:        2 bytes
  1577 ;; Hardware stack levels required when called: 9
  1578 ;; This function calls:
  1579 ;;		_ADC_Init
  1580 ;;		_INTERRUPT_Initialize
  1581 ;;		_LCD_Clear
  1582 ;;		_LCD_Init
  1583 ;;		_LCD_String_xy
  1584 ;;		_MSdelay
  1585 ;;		___flmul
  1586 ;;		___xxtofl
  1587 ;;		_sprintf
  1588 ;;		_strcat
  1589 ;; This function is called by:
  1590 ;;		Startup code after reset
  1591 ;; This function uses a non-reentrant model
  1592 ;;
  1593                           
  1594                           	psect	text0
  1595   00600A                     __ptext0:
  1596                           	callstack 0
  1597   00600A                     _main:
  1598                           	callstack 22
  1599   00600A                     
  1600                           ;Adccode.c: 21:   INTERRUPT_Initialize();
  1601   00600A  ECE6  F033         	call	_INTERRUPT_Initialize	;wreg free
  1602   00600E                     
  1603                           ;Adccode.c: 22:     LCD_Init();
  1604   00600E  EC9F  F033         	call	_LCD_Init	;wreg free
  1605   006012                     
  1606                           ;Adccode.c: 23:     ADC_Init();
  1607   006012  ECB4  F033         	call	_ADC_Init	;wreg free
  1608   006016                     l4298:
  1609                           
  1610                           ;Adccode.c: 25:         ADCON0bits.GO = 1;
  1611   006016  013E               	movlb	62	; () banked
  1612   006018  81F8               	bsf	248,0,b	;volatile
  1613   00601A                     l125:
  1614                           
  1615                           ; BSR set to: 62
  1616   00601A  B1F8               	btfsc	248,0,b	;volatile
  1617   00601C  EF12  F030         	goto	u5231
  1618   006020  EF14  F030         	goto	u5230
  1619   006024                     u5231:
  1620   006024  EF0D  F030         	goto	l125
  1621   006028                     u5230:
  1622   006028                     
  1623                           ; BSR set to: 62
  1624                           ;Adccode.c: 27:         digital = (ADRESH*256) | (ADRESL);
  1625   006028  51EF               	movf	239,w,b	;volatile
  1626   00602A  006F FBC0  F048    	movff	16112,??_main	;volatile
  1627   006030  6A49               	clrf	(??_main+1)^0,c
  1628   006032  C048  F049         	movff	??_main,??_main+1
  1629   006036  6A48               	clrf	??_main^0,c
  1630   006038  1048               	iorwf	??_main^0,w,c
  1631   00603A  6E52               	movwf	_digital^0,c
  1632   00603C  5049               	movf	(??_main+1)^0,w,c
  1633   00603E  6E53               	movwf	(_digital+1)^0,c
  1634   006040                     
  1635                           ; BSR set to: 62
  1636                           ;Adccode.c: 28:         voltage= digital*((float)3.3/(float)(4096));
  1637   006040  C052  F005         	movff	_digital,___xxtofl@val
  1638   006044  C053  F006         	movff	_digital+1,___xxtofl@val+1
  1639   006048  0E00               	movlw	0
  1640   00604A  BE06               	btfsc	(___xxtofl@val+1)^0,7,c
  1641   00604C  0EFF               	movlw	-1
  1642   00604E  6E07               	movwf	(___xxtofl@val+2)^0,c
  1643   006050  6E08               	movwf	(___xxtofl@val+3)^0,c
  1644   006052  0E01               	movlw	1
  1645   006054  ECA7  F02D         	call	___xxtofl
  1646   006058  C005  F013         	movff	?___xxtofl,___flmul@b
  1647   00605C  C006  F014         	movff	?___xxtofl+1,___flmul@b+1
  1648   006060  C007  F015         	movff	?___xxtofl+2,___flmul@b+2
  1649   006064  C008  F016         	movff	?___xxtofl+3,___flmul@b+3
  1650   006068  0E33               	movlw	51
  1651   00606A  6E17               	movwf	___flmul@a^0,c
  1652   00606C  0E33               	movlw	51
  1653   00606E  6E18               	movwf	(___flmul@a+1)^0,c
  1654   006070  0E53               	movlw	83
  1655   006072  6E19               	movwf	(___flmul@a+2)^0,c
  1656   006074  0E3A               	movlw	58
  1657   006076  6E1A               	movwf	(___flmul@a+3)^0,c
  1658   006078  ECA7  F027         	call	___flmul	;wreg free
  1659   00607C  C013  F04E         	movff	?___flmul,_voltage
  1660   006080  C014  F04F         	movff	?___flmul+1,_voltage+1
  1661   006084  C015  F050         	movff	?___flmul+2,_voltage+2
  1662   006088  C016  F051         	movff	?___flmul+3,_voltage+3
  1663   00608C                     
  1664                           ;Adccode.c: 29:              sprintf(data,"%.2f",voltage);
  1665   00608C  0EB4               	movlw	low _data
  1666   00608E  0100               	movlb	0	; () banked
  1667   006090  6F92               	movwf	sprintf@s& (0+255),b
  1668   006092  0E01               	movlw	low STR_1
  1669   006094  6F93               	movwf	sprintf@fmt& (0+255),b
  1670   006096  C04E  F094         	movff	_voltage,?_sprintf+2
  1671   00609A  C04F  F095         	movff	_voltage+1,?_sprintf+3
  1672   00609E  C050  F096         	movff	_voltage+2,?_sprintf+4
  1673   0060A2  C051  F097         	movff	_voltage+3,?_sprintf+5
  1674   0060A6  EC37  F033         	call	_sprintf	;wreg free
  1675   0060AA                     
  1676                           ;Adccode.c: 31:      strcat(data," V");
  1677   0060AA  0EB4               	movlw	low _data
  1678   0060AC  6E05               	movwf	strcat@dest^0,c
  1679   0060AE  0E0E               	movlw	low STR_2
  1680   0060B0  6E06               	movwf	strcat@src^0,c
  1681   0060B2  ECE1  F031         	call	_strcat	;wreg free
  1682   0060B6                     
  1683                           ;Adccode.c: 32:      LCD_Clear();
  1684   0060B6  ECF3  F033         	call	_LCD_Clear	;wreg free
  1685   0060BA                     
  1686                           ;Adccode.c: 33:      LCD_String_xy(2,4,data);
  1687   0060BA  0E04               	movlw	4
  1688   0060BC  6E0D               	movwf	LCD_String_xy@pos^0,c
  1689   0060BE  0EB4               	movlw	low _data
  1690   0060C0  6E0E               	movwf	LCD_String_xy@msg^0,c
  1691   0060C2  0E02               	movlw	2
  1692   0060C4  EC19  F033         	call	_LCD_String_xy
  1693   0060C8                     
  1694                           ;Adccode.c: 34:      MSdelay(500);
  1695   0060C8  0E01               	movlw	1
  1696   0060CA  6E06               	movwf	(MSdelay@val+1)^0,c
  1697   0060CC  0EF4               	movlw	244
  1698   0060CE  6E05               	movwf	MSdelay@val^0,c
  1699   0060D0  EC6A  F032         	call	_MSdelay	;wreg free
  1700   0060D4  EF0B  F030         	goto	l4298
  1701   0060D8  EF57  F020         	goto	start
  1702   0060DC                     __end_of_main:
  1703                           	callstack 0
  1704                           
  1705 ;; *************** function _strcat *****************
  1706 ;; Defined at:
  1707 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\strcat.c"
  1708 ;; Parameters:    Size  Location     Type
  1709 ;;  dest            1    4[COMRAM] PTR unsigned char 
  1710 ;;		 -> data(10), 
  1711 ;;  src             1    5[COMRAM] PTR const unsigned char 
  1712 ;;		 -> STR_2(3), 
  1713 ;; Auto vars:     Size  Location     Type
  1714 ;;  i               2    6[COMRAM] unsigned int 
  1715 ;; Return value:  Size  Location     Type
  1716 ;;                  1    4[COMRAM] PTR unsigned char 
  1717 ;; Registers used:
  1718 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  1719 ;; Tracked objects:
  1720 ;;		On entry : 0/0
  1721 ;;		On exit  : 0/0
  1722 ;;		Unchanged: 0/0
  1723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1724 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1725 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1727 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1728 ;;Total ram usage:        4 bytes
  1729 ;; Hardware stack levels used: 1
  1730 ;; Hardware stack levels required when called: 1
  1731 ;; This function calls:
  1732 ;;		Nothing
  1733 ;; This function is called by:
  1734 ;;		_main
  1735 ;; This function uses a non-reentrant model
  1736 ;;
  1737                           
  1738                           	psect	text1
  1739   0063C2                     __ptext1:
  1740                           	callstack 0
  1741   0063C2                     _strcat:
  1742                           	callstack 29
  1743   0063C2  0E00               	movlw	0
  1744   0063C4  6E08               	movwf	(strcat@i+1)^0,c
  1745   0063C6  0E00               	movlw	0
  1746   0063C8  6E07               	movwf	strcat@i^0,c
  1747   0063CA  EFE9  F031         	goto	l3244
  1748   0063CE                     l3242:
  1749   0063CE  4A07               	infsnz	strcat@i^0,f,c
  1750   0063D0  2A08               	incf	(strcat@i+1)^0,f,c
  1751   0063D2                     l3244:
  1752   0063D2  5005               	movf	strcat@dest^0,w,c
  1753   0063D4  2407               	addwf	strcat@i^0,w,c
  1754   0063D6  6ED9               	movwf	fsr2l,c
  1755   0063D8  6ADA               	clrf	fsr2h,c
  1756   0063DA  50DF               	movf	indf2,w,c
  1757   0063DC  A4D8               	btfss	status,2,c
  1758   0063DE  EFF3  F031         	goto	u3481
  1759   0063E2  EFF5  F031         	goto	u3480
  1760   0063E6                     u3481:
  1761   0063E6  EFE7  F031         	goto	l3242
  1762   0063EA                     u3480:
  1763   0063EA  EFFA  F031         	goto	l3248
  1764   0063EE                     l3246:
  1765   0063EE  4A07               	infsnz	strcat@i^0,f,c
  1766   0063F0  2A08               	incf	(strcat@i+1)^0,f,c
  1767   0063F2  2A06               	incf	strcat@src^0,f,c
  1768   0063F4                     l3248:
  1769   0063F4  0060  F01B  FFF6   	movff	strcat@src,tblptrl
  1770   0063FA                     	if	1	;There is more than 1 active tblptr byte
  1771   0063FA  0E20               	movlw	high __smallconst
  1772   0063FC  6EF7               	movwf	tblptrh,c
  1773   0063FE                     	endif
  1774   0063FE                     	if	0	;tblptru may be non-zero
  1775   0063FE                     	endif
  1776   0063FE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1777   0063FE  0E00               	movlw	low (__smallconst shr (0+16))
  1778   006400  6EF8               	movwf	tblptru,c
  1779   006402                     	endif
  1780   006402  5005               	movf	strcat@dest^0,w,c
  1781   006404  2407               	addwf	strcat@i^0,w,c
  1782   006406  6ED9               	movwf	fsr2l,c
  1783   006408  6ADA               	clrf	fsr2h,c
  1784   00640A  0008               	tblrd		*
  1785   00640C  006F FFD7 FFDF     	movff	tablat,indf2
  1786   006412  50DF               	movf	indf2,w,c
  1787   006414  A4D8               	btfss	status,2,c
  1788   006416  EF0F  F032         	goto	u3491
  1789   00641A  EF11  F032         	goto	u3490
  1790   00641E                     u3491:
  1791   00641E  EFF7  F031         	goto	l3246
  1792   006422                     u3490:
  1793   006422  0012               	return		;funcret
  1794   006424                     __end_of_strcat:
  1795                           	callstack 0
  1796                           
  1797 ;; *************** function _sprintf *****************
  1798 ;; Defined at:
  1799 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_sprintf.c"
  1800 ;; Parameters:    Size  Location     Type
  1801 ;;  s               1   50[BANK0 ] PTR unsigned char 
  1802 ;;		 -> data(10), 
  1803 ;;  fmt             1   51[BANK0 ] PTR const unsigned char 
  1804 ;;		 -> STR_1(5), 
  1805 ;; Auto vars:     Size  Location     Type
  1806 ;;  f              11   57[BANK0 ] struct _IO_FILE
  1807 ;;  ret             2    0        int 
  1808 ;;  ap              1   56[BANK0 ] PTR void [1]
  1809 ;;		 -> ?_sprintf(2), 
  1810 ;; Return value:  Size  Location     Type
  1811 ;;                  2   50[BANK0 ] int 
  1812 ;; Registers used:
  1813 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1814 ;; Tracked objects:
  1815 ;;		On entry : 0/0
  1816 ;;		On exit  : 0/0
  1817 ;;		Unchanged: 0/0
  1818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1819 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1820 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1822 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1823 ;;Total ram usage:       18 bytes
  1824 ;; Hardware stack levels used: 1
  1825 ;; Hardware stack levels required when called: 8
  1826 ;; This function calls:
  1827 ;;		_vfprintf
  1828 ;; This function is called by:
  1829 ;;		_main
  1830 ;; This function uses a non-reentrant model
  1831 ;;
  1832                           
  1833                           	psect	text2
  1834   00666E                     __ptext2:
  1835                           	callstack 0
  1836   00666E                     _sprintf:
  1837                           	callstack 22
  1838   00666E  0E94               	movlw	low (?_sprintf+2)
  1839   006670  0100               	movlb	0	; () banked
  1840   006672  6F98               	movwf	sprintf@ap& (0+255),b
  1841   006674  C092  F099         	movff	sprintf@s,sprintf@f
  1842   006678                     
  1843                           ; BSR set to: 0
  1844   006678  0E00               	movlw	0
  1845   00667A  6F9C               	movwf	(sprintf@f+3)& (0+255),b
  1846   00667C  0E00               	movlw	0
  1847   00667E  6F9B               	movwf	(sprintf@f+2)& (0+255),b
  1848   006680                     
  1849                           ; BSR set to: 0
  1850   006680  0E00               	movlw	0
  1851   006682  6FA3               	movwf	(sprintf@f+10)& (0+255),b
  1852   006684  0E00               	movlw	0
  1853   006686  6FA2               	movwf	(sprintf@f+9)& (0+255),b
  1854   006688                     
  1855                           ; BSR set to: 0
  1856   006688  0E99               	movlw	low sprintf@f
  1857   00668A  6F8F               	movwf	vfprintf@fp& (0+255),b
  1858   00668C  C093  F090         	movff	sprintf@fmt,vfprintf@fmt
  1859   006690  0E98               	movlw	low sprintf@ap
  1860   006692  6F91               	movwf	vfprintf@ap& (0+255),b
  1861   006694  EC8F  F032         	call	_vfprintf	;wreg free
  1862   006698  0100               	movlb	0	; () banked
  1863   00669A  5192               	movf	sprintf@s& (0+255),w,b
  1864   00669C  259B               	addwf	(sprintf@f+2)& (0+255),w,b
  1865   00669E  6ED9               	movwf	fsr2l,c
  1866   0066A0  6ADA               	clrf	fsr2h,c
  1867   0066A2  6ADF               	clrf	indf2,c
  1868   0066A4                     
  1869                           ; BSR set to: 0
  1870   0066A4  0012               	return		;funcret
  1871   0066A6                     __end_of_sprintf:
  1872                           	callstack 0
  1873                           
  1874 ;; *************** function _vfprintf *****************
  1875 ;; Defined at:
  1876 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  1877 ;; Parameters:    Size  Location     Type
  1878 ;;  fp              1   47[BANK0 ] PTR struct _IO_FILE
  1879 ;;		 -> sprintf@f(11), 
  1880 ;;  fmt             1   48[BANK0 ] PTR const unsigned char 
  1881 ;;		 -> STR_1(5), 
  1882 ;;  ap              1   49[BANK0 ] PTR PTR void 
  1883 ;;		 -> sprintf@ap(1), 
  1884 ;; Auto vars:     Size  Location     Type
  1885 ;;  cfmt            1   70[COMRAM] PTR unsigned char 
  1886 ;;		 -> STR_1(5), 
  1887 ;; Return value:  Size  Location     Type
  1888 ;;                  2   47[BANK0 ] int 
  1889 ;; Registers used:
  1890 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1891 ;; Tracked objects:
  1892 ;;		On entry : 0/0
  1893 ;;		On exit  : 0/0
  1894 ;;		Unchanged: 0/0
  1895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1896 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1897 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1899 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1900 ;;Total ram usage:        4 bytes
  1901 ;; Hardware stack levels used: 1
  1902 ;; Hardware stack levels required when called: 7
  1903 ;; This function calls:
  1904 ;;		_vfpfcnvrt
  1905 ;; This function is called by:
  1906 ;;		_sprintf
  1907 ;; This function uses a non-reentrant model
  1908 ;;
  1909                           
  1910                           	psect	text3
  1911   00651E                     __ptext3:
  1912                           	callstack 0
  1913   00651E                     _vfprintf:
  1914                           	callstack 22
  1915   00651E                     
  1916                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  1917   00651E  C090  F047         	movff	vfprintf@fmt,vfprintf@cfmt
  1918                           
  1919                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1920   006522  EF9C  F032         	goto	l4274
  1921   006526                     l4272:
  1922                           
  1923                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1924   006526  C08F  F08C         	movff	vfprintf@fp,vfpfcnvrt@fp
  1925   00652A  0E47               	movlw	low vfprintf@cfmt
  1926   00652C  0100               	movlb	0	; () banked
  1927   00652E  6F8D               	movwf	vfpfcnvrt@fmt& (0+255),b
  1928   006530  C091  F08E         	movff	vfprintf@ap,vfpfcnvrt@ap
  1929   006534  EC94  F02B         	call	_vfpfcnvrt	;wreg free
  1930   006538                     l4274:
  1931                           
  1932                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1933   006538  0060  F11F  FFF6   	movff	vfprintf@cfmt,tblptrl
  1934   00653E                     	if	1	;There is more than 1 active tblptr byte
  1935   00653E  0E20               	movlw	high __smallconst
  1936   006540  6EF7               	movwf	tblptrh,c
  1937   006542                     	endif
  1938   006542                     	if	0	;tblptru may be non-zero
  1939   006542                     	endif
  1940   006542                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1941   006542  0E00               	movlw	low (__smallconst shr (0+16))
  1942   006544  6EF8               	movwf	tblptru,c
  1943   006546                     	endif
  1944   006546  0008               	tblrd		*
  1945   006548  50F5               	movf	tablat,w,c
  1946   00654A  0900               	iorlw	0
  1947   00654C  A4D8               	btfss	status,2,c
  1948   00654E  EFAB  F032         	goto	u5221
  1949   006552  EFAD  F032         	goto	u5220
  1950   006556                     u5221:
  1951   006556  EF93  F032         	goto	l4272
  1952   00655A                     u5220:
  1953   00655A                     
  1954                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  1955   00655A  0E00               	movlw	0
  1956   00655C  0100               	movlb	0	; () banked
  1957   00655E  6F90               	movwf	(?_vfprintf+1)& (0+255),b
  1958   006560  0E00               	movlw	0
  1959   006562  6F8F               	movwf	?_vfprintf& (0+255),b
  1960   006564                     
  1961                           ; BSR set to: 0
  1962   006564  0012               	return		;funcret
  1963   006566                     __end_of_vfprintf:
  1964                           	callstack 0
  1965                           
  1966 ;; *************** function _vfpfcnvrt *****************
  1967 ;; Defined at:
  1968 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  1969 ;; Parameters:    Size  Location     Type
  1970 ;;  fp              1   44[BANK0 ] PTR struct _IO_FILE
  1971 ;;		 -> sprintf@f(11), 
  1972 ;;  fmt             1   45[BANK0 ] PTR PTR unsigned char 
  1973 ;;		 -> vfprintf@cfmt(1), 
  1974 ;;  ap              1   46[BANK0 ] PTR PTR void 
  1975 ;;		 -> sprintf@ap(1), 
  1976 ;; Auto vars:     Size  Location     Type
  1977 ;;  convarg         4   64[COMRAM] struct .
  1978 ;;  cp              1   69[COMRAM] PTR unsigned char 
  1979 ;;		 -> STR_1(5), 
  1980 ;;  c               1   68[COMRAM] unsigned char 
  1981 ;;  done            1    0        _Bool 
  1982 ;; Return value:  Size  Location     Type
  1983 ;;                  1    wreg      void 
  1984 ;; Registers used:
  1985 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1986 ;; Tracked objects:
  1987 ;;		On entry : 0/0
  1988 ;;		On exit  : 0/0
  1989 ;;		Unchanged: 0/0
  1990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1991 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1992 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1993 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1994 ;;      Totals:         7       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1995 ;;Total ram usage:       10 bytes
  1996 ;; Hardware stack levels used: 1
  1997 ;; Hardware stack levels required when called: 6
  1998 ;; This function calls:
  1999 ;;		_efgtoa
  2000 ;;		_fputc
  2001 ;;		_read_prec_or_width
  2002 ;; This function is called by:
  2003 ;;		_vfprintf
  2004 ;; This function uses a non-reentrant model
  2005 ;;
  2006                           
  2007                           	psect	text4
  2008   005728                     __ptext4:
  2009                           	callstack 0
  2010   005728                     _vfpfcnvrt:
  2011                           	callstack 22
  2012   005728                     
  2013                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  2014   005728  0100               	movlb	0	; () banked
  2015   00572A  518D               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2016   00572C  6ED9               	movwf	fsr2l,c
  2017   00572E  6ADA               	clrf	fsr2h,c
  2018   005730  006F FF7F FFF6     	movff	indf2,tblptrl
  2019   005736                     	if	1	;There is more than 1 active tblptr byte
  2020   005736  0E20               	movlw	high __smallconst
  2021   005738  6EF7               	movwf	tblptrh,c
  2022   00573A                     	endif
  2023   00573A                     	if	0	;tblptru may be non-zero
  2024   00573A                     	endif
  2025   00573A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2026   00573A  0E00               	movlw	low (__smallconst shr (0+16))
  2027   00573C  6EF8               	movwf	tblptru,c
  2028   00573E                     	endif
  2029   00573E  0008               	tblrd		*
  2030   005740  50F5               	movf	tablat,w,c
  2031   005742  0A25               	xorlw	37
  2032   005744  A4D8               	btfss	status,2,c
  2033   005746  EFA7  F02B         	goto	u5191
  2034   00574A  EFA9  F02B         	goto	u5190
  2035   00574E                     u5191:
  2036   00574E  EF89  F02C         	goto	l4264
  2037   005752                     u5190:
  2038   005752                     
  2039                           ; BSR set to: 0
  2040                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  2041   005752  518D               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2042   005754  6ED9               	movwf	fsr2l,c
  2043   005756  6ADA               	clrf	fsr2h,c
  2044   005758  2ADF               	incf	indf2,f,c
  2045   00575A                     
  2046                           ; BSR set to: 0
  2047                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  2048   00575A  0E00               	movlw	0
  2049   00575C  6FB1               	movwf	(_width+1)& (0+255),b
  2050   00575E  0E00               	movlw	0
  2051   005760  6FB0               	movwf	_width& (0+255),b
  2052   005762  C0B0  F054         	movff	_width,_flags
  2053   005766                     
  2054                           ; BSR set to: 0
  2055                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  2056   005766  69B2               	setf	_prec& (0+255),b
  2057   005768  69B3               	setf	(_prec+1)& (0+255),b
  2058   00576A                     
  2059                           ; BSR set to: 0
  2060                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1265:         if 
      +                          ((*fmt)[0] == '.') {
  2061   00576A  518D               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2062   00576C  6ED9               	movwf	fsr2l,c
  2063   00576E  6ADA               	clrf	fsr2h,c
  2064   005770  006F FF7F FFF6     	movff	indf2,tblptrl
  2065   005776                     	if	1	;There is more than 1 active tblptr byte
  2066   005776  0E20               	movlw	high __smallconst
  2067   005778  6EF7               	movwf	tblptrh,c
  2068   00577A                     	endif
  2069   00577A                     	if	0	;tblptru may be non-zero
  2070   00577A                     	endif
  2071   00577A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2072   00577A  0E00               	movlw	low (__smallconst shr (0+16))
  2073   00577C  6EF8               	movwf	tblptru,c
  2074   00577E                     	endif
  2075   00577E  0008               	tblrd		*
  2076   005780  50F5               	movf	tablat,w,c
  2077   005782  0A2E               	xorlw	46
  2078   005784  A4D8               	btfss	status,2,c
  2079   005786  EFC7  F02B         	goto	u5201
  2080   00578A  EFC9  F02B         	goto	u5200
  2081   00578E                     u5201:
  2082   00578E  EFD7  F02B         	goto	l4228
  2083   005792                     u5200:
  2084   005792                     
  2085                           ; BSR set to: 0
  2086                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1266:            
      +                           ++*fmt;
  2087   005792  518D               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2088   005794  6ED9               	movwf	fsr2l,c
  2089   005796  6ADA               	clrf	fsr2h,c
  2090   005798  2ADF               	incf	indf2,f,c
  2091   00579A                     
  2092                           ; BSR set to: 0
  2093                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1267:    prec = r
      +                          ead_prec_or_width(fmt, ap);
  2094   00579A  C08D  F005         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  2095   00579E  C08E  F006         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  2096   0057A2  EC6E  F030         	call	_read_prec_or_width	;wreg free
  2097   0057A6  C005  F0B2         	movff	?_read_prec_or_width,_prec
  2098   0057AA  C006  F0B3         	movff	?_read_prec_or_width+1,_prec+1
  2099   0057AE                     l4228:
  2100                           
  2101                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1689:   cp = *fmt
      +                          ;
  2102   0057AE  0100               	movlb	0	; () banked
  2103   0057B0  518D               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2104   0057B2  6ED9               	movwf	fsr2l,c
  2105   0057B4  6ADA               	clrf	fsr2h,c
  2106   0057B6  50DF               	movf	indf2,w,c
  2107   0057B8  6E46               	movwf	vfpfcnvrt@cp^0,c
  2108   0057BA                     
  2109                           ; BSR set to: 0
  2110                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1690:   c = *cp;
  2111   0057BA  0060  F11B  FFF6   	movff	vfpfcnvrt@cp,tblptrl
  2112   0057C0                     	if	1	;There is more than 1 active tblptr byte
  2113   0057C0  0E20               	movlw	high __smallconst
  2114   0057C2  6EF7               	movwf	tblptrh,c
  2115   0057C4                     	endif
  2116   0057C4                     	if	0	;tblptru may be non-zero
  2117   0057C4                     	endif
  2118   0057C4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2119   0057C4  0E00               	movlw	low (__smallconst shr (0+16))
  2120   0057C6  6EF8               	movwf	tblptru,c
  2121   0057C8                     	endif
  2122   0057C8  0008               	tblrd		*
  2123   0057CA  006F FFD4  F045    	movff	tablat,vfpfcnvrt@c
  2124                           
  2125                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1691:   switch(c)
      +                           {
  2126   0057D0  EFF4  F02B         	goto	l4238
  2127   0057D4                     l4232:
  2128                           
  2129                           ; BSR set to: 0
  2130                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1695:     cp++;
  2131   0057D4  2A46               	incf	vfpfcnvrt@cp^0,f,c
  2132                           
  2133                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1696:     break;
  2134   0057D6  EF03  F02C         	goto	l4240
  2135   0057DA                     l4234:
  2136                           
  2137                           ; BSR set to: 0
  2138                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1721:     c = 'l'
      +                          ;
  2139   0057DA  0E6C               	movlw	108
  2140   0057DC  6E45               	movwf	vfpfcnvrt@c^0,c
  2141                           
  2142                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1722:     break;
  2143   0057DE  EF03  F02C         	goto	l4240
  2144   0057E2                     l912:
  2145                           
  2146                           ; BSR set to: 0
  2147                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1724:     c = 0;
  2148   0057E2  6A45               	clrf	vfpfcnvrt@c^0,c
  2149                           
  2150                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1725:     break;
  2151   0057E4  EF03  F02C         	goto	l4240
  2152   0057E8                     l4238:
  2153                           
  2154                           ; BSR set to: 0
  2155   0057E8  5045               	movf	vfpfcnvrt@c^0,w,c
  2156                           
  2157                           ; Switch size 1, requested type "simple"
  2158                           ; Number of cases is 3, Range of values is 76 to 108
  2159                           ; switch strategies available:
  2160                           ; Name         Instructions Cycles
  2161                           ; simple_byte           10     6 (average)
  2162                           ;	Chosen strategy is simple_byte
  2163   0057EA  0A4C               	xorlw	76	; case 76
  2164   0057EC  B4D8               	btfsc	status,2,c
  2165   0057EE  EFEA  F02B         	goto	l4232
  2166   0057F2  0A2A               	xorlw	42	; case 102
  2167   0057F4  B4D8               	btfsc	status,2,c
  2168   0057F6  EFED  F02B         	goto	l4234
  2169   0057FA  0A0A               	xorlw	10	; case 108
  2170   0057FC  B4D8               	btfsc	status,2,c
  2171   0057FE  EFEA  F02B         	goto	l4232
  2172   005802  EFF1  F02B         	goto	l912
  2173   005806                     l4240:
  2174                           
  2175                           ; BSR set to: 0
  2176   005806  0060  F11B  FFF6   	movff	vfpfcnvrt@cp,tblptrl
  2177   00580C                     	if	1	;There is more than 1 active tblptr byte
  2178   00580C  0E20               	movlw	high __smallconst
  2179   00580E  6EF7               	movwf	tblptrh,c
  2180   005810                     	endif
  2181   005810                     	if	0	;tblptru may be non-zero
  2182   005810                     	endif
  2183   005810                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2184   005810  0E00               	movlw	low (__smallconst shr (0+16))
  2185   005812  6EF8               	movwf	tblptru,c
  2186   005814                     	endif
  2187   005814  0008               	tblrd		*
  2188   005816  50F5               	movf	tablat,w,c
  2189   005818  0A66               	xorlw	102
  2190   00581A  A4D8               	btfss	status,2,c
  2191   00581C  EF12  F02C         	goto	u5211
  2192   005820  EF14  F02C         	goto	u5210
  2193   005824                     u5211:
  2194   005824  EF82  F02C         	goto	l4260
  2195   005828                     u5210:
  2196   005828  EF48  F02C         	goto	l4248
  2197   00582C                     l4242:
  2198                           
  2199                           ; BSR set to: 0
  2200                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1756:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2201   00582C  518E               	movf	vfpfcnvrt@ap& (0+255),w,b
  2202   00582E  6ED9               	movwf	fsr2l,c
  2203   005830  6ADA               	clrf	fsr2h,c
  2204   005832  006F FF7C  F040    	movff	indf2,??_vfpfcnvrt
  2205   005838  0E04               	movlw	4
  2206   00583A  26DF               	addwf	indf2,f,c
  2207   00583C  5040               	movf	??_vfpfcnvrt^0,w,c
  2208   00583E  6ED9               	movwf	fsr2l,c
  2209   005840  6ADA               	clrf	fsr2h,c
  2210   005842  006F FF78  F041    	movff	postinc2,vfpfcnvrt@convarg
  2211   005848  006F FF78  F042    	movff	postinc2,vfpfcnvrt@convarg+1
  2212   00584E  006F FF78  F043    	movff	postinc2,vfpfcnvrt@convarg+2
  2213   005854  006F FF78  F044    	movff	postinc2,vfpfcnvrt@convarg+3
  2214                           
  2215                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1757:      break;
  2216   00585A  EF53  F02C         	goto	l4250
  2217   00585E                     l4244:
  2218                           
  2219                           ; BSR set to: 0
  2220                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1759:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2221   00585E  518E               	movf	vfpfcnvrt@ap& (0+255),w,b
  2222   005860  6ED9               	movwf	fsr2l,c
  2223   005862  6ADA               	clrf	fsr2h,c
  2224   005864  006F FF7C  F040    	movff	indf2,??_vfpfcnvrt
  2225   00586A  0E04               	movlw	4
  2226   00586C  26DF               	addwf	indf2,f,c
  2227   00586E  5040               	movf	??_vfpfcnvrt^0,w,c
  2228   005870  6ED9               	movwf	fsr2l,c
  2229   005872  6ADA               	clrf	fsr2h,c
  2230   005874  006F FF78  F041    	movff	postinc2,vfpfcnvrt@convarg
  2231   00587A  006F FF78  F042    	movff	postinc2,vfpfcnvrt@convarg+1
  2232   005880  006F FF78  F043    	movff	postinc2,vfpfcnvrt@convarg+2
  2233   005886  006F FF78  F044    	movff	postinc2,vfpfcnvrt@convarg+3
  2234                           
  2235                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1760:      break;
  2236   00588C  EF53  F02C         	goto	l4250
  2237   005890                     l4248:
  2238                           
  2239                           ; BSR set to: 0
  2240   005890  5045               	movf	vfpfcnvrt@c^0,w,c
  2241                           
  2242                           ; Switch size 1, requested type "simple"
  2243                           ; Number of cases is 2, Range of values is 76 to 108
  2244                           ; switch strategies available:
  2245                           ; Name         Instructions Cycles
  2246                           ; simple_byte            7     4 (average)
  2247                           ;	Chosen strategy is simple_byte
  2248   005892  0A4C               	xorlw	76	; case 76
  2249   005894  B4D8               	btfsc	status,2,c
  2250   005896  EF2F  F02C         	goto	l4244
  2251   00589A  0A20               	xorlw	32	; case 108
  2252   00589C  B4D8               	btfsc	status,2,c
  2253   00589E  EF16  F02C         	goto	l4242
  2254   0058A2  EF53  F02C         	goto	l4250
  2255   0058A6                     l4250:
  2256                           
  2257                           ; BSR set to: 0
  2258                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1762:    *fmt = c
      +                          p+1;
  2259   0058A6  518D               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2260   0058A8  6ED9               	movwf	fsr2l,c
  2261   0058AA  6ADA               	clrf	fsr2h,c
  2262   0058AC  2846               	incf	vfpfcnvrt@cp^0,w,c
  2263   0058AE  6EDF               	movwf	indf2,c
  2264                           
  2265                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1763:    switch (
      +                          *cp) {
  2266   0058B0  EF73  F02C         	goto	l4258
  2267   0058B4                     l4252:
  2268                           
  2269                           ; BSR set to: 0
  2270                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1790:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  2271   0058B4  C08C  F038         	movff	vfpfcnvrt@fp,efgtoa@fp
  2272   0058B8  C041  F039         	movff	vfpfcnvrt@convarg,efgtoa@f
  2273   0058BC  C042  F03A         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  2274   0058C0  C043  F03B         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  2275   0058C4  C044  F03C         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  2276   0058C8  0060  F11B  FFF6   	movff	vfpfcnvrt@cp,tblptrl
  2277   0058CE                     	if	1	;There is more than 1 active tblptr byte
  2278   0058CE  0E20               	movlw	high __smallconst
  2279   0058D0  6EF7               	movwf	tblptrh,c
  2280   0058D2                     	endif
  2281   0058D2                     	if	0	;tblptru may be non-zero
  2282   0058D2                     	endif
  2283   0058D2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2284   0058D2  0E00               	movlw	low (__smallconst shr (0+16))
  2285   0058D4  6EF8               	movwf	tblptru,c
  2286   0058D6                     	endif
  2287   0058D6  0008               	tblrd		*
  2288   0058D8  006F FFD4  F03D    	movff	tablat,efgtoa@c
  2289   0058DE  EC59  F020         	call	_efgtoa	;wreg free
  2290   0058E2  EF9D  F02C         	goto	l922
  2291   0058E6                     l4258:
  2292                           
  2293                           ; BSR set to: 0
  2294   0058E6  0060  F11B  FFF6   	movff	vfpfcnvrt@cp,tblptrl
  2295   0058EC                     	if	1	;There is more than 1 active tblptr byte
  2296   0058EC  0E20               	movlw	high __smallconst
  2297   0058EE  6EF7               	movwf	tblptrh,c
  2298   0058F0                     	endif
  2299   0058F0                     	if	0	;tblptru may be non-zero
  2300   0058F0                     	endif
  2301   0058F0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2302   0058F0  0E00               	movlw	low (__smallconst shr (0+16))
  2303   0058F2  6EF8               	movwf	tblptru,c
  2304   0058F4                     	endif
  2305   0058F4  0008               	tblrd		*
  2306   0058F6  50F5               	movf	tablat,w,c
  2307                           
  2308                           ; Switch size 1, requested type "simple"
  2309                           ; Number of cases is 1, Range of values is 102 to 102
  2310                           ; switch strategies available:
  2311                           ; Name         Instructions Cycles
  2312                           ; simple_byte            4     3 (average)
  2313                           ;	Chosen strategy is simple_byte
  2314   0058F8  0A66               	xorlw	102	; case 102
  2315   0058FA  B4D8               	btfsc	status,2,c
  2316   0058FC  EF5A  F02C         	goto	l4252
  2317   005900  EF82  F02C         	goto	l4260
  2318   005904                     l4260:
  2319                           
  2320                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  2321   005904  0100               	movlb	0	; () banked
  2322   005906  518D               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2323   005908  6ED9               	movwf	fsr2l,c
  2324   00590A  6ADA               	clrf	fsr2h,c
  2325   00590C  2ADF               	incf	indf2,f,c
  2326   00590E  EF9D  F02C         	goto	l922
  2327   005912                     l4264:
  2328                           
  2329                           ; BSR set to: 0
  2330                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  2331   005912  518D               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2332   005914  6ED9               	movwf	fsr2l,c
  2333   005916  6ADA               	clrf	fsr2h,c
  2334   005918  006F FF7F FFF6     	movff	indf2,tblptrl
  2335   00591E                     	if	1	;There is more than 1 active tblptr byte
  2336   00591E  0E20               	movlw	high __smallconst
  2337   005920  6EF7               	movwf	tblptrh,c
  2338   005922                     	endif
  2339   005922                     	if	0	;tblptru may be non-zero
  2340   005922                     	endif
  2341   005922                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2342   005922  0E00               	movlw	low (__smallconst shr (0+16))
  2343   005924  6EF8               	movwf	tblptru,c
  2344   005926                     	endif
  2345   005926  0008               	tblrd		*
  2346   005928  50F5               	movf	tablat,w,c
  2347   00592A  6E05               	movwf	fputc@c^0,c
  2348   00592C  6A06               	clrf	(fputc@c+1)^0,c
  2349   00592E  C08C  F007         	movff	vfpfcnvrt@fp,fputc@fp
  2350   005932  ECCA  F030         	call	_fputc	;wreg free
  2351   005936  EF82  F02C         	goto	l4260
  2352   00593A                     l922:
  2353   00593A  0012               	return		;funcret
  2354   00593C                     __end_of_vfpfcnvrt:
  2355                           	callstack 0
  2356                           
  2357 ;; *************** function _read_prec_or_width *****************
  2358 ;; Defined at:
  2359 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  2360 ;; Parameters:    Size  Location     Type
  2361 ;;  fmt             1    4[COMRAM] PTR PTR const unsigned c
  2362 ;;		 -> vfprintf@cfmt(1), 
  2363 ;;  ap              1    5[COMRAM] PTR PTR void [1]
  2364 ;;		 -> sprintf@ap(1), 
  2365 ;; Auto vars:     Size  Location     Type
  2366 ;;  c               1    8[COMRAM] unsigned char 
  2367 ;;  n               2    9[COMRAM] int 
  2368 ;; Return value:  Size  Location     Type
  2369 ;;                  2    4[COMRAM] int 
  2370 ;; Registers used:
  2371 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  2372 ;; Tracked objects:
  2373 ;;		On entry : 0/0
  2374 ;;		On exit  : 0/0
  2375 ;;		Unchanged: 0/0
  2376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2377 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2378 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2379 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2380 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2381 ;;Total ram usage:        7 bytes
  2382 ;; Hardware stack levels used: 1
  2383 ;; Hardware stack levels required when called: 1
  2384 ;; This function calls:
  2385 ;;		Nothing
  2386 ;; This function is called by:
  2387 ;;		_vfpfcnvrt
  2388 ;; This function uses a non-reentrant model
  2389 ;;
  2390                           
  2391                           	psect	text5
  2392   0060DC                     __ptext5:
  2393                           	callstack 0
  2394   0060DC                     _read_prec_or_width:
  2395                           	callstack 26
  2396   0060DC                     
  2397                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  2398   0060DC  0E00               	movlw	0
  2399   0060DE  6E0B               	movwf	(read_prec_or_width@n+1)^0,c
  2400   0060E0  0E00               	movlw	0
  2401   0060E2  6E0A               	movwf	read_prec_or_width@n^0,c
  2402   0060E4                     
  2403                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  2404   0060E4  5005               	movf	read_prec_or_width@fmt^0,w,c
  2405   0060E6  6ED9               	movwf	fsr2l,c
  2406   0060E8  6ADA               	clrf	fsr2h,c
  2407   0060EA  006F FF7F FFF6     	movff	indf2,tblptrl
  2408   0060F0                     	if	1	;There is more than 1 active tblptr byte
  2409   0060F0  0E20               	movlw	high __smallconst
  2410   0060F2  6EF7               	movwf	tblptrh,c
  2411   0060F4                     	endif
  2412   0060F4                     	if	0	;tblptru may be non-zero
  2413   0060F4                     	endif
  2414   0060F4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2415   0060F4  0E00               	movlw	low (__smallconst shr (0+16))
  2416   0060F6  6EF8               	movwf	tblptru,c
  2417   0060F8                     	endif
  2418   0060F8  0008               	tblrd		*
  2419   0060FA  50F5               	movf	tablat,w,c
  2420   0060FC  0A2A               	xorlw	42
  2421   0060FE  A4D8               	btfss	status,2,c
  2422   006100  EF84  F030         	goto	u5171
  2423   006104  EF86  F030         	goto	u5170
  2424   006108                     u5171:
  2425   006108  EFAF  F030         	goto	l4212
  2426   00610C                     u5170:
  2427   00610C                     
  2428                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  2429   00610C  5005               	movf	read_prec_or_width@fmt^0,w,c
  2430   00610E  6ED9               	movwf	fsr2l,c
  2431   006110  6ADA               	clrf	fsr2h,c
  2432   006112  2ADF               	incf	indf2,f,c
  2433   006114                     
  2434                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  2435   006114  5006               	movf	read_prec_or_width@ap^0,w,c
  2436   006116  6ED9               	movwf	fsr2l,c
  2437   006118  6ADA               	clrf	fsr2h,c
  2438   00611A  0E02               	movlw	2
  2439   00611C  26DF               	addwf	indf2,f,c
  2440   00611E  5CDF               	subwf	indf2,w,c
  2441   006120  6ED9               	movwf	fsr2l,c
  2442   006122  6ADA               	clrf	fsr2h,c
  2443   006124  006F FF78  F00A    	movff	postinc2,read_prec_or_width@n
  2444   00612A  006F FF78  F00B    	movff	postinc2,read_prec_or_width@n+1
  2445                           
  2446                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  2447   006130  EFC5  F030         	goto	l898
  2448   006134                     l4208:
  2449                           
  2450                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
  2451   006134  0E0A               	movlw	10
  2452   006136  020A               	mulwf	read_prec_or_width@n^0,c
  2453   006138  006F FFCC  F007    	movff	prodl,??_read_prec_or_width
  2454   00613E  006F FFD0  F008    	movff	prodh,??_read_prec_or_width+1
  2455   006144  020B               	mulwf	(read_prec_or_width@n+1)^0,c
  2456   006146  50F3               	movf	prodl,w,c
  2457   006148  2608               	addwf	(??_read_prec_or_width+1)^0,f,c
  2458   00614A  5009               	movf	read_prec_or_width@c^0,w,c
  2459   00614C  2407               	addwf	??_read_prec_or_width^0,w,c
  2460   00614E  6E0A               	movwf	read_prec_or_width@n^0,c
  2461   006150  0E00               	movlw	0
  2462   006152  2008               	addwfc	(??_read_prec_or_width+1)^0,w,c
  2463   006154  6E0B               	movwf	(read_prec_or_width@n+1)^0,c
  2464   006156                     
  2465                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
  2466   006156  5005               	movf	read_prec_or_width@fmt^0,w,c
  2467   006158  6ED9               	movwf	fsr2l,c
  2468   00615A  6ADA               	clrf	fsr2h,c
  2469   00615C  2ADF               	incf	indf2,f,c
  2470   00615E                     l4212:
  2471                           
  2472                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  2473   00615E  5005               	movf	read_prec_or_width@fmt^0,w,c
  2474   006160  6ED9               	movwf	fsr2l,c
  2475   006162  6ADA               	clrf	fsr2h,c
  2476   006164  006F FF7F FFF6     	movff	indf2,tblptrl
  2477   00616A                     	if	1	;There is more than 1 active tblptr byte
  2478   00616A  0E20               	movlw	high __smallconst
  2479   00616C  6EF7               	movwf	tblptrh,c
  2480   00616E                     	endif
  2481   00616E                     	if	0	;tblptru may be non-zero
  2482   00616E                     	endif
  2483   00616E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2484   00616E  0E00               	movlw	low (__smallconst shr (0+16))
  2485   006170  6EF8               	movwf	tblptru,c
  2486   006172                     	endif
  2487   006172  0008               	tblrd		*
  2488   006174  50F5               	movf	tablat,w,c
  2489   006176  0FD0               	addlw	208
  2490   006178  6E09               	movwf	read_prec_or_width@c^0,c
  2491   00617A  0E09               	movlw	9
  2492   00617C  6409               	cpfsgt	read_prec_or_width@c^0,c
  2493   00617E  EFC3  F030         	goto	u5181
  2494   006182  EFC5  F030         	goto	u5180
  2495   006186                     u5181:
  2496   006186  EF9A  F030         	goto	l4208
  2497   00618A                     u5180:
  2498   00618A                     l898:
  2499                           
  2500                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
  2501   00618A  C00A  F005         	movff	read_prec_or_width@n,?_read_prec_or_width
  2502   00618E  C00B  F006         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  2503   006192  0012               	return		;funcret
  2504   006194                     __end_of_read_prec_or_width:
  2505                           	callstack 0
  2506                           
  2507 ;; *************** function _efgtoa *****************
  2508 ;; Defined at:
  2509 ;;		line 587 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  2510 ;; Parameters:    Size  Location     Type
  2511 ;;  fp              1   55[COMRAM] PTR struct _IO_FILE
  2512 ;;		 -> sprintf@f(11), 
  2513 ;;  f               4   56[COMRAM] PTR struct _IO_FILE
  2514 ;;  c               1   60[COMRAM] unsigned char 
  2515 ;; Auto vars:     Size  Location     Type
  2516 ;;  u               4   40[BANK0 ] struct flui
  2517 ;;  g               4   34[BANK0 ] struct flui
  2518 ;;  l               4   29[BANK0 ] struct flui
  2519 ;;  h               4   25[BANK0 ] struct flui
  2520 ;;  ou              4   19[BANK0 ] struct flui
  2521 ;;  n               2   38[BANK0 ] int 
  2522 ;;  i               2   23[BANK0 ] int 
  2523 ;;  w               2   17[BANK0 ] int 
  2524 ;;  e               2   15[BANK0 ] int 
  2525 ;;  m               2   13[BANK0 ] int 
  2526 ;;  d               2   11[BANK0 ] int 
  2527 ;;  t               2    4[BANK0 ] int 
  2528 ;;  p               2    2[BANK0 ] int 
  2529 ;;  ne              2    0[BANK0 ] int 
  2530 ;;  sign            1   33[BANK0 ] unsigned char 
  2531 ;;  nmode           1   10[BANK0 ] unsigned char 
  2532 ;;  mode            1    9[BANK0 ] unsigned char 
  2533 ;;  pp              1    8[BANK0 ] unsigned char 
  2534 ;;  esign           1    0        unsigned char 
  2535 ;; Return value:  Size  Location     Type
  2536 ;;                  1    wreg      void 
  2537 ;; Registers used:
  2538 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2539 ;; Tracked objects:
  2540 ;;		On entry : 0/0
  2541 ;;		On exit  : 0/0
  2542 ;;		Unchanged: 0/0
  2543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2544 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2545 ;;      Locals:         0      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2546 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2547 ;;      Totals:         8      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2548 ;;Total ram usage:       52 bytes
  2549 ;; Hardware stack levels used: 1
  2550 ;; Hardware stack levels required when called: 5
  2551 ;; This function calls:
  2552 ;;		___fladd
  2553 ;;		___fldiv
  2554 ;;		___fleq
  2555 ;;		___flge
  2556 ;;		___flmul
  2557 ;;		___flneg
  2558 ;;		___flsub
  2559 ;;		___fltol
  2560 ;;		___fpclassifyf
  2561 ;;		_floorf
  2562 ;;		_labs
  2563 ;;		_memcpy
  2564 ;;		_pad
  2565 ;;		_strcpy
  2566 ;; This function is called by:
  2567 ;;		_vfpfcnvrt
  2568 ;; This function uses a non-reentrant model
  2569 ;;
  2570                           
  2571                           	psect	text6
  2572   0040B2                     __ptext6:
  2573                           	callstack 0
  2574   0040B2                     _efgtoa:
  2575                           	callstack 22
  2576   0040B2                     
  2577                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 587: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v3.00\pic\sources
      +                          \c99\common\doprnt.c: 588: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common
      +                          \doprnt.c: 589:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v3
      +                          .00\pic\sources\c99\common\doprnt.c: 590:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 591:     long double h, l;
  2578   0040B2  0100               	movlb	0	; () banked
  2579   0040B4  6B81               	clrf	efgtoa@sign& (0+255),b
  2580                           
  2581                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 596:     g.f = f;
  2582   0040B6  C039  F082         	movff	efgtoa@f,efgtoa@g
  2583   0040BA  C03A  F083         	movff	efgtoa@f+1,efgtoa@g+1
  2584   0040BE  C03B  F084         	movff	efgtoa@f+2,efgtoa@g+2
  2585   0040C2  C03C  F085         	movff	efgtoa@f+3,efgtoa@g+3
  2586   0040C6                     
  2587                           ; BSR set to: 0
  2588                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 597:     if (g.f 
      +                          < 0.0) {
  2589   0040C6  BF85               	btfsc	(efgtoa@g+3)& (0+255),7,b
  2590   0040C8  EF6A  F020         	goto	u4850
  2591   0040CC  EF68  F020         	goto	u4851
  2592   0040D0                     u4851:
  2593   0040D0  EF7E  F020         	goto	l3988
  2594   0040D4                     u4850:
  2595   0040D4                     
  2596                           ; BSR set to: 0
  2597                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 598:         sign
      +                           = 1;
  2598   0040D4  0E01               	movlw	1
  2599   0040D6  6F81               	movwf	efgtoa@sign& (0+255),b
  2600   0040D8                     
  2601                           ; BSR set to: 0
  2602                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 599:         g.f 
      +                          = -g.f;
  2603   0040D8  C082  F005         	movff	efgtoa@g,___flneg@f1
  2604   0040DC  C083  F006         	movff	efgtoa@g+1,___flneg@f1+1
  2605   0040E0  C084  F007         	movff	efgtoa@g+2,___flneg@f1+2
  2606   0040E4  C085  F008         	movff	efgtoa@g+3,___flneg@f1+3
  2607   0040E8  EC53  F033         	call	___flneg	;wreg free
  2608   0040EC  C005  F082         	movff	?___flneg,efgtoa@g
  2609   0040F0  C006  F083         	movff	?___flneg+1,efgtoa@g+1
  2610   0040F4  C007  F084         	movff	?___flneg+2,efgtoa@g+2
  2611   0040F8  C008  F085         	movff	?___flneg+3,efgtoa@g+3
  2612   0040FC                     l3988:
  2613                           
  2614                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 603:     n = 0;
  2615   0040FC  0E00               	movlw	0
  2616   0040FE  0100               	movlb	0	; () banked
  2617   004100  6F87               	movwf	(efgtoa@n+1)& (0+255),b
  2618   004102  0E00               	movlw	0
  2619   004104  6F86               	movwf	efgtoa@n& (0+255),b
  2620   004106                     
  2621                           ; BSR set to: 0
  2622                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 604:     w = widt
      +                          h;
  2623   004106  C0B0  F071         	movff	_width,efgtoa@w
  2624   00410A  C0B1  F072         	movff	_width+1,efgtoa@w+1
  2625   00410E                     
  2626                           ; BSR set to: 0
  2627                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 605:     if (sign
  2628   00410E  5181               	movf	efgtoa@sign& (0+255),w,b
  2629   004110  B4D8               	btfsc	status,2,c
  2630   004112  EF8D  F020         	goto	u4861
  2631   004116  EF8F  F020         	goto	u4860
  2632   00411A                     u4861:
  2633   00411A  EFA3  F020         	goto	l4002
  2634   00411E                     u4860:
  2635   00411E                     
  2636                           ; BSR set to: 0
  2637                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 609:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 610:   sign = sign ? '-
      +                          ' : '+';
  2638   00411E  5181               	movf	efgtoa@sign& (0+255),w,b
  2639   004120  A4D8               	btfss	status,2,c
  2640   004122  EF95  F020         	goto	u4871
  2641   004126  EF97  F020         	goto	u4870
  2642   00412A                     u4871:
  2643   00412A  EF9D  F020         	goto	l3998
  2644   00412E                     u4870:
  2645   00412E                     
  2646                           ; BSR set to: 0
  2647   00412E  0E00               	movlw	0
  2648   004130  6F67               	movwf	(_efgtoa$1114+1)& (0+255),b
  2649   004132  0E2B               	movlw	43
  2650   004134  6F66               	movwf	_efgtoa$1114& (0+255),b
  2651   004136  EFA1  F020         	goto	l4000
  2652   00413A                     l3998:
  2653                           
  2654                           ; BSR set to: 0
  2655   00413A  0E00               	movlw	0
  2656   00413C  6F67               	movwf	(_efgtoa$1114+1)& (0+255),b
  2657   00413E  0E2D               	movlw	45
  2658   004140  6F66               	movwf	_efgtoa$1114& (0+255),b
  2659   004142                     l4000:
  2660                           
  2661                           ; BSR set to: 0
  2662   004142  C066  F081         	movff	_efgtoa$1114,efgtoa@sign
  2663   004146                     l4002:
  2664                           
  2665                           ; BSR set to: 0
  2666                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 619:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  2667   004146  C082  F005         	movff	efgtoa@g,___fpclassifyf@x
  2668   00414A  C083  F006         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2669   00414E  C084  F007         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2670   004152  C085  F008         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2671   004156  EC86  F02F         	call	___fpclassifyf	;wreg free
  2672   00415A  0405               	decf	?___fpclassifyf^0,w,c
  2673   00415C  1006               	iorwf	(?___fpclassifyf+1)^0,w,c
  2674   00415E  A4D8               	btfss	status,2,c
  2675   004160  EFB4  F020         	goto	u4881
  2676   004164  EFB6  F020         	goto	u4880
  2677   004168                     u4881:
  2678   004168  EFE5  F020         	goto	l4020
  2679   00416C                     u4880:
  2680   00416C                     
  2681                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 620:   if (sign) 
      +                          {
  2682   00416C  0100               	movlb	0	; () banked
  2683   00416E  5181               	movf	efgtoa@sign& (0+255),w,b
  2684   004170  B4D8               	btfsc	status,2,c
  2685   004172  EFBD  F020         	goto	u4891
  2686   004176  EFBF  F020         	goto	u4890
  2687   00417A                     u4891:
  2688   00417A  EFC8  F020         	goto	l4012
  2689   00417E                     u4890:
  2690   00417E                     
  2691                           ; BSR set to: 0
  2692                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 621:    dbuf[0] =
      +                           sign;
  2693   00417E  C081  F100         	movff	efgtoa@sign,_dbuf
  2694   004182                     
  2695                           ; BSR set to: 0
  2696                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 622:    w--;
  2697   004182  0771               	decf	efgtoa@w& (0+255),f,b
  2698   004184  A0D8               	btfss	status,0,c
  2699   004186  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  2700   004188                     
  2701                           ; BSR set to: 0
  2702                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 623:    n = 1;
  2703   004188  0E00               	movlw	0
  2704   00418A  6F87               	movwf	(efgtoa@n+1)& (0+255),b
  2705   00418C  0E01               	movlw	1
  2706   00418E  6F86               	movwf	efgtoa@n& (0+255),b
  2707   004190                     l4012:
  2708                           
  2709                           ; BSR set to: 0
  2710                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 631:   {;C:\Progr
      +                          am Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 632:             strcpy(&d
      +                          buf[n], "inf");
  2711   004190  0E00               	movlw	low _dbuf
  2712   004192  2586               	addwf	efgtoa@n& (0+255),w,b
  2713   004194  6E05               	movwf	strcpy@dest^0,c
  2714   004196  0E01               	movlw	high _dbuf
  2715   004198  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2716   00419A  6E06               	movwf	(strcpy@dest+1)^0,c
  2717   00419C  0E06               	movlw	low STR_3
  2718   00419E  6E07               	movwf	strcpy@src^0,c
  2719   0041A0  ECB3  F032         	call	_strcpy	;wreg free
  2720   0041A4                     l4014:
  2721                           
  2722                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 633:         };C:
      +                          \Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 634:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  2723   0041A4  0100               	movlb	0	; () banked
  2724   0041A6  0EFD               	movlw	253
  2725   0041A8  2771               	addwf	efgtoa@w& (0+255),f,b
  2726   0041AA  0EFF               	movlw	255
  2727   0041AC  2372               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2728   0041AE                     
  2729                           ; BSR set to: 0
  2730                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 635:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  2731   0041AE  C038  F013         	movff	efgtoa@fp,pad@fp
  2732   0041B2  0E00               	movlw	low _dbuf
  2733   0041B4  6E14               	movwf	pad@buf^0,c
  2734   0041B6  0E01               	movlw	high _dbuf
  2735   0041B8  6E15               	movwf	(pad@buf+1)^0,c
  2736   0041BA  C071  F016         	movff	efgtoa@w,pad@p
  2737   0041BE  C072  F017         	movff	efgtoa@w+1,pad@p+1
  2738   0041C2  ECAE  F031         	call	_pad	;wreg free
  2739   0041C6  EF4B  F025         	goto	l853
  2740   0041CA                     l4020:
  2741                           
  2742                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 637:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  2743   0041CA  C082  F005         	movff	efgtoa@g,___fpclassifyf@x
  2744   0041CE  C083  F006         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2745   0041D2  C084  F007         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2746   0041D6  C085  F008         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2747   0041DA  EC86  F02F         	call	___fpclassifyf	;wreg free
  2748   0041DE  5005               	movf	?___fpclassifyf^0,w,c
  2749   0041E0  1006               	iorwf	(?___fpclassifyf+1)^0,w,c
  2750   0041E2  A4D8               	btfss	status,2,c
  2751   0041E4  EFF6  F020         	goto	u4901
  2752   0041E8  EFF8  F020         	goto	u4900
  2753   0041EC                     u4901:
  2754   0041EC  EF16  F021         	goto	l4038
  2755   0041F0                     u4900:
  2756   0041F0                     
  2757                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 638:   if (sign) 
      +                          {
  2758   0041F0  0100               	movlb	0	; () banked
  2759   0041F2  5181               	movf	efgtoa@sign& (0+255),w,b
  2760   0041F4  B4D8               	btfsc	status,2,c
  2761   0041F6  EFFF  F020         	goto	u4911
  2762   0041FA  EF01  F021         	goto	u4910
  2763   0041FE                     u4911:
  2764   0041FE  EF0A  F021         	goto	l4030
  2765   004202                     u4910:
  2766   004202                     
  2767                           ; BSR set to: 0
  2768                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 639:    dbuf[0] =
      +                           sign;
  2769   004202  C081  F100         	movff	efgtoa@sign,_dbuf
  2770   004206                     
  2771                           ; BSR set to: 0
  2772                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 640:    w--;
  2773   004206  0771               	decf	efgtoa@w& (0+255),f,b
  2774   004208  A0D8               	btfss	status,0,c
  2775   00420A  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  2776   00420C                     
  2777                           ; BSR set to: 0
  2778                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 641:    n = 1;
  2779   00420C  0E00               	movlw	0
  2780   00420E  6F87               	movwf	(efgtoa@n+1)& (0+255),b
  2781   004210  0E01               	movlw	1
  2782   004212  6F86               	movwf	efgtoa@n& (0+255),b
  2783   004214                     l4030:
  2784                           
  2785                           ; BSR set to: 0
  2786                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 649:   {;C:\Progr
      +                          am Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 650:             strcpy(&d
      +                          buf[n], "nan");
  2787   004214  0E00               	movlw	low _dbuf
  2788   004216  2586               	addwf	efgtoa@n& (0+255),w,b
  2789   004218  6E05               	movwf	strcpy@dest^0,c
  2790   00421A  0E01               	movlw	high _dbuf
  2791   00421C  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2792   00421E  6E06               	movwf	(strcpy@dest+1)^0,c
  2793   004220  0E0A               	movlw	low STR_6
  2794   004222  6E07               	movwf	strcpy@src^0,c
  2795   004224  ECB3  F032         	call	_strcpy	;wreg free
  2796   004228  EFD2  F020         	goto	l4014
  2797   00422C                     l4038:
  2798                           
  2799                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 657:     u.f = 1.
      +                          0;
  2800   00422C  0E00               	movlw	0
  2801   00422E  0100               	movlb	0	; () banked
  2802   004230  6F88               	movwf	efgtoa@u& (0+255),b
  2803   004232  0E00               	movlw	0
  2804   004234  6F89               	movwf	(efgtoa@u+1)& (0+255),b
  2805   004236  0E80               	movlw	128
  2806   004238  6F8A               	movwf	(efgtoa@u+2)& (0+255),b
  2807   00423A  0E3F               	movlw	63
  2808   00423C  6F8B               	movwf	(efgtoa@u+3)& (0+255),b
  2809                           
  2810                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 658:     e = 0;
  2811   00423E  0E00               	movlw	0
  2812   004240  6F70               	movwf	(efgtoa@e+1)& (0+255),b
  2813   004242  0E00               	movlw	0
  2814   004244  6F6F               	movwf	efgtoa@e& (0+255),b
  2815   004246                     
  2816                           ; BSR set to: 0
  2817                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 659:  if (!(g.f =
      +                          = 0.0)) {
  2818   004246  C082  F005         	movff	efgtoa@g,___fleq@ff1
  2819   00424A  C083  F006         	movff	efgtoa@g+1,___fleq@ff1+1
  2820   00424E  C084  F007         	movff	efgtoa@g+2,___fleq@ff1+2
  2821   004252  C085  F008         	movff	efgtoa@g+3,___fleq@ff1+3
  2822   004256  0E00               	movlw	0
  2823   004258  6E09               	movwf	___fleq@ff2^0,c
  2824   00425A  0E00               	movlw	0
  2825   00425C  6E0A               	movwf	(___fleq@ff2+1)^0,c
  2826   00425E  0E00               	movlw	0
  2827   004260  6E0B               	movwf	(___fleq@ff2+2)^0,c
  2828   004262  0E00               	movlw	0
  2829   004264  6E0C               	movwf	(___fleq@ff2+3)^0,c
  2830   004266  EC20  F031         	call	___fleq	;wreg free
  2831   00426A  B0D8               	btfsc	status,0,c
  2832   00426C  EF3A  F021         	goto	u4921
  2833   004270  EF3C  F021         	goto	u4920
  2834   004274                     u4921:
  2835   004274  EF1B  F022         	goto	l856
  2836   004278                     u4920:
  2837   004278  EF49  F021         	goto	l4046
  2838   00427C                     l858:
  2839                           
  2840                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 661:    u = ou;
  2841   00427C  C073  F088         	movff	efgtoa@ou,efgtoa@u
  2842   004280  C074  F089         	movff	efgtoa@ou+1,efgtoa@u+1
  2843   004284  C075  F08A         	movff	efgtoa@ou+2,efgtoa@u+2
  2844   004288  C076  F08B         	movff	efgtoa@ou+3,efgtoa@u+3
  2845   00428C                     
  2846                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 662:    ++e;
  2847   00428C  0100               	movlb	0	; () banked
  2848   00428E  4B6F               	infsnz	efgtoa@e& (0+255),f,b
  2849   004290  2B70               	incf	(efgtoa@e+1)& (0+255),f,b
  2850   004292                     l4046:
  2851                           
  2852                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 660:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  2853   004292  C088  F013         	movff	efgtoa@u,___flmul@b
  2854   004296  C089  F014         	movff	efgtoa@u+1,___flmul@b+1
  2855   00429A  C08A  F015         	movff	efgtoa@u+2,___flmul@b+2
  2856   00429E  C08B  F016         	movff	efgtoa@u+3,___flmul@b+3
  2857   0042A2  0E00               	movlw	0
  2858   0042A4  6E17               	movwf	___flmul@a^0,c
  2859   0042A6  0E00               	movlw	0
  2860   0042A8  6E18               	movwf	(___flmul@a+1)^0,c
  2861   0042AA  0E20               	movlw	32
  2862   0042AC  6E19               	movwf	(___flmul@a+2)^0,c
  2863   0042AE  0E41               	movlw	65
  2864   0042B0  6E1A               	movwf	(___flmul@a+3)^0,c
  2865   0042B2  ECA7  F027         	call	___flmul	;wreg free
  2866   0042B6  C013  F073         	movff	?___flmul,efgtoa@ou
  2867   0042BA  C014  F074         	movff	?___flmul+1,efgtoa@ou+1
  2868   0042BE  C015  F075         	movff	?___flmul+2,efgtoa@ou+2
  2869   0042C2  C016  F076         	movff	?___flmul+3,efgtoa@ou+3
  2870   0042C6  0100               	movlb	0	; () banked
  2871   0042C8  5173               	movf	efgtoa@ou& (0+255),w,b
  2872   0042CA  5D82               	subwf	efgtoa@g& (0+255),w,b
  2873   0042CC  6E05               	movwf	labs@a^0,c
  2874   0042CE  5174               	movf	(efgtoa@ou+1)& (0+255),w,b
  2875   0042D0  5983               	subwfb	(efgtoa@g+1)& (0+255),w,b
  2876   0042D2  6E06               	movwf	(labs@a+1)^0,c
  2877   0042D4  5175               	movf	(efgtoa@ou+2)& (0+255),w,b
  2878   0042D6  5984               	subwfb	(efgtoa@g+2)& (0+255),w,b
  2879   0042D8  6E07               	movwf	(labs@a+2)^0,c
  2880   0042DA  5176               	movf	(efgtoa@ou+3)& (0+255),w,b
  2881   0042DC  5985               	subwfb	(efgtoa@g+3)& (0+255),w,b
  2882   0042DE  6E08               	movwf	(labs@a+3)^0,c
  2883   0042E0  EC3F  F032         	call	_labs	;wreg free
  2884   0042E4  BE08               	btfsc	(?_labs+3)^0,7,c
  2885   0042E6  EF80  F021         	goto	u4931
  2886   0042EA  5008               	movf	(?_labs+3)^0,w,c
  2887   0042EC  1007               	iorwf	(?_labs+2)^0,w,c
  2888   0042EE  1006               	iorwf	(?_labs+1)^0,w,c
  2889   0042F0  E109               	bnz	u4930
  2890   0042F2  0E02               	movlw	2
  2891   0042F4  5C05               	subwf	?_labs^0,w,c
  2892   0042F6  A0D8               	btfss	status,0,c
  2893   0042F8  EF80  F021         	goto	u4931
  2894   0042FC  EF82  F021         	goto	u4930
  2895   004300                     u4931:
  2896   004300  EF3E  F021         	goto	l858
  2897   004304                     u4930:
  2898   004304  C073  F02C         	movff	efgtoa@ou,___flge@ff1
  2899   004308  C074  F02D         	movff	efgtoa@ou+1,___flge@ff1+1
  2900   00430C  C075  F02E         	movff	efgtoa@ou+2,___flge@ff1+2
  2901   004310  C076  F02F         	movff	efgtoa@ou+3,___flge@ff1+3
  2902   004314  C082  F030         	movff	efgtoa@g,___flge@ff2
  2903   004318  C083  F031         	movff	efgtoa@g+1,___flge@ff2+1
  2904   00431C  C084  F032         	movff	efgtoa@g+2,___flge@ff2+2
  2905   004320  C085  F033         	movff	efgtoa@g+3,___flge@ff2+3
  2906   004324  EC04  F02F         	call	___flge	;wreg free
  2907   004328  A0D8               	btfss	status,0,c
  2908   00432A  EF99  F021         	goto	u4941
  2909   00432E  EF9B  F021         	goto	u4940
  2910   004332                     u4941:
  2911   004332  EF3E  F021         	goto	l858
  2912   004336                     u4940:
  2913   004336                     
  2914                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 664:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  2915   004336  0100               	movlb	0	; () banked
  2916   004338  5188               	movf	efgtoa@u& (0+255),w,b
  2917   00433A  5D82               	subwf	efgtoa@g& (0+255),w,b
  2918   00433C  6E05               	movwf	labs@a^0,c
  2919   00433E  5189               	movf	(efgtoa@u+1)& (0+255),w,b
  2920   004340  5983               	subwfb	(efgtoa@g+1)& (0+255),w,b
  2921   004342  6E06               	movwf	(labs@a+1)^0,c
  2922   004344  518A               	movf	(efgtoa@u+2)& (0+255),w,b
  2923   004346  5984               	subwfb	(efgtoa@g+2)& (0+255),w,b
  2924   004348  6E07               	movwf	(labs@a+2)^0,c
  2925   00434A  518B               	movf	(efgtoa@u+3)& (0+255),w,b
  2926   00434C  5985               	subwfb	(efgtoa@g+3)& (0+255),w,b
  2927   00434E  6E08               	movwf	(labs@a+3)^0,c
  2928   004350  EC3F  F032         	call	_labs	;wreg free
  2929   004354  BE08               	btfsc	(?_labs+3)^0,7,c
  2930   004356  EFBA  F021         	goto	u4950
  2931   00435A  5008               	movf	(?_labs+3)^0,w,c
  2932   00435C  1007               	iorwf	(?_labs+2)^0,w,c
  2933   00435E  1006               	iorwf	(?_labs+1)^0,w,c
  2934   004360  E107               	bnz	u4951
  2935   004362  0E02               	movlw	2
  2936   004364  5C05               	subwf	?_labs^0,w,c
  2937   004366  B0D8               	btfsc	status,0,c
  2938   004368  EFB8  F021         	goto	u4951
  2939   00436C  EFBA  F021         	goto	u4950
  2940   004370                     u4951:
  2941   004370  EF02  F022         	goto	l4064
  2942   004374                     u4950:
  2943   004374                     l4054:
  2944                           
  2945                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 665:    g = u;
  2946   004374  C088  F082         	movff	efgtoa@u,efgtoa@g
  2947   004378  C089  F083         	movff	efgtoa@u+1,efgtoa@g+1
  2948   00437C  C08A  F084         	movff	efgtoa@u+2,efgtoa@g+2
  2949   004380  C08B  F085         	movff	efgtoa@u+3,efgtoa@g+3
  2950                           
  2951                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 666:   }
  2952   004384  EF1B  F022         	goto	l856
  2953   004388                     l4056:
  2954                           
  2955                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 669:     u.f = u.
      +                          f/10.0;
  2956   004388  C088  F005         	movff	efgtoa@u,___fldiv@b
  2957   00438C  C089  F006         	movff	efgtoa@u+1,___fldiv@b+1
  2958   004390  C08A  F007         	movff	efgtoa@u+2,___fldiv@b+2
  2959   004394  C08B  F008         	movff	efgtoa@u+3,___fldiv@b+3
  2960   004398  0E00               	movlw	0
  2961   00439A  6E09               	movwf	___fldiv@a^0,c
  2962   00439C  0E00               	movlw	0
  2963   00439E  6E0A               	movwf	(___fldiv@a+1)^0,c
  2964   0043A0  0E20               	movlw	32
  2965   0043A2  6E0B               	movwf	(___fldiv@a+2)^0,c
  2966   0043A4  0E41               	movlw	65
  2967   0043A6  6E0C               	movwf	(___fldiv@a+3)^0,c
  2968   0043A8  ECCC  F029         	call	___fldiv	;wreg free
  2969   0043AC  C005  F088         	movff	?___fldiv,efgtoa@u
  2970   0043B0  C006  F089         	movff	?___fldiv+1,efgtoa@u+1
  2971   0043B4  C007  F08A         	movff	?___fldiv+2,efgtoa@u+2
  2972   0043B8  C008  F08B         	movff	?___fldiv+3,efgtoa@u+3
  2973   0043BC                     
  2974                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 670:     --e;
  2975   0043BC  0100               	movlb	0	; () banked
  2976   0043BE  076F               	decf	efgtoa@e& (0+255),f,b
  2977   0043C0  A0D8               	btfss	status,0,c
  2978   0043C2  0770               	decf	(efgtoa@e+1)& (0+255),f,b
  2979   0043C4                     
  2980                           ; BSR set to: 0
  2981                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 671:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  2982   0043C4  5188               	movf	efgtoa@u& (0+255),w,b
  2983   0043C6  5D82               	subwf	efgtoa@g& (0+255),w,b
  2984   0043C8  6E05               	movwf	labs@a^0,c
  2985   0043CA  5189               	movf	(efgtoa@u+1)& (0+255),w,b
  2986   0043CC  5983               	subwfb	(efgtoa@g+1)& (0+255),w,b
  2987   0043CE  6E06               	movwf	(labs@a+1)^0,c
  2988   0043D0  518A               	movf	(efgtoa@u+2)& (0+255),w,b
  2989   0043D2  5984               	subwfb	(efgtoa@g+2)& (0+255),w,b
  2990   0043D4  6E07               	movwf	(labs@a+2)^0,c
  2991   0043D6  518B               	movf	(efgtoa@u+3)& (0+255),w,b
  2992   0043D8  5985               	subwfb	(efgtoa@g+3)& (0+255),w,b
  2993   0043DA  6E08               	movwf	(labs@a+3)^0,c
  2994   0043DC  EC3F  F032         	call	_labs	;wreg free
  2995   0043E0  BE08               	btfsc	(?_labs+3)^0,7,c
  2996   0043E2  EF00  F022         	goto	u4960
  2997   0043E6  5008               	movf	(?_labs+3)^0,w,c
  2998   0043E8  1007               	iorwf	(?_labs+2)^0,w,c
  2999   0043EA  1006               	iorwf	(?_labs+1)^0,w,c
  3000   0043EC  E107               	bnz	u4961
  3001   0043EE  0E02               	movlw	2
  3002   0043F0  5C05               	subwf	?_labs^0,w,c
  3003   0043F2  B0D8               	btfsc	status,0,c
  3004   0043F4  EFFE  F021         	goto	u4961
  3005   0043F8  EF00  F022         	goto	u4960
  3006   0043FC                     u4961:
  3007   0043FC  EF02  F022         	goto	l4064
  3008   004400                     u4960:
  3009   004400  EFBA  F021         	goto	l4054
  3010   004404                     l4064:
  3011                           
  3012                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 668:    while (g.
      +                          f < u.f) {
  3013   004404  C082  F02C         	movff	efgtoa@g,___flge@ff1
  3014   004408  C083  F02D         	movff	efgtoa@g+1,___flge@ff1+1
  3015   00440C  C084  F02E         	movff	efgtoa@g+2,___flge@ff1+2
  3016   004410  C085  F02F         	movff	efgtoa@g+3,___flge@ff1+3
  3017   004414  C088  F030         	movff	efgtoa@u,___flge@ff2
  3018   004418  C089  F031         	movff	efgtoa@u+1,___flge@ff2+1
  3019   00441C  C08A  F032         	movff	efgtoa@u+2,___flge@ff2+2
  3020   004420  C08B  F033         	movff	efgtoa@u+3,___flge@ff2+3
  3021   004424  EC04  F02F         	call	___flge	;wreg free
  3022   004428  A0D8               	btfss	status,0,c
  3023   00442A  EF19  F022         	goto	u4971
  3024   00442E  EF1B  F022         	goto	u4970
  3025   004432                     u4971:
  3026   004432  EFC4  F021         	goto	l4056
  3027   004436                     u4970:
  3028   004436                     l856:
  3029                           
  3030                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 683:  mode = c;
  3031   004436  C03D  F069         	movff	efgtoa@c,efgtoa@mode
  3032                           
  3033                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 685:     nmode = 
      +                          mode;
  3034   00443A  C069  F06A         	movff	efgtoa@mode,efgtoa@nmode
  3035   00443E                     
  3036                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 695:  {;C:\Progra
      +                          m Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 696:         p = (prec < 0)
      +                           ? 6 : prec;
  3037   00443E  0100               	movlb	0	; () banked
  3038   004440  BFB3               	btfsc	(_prec+1)& (0+255),7,b
  3039   004442  EF25  F022         	goto	u4981
  3040   004446  EF27  F022         	goto	u4980
  3041   00444A                     u4981:
  3042   00444A  EF2D  F022         	goto	l4070
  3043   00444E                     u4980:
  3044   00444E                     
  3045                           ; BSR set to: 0
  3046   00444E  C0B2  F062         	movff	_prec,efgtoa@p
  3047   004452  C0B3  F063         	movff	_prec+1,efgtoa@p+1
  3048   004456  EF31  F022         	goto	l4072
  3049   00445A                     l4070:
  3050                           
  3051                           ; BSR set to: 0
  3052   00445A  0E00               	movlw	0
  3053   00445C  6F63               	movwf	(efgtoa@p+1)& (0+255),b
  3054   00445E  0E06               	movlw	6
  3055   004460  6F62               	movwf	efgtoa@p& (0+255),b
  3056   004462                     l4072:
  3057                           
  3058                           ; BSR set to: 0
  3059                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 697:     };C:\Pro
      +                          gram Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 711:     m = p;
  3060   004462  C062  F06D         	movff	efgtoa@p,efgtoa@m
  3061   004466  C063  F06E         	movff	efgtoa@p+1,efgtoa@m+1
  3062   00446A                     
  3063                           ; BSR set to: 0
  3064                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 715:  {;C:\Progra
      +                          m Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 716:         ++m;
  3065   00446A  4B6D               	infsnz	efgtoa@m& (0+255),f,b
  3066   00446C  2B6E               	incf	(efgtoa@m+1)& (0+255),f,b
  3067   00446E                     
  3068                           ; BSR set to: 0
  3069                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 717:     };C:\Pro
      +                          gram Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 721:     if (nmode == 'f
      +                          ') {
  3070   00446E  0E66               	movlw	102
  3071   004470  196A               	xorwf	efgtoa@nmode& (0+255),w,b
  3072   004472  A4D8               	btfss	status,2,c
  3073   004474  EF3E  F022         	goto	u4991
  3074   004478  EF40  F022         	goto	u4990
  3075   00447C                     u4991:
  3076   00447C  EF60  F022         	goto	l4086
  3077   004480                     u4990:
  3078   004480                     
  3079                           ; BSR set to: 0
  3080                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 722:         if (
      +                          e < 0) {
  3081   004480  BF70               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3082   004482  EF47  F022         	goto	u5000
  3083   004486  EF45  F022         	goto	u5001
  3084   00448A                     u5001:
  3085   00448A  EF53  F022         	goto	l4082
  3086   00448E                     u5000:
  3087   00448E                     
  3088                           ; BSR set to: 0
  3089                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 723:             
      +                          u.f = 1.0;
  3090   00448E  0E00               	movlw	0
  3091   004490  6F88               	movwf	efgtoa@u& (0+255),b
  3092   004492  0E00               	movlw	0
  3093   004494  6F89               	movwf	(efgtoa@u+1)& (0+255),b
  3094   004496  0E80               	movlw	128
  3095   004498  6F8A               	movwf	(efgtoa@u+2)& (0+255),b
  3096   00449A  0E3F               	movlw	63
  3097   00449C  6F8B               	movwf	(efgtoa@u+3)& (0+255),b
  3098                           
  3099                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 724:             
      +                          e = 0;
  3100   00449E  0E00               	movlw	0
  3101   0044A0  6F70               	movwf	(efgtoa@e+1)& (0+255),b
  3102   0044A2  0E00               	movlw	0
  3103   0044A4  6F6F               	movwf	efgtoa@e& (0+255),b
  3104   0044A6                     l4082:
  3105                           
  3106                           ; BSR set to: 0
  3107                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 726:         if (
      +                          !(mode == 'g')) {
  3108   0044A6  0E67               	movlw	103
  3109   0044A8  1969               	xorwf	efgtoa@mode& (0+255),w,b
  3110   0044AA  B4D8               	btfsc	status,2,c
  3111   0044AC  EF5A  F022         	goto	u5011
  3112   0044B0  EF5C  F022         	goto	u5010
  3113   0044B4                     u5011:
  3114   0044B4  EF60  F022         	goto	l4086
  3115   0044B8                     u5010:
  3116   0044B8                     
  3117                           ; BSR set to: 0
  3118                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 727:             
      +                          m += e;
  3119   0044B8  516F               	movf	efgtoa@e& (0+255),w,b
  3120   0044BA  276D               	addwf	efgtoa@m& (0+255),f,b
  3121   0044BC  5170               	movf	(efgtoa@e+1)& (0+255),w,b
  3122   0044BE  236E               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3123   0044C0                     l4086:
  3124                           
  3125                           ; BSR set to: 0
  3126                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 733:     i = 0;
  3127   0044C0  0E00               	movlw	0
  3128   0044C2  6F78               	movwf	(efgtoa@i+1)& (0+255),b
  3129   0044C4  0E00               	movlw	0
  3130   0044C6  6F77               	movwf	efgtoa@i& (0+255),b
  3131   0044C8                     
  3132                           ; BSR set to: 0
  3133                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 734:     h = g.f;
  3134   0044C8  C082  F079         	movff	efgtoa@g,efgtoa@h
  3135   0044CC  C083  F07A         	movff	efgtoa@g+1,efgtoa@h+1
  3136   0044D0  C084  F07B         	movff	efgtoa@g+2,efgtoa@h+2
  3137   0044D4  C085  F07C         	movff	efgtoa@g+3,efgtoa@h+3
  3138   0044D8                     
  3139                           ; BSR set to: 0
  3140                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 735:     ou = u;
  3141   0044D8  C088  F073         	movff	efgtoa@u,efgtoa@ou
  3142   0044DC  C089  F074         	movff	efgtoa@u+1,efgtoa@ou+1
  3143   0044E0  C08A  F075         	movff	efgtoa@u+2,efgtoa@ou+2
  3144   0044E4  C08B  F076         	movff	efgtoa@u+3,efgtoa@ou+3
  3145                           
  3146                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
  3147   0044E8  EFF1  F022         	goto	l4100
  3148   0044EC                     l4092:
  3149                           
  3150                           ; BSR set to: 0
  3151                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 737:         l = 
      +                          floorf(h/u.f);
  3152   0044EC  C079  F005         	movff	efgtoa@h,___fldiv@b
  3153   0044F0  C07A  F006         	movff	efgtoa@h+1,___fldiv@b+1
  3154   0044F4  C07B  F007         	movff	efgtoa@h+2,___fldiv@b+2
  3155   0044F8  C07C  F008         	movff	efgtoa@h+3,___fldiv@b+3
  3156   0044FC  C088  F009         	movff	efgtoa@u,___fldiv@a
  3157   004500  C089  F00A         	movff	efgtoa@u+1,___fldiv@a+1
  3158   004504  C08A  F00B         	movff	efgtoa@u+2,___fldiv@a+2
  3159   004508  C08B  F00C         	movff	efgtoa@u+3,___fldiv@a+3
  3160   00450C  ECCC  F029         	call	___fldiv	;wreg free
  3161   004510  C005  F01E         	movff	?___fldiv,floorf@x
  3162   004514  C006  F01F         	movff	?___fldiv+1,floorf@x+1
  3163   004518  C007  F020         	movff	?___fldiv+2,floorf@x+2
  3164   00451C  C008  F021         	movff	?___fldiv+3,floorf@x+3
  3165   004520  EC9E  F02C         	call	_floorf	;wreg free
  3166   004524  C01E  F07D         	movff	?_floorf,efgtoa@l
  3167   004528  C01F  F07E         	movff	?_floorf+1,efgtoa@l+1
  3168   00452C  C020  F07F         	movff	?_floorf+2,efgtoa@l+2
  3169   004530  C021  F080         	movff	?_floorf+3,efgtoa@l+3
  3170                           
  3171                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 738:         d = 
      +                          (int)l;
  3172   004534  C07D  F005         	movff	efgtoa@l,___fltol@f1
  3173   004538  C07E  F006         	movff	efgtoa@l+1,___fltol@f1+1
  3174   00453C  C07F  F007         	movff	efgtoa@l+2,___fltol@f1+2
  3175   004540  C080  F008         	movff	efgtoa@l+3,___fltol@f1+3
  3176   004544  EC81  F02E         	call	___fltol	;wreg free
  3177   004548  C005  F06B         	movff	?___fltol,efgtoa@d
  3178   00454C  C006  F06C         	movff	?___fltol+1,efgtoa@d+1
  3179   004550                     
  3180                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 739:         h -=
      +                           l*u.f;
  3181   004550  C079  F02C         	movff	efgtoa@h,___flsub@b
  3182   004554  C07A  F02D         	movff	efgtoa@h+1,___flsub@b+1
  3183   004558  C07B  F02E         	movff	efgtoa@h+2,___flsub@b+2
  3184   00455C  C07C  F02F         	movff	efgtoa@h+3,___flsub@b+3
  3185   004560  C07D  F017         	movff	efgtoa@l,___flmul@a
  3186   004564  C07E  F018         	movff	efgtoa@l+1,___flmul@a+1
  3187   004568  C07F  F019         	movff	efgtoa@l+2,___flmul@a+2
  3188   00456C  C080  F01A         	movff	efgtoa@l+3,___flmul@a+3
  3189   004570  C088  F013         	movff	efgtoa@u,___flmul@b
  3190   004574  C089  F014         	movff	efgtoa@u+1,___flmul@b+1
  3191   004578  C08A  F015         	movff	efgtoa@u+2,___flmul@b+2
  3192   00457C  C08B  F016         	movff	efgtoa@u+3,___flmul@b+3
  3193   004580  ECA7  F027         	call	___flmul	;wreg free
  3194   004584  C013  F030         	movff	?___flmul,___flsub@a
  3195   004588  C014  F031         	movff	?___flmul+1,___flsub@a+1
  3196   00458C  C015  F032         	movff	?___flmul+2,___flsub@a+2
  3197   004590  C016  F033         	movff	?___flmul+3,___flsub@a+3
  3198   004594  ECD6  F032         	call	___flsub	;wreg free
  3199   004598  C02C  F079         	movff	?___flsub,efgtoa@h
  3200   00459C  C02D  F07A         	movff	?___flsub+1,efgtoa@h+1
  3201   0045A0  C02E  F07B         	movff	?___flsub+2,efgtoa@h+2
  3202   0045A4  C02F  F07C         	movff	?___flsub+3,efgtoa@h+3
  3203   0045A8                     
  3204                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 740:         u.f 
      +                          = u.f/10.0;
  3205   0045A8  C088  F005         	movff	efgtoa@u,___fldiv@b
  3206   0045AC  C089  F006         	movff	efgtoa@u+1,___fldiv@b+1
  3207   0045B0  C08A  F007         	movff	efgtoa@u+2,___fldiv@b+2
  3208   0045B4  C08B  F008         	movff	efgtoa@u+3,___fldiv@b+3
  3209   0045B8  0E00               	movlw	0
  3210   0045BA  6E09               	movwf	___fldiv@a^0,c
  3211   0045BC  0E00               	movlw	0
  3212   0045BE  6E0A               	movwf	(___fldiv@a+1)^0,c
  3213   0045C0  0E20               	movlw	32
  3214   0045C2  6E0B               	movwf	(___fldiv@a+2)^0,c
  3215   0045C4  0E41               	movlw	65
  3216   0045C6  6E0C               	movwf	(___fldiv@a+3)^0,c
  3217   0045C8  ECCC  F029         	call	___fldiv	;wreg free
  3218   0045CC  C005  F088         	movff	?___fldiv,efgtoa@u
  3219   0045D0  C006  F089         	movff	?___fldiv+1,efgtoa@u+1
  3220   0045D4  C007  F08A         	movff	?___fldiv+2,efgtoa@u+2
  3221   0045D8  C008  F08B         	movff	?___fldiv+3,efgtoa@u+3
  3222   0045DC                     
  3223                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 741:         ++i;
  3224   0045DC  0100               	movlb	0	; () banked
  3225   0045DE  4B77               	infsnz	efgtoa@i& (0+255),f,b
  3226   0045E0  2B78               	incf	(efgtoa@i+1)& (0+255),f,b
  3227   0045E2                     l4100:
  3228                           
  3229                           ; BSR set to: 0
  3230                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
  3231   0045E2  516D               	movf	efgtoa@m& (0+255),w,b
  3232   0045E4  5D77               	subwf	efgtoa@i& (0+255),w,b
  3233   0045E6  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  3234   0045E8  0A80               	xorlw	128
  3235   0045EA  6E3E               	movwf	??_efgtoa^0,c
  3236   0045EC  516E               	movf	(efgtoa@m+1)& (0+255),w,b
  3237   0045EE  0A80               	xorlw	128
  3238   0045F0  583E               	subwfb	??_efgtoa^0,w,c
  3239   0045F2  A0D8               	btfss	status,0,c
  3240   0045F4  EFFE  F022         	goto	u5021
  3241   0045F8  EF00  F023         	goto	u5020
  3242   0045FC                     u5021:
  3243   0045FC  EF76  F022         	goto	l4092
  3244   004600                     u5020:
  3245   004600                     
  3246                           ; BSR set to: 0
  3247                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 745:     l = u.f*
      +                          5.0;
  3248   004600  C088  F013         	movff	efgtoa@u,___flmul@b
  3249   004604  C089  F014         	movff	efgtoa@u+1,___flmul@b+1
  3250   004608  C08A  F015         	movff	efgtoa@u+2,___flmul@b+2
  3251   00460C  C08B  F016         	movff	efgtoa@u+3,___flmul@b+3
  3252   004610  0E00               	movlw	0
  3253   004612  6E17               	movwf	___flmul@a^0,c
  3254   004614  0E00               	movlw	0
  3255   004616  6E18               	movwf	(___flmul@a+1)^0,c
  3256   004618  0EA0               	movlw	160
  3257   00461A  6E19               	movwf	(___flmul@a+2)^0,c
  3258   00461C  0E40               	movlw	64
  3259   00461E  6E1A               	movwf	(___flmul@a+3)^0,c
  3260   004620  ECA7  F027         	call	___flmul	;wreg free
  3261   004624  C013  F07D         	movff	?___flmul,efgtoa@l
  3262   004628  C014  F07E         	movff	?___flmul+1,efgtoa@l+1
  3263   00462C  C015  F07F         	movff	?___flmul+2,efgtoa@l+2
  3264   004630  C016  F080         	movff	?___flmul+3,efgtoa@l+3
  3265   004634                     
  3266                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 746:     if (h < 
      +                          l) {
  3267   004634  C079  F02C         	movff	efgtoa@h,___flge@ff1
  3268   004638  C07A  F02D         	movff	efgtoa@h+1,___flge@ff1+1
  3269   00463C  C07B  F02E         	movff	efgtoa@h+2,___flge@ff1+2
  3270   004640  C07C  F02F         	movff	efgtoa@h+3,___flge@ff1+3
  3271   004644  C07D  F030         	movff	efgtoa@l,___flge@ff2
  3272   004648  C07E  F031         	movff	efgtoa@l+1,___flge@ff2+1
  3273   00464C  C07F  F032         	movff	efgtoa@l+2,___flge@ff2+2
  3274   004650  C080  F033         	movff	efgtoa@l+3,___flge@ff2+3
  3275   004654  EC04  F02F         	call	___flge	;wreg free
  3276   004658  B0D8               	btfsc	status,0,c
  3277   00465A  EF31  F023         	goto	u5031
  3278   00465E  EF33  F023         	goto	u5030
  3279   004662                     u5031:
  3280   004662  EF3E  F023         	goto	l4108
  3281   004666                     u5030:
  3282   004666                     
  3283                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 747:         l = 
      +                          0.0;
  3284   004666  0E00               	movlw	0
  3285   004668  0100               	movlb	0	; () banked
  3286   00466A  6F7D               	movwf	efgtoa@l& (0+255),b
  3287   00466C  0E00               	movlw	0
  3288   00466E  6F7E               	movwf	(efgtoa@l+1)& (0+255),b
  3289   004670  0E00               	movlw	0
  3290   004672  6F7F               	movwf	(efgtoa@l+2)& (0+255),b
  3291   004674  0E00               	movlw	0
  3292   004676  6F80               	movwf	(efgtoa@l+3)& (0+255),b
  3293                           
  3294                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 748:     } else {
  3295   004678  EF67  F023         	goto	l4114
  3296   00467C                     l4108:
  3297                           
  3298                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 750:         if (
      +                          (h == l) && !(d % 2)) {
  3299   00467C  C079  F005         	movff	efgtoa@h,___fleq@ff1
  3300   004680  C07A  F006         	movff	efgtoa@h+1,___fleq@ff1+1
  3301   004684  C07B  F007         	movff	efgtoa@h+2,___fleq@ff1+2
  3302   004688  C07C  F008         	movff	efgtoa@h+3,___fleq@ff1+3
  3303   00468C  C07D  F009         	movff	efgtoa@l,___fleq@ff2
  3304   004690  C07E  F00A         	movff	efgtoa@l+1,___fleq@ff2+1
  3305   004694  C07F  F00B         	movff	efgtoa@l+2,___fleq@ff2+2
  3306   004698  C080  F00C         	movff	efgtoa@l+3,___fleq@ff2+3
  3307   00469C  EC20  F031         	call	___fleq	;wreg free
  3308   0046A0  A0D8               	btfss	status,0,c
  3309   0046A2  EF55  F023         	goto	u5041
  3310   0046A6  EF57  F023         	goto	u5040
  3311   0046AA                     u5041:
  3312   0046AA  EF67  F023         	goto	l4114
  3313   0046AE                     u5040:
  3314   0046AE  0100               	movlb	0	; () banked
  3315   0046B0  B16B               	btfsc	efgtoa@d& (0+255),0,b
  3316   0046B2  EF5D  F023         	goto	u5051
  3317   0046B6  EF5F  F023         	goto	u5050
  3318   0046BA                     u5051:
  3319   0046BA  EF67  F023         	goto	l4114
  3320   0046BE                     u5050:
  3321   0046BE                     
  3322                           ; BSR set to: 0
  3323                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 751:             
      +                          l = 0.0;
  3324   0046BE  0E00               	movlw	0
  3325   0046C0  6F7D               	movwf	efgtoa@l& (0+255),b
  3326   0046C2  0E00               	movlw	0
  3327   0046C4  6F7E               	movwf	(efgtoa@l+1)& (0+255),b
  3328   0046C6  0E00               	movlw	0
  3329   0046C8  6F7F               	movwf	(efgtoa@l+2)& (0+255),b
  3330   0046CA  0E00               	movlw	0
  3331   0046CC  6F80               	movwf	(efgtoa@l+3)& (0+255),b
  3332   0046CE                     l4114:
  3333                           
  3334                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 756:     h = g.f 
      +                          + l;
  3335   0046CE  C082  F005         	movff	efgtoa@g,___fladd@b
  3336   0046D2  C083  F006         	movff	efgtoa@g+1,___fladd@b+1
  3337   0046D6  C084  F007         	movff	efgtoa@g+2,___fladd@b+2
  3338   0046DA  C085  F008         	movff	efgtoa@g+3,___fladd@b+3
  3339   0046DE  C07D  F009         	movff	efgtoa@l,___fladd@a
  3340   0046E2  C07E  F00A         	movff	efgtoa@l+1,___fladd@a+1
  3341   0046E6  C07F  F00B         	movff	efgtoa@l+2,___fladd@a+2
  3342   0046EA  C080  F00C         	movff	efgtoa@l+3,___fladd@a+3
  3343   0046EE  EC4C  F025         	call	___fladd	;wreg free
  3344   0046F2  C005  F079         	movff	?___fladd,efgtoa@h
  3345   0046F6  C006  F07A         	movff	?___fladd+1,efgtoa@h+1
  3346   0046FA  C007  F07B         	movff	?___fladd+2,efgtoa@h+2
  3347   0046FE  C008  F07C         	movff	?___fladd+3,efgtoa@h+3
  3348   004702                     
  3349                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 758:  if (h >= (o
      +                          u.f*10.0)) {
  3350   004702  C079  F02C         	movff	efgtoa@h,___flge@ff1
  3351   004706  C07A  F02D         	movff	efgtoa@h+1,___flge@ff1+1
  3352   00470A  C07B  F02E         	movff	efgtoa@h+2,___flge@ff1+2
  3353   00470E  C07C  F02F         	movff	efgtoa@h+3,___flge@ff1+3
  3354   004712  0E00               	movlw	0
  3355   004714  6E17               	movwf	___flmul@a^0,c
  3356   004716  0E00               	movlw	0
  3357   004718  6E18               	movwf	(___flmul@a+1)^0,c
  3358   00471A  0E20               	movlw	32
  3359   00471C  6E19               	movwf	(___flmul@a+2)^0,c
  3360   00471E  0E41               	movlw	65
  3361   004720  6E1A               	movwf	(___flmul@a+3)^0,c
  3362   004722  C073  F013         	movff	efgtoa@ou,___flmul@b
  3363   004726  C074  F014         	movff	efgtoa@ou+1,___flmul@b+1
  3364   00472A  C075  F015         	movff	efgtoa@ou+2,___flmul@b+2
  3365   00472E  C076  F016         	movff	efgtoa@ou+3,___flmul@b+3
  3366   004732  ECA7  F027         	call	___flmul	;wreg free
  3367   004736  C013  F030         	movff	?___flmul,___flge@ff2
  3368   00473A  C014  F031         	movff	?___flmul+1,___flge@ff2+1
  3369   00473E  C015  F032         	movff	?___flmul+2,___flge@ff2+2
  3370   004742  C016  F033         	movff	?___flmul+3,___flge@ff2+3
  3371   004746  EC04  F02F         	call	___flge	;wreg free
  3372   00474A  A0D8               	btfss	status,0,c
  3373   00474C  EFAA  F023         	goto	u5061
  3374   004750  EFAC  F023         	goto	u5060
  3375   004754                     u5061:
  3376   004754  EFD5  F023         	goto	l4126
  3377   004758                     u5060:
  3378   004758                     
  3379                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 759:   e++;
  3380   004758  0100               	movlb	0	; () banked
  3381   00475A  4B6F               	infsnz	efgtoa@e& (0+255),f,b
  3382   00475C  2B70               	incf	(efgtoa@e+1)& (0+255),f,b
  3383   00475E                     
  3384                           ; BSR set to: 0
  3385                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 760:   ou.f *= 10
      +                          .0;
  3386   00475E  C073  F013         	movff	efgtoa@ou,___flmul@b
  3387   004762  C074  F014         	movff	efgtoa@ou+1,___flmul@b+1
  3388   004766  C075  F015         	movff	efgtoa@ou+2,___flmul@b+2
  3389   00476A  C076  F016         	movff	efgtoa@ou+3,___flmul@b+3
  3390   00476E  0E00               	movlw	0
  3391   004770  6E17               	movwf	___flmul@a^0,c
  3392   004772  0E00               	movlw	0
  3393   004774  6E18               	movwf	(___flmul@a+1)^0,c
  3394   004776  0E20               	movlw	32
  3395   004778  6E19               	movwf	(___flmul@a+2)^0,c
  3396   00477A  0E41               	movlw	65
  3397   00477C  6E1A               	movwf	(___flmul@a+3)^0,c
  3398   00477E  ECA7  F027         	call	___flmul	;wreg free
  3399   004782  C013  F073         	movff	?___flmul,efgtoa@ou
  3400   004786  C014  F074         	movff	?___flmul+1,efgtoa@ou+1
  3401   00478A  C015  F075         	movff	?___flmul+2,efgtoa@ou+2
  3402   00478E  C016  F076         	movff	?___flmul+3,efgtoa@ou+3
  3403   004792                     
  3404                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 762:   if (nmode 
      +                          == 'f') {
  3405   004792  0E66               	movlw	102
  3406   004794  0100               	movlb	0	; () banked
  3407   004796  196A               	xorwf	efgtoa@nmode& (0+255),w,b
  3408   004798  A4D8               	btfss	status,2,c
  3409   00479A  EFD1  F023         	goto	u5071
  3410   00479E  EFD3  F023         	goto	u5070
  3411   0047A2                     u5071:
  3412   0047A2  EFD5  F023         	goto	l4126
  3413   0047A6                     u5070:
  3414   0047A6                     
  3415                           ; BSR set to: 0
  3416                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 764:    m++;
  3417   0047A6  4B6D               	infsnz	efgtoa@m& (0+255),f,b
  3418   0047A8  2B6E               	incf	(efgtoa@m+1)& (0+255),f,b
  3419   0047AA                     l4126:
  3420                           
  3421                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 770:     u = ou;
  3422   0047AA  C073  F088         	movff	efgtoa@ou,efgtoa@u
  3423   0047AE  C074  F089         	movff	efgtoa@ou+1,efgtoa@u+1
  3424   0047B2  C075  F08A         	movff	efgtoa@ou+2,efgtoa@u+2
  3425   0047B6  C076  F08B         	movff	efgtoa@ou+3,efgtoa@u+3
  3426   0047BA                     
  3427                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 774:  ne = e;
  3428   0047BA  C06F  F060         	movff	efgtoa@e,efgtoa@ne
  3429   0047BE  C070  F061         	movff	efgtoa@e+1,efgtoa@ne+1
  3430   0047C2                     
  3431                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 776:     pp = 0;
  3432   0047C2  0100               	movlb	0	; () banked
  3433   0047C4  6B68               	clrf	efgtoa@pp& (0+255),b
  3434   0047C6                     
  3435                           ; BSR set to: 0
  3436                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 777:     t = 0;
  3437   0047C6  0E00               	movlw	0
  3438   0047C8  6F65               	movwf	(efgtoa@t+1)& (0+255),b
  3439   0047CA  0E00               	movlw	0
  3440   0047CC  6F64               	movwf	efgtoa@t& (0+255),b
  3441   0047CE                     
  3442                           ; BSR set to: 0
  3443                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 778:     i = 0;
  3444   0047CE  0E00               	movlw	0
  3445   0047D0  6F78               	movwf	(efgtoa@i+1)& (0+255),b
  3446   0047D2  0E00               	movlw	0
  3447   0047D4  6F77               	movwf	efgtoa@i& (0+255),b
  3448                           
  3449                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3450   0047D6  EFD2  F024         	goto	l4176
  3451   0047DA                     l4136:
  3452                           
  3453                           ; BSR set to: 0
  3454                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 780:         l = 
      +                          floorf(h/u.f);
  3455   0047DA  C079  F005         	movff	efgtoa@h,___fldiv@b
  3456   0047DE  C07A  F006         	movff	efgtoa@h+1,___fldiv@b+1
  3457   0047E2  C07B  F007         	movff	efgtoa@h+2,___fldiv@b+2
  3458   0047E6  C07C  F008         	movff	efgtoa@h+3,___fldiv@b+3
  3459   0047EA  C088  F009         	movff	efgtoa@u,___fldiv@a
  3460   0047EE  C089  F00A         	movff	efgtoa@u+1,___fldiv@a+1
  3461   0047F2  C08A  F00B         	movff	efgtoa@u+2,___fldiv@a+2
  3462   0047F6  C08B  F00C         	movff	efgtoa@u+3,___fldiv@a+3
  3463   0047FA  ECCC  F029         	call	___fldiv	;wreg free
  3464   0047FE  C005  F01E         	movff	?___fldiv,floorf@x
  3465   004802  C006  F01F         	movff	?___fldiv+1,floorf@x+1
  3466   004806  C007  F020         	movff	?___fldiv+2,floorf@x+2
  3467   00480A  C008  F021         	movff	?___fldiv+3,floorf@x+3
  3468   00480E  EC9E  F02C         	call	_floorf	;wreg free
  3469   004812  C01E  F07D         	movff	?_floorf,efgtoa@l
  3470   004816  C01F  F07E         	movff	?_floorf+1,efgtoa@l+1
  3471   00481A  C020  F07F         	movff	?_floorf+2,efgtoa@l+2
  3472   00481E  C021  F080         	movff	?_floorf+3,efgtoa@l+3
  3473                           
  3474                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 781:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  3475   004822  C07D  F005         	movff	efgtoa@l,___fltol@f1
  3476   004826  C07E  F006         	movff	efgtoa@l+1,___fltol@f1+1
  3477   00482A  C07F  F007         	movff	efgtoa@l+2,___fltol@f1+2
  3478   00482E  C080  F008         	movff	efgtoa@l+3,___fltol@f1+3
  3479   004832  EC81  F02E         	call	___fltol	;wreg free
  3480   004836  BE06               	btfsc	(?___fltol+1)^0,7,c
  3481   004838  EF29  F024         	goto	u5080
  3482   00483C  5006               	movf	(?___fltol+1)^0,w,c
  3483   00483E  E107               	bnz	u5081
  3484   004840  0E0A               	movlw	10
  3485   004842  5C05               	subwf	?___fltol^0,w,c
  3486   004844  B0D8               	btfsc	status,0,c
  3487   004846  EF27  F024         	goto	u5081
  3488   00484A  EF29  F024         	goto	u5080
  3489   00484E                     u5081:
  3490   00484E  EF39  F024         	goto	l4140
  3491   004852                     u5080:
  3492   004852  C07D  F005         	movff	efgtoa@l,___fltol@f1
  3493   004856  C07E  F006         	movff	efgtoa@l+1,___fltol@f1+1
  3494   00485A  C07F  F007         	movff	efgtoa@l+2,___fltol@f1+2
  3495   00485E  C080  F008         	movff	efgtoa@l+3,___fltol@f1+3
  3496   004862  EC81  F02E         	call	___fltol	;wreg free
  3497   004866  C005  F06B         	movff	?___fltol,efgtoa@d
  3498   00486A  C006  F06C         	movff	?___fltol+1,efgtoa@d+1
  3499   00486E  EF3E  F024         	goto	l886
  3500   004872                     l4140:
  3501   004872  0E00               	movlw	0
  3502   004874  0100               	movlb	0	; () banked
  3503   004876  6F6C               	movwf	(efgtoa@d+1)& (0+255),b
  3504   004878  0E09               	movlw	9
  3505   00487A  6F6B               	movwf	efgtoa@d& (0+255),b
  3506   00487C                     l886:
  3507                           
  3508                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 792:   {;C:\Progr
      +                          am Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 793:             if (!pp &
      +                          & (ne < 0)) {
  3509   00487C  0100               	movlb	0	; () banked
  3510   00487E  5168               	movf	efgtoa@pp& (0+255),w,b
  3511   004880  A4D8               	btfss	status,2,c
  3512   004882  EF45  F024         	goto	u5091
  3513   004886  EF47  F024         	goto	u5090
  3514   00488A                     u5091:
  3515   00488A  EF6F  F024         	goto	l4160
  3516   00488E                     u5090:
  3517   00488E                     
  3518                           ; BSR set to: 0
  3519   00488E  BF61               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3520   004890  EF4E  F024         	goto	u5100
  3521   004894  EF4C  F024         	goto	u5101
  3522   004898                     u5101:
  3523   004898  EF6F  F024         	goto	l4160
  3524   00489C                     u5100:
  3525   00489C                     
  3526                           ; BSR set to: 0
  3527                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 794:             
      +                              dbuf[n++] = '.';
  3528   00489C  0E00               	movlw	low _dbuf
  3529   00489E  2586               	addwf	efgtoa@n& (0+255),w,b
  3530   0048A0  6ED9               	movwf	fsr2l,c
  3531   0048A2  0E01               	movlw	high _dbuf
  3532   0048A4  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3533   0048A6  6EDA               	movwf	fsr2h,c
  3534   0048A8  0E2E               	movlw	46
  3535   0048AA  6EDF               	movwf	indf2,c
  3536   0048AC                     
  3537                           ; BSR set to: 0
  3538   0048AC  4B86               	infsnz	efgtoa@n& (0+255),f,b
  3539   0048AE  2B87               	incf	(efgtoa@n+1)& (0+255),f,b
  3540   0048B0                     
  3541                           ; BSR set to: 0
  3542                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 795:             
      +                              --w;
  3543   0048B0  0771               	decf	efgtoa@w& (0+255),f,b
  3544   0048B2  A0D8               	btfss	status,0,c
  3545   0048B4  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  3546   0048B6                     
  3547                           ; BSR set to: 0
  3548                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 796:             
      +                              pp = 1;
  3549   0048B6  0E01               	movlw	1
  3550   0048B8  6F68               	movwf	efgtoa@pp& (0+255),b
  3551   0048BA  EF6F  F024         	goto	l4160
  3552   0048BE                     l4152:
  3553                           
  3554                           ; BSR set to: 0
  3555                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 799:             
      +                              dbuf[n++] = '0';
  3556   0048BE  0E00               	movlw	low _dbuf
  3557   0048C0  2586               	addwf	efgtoa@n& (0+255),w,b
  3558   0048C2  6ED9               	movwf	fsr2l,c
  3559   0048C4  0E01               	movlw	high _dbuf
  3560   0048C6  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3561   0048C8  6EDA               	movwf	fsr2h,c
  3562   0048CA  0E30               	movlw	48
  3563   0048CC  6EDF               	movwf	indf2,c
  3564   0048CE                     
  3565                           ; BSR set to: 0
  3566   0048CE  4B86               	infsnz	efgtoa@n& (0+255),f,b
  3567   0048D0  2B87               	incf	(efgtoa@n+1)& (0+255),f,b
  3568   0048D2                     
  3569                           ; BSR set to: 0
  3570                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 800:             
      +                              --w;
  3571   0048D2  0771               	decf	efgtoa@w& (0+255),f,b
  3572   0048D4  A0D8               	btfss	status,0,c
  3573   0048D6  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  3574   0048D8                     
  3575                           ; BSR set to: 0
  3576                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 801:             
      +                              --t;
  3577   0048D8  0764               	decf	efgtoa@t& (0+255),f,b
  3578   0048DA  A0D8               	btfss	status,0,c
  3579   0048DC  0765               	decf	(efgtoa@t+1)& (0+255),f,b
  3580   0048DE                     l4160:
  3581                           
  3582                           ; BSR set to: 0
  3583                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 798:             
      +                          while (t) {
  3584   0048DE  5164               	movf	efgtoa@t& (0+255),w,b
  3585   0048E0  1165               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3586   0048E2  A4D8               	btfss	status,2,c
  3587   0048E4  EF76  F024         	goto	u5111
  3588   0048E8  EF78  F024         	goto	u5110
  3589   0048EC                     u5111:
  3590   0048EC  EF5F  F024         	goto	l4152
  3591   0048F0                     u5110:
  3592   0048F0                     
  3593                           ; BSR set to: 0
  3594                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 803:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  3595   0048F0  0E00               	movlw	low _dbuf
  3596   0048F2  2586               	addwf	efgtoa@n& (0+255),w,b
  3597   0048F4  6ED9               	movwf	fsr2l,c
  3598   0048F6  0E01               	movlw	high _dbuf
  3599   0048F8  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3600   0048FA  6EDA               	movwf	fsr2h,c
  3601   0048FC  516B               	movf	efgtoa@d& (0+255),w,b
  3602   0048FE  0F30               	addlw	48
  3603   004900  6EDF               	movwf	indf2,c
  3604   004902                     
  3605                           ; BSR set to: 0
  3606   004902  4B86               	infsnz	efgtoa@n& (0+255),f,b
  3607   004904  2B87               	incf	(efgtoa@n+1)& (0+255),f,b
  3608   004906                     
  3609                           ; BSR set to: 0
  3610                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 804:             
      +                          --w;
  3611   004906  0771               	decf	efgtoa@w& (0+255),f,b
  3612   004908  A0D8               	btfss	status,0,c
  3613   00490A  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  3614   00490C                     
  3615                           ; BSR set to: 0
  3616                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 805:         };C:
      +                          \Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 806:         h -= l*
      +                          u.f;
  3617   00490C  C079  F02C         	movff	efgtoa@h,___flsub@b
  3618   004910  C07A  F02D         	movff	efgtoa@h+1,___flsub@b+1
  3619   004914  C07B  F02E         	movff	efgtoa@h+2,___flsub@b+2
  3620   004918  C07C  F02F         	movff	efgtoa@h+3,___flsub@b+3
  3621   00491C  C07D  F017         	movff	efgtoa@l,___flmul@a
  3622   004920  C07E  F018         	movff	efgtoa@l+1,___flmul@a+1
  3623   004924  C07F  F019         	movff	efgtoa@l+2,___flmul@a+2
  3624   004928  C080  F01A         	movff	efgtoa@l+3,___flmul@a+3
  3625   00492C  C088  F013         	movff	efgtoa@u,___flmul@b
  3626   004930  C089  F014         	movff	efgtoa@u+1,___flmul@b+1
  3627   004934  C08A  F015         	movff	efgtoa@u+2,___flmul@b+2
  3628   004938  C08B  F016         	movff	efgtoa@u+3,___flmul@b+3
  3629   00493C  ECA7  F027         	call	___flmul	;wreg free
  3630   004940  C013  F030         	movff	?___flmul,___flsub@a
  3631   004944  C014  F031         	movff	?___flmul+1,___flsub@a+1
  3632   004948  C015  F032         	movff	?___flmul+2,___flsub@a+2
  3633   00494C  C016  F033         	movff	?___flmul+3,___flsub@a+3
  3634   004950  ECD6  F032         	call	___flsub	;wreg free
  3635   004954  C02C  F079         	movff	?___flsub,efgtoa@h
  3636   004958  C02D  F07A         	movff	?___flsub+1,efgtoa@h+1
  3637   00495C  C02E  F07B         	movff	?___flsub+2,efgtoa@h+2
  3638   004960  C02F  F07C         	movff	?___flsub+3,efgtoa@h+3
  3639   004964                     
  3640                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 807:         u.f 
      +                          = u.f/10.0;
  3641   004964  C088  F005         	movff	efgtoa@u,___fldiv@b
  3642   004968  C089  F006         	movff	efgtoa@u+1,___fldiv@b+1
  3643   00496C  C08A  F007         	movff	efgtoa@u+2,___fldiv@b+2
  3644   004970  C08B  F008         	movff	efgtoa@u+3,___fldiv@b+3
  3645   004974  0E00               	movlw	0
  3646   004976  6E09               	movwf	___fldiv@a^0,c
  3647   004978  0E00               	movlw	0
  3648   00497A  6E0A               	movwf	(___fldiv@a+1)^0,c
  3649   00497C  0E20               	movlw	32
  3650   00497E  6E0B               	movwf	(___fldiv@a+2)^0,c
  3651   004980  0E41               	movlw	65
  3652   004982  6E0C               	movwf	(___fldiv@a+3)^0,c
  3653   004984  ECCC  F029         	call	___fldiv	;wreg free
  3654   004988  C005  F088         	movff	?___fldiv,efgtoa@u
  3655   00498C  C006  F089         	movff	?___fldiv+1,efgtoa@u+1
  3656   004990  C007  F08A         	movff	?___fldiv+2,efgtoa@u+2
  3657   004994  C008  F08B         	movff	?___fldiv+3,efgtoa@u+3
  3658   004998                     
  3659                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 808:         --ne
      +                          ;
  3660   004998  0100               	movlb	0	; () banked
  3661   00499A  0760               	decf	efgtoa@ne& (0+255),f,b
  3662   00499C  A0D8               	btfss	status,0,c
  3663   00499E  0761               	decf	(efgtoa@ne+1)& (0+255),f,b
  3664   0049A0                     
  3665                           ; BSR set to: 0
  3666                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 809:         ++i;
  3667   0049A0  4B77               	infsnz	efgtoa@i& (0+255),f,b
  3668   0049A2  2B78               	incf	(efgtoa@i+1)& (0+255),f,b
  3669   0049A4                     l4176:
  3670                           
  3671                           ; BSR set to: 0
  3672                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3673   0049A4  516D               	movf	efgtoa@m& (0+255),w,b
  3674   0049A6  5D77               	subwf	efgtoa@i& (0+255),w,b
  3675   0049A8  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  3676   0049AA  0A80               	xorlw	128
  3677   0049AC  6E3E               	movwf	??_efgtoa^0,c
  3678   0049AE  516E               	movf	(efgtoa@m+1)& (0+255),w,b
  3679   0049B0  0A80               	xorlw	128
  3680   0049B2  583E               	subwfb	??_efgtoa^0,w,c
  3681   0049B4  B0D8               	btfsc	status,0,c
  3682   0049B6  EFDF  F024         	goto	u5121
  3683   0049BA  EFE1  F024         	goto	u5120
  3684   0049BE                     u5121:
  3685   0049BE  EFEF  F024         	goto	l4180
  3686   0049C2                     u5120:
  3687   0049C2                     
  3688                           ; BSR set to: 0
  3689   0049C2  BF87               	btfsc	(efgtoa@n+1)& (0+255),7,b
  3690   0049C4  EFED  F024         	goto	u5131
  3691   0049C8  5187               	movf	(efgtoa@n+1)& (0+255),w,b
  3692   0049CA  E109               	bnz	u5130
  3693   0049CC  0E4B               	movlw	75
  3694   0049CE  5D86               	subwf	efgtoa@n& (0+255),w,b
  3695   0049D0  A0D8               	btfss	status,0,c
  3696   0049D2  EFED  F024         	goto	u5131
  3697   0049D6  EFEF  F024         	goto	u5130
  3698   0049DA                     u5131:
  3699   0049DA  EFED  F023         	goto	l4136
  3700   0049DE                     u5130:
  3701   0049DE                     l4180:
  3702                           
  3703                           ; BSR set to: 0
  3704                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 816:  i = sizeof(
      +                          dbuf) - 1;
  3705   0049DE  0E00               	movlw	0
  3706   0049E0  6F78               	movwf	(efgtoa@i+1)& (0+255),b
  3707   0049E2  0E4F               	movlw	79
  3708   0049E4  6F77               	movwf	efgtoa@i& (0+255),b
  3709   0049E6                     
  3710                           ; BSR set to: 0
  3711                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 817:     dbuf[i] 
      +                          = '\0';
  3712   0049E6  0E00               	movlw	low _dbuf
  3713   0049E8  2577               	addwf	efgtoa@i& (0+255),w,b
  3714   0049EA  6ED9               	movwf	fsr2l,c
  3715   0049EC  0E01               	movlw	high _dbuf
  3716   0049EE  2178               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3717   0049F0  6EDA               	movwf	fsr2h,c
  3718   0049F2  6ADF               	clrf	indf2,c
  3719   0049F4                     
  3720                           ; BSR set to: 0
  3721                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 848:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  3722   0049F4  0E00               	movlw	low _dbuf
  3723   0049F6  6E3E               	movwf	??_efgtoa^0,c
  3724   0049F8  0E01               	movlw	high _dbuf
  3725   0049FA  6E3F               	movwf	(??_efgtoa+1)^0,c
  3726   0049FC  5186               	movf	efgtoa@n& (0+255),w,b
  3727   0049FE  5E3E               	subwf	??_efgtoa^0,f,c
  3728   004A00  5187               	movf	(efgtoa@n+1)& (0+255),w,b
  3729   004A02  5A3F               	subwfb	(??_efgtoa+1)^0,f,c
  3730   004A04  5177               	movf	efgtoa@i& (0+255),w,b
  3731   004A06  243E               	addwf	??_efgtoa^0,w,c
  3732   004A08  6E05               	movwf	memcpy@d1^0,c
  3733   004A0A  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  3734   004A0C  203F               	addwfc	(??_efgtoa+1)^0,w,c
  3735   004A0E  6E06               	movwf	(memcpy@d1+1)^0,c
  3736   004A10  0E00               	movlw	low _dbuf
  3737   004A12  6E07               	movwf	memcpy@s1^0,c
  3738   004A14  0E01               	movlw	high _dbuf
  3739   004A16  6E08               	movwf	(memcpy@s1+1)^0,c
  3740   004A18  C086  F009         	movff	efgtoa@n,memcpy@n
  3741   004A1C  C087  F00A         	movff	efgtoa@n+1,memcpy@n+1
  3742   004A20  EC12  F032         	call	_memcpy	;wreg free
  3743   004A24                     
  3744                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 849:  n = i-n;
  3745   004A24  0100               	movlb	0	; () banked
  3746   004A26  5186               	movf	efgtoa@n& (0+255),w,b
  3747   004A28  5D77               	subwf	efgtoa@i& (0+255),w,b
  3748   004A2A  6F86               	movwf	efgtoa@n& (0+255),b
  3749   004A2C  5187               	movf	(efgtoa@n+1)& (0+255),w,b
  3750   004A2E  5978               	subwfb	(efgtoa@i+1)& (0+255),w,b
  3751   004A30  6F87               	movwf	(efgtoa@n+1)& (0+255),b
  3752   004A32                     
  3753                           ; BSR set to: 0
  3754                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 850:  i = sign ==
      +                           0 ? 0 : 1;
  3755   004A32  5181               	movf	efgtoa@sign& (0+255),w,b
  3756   004A34  A4D8               	btfss	status,2,c
  3757   004A36  EF1F  F025         	goto	u5141
  3758   004A3A  EF22  F025         	goto	u5140
  3759   004A3E                     u5141:
  3760   004A3E  0E01               	movlw	1
  3761   004A40  EF23  F025         	goto	u5150
  3762   004A44                     u5140:
  3763   004A44  0E00               	movlw	0
  3764   004A46                     u5150:
  3765   004A46  6F77               	movwf	efgtoa@i& (0+255),b
  3766   004A48  6B78               	clrf	(efgtoa@i+1)& (0+255),b
  3767   004A4A                     
  3768                           ; BSR set to: 0
  3769                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 861:  if (sign) {
  3770   004A4A  5181               	movf	efgtoa@sign& (0+255),w,b
  3771   004A4C  B4D8               	btfsc	status,2,c
  3772   004A4E  EF2B  F025         	goto	u5161
  3773   004A52  EF2D  F025         	goto	u5160
  3774   004A56                     u5161:
  3775   004A56  EF39  F025         	goto	l4194
  3776   004A5A                     u5160:
  3777   004A5A                     
  3778                           ; BSR set to: 0
  3779                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 862:   dbuf[--n] 
      +                          = sign;
  3780   004A5A  0786               	decf	efgtoa@n& (0+255),f,b
  3781   004A5C  A0D8               	btfss	status,0,c
  3782   004A5E  0787               	decf	(efgtoa@n+1)& (0+255),f,b
  3783   004A60  0E00               	movlw	low _dbuf
  3784   004A62  2586               	addwf	efgtoa@n& (0+255),w,b
  3785   004A64  6ED9               	movwf	fsr2l,c
  3786   004A66  0E01               	movlw	high _dbuf
  3787   004A68  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3788   004A6A  6EDA               	movwf	fsr2h,c
  3789   004A6C  0060  F207  FFDF   	movff	efgtoa@sign,indf2
  3790   004A72                     l4194:
  3791                           
  3792                           ; BSR set to: 0
  3793                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 864:  w -= i;
  3794   004A72  5177               	movf	efgtoa@i& (0+255),w,b
  3795   004A74  5F71               	subwf	efgtoa@w& (0+255),f,b
  3796   004A76  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  3797   004A78  5B72               	subwfb	(efgtoa@w+1)& (0+255),f,b
  3798   004A7A                     
  3799                           ; BSR set to: 0
  3800                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 867:     return (
      +                          void) pad(fp, &dbuf[n], w);
  3801   004A7A  C038  F013         	movff	efgtoa@fp,pad@fp
  3802   004A7E  0E00               	movlw	low _dbuf
  3803   004A80  2586               	addwf	efgtoa@n& (0+255),w,b
  3804   004A82  6E14               	movwf	pad@buf^0,c
  3805   004A84  0E01               	movlw	high _dbuf
  3806   004A86  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3807   004A88  6E15               	movwf	(pad@buf+1)^0,c
  3808   004A8A  C071  F016         	movff	efgtoa@w,pad@p
  3809   004A8E  C072  F017         	movff	efgtoa@w+1,pad@p+1
  3810   004A92  ECAE  F031         	call	_pad	;wreg free
  3811   004A96                     l853:
  3812   004A96  0012               	return		;funcret
  3813   004A98                     __end_of_efgtoa:
  3814                           	callstack 0
  3815                           
  3816 ;; *************** function _strcpy *****************
  3817 ;; Defined at:
  3818 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\strcpy.c"
  3819 ;; Parameters:    Size  Location     Type
  3820 ;;  dest            2    4[COMRAM] PTR unsigned char 
  3821 ;;		 -> dbuf(80), 
  3822 ;;  src             1    6[COMRAM] PTR const unsigned char 
  3823 ;;		 -> STR_6(4), STR_3(4), 
  3824 ;; Auto vars:     Size  Location     Type
  3825 ;;  d               2    8[COMRAM] PTR unsigned char 
  3826 ;;		 -> dbuf(80), 
  3827 ;; Return value:  Size  Location     Type
  3828 ;;                  2    4[COMRAM] PTR unsigned char 
  3829 ;; Registers used:
  3830 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3831 ;; Tracked objects:
  3832 ;;		On entry : 0/0
  3833 ;;		On exit  : 0/0
  3834 ;;		Unchanged: 0/0
  3835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3836 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3837 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3838 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3839 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3840 ;;Total ram usage:        6 bytes
  3841 ;; Hardware stack levels used: 1
  3842 ;; Hardware stack levels required when called: 1
  3843 ;; This function calls:
  3844 ;;		Nothing
  3845 ;; This function is called by:
  3846 ;;		_efgtoa
  3847 ;; This function uses a non-reentrant model
  3848 ;;
  3849                           
  3850                           	psect	text7
  3851   006566                     __ptext7:
  3852                           	callstack 0
  3853   006566                     _strcpy:
  3854                           	callstack 25
  3855   006566  C005  F009         	movff	strcpy@dest,strcpy@d
  3856   00656A  C006  F00A         	movff	strcpy@dest+1,strcpy@d+1
  3857   00656E                     l3930:
  3858   00656E  2A07               	incf	strcpy@src^0,f,c
  3859   006570  0407               	decf	strcpy@src^0,w,c
  3860   006572  6E08               	movwf	??_strcpy^0,c
  3861   006574  0060  F023  FFF6   	movff	??_strcpy,tblptrl
  3862   00657A                     	if	1	;There is more than 1 active tblptr byte
  3863   00657A  0E20               	movlw	high __smallconst
  3864   00657C  6EF7               	movwf	tblptrh,c
  3865   00657E                     	endif
  3866   00657E                     	if	0	;tblptru may be non-zero
  3867   00657E                     	endif
  3868   00657E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3869   00657E  0E00               	movlw	low (__smallconst shr (0+16))
  3870   006580  6EF8               	movwf	tblptru,c
  3871   006582                     	endif
  3872   006582  0060  F027  FFD9   	movff	strcpy@d,fsr2l
  3873   006588  0060  F02B  FFDA   	movff	strcpy@d+1,fsr2h
  3874   00658E  4A09               	infsnz	strcpy@d^0,f,c
  3875   006590  2A0A               	incf	(strcpy@d+1)^0,f,c
  3876   006592  0008               	tblrd		*
  3877   006594  006F FFD7 FFDF     	movff	tablat,indf2
  3878   00659A  50DF               	movf	indf2,w,c
  3879   00659C  A4D8               	btfss	status,2,c
  3880   00659E  EFD3  F032         	goto	u4721
  3881   0065A2  EFD5  F032         	goto	u4720
  3882   0065A6                     u4721:
  3883   0065A6  EFB7  F032         	goto	l3930
  3884   0065AA                     u4720:
  3885   0065AA  0012               	return		;funcret
  3886   0065AC                     __end_of_strcpy:
  3887                           	callstack 0
  3888                           
  3889 ;; *************** function _pad *****************
  3890 ;; Defined at:
  3891 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  3892 ;; Parameters:    Size  Location     Type
  3893 ;;  fp              1   18[COMRAM] PTR struct _IO_FILE
  3894 ;;		 -> sprintf@f(11), 
  3895 ;;  buf             2   19[COMRAM] PTR unsigned char 
  3896 ;;		 -> dbuf(80), 
  3897 ;;  p               2   21[COMRAM] int 
  3898 ;; Auto vars:     Size  Location     Type
  3899 ;;  i               2   24[COMRAM] int 
  3900 ;; Return value:  Size  Location     Type
  3901 ;;                  1    wreg      void 
  3902 ;; Registers used:
  3903 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3904 ;; Tracked objects:
  3905 ;;		On entry : 0/0
  3906 ;;		On exit  : 0/0
  3907 ;;		Unchanged: 0/0
  3908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3909 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3910 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3911 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3912 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3913 ;;Total ram usage:        8 bytes
  3914 ;; Hardware stack levels used: 1
  3915 ;; Hardware stack levels required when called: 4
  3916 ;; This function calls:
  3917 ;;		_fputc
  3918 ;;		_fputs
  3919 ;; This function is called by:
  3920 ;;		_efgtoa
  3921 ;; This function uses a non-reentrant model
  3922 ;;
  3923                           
  3924                           	psect	text8
  3925   00635C                     __ptext8:
  3926                           	callstack 0
  3927   00635C                     _pad:
  3928                           	callstack 22
  3929   00635C                     
  3930                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c:
      +                           205:  if (p < 0) {
  3931   00635C  BE17               	btfsc	(pad@p+1)^0,7,c
  3932   00635E  EFB5  F031         	goto	u4630
  3933   006362  EFB3  F031         	goto	u4631
  3934   006366                     u4631:
  3935   006366  EFB9  F031         	goto	l838
  3936   00636A                     u4630:
  3937   00636A                     
  3938                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 206:   p = 0;
  3939   00636A  0E00               	movlw	0
  3940   00636C  6E17               	movwf	(pad@p+1)^0,c
  3941   00636E  0E00               	movlw	0
  3942   006370  6E16               	movwf	pad@p^0,c
  3943   006372                     l838:
  3944                           
  3945                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 208:     i = 0;
  3946   006372  0E00               	movlw	0
  3947   006374  6E1A               	movwf	(pad@i+1)^0,c
  3948   006376  0E00               	movlw	0
  3949   006378  6E19               	movwf	pad@i^0,c
  3950                           
  3951                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  3952   00637A  EFC9  F031         	goto	l3902
  3953   00637E                     l3898:
  3954                           
  3955                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
  3956   00637E  0E00               	movlw	0
  3957   006380  6E06               	movwf	(fputc@c+1)^0,c
  3958   006382  0E20               	movlw	32
  3959   006384  6E05               	movwf	fputc@c^0,c
  3960   006386  C013  F007         	movff	pad@fp,fputc@fp
  3961   00638A  ECCA  F030         	call	_fputc	;wreg free
  3962   00638E                     
  3963                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 211:         ++i;
  3964   00638E  4A19               	infsnz	pad@i^0,f,c
  3965   006390  2A1A               	incf	(pad@i+1)^0,f,c
  3966   006392                     l3902:
  3967                           
  3968                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  3969   006392  5016               	movf	pad@p^0,w,c
  3970   006394  5C19               	subwf	pad@i^0,w,c
  3971   006396  501A               	movf	(pad@i+1)^0,w,c
  3972   006398  0A80               	xorlw	128
  3973   00639A  6E18               	movwf	??_pad^0,c
  3974   00639C  5017               	movf	(pad@p+1)^0,w,c
  3975   00639E  0A80               	xorlw	128
  3976   0063A0  5818               	subwfb	??_pad^0,w,c
  3977   0063A2  A0D8               	btfss	status,0,c
  3978   0063A4  EFD6  F031         	goto	u4641
  3979   0063A8  EFD8  F031         	goto	u4640
  3980   0063AC                     u4641:
  3981   0063AC  EFBF  F031         	goto	l3898
  3982   0063B0                     u4640:
  3983   0063B0                     
  3984                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
  3985   0063B0  C014  F00D         	movff	pad@buf,fputs@s
  3986   0063B4  C015  F00E         	movff	pad@buf+1,fputs@s+1
  3987   0063B8  C013  F00F         	movff	pad@fp,fputs@fp
  3988   0063BC  ECF9  F032         	call	_fputs	;wreg free
  3989   0063C0  0012               	return		;funcret
  3990   0063C2                     __end_of_pad:
  3991                           	callstack 0
  3992                           
  3993 ;; *************** function _fputs *****************
  3994 ;; Defined at:
  3995 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputs.c"
  3996 ;; Parameters:    Size  Location     Type
  3997 ;;  s               2   12[COMRAM] PTR const unsigned char 
  3998 ;;		 -> dbuf(80), 
  3999 ;;  fp              1   14[COMRAM] PTR struct _IO_FILE
  4000 ;;		 -> sprintf@f(11), 
  4001 ;; Auto vars:     Size  Location     Type
  4002 ;;  i               2   16[COMRAM] int 
  4003 ;;  c               1   15[COMRAM] unsigned char 
  4004 ;; Return value:  Size  Location     Type
  4005 ;;                  2   12[COMRAM] int 
  4006 ;; Registers used:
  4007 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4008 ;; Tracked objects:
  4009 ;;		On entry : 0/0
  4010 ;;		On exit  : 0/0
  4011 ;;		Unchanged: 0/0
  4012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4013 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4014 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4016 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4017 ;;Total ram usage:        6 bytes
  4018 ;; Hardware stack levels used: 1
  4019 ;; Hardware stack levels required when called: 3
  4020 ;; This function calls:
  4021 ;;		_fputc
  4022 ;; This function is called by:
  4023 ;;		_pad
  4024 ;; This function uses a non-reentrant model
  4025 ;;
  4026                           
  4027                           	psect	text9
  4028   0065F2                     __ptext9:
  4029                           	callstack 0
  4030   0065F2                     _fputs:
  4031                           	callstack 22
  4032   0065F2  0E00               	movlw	0
  4033   0065F4  6E12               	movwf	(fputs@i+1)^0,c
  4034   0065F6  0E00               	movlw	0
  4035   0065F8  6E11               	movwf	fputs@i^0,c
  4036   0065FA  EF08  F033         	goto	l3532
  4037   0065FE                     l3528:
  4038   0065FE  C010  F005         	movff	fputs@c,fputc@c
  4039   006602  6A06               	clrf	(fputc@c+1)^0,c
  4040   006604  C00F  F007         	movff	fputs@fp,fputc@fp
  4041   006608  ECCA  F030         	call	_fputc	;wreg free
  4042   00660C  4A11               	infsnz	fputs@i^0,f,c
  4043   00660E  2A12               	incf	(fputs@i+1)^0,f,c
  4044   006610                     l3532:
  4045   006610  5011               	movf	fputs@i^0,w,c
  4046   006612  240D               	addwf	fputs@s^0,w,c
  4047   006614  6ED9               	movwf	fsr2l,c
  4048   006616  5012               	movf	(fputs@i+1)^0,w,c
  4049   006618  200E               	addwfc	(fputs@s+1)^0,w,c
  4050   00661A  6EDA               	movwf	fsr2h,c
  4051   00661C  50DF               	movf	indf2,w,c
  4052   00661E  6E10               	movwf	fputs@c^0,c
  4053   006620  5010               	movf	fputs@c^0,w,c
  4054   006622  A4D8               	btfss	status,2,c
  4055   006624  EF16  F033         	goto	u4041
  4056   006628  EF18  F033         	goto	u4040
  4057   00662C                     u4041:
  4058   00662C  EFFF  F032         	goto	l3528
  4059   006630                     u4040:
  4060   006630  0012               	return		;funcret
  4061   006632                     __end_of_fputs:
  4062                           	callstack 0
  4063                           
  4064 ;; *************** function _fputc *****************
  4065 ;; Defined at:
  4066 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputc.c"
  4067 ;; Parameters:    Size  Location     Type
  4068 ;;  c               2    4[COMRAM] int 
  4069 ;;  fp              1    6[COMRAM] PTR struct _IO_FILE
  4070 ;;		 -> sprintf@f(11), 
  4071 ;; Auto vars:     Size  Location     Type
  4072 ;;		None
  4073 ;; Return value:  Size  Location     Type
  4074 ;;                  2    4[COMRAM] int 
  4075 ;; Registers used:
  4076 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4077 ;; Tracked objects:
  4078 ;;		On entry : 0/0
  4079 ;;		On exit  : 0/0
  4080 ;;		Unchanged: 0/0
  4081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4082 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4084 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4085 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4086 ;;Total ram usage:        8 bytes
  4087 ;; Hardware stack levels used: 1
  4088 ;; Hardware stack levels required when called: 2
  4089 ;; This function calls:
  4090 ;;		_putch
  4091 ;; This function is called by:
  4092 ;;		_pad
  4093 ;;		_vfpfcnvrt
  4094 ;;		_fputs
  4095 ;; This function uses a non-reentrant model
  4096 ;;
  4097                           
  4098                           	psect	text10
  4099   006194                     __ptext10:
  4100                           	callstack 0
  4101   006194                     _fputc:
  4102                           	callstack 25
  4103   006194  5007               	movf	fputc@fp^0,w,c
  4104   006196  B4D8               	btfsc	status,2,c
  4105   006198  EFD0  F030         	goto	u3611
  4106   00619C  EFD2  F030         	goto	u3610
  4107   0061A0                     u3611:
  4108   0061A0  EFDA  F030         	goto	l3322
  4109   0061A4                     u3610:
  4110   0061A4  5007               	movf	fputc@fp^0,w,c
  4111   0061A6  A4D8               	btfss	status,2,c
  4112   0061A8  EFD8  F030         	goto	u3621
  4113   0061AC  EFDA  F030         	goto	u3620
  4114   0061B0                     u3621:
  4115   0061B0  EFDF  F030         	goto	l3324
  4116   0061B4                     u3620:
  4117   0061B4                     l3322:
  4118   0061B4  5005               	movf	fputc@c^0,w,c
  4119   0061B6  ECF7  F033         	call	_putch
  4120   0061BA  EF1F  F031         	goto	l978
  4121   0061BE                     l3324:
  4122   0061BE  5007               	movf	fputc@fp^0,w,c
  4123   0061C0  6ED9               	movwf	fsr2l,c
  4124   0061C2  6ADA               	clrf	fsr2h,c
  4125   0061C4  0E09               	movlw	9
  4126   0061C6  26D9               	addwf	fsr2l,f,c
  4127   0061C8  50DE               	movf	postinc2,w,c
  4128   0061CA  10DE               	iorwf	postinc2,w,c
  4129   0061CC  B4D8               	btfsc	status,2,c
  4130   0061CE  EFEB  F030         	goto	u3631
  4131   0061D2  EFED  F030         	goto	u3630
  4132   0061D6                     u3631:
  4133   0061D6  EF06  F031         	goto	l3328
  4134   0061DA                     u3630:
  4135   0061DA  5007               	movf	fputc@fp^0,w,c
  4136   0061DC  6ED9               	movwf	fsr2l,c
  4137   0061DE  6ADA               	clrf	fsr2h,c
  4138   0061E0  0E09               	movlw	9
  4139   0061E2  26D9               	addwf	fsr2l,f,c
  4140   0061E4  5007               	movf	fputc@fp^0,w,c
  4141   0061E6  6EE1               	movwf	fsr1l,c
  4142   0061E8  6AE2               	clrf	fsr1h,c
  4143   0061EA  0E02               	movlw	2
  4144   0061EC  26E1               	addwf	fsr1l,f,c
  4145   0061EE  50DE               	movf	postinc2,w,c
  4146   0061F0  5CE6               	subwf	postinc1,w,c
  4147   0061F2  50E6               	movf	postinc1,w,c
  4148   0061F4  0A80               	xorlw	128
  4149   0061F6  6E0C               	movwf	(??_fputc+4)^0,c
  4150   0061F8  50DE               	movf	postinc2,w,c
  4151   0061FA  0A80               	xorlw	128
  4152   0061FC  580C               	subwfb	(??_fputc+4)^0,w,c
  4153   0061FE  B0D8               	btfsc	status,0,c
  4154   006200  EF04  F031         	goto	u3641
  4155   006204  EF06  F031         	goto	u3640
  4156   006208                     u3641:
  4157   006208  EF1F  F031         	goto	l978
  4158   00620C                     u3640:
  4159   00620C                     l3328:
  4160   00620C  5007               	movf	fputc@fp^0,w,c
  4161   00620E  6ED9               	movwf	fsr2l,c
  4162   006210  6ADA               	clrf	fsr2h,c
  4163   006212  0E02               	movlw	2
  4164   006214  26D9               	addwf	fsr2l,f,c
  4165   006216  50DF               	movf	indf2,w,c
  4166   006218  6E08               	movwf	??_fputc^0,c
  4167   00621A  5007               	movf	fputc@fp^0,w,c
  4168   00621C  6ED9               	movwf	fsr2l,c
  4169   00621E  6ADA               	clrf	fsr2h,c
  4170   006220  50DF               	movf	indf2,w,c
  4171   006222  2408               	addwf	??_fputc^0,w,c
  4172   006224  6ED9               	movwf	fsr2l,c
  4173   006226  6ADA               	clrf	fsr2h,c
  4174   006228  0060  F017  FFDF   	movff	fputc@c,indf2
  4175   00622E  5007               	movf	fputc@fp^0,w,c
  4176   006230  6ED9               	movwf	fsr2l,c
  4177   006232  6ADA               	clrf	fsr2h,c
  4178   006234  0E02               	movlw	2
  4179   006236  26D9               	addwf	fsr2l,f,c
  4180   006238  2ADE               	incf	postinc2,f,c
  4181   00623A  0E00               	movlw	0
  4182   00623C  22DD               	addwfc	postdec2,f,c
  4183   00623E                     l978:
  4184   00623E  0012               	return		;funcret
  4185   006240                     __end_of_fputc:
  4186                           	callstack 0
  4187                           
  4188 ;; *************** function _putch *****************
  4189 ;; Defined at:
  4190 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\putch.c"
  4191 ;; Parameters:    Size  Location     Type
  4192 ;;  c               1    wreg     unsigned char 
  4193 ;; Auto vars:     Size  Location     Type
  4194 ;;  c               1    0[COMRAM] unsigned char 
  4195 ;; Return value:  Size  Location     Type
  4196 ;;                  1    wreg      void 
  4197 ;; Registers used:
  4198 ;;		wreg
  4199 ;; Tracked objects:
  4200 ;;		On entry : 0/0
  4201 ;;		On exit  : 0/0
  4202 ;;		Unchanged: 0/0
  4203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4207 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4208 ;;Total ram usage:        0 bytes
  4209 ;; Hardware stack levels used: 1
  4210 ;; Hardware stack levels required when called: 1
  4211 ;; This function calls:
  4212 ;;		Nothing
  4213 ;; This function is called by:
  4214 ;;		_fputc
  4215 ;; This function uses a non-reentrant model
  4216 ;;
  4217                           
  4218                           	psect	text11
  4219   0067EE                     __ptext11:
  4220                           	callstack 0
  4221   0067EE                     _putch:
  4222                           	callstack 25
  4223   0067EE  0012               	return		;funcret
  4224   0067F0                     __end_of_putch:
  4225                           	callstack 0
  4226                           
  4227 ;; *************** function _memcpy *****************
  4228 ;; Defined at:
  4229 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\memcpy.c"
  4230 ;; Parameters:    Size  Location     Type
  4231 ;;  d1              2    4[COMRAM] PTR void 
  4232 ;;		 -> dbuf(80), 
  4233 ;;  s1              2    6[COMRAM] PTR const void 
  4234 ;;		 -> dbuf(80), 
  4235 ;;  n               2    8[COMRAM] unsigned int 
  4236 ;; Auto vars:     Size  Location     Type
  4237 ;;  s               2   13[COMRAM] PTR const unsigned char 
  4238 ;;		 -> dbuf(80), 
  4239 ;;  d               2   11[COMRAM] PTR unsigned char 
  4240 ;;		 -> dbuf(80), 
  4241 ;;  tmp             1   10[COMRAM] unsigned char 
  4242 ;; Return value:  Size  Location     Type
  4243 ;;                  2    4[COMRAM] PTR void 
  4244 ;; Registers used:
  4245 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4246 ;; Tracked objects:
  4247 ;;		On entry : 0/0
  4248 ;;		On exit  : 0/0
  4249 ;;		Unchanged: 0/0
  4250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4251 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4252 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4254 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4255 ;;Total ram usage:       11 bytes
  4256 ;; Hardware stack levels used: 1
  4257 ;; Hardware stack levels required when called: 1
  4258 ;; This function calls:
  4259 ;;		Nothing
  4260 ;; This function is called by:
  4261 ;;		_efgtoa
  4262 ;; This function uses a non-reentrant model
  4263 ;;
  4264                           
  4265                           	psect	text12
  4266   006424                     __ptext12:
  4267                           	callstack 0
  4268   006424                     _memcpy:
  4269                           	callstack 25
  4270   006424  C007  F00E         	movff	memcpy@s1,memcpy@s
  4271   006428  C008  F00F         	movff	memcpy@s1+1,memcpy@s+1
  4272   00642C  C005  F00C         	movff	memcpy@d1,memcpy@d
  4273   006430  C006  F00D         	movff	memcpy@d1+1,memcpy@d+1
  4274   006434  EF31  F032         	goto	l3978
  4275   006438                     l3970:
  4276   006438  0060  F03B  FFD9   	movff	memcpy@s,fsr2l
  4277   00643E  0060  F03F  FFDA   	movff	memcpy@s+1,fsr2h
  4278   006444  50DF               	movf	indf2,w,c
  4279   006446  6E0B               	movwf	memcpy@tmp^0,c
  4280   006448  4A0E               	infsnz	memcpy@s^0,f,c
  4281   00644A  2A0F               	incf	(memcpy@s+1)^0,f,c
  4282   00644C  0060  F033  FFD9   	movff	memcpy@d,fsr2l
  4283   006452  0060  F037  FFDA   	movff	memcpy@d+1,fsr2h
  4284   006458  0060  F02F  FFDF   	movff	memcpy@tmp,indf2
  4285   00645E  4A0C               	infsnz	memcpy@d^0,f,c
  4286   006460  2A0D               	incf	(memcpy@d+1)^0,f,c
  4287   006462                     l3978:
  4288   006462  0609               	decf	memcpy@n^0,f,c
  4289   006464  A0D8               	btfss	status,0,c
  4290   006466  060A               	decf	(memcpy@n+1)^0,f,c
  4291   006468  2809               	incf	memcpy@n^0,w,c
  4292   00646A  E106               	bnz	u4841
  4293   00646C  280A               	incf	(memcpy@n+1)^0,w,c
  4294   00646E  A4D8               	btfss	status,2,c
  4295   006470  EF3C  F032         	goto	u4841
  4296   006474  EF3E  F032         	goto	u4840
  4297   006478                     u4841:
  4298   006478  EF1C  F032         	goto	l3970
  4299   00647C                     u4840:
  4300   00647C  0012               	return		;funcret
  4301   00647E                     __end_of_memcpy:
  4302                           	callstack 0
  4303                           
  4304 ;; *************** function _labs *****************
  4305 ;; Defined at:
  4306 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\labs.c"
  4307 ;; Parameters:    Size  Location     Type
  4308 ;;  a               4    4[COMRAM] long 
  4309 ;; Auto vars:     Size  Location     Type
  4310 ;;		None
  4311 ;; Return value:  Size  Location     Type
  4312 ;;                  4    4[COMRAM] long 
  4313 ;; Registers used:
  4314 ;;		wreg, status,2, status,0
  4315 ;; Tracked objects:
  4316 ;;		On entry : 0/0
  4317 ;;		On exit  : 0/0
  4318 ;;		Unchanged: 0/0
  4319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4320 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4322 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4323 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4324 ;;Total ram usage:        8 bytes
  4325 ;; Hardware stack levels used: 1
  4326 ;; Hardware stack levels required when called: 1
  4327 ;; This function calls:
  4328 ;;		Nothing
  4329 ;; This function is called by:
  4330 ;;		_efgtoa
  4331 ;; This function uses a non-reentrant model
  4332 ;;
  4333                           
  4334                           	psect	text13
  4335   00647E                     __ptext13:
  4336                           	callstack 0
  4337   00647E                     _labs:
  4338                           	callstack 25
  4339   00647E  BE08               	btfsc	(labs@a+3)^0,7,c
  4340   006480  EF44  F032         	goto	u4731
  4341   006484  EF46  F032         	goto	u4730
  4342   006488                     u4731:
  4343   006488  EF50  F032         	goto	l3936
  4344   00648C                     u4730:
  4345   00648C  C005  F005         	movff	labs@a,?_labs
  4346   006490  C006  F006         	movff	labs@a+1,?_labs+1
  4347   006494  C007  F007         	movff	labs@a+2,?_labs+2
  4348   006498  C008  F008         	movff	labs@a+3,?_labs+3
  4349   00649C  EF69  F032         	goto	l960
  4350   0064A0                     l3936:
  4351   0064A0  C005  F009         	movff	labs@a,??_labs
  4352   0064A4  C006  F00A         	movff	labs@a+1,??_labs+1
  4353   0064A8  C007  F00B         	movff	labs@a+2,??_labs+2
  4354   0064AC  C008  F00C         	movff	labs@a+3,??_labs+3
  4355   0064B0  1E09               	comf	??_labs^0,f,c
  4356   0064B2  1E0A               	comf	(??_labs+1)^0,f,c
  4357   0064B4  1E0B               	comf	(??_labs+2)^0,f,c
  4358   0064B6  1E0C               	comf	(??_labs+3)^0,f,c
  4359   0064B8  2A09               	incf	??_labs^0,f,c
  4360   0064BA  0E00               	movlw	0
  4361   0064BC  220A               	addwfc	(??_labs+1)^0,f,c
  4362   0064BE  220B               	addwfc	(??_labs+2)^0,f,c
  4363   0064C0  220C               	addwfc	(??_labs+3)^0,f,c
  4364   0064C2  C009  F005         	movff	??_labs,?_labs
  4365   0064C6  C00A  F006         	movff	??_labs+1,?_labs+1
  4366   0064CA  C00B  F007         	movff	??_labs+2,?_labs+2
  4367   0064CE  C00C  F008         	movff	??_labs+3,?_labs+3
  4368   0064D2                     l960:
  4369   0064D2  0012               	return		;funcret
  4370   0064D4                     __end_of_labs:
  4371                           	callstack 0
  4372                           
  4373 ;; *************** function _floorf *****************
  4374 ;; Defined at:
  4375 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\floorf.c"
  4376 ;; Parameters:    Size  Location     Type
  4377 ;;  x               4   29[COMRAM] float 
  4378 ;; Auto vars:     Size  Location     Type
  4379 ;;  u               4   45[COMRAM] struct .
  4380 ;;  m               4   39[COMRAM] unsigned long 
  4381 ;;  e               2   43[COMRAM] int 
  4382 ;; Return value:  Size  Location     Type
  4383 ;;                  4   29[COMRAM] float 
  4384 ;; Registers used:
  4385 ;;		wreg, status,2, status,0
  4386 ;; Tracked objects:
  4387 ;;		On entry : 0/0
  4388 ;;		On exit  : 0/0
  4389 ;;		Unchanged: 0/0
  4390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4391 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4392 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4393 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4394 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4395 ;;Total ram usage:       20 bytes
  4396 ;; Hardware stack levels used: 1
  4397 ;; Hardware stack levels required when called: 1
  4398 ;; This function calls:
  4399 ;;		Nothing
  4400 ;; This function is called by:
  4401 ;;		_efgtoa
  4402 ;; This function uses a non-reentrant model
  4403 ;;
  4404                           
  4405                           	psect	text14
  4406   00593C                     __ptext14:
  4407                           	callstack 0
  4408   00593C                     _floorf:
  4409                           	callstack 25
  4410   00593C  C0A4  F02E         	movff	floorf@F521,floorf@u
  4411   005940  C0A5  F02F         	movff	floorf@F521+1,floorf@u+1
  4412   005944  C0A6  F030         	movff	floorf@F521+2,floorf@u+2
  4413   005948  C0A7  F031         	movff	floorf@F521+3,floorf@u+3
  4414   00594C  C01E  F02E         	movff	floorf@x,floorf@u
  4415   005950  C01F  F02F         	movff	floorf@x+1,floorf@u+1
  4416   005954  C020  F030         	movff	floorf@x+2,floorf@u+2
  4417   005958  C021  F031         	movff	floorf@x+3,floorf@u+3
  4418   00595C  0E81               	movlw	129
  4419   00595E  6E22               	movwf	??_floorf^0,c
  4420   005960  0EFF               	movlw	255
  4421   005962  6E23               	movwf	(??_floorf+1)^0,c
  4422   005964  C02E  F024         	movff	floorf@u,??_floorf+2
  4423   005968  C02F  F025         	movff	floorf@u+1,??_floorf+3
  4424   00596C  C030  F026         	movff	floorf@u+2,??_floorf+4
  4425   005970  C031  F027         	movff	floorf@u+3,??_floorf+5
  4426   005974  0E18               	movlw	24
  4427   005976  EFC2  F02C         	goto	u4740
  4428   00597A                     u4745:
  4429   00597A  90D8               	bcf	status,0,c
  4430   00597C  3227               	rrcf	(??_floorf+5)^0,f,c
  4431   00597E  3226               	rrcf	(??_floorf+4)^0,f,c
  4432   005980  3225               	rrcf	(??_floorf+3)^0,f,c
  4433   005982  3224               	rrcf	(??_floorf+2)^0,f,c
  4434   005984                     u4740:
  4435   005984  2EE8               	decfsz	wreg,f,c
  4436   005986  EFBD  F02C         	goto	u4745
  4437   00598A  5024               	movf	(??_floorf+2)^0,w,c
  4438   00598C  2422               	addwf	??_floorf^0,w,c
  4439   00598E  6E2C               	movwf	floorf@e^0,c
  4440   005990  0E00               	movlw	0
  4441   005992  2023               	addwfc	(??_floorf+1)^0,w,c
  4442   005994  6E2D               	movwf	(floorf@e+1)^0,c
  4443   005996  BE2D               	btfsc	(floorf@e+1)^0,7,c
  4444   005998  EFD7  F02C         	goto	u4751
  4445   00599C  502D               	movf	(floorf@e+1)^0,w,c
  4446   00599E  E109               	bnz	u4750
  4447   0059A0  0E17               	movlw	23
  4448   0059A2  5C2C               	subwf	floorf@e^0,w,c
  4449   0059A4  A0D8               	btfss	status,0,c
  4450   0059A6  EFD7  F02C         	goto	u4751
  4451   0059AA  EFD9  F02C         	goto	u4750
  4452   0059AE                     u4751:
  4453   0059AE  EFE3  F02C         	goto	l3946
  4454   0059B2                     u4750:
  4455   0059B2                     l3944:
  4456   0059B2  C01E  F01E         	movff	floorf@x,?_floorf
  4457   0059B6  C01F  F01F         	movff	floorf@x+1,?_floorf+1
  4458   0059BA  C020  F020         	movff	floorf@x+2,?_floorf+2
  4459   0059BE  C021  F021         	movff	floorf@x+3,?_floorf+3
  4460   0059C2  EFA6  F02D         	goto	l946
  4461   0059C6                     l3946:
  4462   0059C6  BE2D               	btfsc	(floorf@e+1)^0,7,c
  4463   0059C8  EFE8  F02C         	goto	u4761
  4464   0059CC  EFEA  F02C         	goto	u4760
  4465   0059D0                     u4761:
  4466   0059D0  EF5A  F02D         	goto	l3956
  4467   0059D4                     u4760:
  4468   0059D4  C02C  F022         	movff	floorf@e,??_floorf
  4469   0059D8  0EFF               	movlw	255
  4470   0059DA  6E23               	movwf	(??_floorf+1)^0,c
  4471   0059DC  0EFF               	movlw	255
  4472   0059DE  6E24               	movwf	(??_floorf+2)^0,c
  4473   0059E0  0E7F               	movlw	127
  4474   0059E2  6E25               	movwf	(??_floorf+3)^0,c
  4475   0059E4  0E00               	movlw	0
  4476   0059E6  6E26               	movwf	(??_floorf+4)^0,c
  4477   0059E8                     u4775:
  4478   0059E8  6622               	tstfsz	??_floorf^0,c
  4479   0059EA  EFF9  F02C         	goto	u4776
  4480   0059EE  EF01  F02D         	goto	u4777
  4481   0059F2                     u4776:
  4482   0059F2  3426               	rlcf	(??_floorf+4)^0,w,c
  4483   0059F4  3226               	rrcf	(??_floorf+4)^0,f,c
  4484   0059F6  3225               	rrcf	(??_floorf+3)^0,f,c
  4485   0059F8  3224               	rrcf	(??_floorf+2)^0,f,c
  4486   0059FA  3223               	rrcf	(??_floorf+1)^0,f,c
  4487   0059FC  2E22               	decfsz	??_floorf^0,f,c
  4488   0059FE  EFF4  F02C         	goto	u4775
  4489   005A02                     u4777:
  4490   005A02  C023  F028         	movff	??_floorf+1,floorf@m
  4491   005A06  C024  F029         	movff	??_floorf+2,floorf@m+1
  4492   005A0A  C025  F02A         	movff	??_floorf+3,floorf@m+2
  4493   005A0E  C026  F02B         	movff	??_floorf+4,floorf@m+3
  4494   005A12  5028               	movf	floorf@m^0,w,c
  4495   005A14  142E               	andwf	floorf@u^0,w,c
  4496   005A16  6E22               	movwf	??_floorf^0,c
  4497   005A18  5029               	movf	(floorf@m+1)^0,w,c
  4498   005A1A  142F               	andwf	(floorf@u+1)^0,w,c
  4499   005A1C  6E23               	movwf	(??_floorf+1)^0,c
  4500   005A1E  502A               	movf	(floorf@m+2)^0,w,c
  4501   005A20  1430               	andwf	(floorf@u+2)^0,w,c
  4502   005A22  6E24               	movwf	(??_floorf+2)^0,c
  4503   005A24  502B               	movf	(floorf@m+3)^0,w,c
  4504   005A26  1431               	andwf	(floorf@u+3)^0,w,c
  4505   005A28  6E25               	movwf	(??_floorf+3)^0,c
  4506   005A2A  5022               	movf	??_floorf^0,w,c
  4507   005A2C  1023               	iorwf	(??_floorf+1)^0,w,c
  4508   005A2E  1024               	iorwf	(??_floorf+2)^0,w,c
  4509   005A30  1025               	iorwf	(??_floorf+3)^0,w,c
  4510   005A32  A4D8               	btfss	status,2,c
  4511   005A34  EF1E  F02D         	goto	u4781
  4512   005A38  EF20  F02D         	goto	u4780
  4513   005A3C                     u4781:
  4514   005A3C  EF22  F02D         	goto	l3952
  4515   005A40                     u4780:
  4516   005A40  EFD9  F02C         	goto	l3944
  4517   005A44                     l3952:
  4518   005A44  C02E  F022         	movff	floorf@u,??_floorf
  4519   005A48  C02F  F023         	movff	floorf@u+1,??_floorf+1
  4520   005A4C  C030  F024         	movff	floorf@u+2,??_floorf+2
  4521   005A50  C031  F025         	movff	floorf@u+3,??_floorf+3
  4522   005A54  0E20               	movlw	32
  4523   005A56  EF32  F02D         	goto	u4790
  4524   005A5A                     u4795:
  4525   005A5A  90D8               	bcf	status,0,c
  4526   005A5C  3225               	rrcf	(??_floorf+3)^0,f,c
  4527   005A5E  3224               	rrcf	(??_floorf+2)^0,f,c
  4528   005A60  3223               	rrcf	(??_floorf+1)^0,f,c
  4529   005A62  3222               	rrcf	??_floorf^0,f,c
  4530   005A64                     u4790:
  4531   005A64  2EE8               	decfsz	wreg,f,c
  4532   005A66  EF2D  F02D         	goto	u4795
  4533   005A6A  5022               	movf	??_floorf^0,w,c
  4534   005A6C  1023               	iorwf	(??_floorf+1)^0,w,c
  4535   005A6E  1024               	iorwf	(??_floorf+2)^0,w,c
  4536   005A70  1025               	iorwf	(??_floorf+3)^0,w,c
  4537   005A72  B4D8               	btfsc	status,2,c
  4538   005A74  EF3E  F02D         	goto	u4801
  4539   005A78  EF40  F02D         	goto	u4800
  4540   005A7C                     u4801:
  4541   005A7C  EF48  F02D         	goto	l949
  4542   005A80                     u4800:
  4543   005A80  5028               	movf	floorf@m^0,w,c
  4544   005A82  262E               	addwf	floorf@u^0,f,c
  4545   005A84  5029               	movf	(floorf@m+1)^0,w,c
  4546   005A86  222F               	addwfc	(floorf@u+1)^0,f,c
  4547   005A88  502A               	movf	(floorf@m+2)^0,w,c
  4548   005A8A  2230               	addwfc	(floorf@u+2)^0,f,c
  4549   005A8C  502B               	movf	(floorf@m+3)^0,w,c
  4550   005A8E  2231               	addwfc	(floorf@u+3)^0,f,c
  4551   005A90                     l949:
  4552   005A90  1C28               	comf	floorf@m^0,w,c
  4553   005A92  6E22               	movwf	??_floorf^0,c
  4554   005A94  1C29               	comf	(floorf@m+1)^0,w,c
  4555   005A96  6E23               	movwf	(??_floorf+1)^0,c
  4556   005A98  1C2A               	comf	(floorf@m+2)^0,w,c
  4557   005A9A  6E24               	movwf	(??_floorf+2)^0,c
  4558   005A9C  1C2B               	comf	(floorf@m+3)^0,w,c
  4559   005A9E  6E25               	movwf	(??_floorf+3)^0,c
  4560   005AA0  5022               	movf	??_floorf^0,w,c
  4561   005AA2  162E               	andwf	floorf@u^0,f,c
  4562   005AA4  5023               	movf	(??_floorf+1)^0,w,c
  4563   005AA6  162F               	andwf	(floorf@u+1)^0,f,c
  4564   005AA8  5024               	movf	(??_floorf+2)^0,w,c
  4565   005AAA  1630               	andwf	(floorf@u+2)^0,f,c
  4566   005AAC  5025               	movf	(??_floorf+3)^0,w,c
  4567   005AAE  1631               	andwf	(floorf@u+3)^0,f,c
  4568   005AB0  EF9E  F02D         	goto	l3964
  4569   005AB4                     l3956:
  4570   005AB4  C02E  F022         	movff	floorf@u,??_floorf
  4571   005AB8  C02F  F023         	movff	floorf@u+1,??_floorf+1
  4572   005ABC  C030  F024         	movff	floorf@u+2,??_floorf+2
  4573   005AC0  C031  F025         	movff	floorf@u+3,??_floorf+3
  4574   005AC4  0E20               	movlw	32
  4575   005AC6  EF6A  F02D         	goto	u4810
  4576   005ACA                     u4815:
  4577   005ACA  90D8               	bcf	status,0,c
  4578   005ACC  3225               	rrcf	(??_floorf+3)^0,f,c
  4579   005ACE  3224               	rrcf	(??_floorf+2)^0,f,c
  4580   005AD0  3223               	rrcf	(??_floorf+1)^0,f,c
  4581   005AD2  3222               	rrcf	??_floorf^0,f,c
  4582   005AD4                     u4810:
  4583   005AD4  2EE8               	decfsz	wreg,f,c
  4584   005AD6  EF65  F02D         	goto	u4815
  4585   005ADA  5022               	movf	??_floorf^0,w,c
  4586   005ADC  1023               	iorwf	(??_floorf+1)^0,w,c
  4587   005ADE  1024               	iorwf	(??_floorf+2)^0,w,c
  4588   005AE0  1025               	iorwf	(??_floorf+3)^0,w,c
  4589   005AE2  A4D8               	btfss	status,2,c
  4590   005AE4  EF76  F02D         	goto	u4821
  4591   005AE8  EF78  F02D         	goto	u4820
  4592   005AEC                     u4821:
  4593   005AEC  EF82  F02D         	goto	l3960
  4594   005AF0                     u4820:
  4595   005AF0  0E00               	movlw	0
  4596   005AF2  6E2E               	movwf	floorf@u^0,c
  4597   005AF4  0E00               	movlw	0
  4598   005AF6  6E2F               	movwf	(floorf@u+1)^0,c
  4599   005AF8  0E00               	movlw	0
  4600   005AFA  6E30               	movwf	(floorf@u+2)^0,c
  4601   005AFC  0E00               	movlw	0
  4602   005AFE  6E31               	movwf	(floorf@u+3)^0,c
  4603   005B00  EF9E  F02D         	goto	l3964
  4604   005B04                     l3960:
  4605   005B04  90D8               	bcf	status,0,c
  4606   005B06  342E               	rlcf	floorf@u^0,w,c
  4607   005B08  6E22               	movwf	??_floorf^0,c
  4608   005B0A  342F               	rlcf	(floorf@u+1)^0,w,c
  4609   005B0C  6E23               	movwf	(??_floorf+1)^0,c
  4610   005B0E  3430               	rlcf	(floorf@u+2)^0,w,c
  4611   005B10  6E24               	movwf	(??_floorf+2)^0,c
  4612   005B12  3431               	rlcf	(floorf@u+3)^0,w,c
  4613   005B14  6E25               	movwf	(??_floorf+3)^0,c
  4614   005B16  5022               	movf	??_floorf^0,w,c
  4615   005B18  1023               	iorwf	(??_floorf+1)^0,w,c
  4616   005B1A  1024               	iorwf	(??_floorf+2)^0,w,c
  4617   005B1C  1025               	iorwf	(??_floorf+3)^0,w,c
  4618   005B1E  B4D8               	btfsc	status,2,c
  4619   005B20  EF94  F02D         	goto	u4831
  4620   005B24  EF96  F02D         	goto	u4830
  4621   005B28                     u4831:
  4622   005B28  EF9E  F02D         	goto	l3964
  4623   005B2C                     u4830:
  4624   005B2C  0E00               	movlw	0
  4625   005B2E  6E2E               	movwf	floorf@u^0,c
  4626   005B30  0E00               	movlw	0
  4627   005B32  6E2F               	movwf	(floorf@u+1)^0,c
  4628   005B34  0E80               	movlw	128
  4629   005B36  6E30               	movwf	(floorf@u+2)^0,c
  4630   005B38  0EBF               	movlw	191
  4631   005B3A  6E31               	movwf	(floorf@u+3)^0,c
  4632   005B3C                     l3964:
  4633   005B3C  C02E  F01E         	movff	floorf@u,?_floorf
  4634   005B40  C02F  F01F         	movff	floorf@u+1,?_floorf+1
  4635   005B44  C030  F020         	movff	floorf@u+2,?_floorf+2
  4636   005B48  C031  F021         	movff	floorf@u+3,?_floorf+3
  4637   005B4C                     l946:
  4638   005B4C  0012               	return		;funcret
  4639   005B4E                     __end_of_floorf:
  4640                           	callstack 0
  4641                           
  4642 ;; *************** function ___fpclassifyf *****************
  4643 ;; Defined at:
  4644 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\__fpclassifyf.c"
  4645 ;; Parameters:    Size  Location     Type
  4646 ;;  x               4    4[COMRAM] float 
  4647 ;; Auto vars:     Size  Location     Type
  4648 ;;  u               4   14[COMRAM] struct .
  4649 ;;  e               2   12[COMRAM] int 
  4650 ;; Return value:  Size  Location     Type
  4651 ;;                  2    4[COMRAM] int 
  4652 ;; Registers used:
  4653 ;;		wreg, status,2, status,0
  4654 ;; Tracked objects:
  4655 ;;		On entry : 0/0
  4656 ;;		On exit  : 0/0
  4657 ;;		Unchanged: 0/0
  4658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4659 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4660 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4661 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4662 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4663 ;;Total ram usage:       14 bytes
  4664 ;; Hardware stack levels used: 1
  4665 ;; Hardware stack levels required when called: 1
  4666 ;; This function calls:
  4667 ;;		Nothing
  4668 ;; This function is called by:
  4669 ;;		_efgtoa
  4670 ;; This function uses a non-reentrant model
  4671 ;;
  4672                           
  4673                           	psect	text15
  4674   005F0C                     __ptext15:
  4675                           	callstack 0
  4676   005F0C                     ___fpclassifyf:
  4677                           	callstack 25
  4678   005F0C  C04A  F00F         	movff	___fpclassifyf@F465,___fpclassifyf@u
  4679   005F10  C04B  F010         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  4680   005F14  C04C  F011         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  4681   005F18  C04D  F012         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  4682   005F1C  C005  F00F         	movff	___fpclassifyf@x,___fpclassifyf@u
  4683   005F20  C006  F010         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  4684   005F24  C007  F011         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  4685   005F28  C008  F012         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  4686   005F2C  C00F  F009         	movff	___fpclassifyf@u,??___fpclassifyf
  4687   005F30  C010  F00A         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4688   005F34  C011  F00B         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4689   005F38  C012  F00C         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4690   005F3C  0E18               	movlw	24
  4691   005F3E  EFA6  F02F         	goto	u4650
  4692   005F42                     u4655:
  4693   005F42  90D8               	bcf	status,0,c
  4694   005F44  320C               	rrcf	(??___fpclassifyf+3)^0,f,c
  4695   005F46  320B               	rrcf	(??___fpclassifyf+2)^0,f,c
  4696   005F48  320A               	rrcf	(??___fpclassifyf+1)^0,f,c
  4697   005F4A  3209               	rrcf	??___fpclassifyf^0,f,c
  4698   005F4C                     u4650:
  4699   005F4C  2EE8               	decfsz	wreg,f,c
  4700   005F4E  EFA1  F02F         	goto	u4655
  4701   005F52  5009               	movf	??___fpclassifyf^0,w,c
  4702   005F54  6E0D               	movwf	___fpclassifyf@e^0,c
  4703   005F56  6A0E               	clrf	(___fpclassifyf@e+1)^0,c
  4704   005F58  500D               	movf	___fpclassifyf@e^0,w,c
  4705   005F5A  100E               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4706   005F5C  A4D8               	btfss	status,2,c
  4707   005F5E  EFB3  F02F         	goto	u4661
  4708   005F62  EFB5  F02F         	goto	u4660
  4709   005F66                     u4661:
  4710   005F66  EFD5  F02F         	goto	l3918
  4711   005F6A                     u4660:
  4712   005F6A  90D8               	bcf	status,0,c
  4713   005F6C  340F               	rlcf	___fpclassifyf@u^0,w,c
  4714   005F6E  6E09               	movwf	??___fpclassifyf^0,c
  4715   005F70  3410               	rlcf	(___fpclassifyf@u+1)^0,w,c
  4716   005F72  6E0A               	movwf	(??___fpclassifyf+1)^0,c
  4717   005F74  3411               	rlcf	(___fpclassifyf@u+2)^0,w,c
  4718   005F76  6E0B               	movwf	(??___fpclassifyf+2)^0,c
  4719   005F78  3412               	rlcf	(___fpclassifyf@u+3)^0,w,c
  4720   005F7A  6E0C               	movwf	(??___fpclassifyf+3)^0,c
  4721   005F7C  5009               	movf	??___fpclassifyf^0,w,c
  4722   005F7E  100A               	iorwf	(??___fpclassifyf+1)^0,w,c
  4723   005F80  100B               	iorwf	(??___fpclassifyf+2)^0,w,c
  4724   005F82  100C               	iorwf	(??___fpclassifyf+3)^0,w,c
  4725   005F84  A4D8               	btfss	status,2,c
  4726   005F86  EFC7  F02F         	goto	u4671
  4727   005F8A  EFC9  F02F         	goto	u4670
  4728   005F8E                     u4671:
  4729   005F8E  EFCF  F02F         	goto	l3914
  4730   005F92                     u4670:
  4731   005F92  0E00               	movlw	0
  4732   005F94  6E06               	movwf	(?___fpclassifyf+1)^0,c
  4733   005F96  0E02               	movlw	2
  4734   005F98  6E05               	movwf	?___fpclassifyf^0,c
  4735   005F9A  EF04  F030         	goto	l939
  4736   005F9E                     l3914:
  4737   005F9E  0E00               	movlw	0
  4738   005FA0  6E06               	movwf	(?___fpclassifyf+1)^0,c
  4739   005FA2  0E03               	movlw	3
  4740   005FA4  6E05               	movwf	?___fpclassifyf^0,c
  4741   005FA6  EF04  F030         	goto	l939
  4742   005FAA                     l3918:
  4743   005FAA  280D               	incf	___fpclassifyf@e^0,w,c
  4744   005FAC  100E               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4745   005FAE  A4D8               	btfss	status,2,c
  4746   005FB0  EFDC  F02F         	goto	u4681
  4747   005FB4  EFDE  F02F         	goto	u4680
  4748   005FB8                     u4681:
  4749   005FB8  EF00  F030         	goto	l3924
  4750   005FBC                     u4680:
  4751   005FBC  C00F  F009         	movff	___fpclassifyf@u,??___fpclassifyf
  4752   005FC0  C010  F00A         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4753   005FC4  C011  F00B         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4754   005FC8  C012  F00C         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4755   005FCC  0E09               	movlw	9
  4756   005FCE                     u4695:
  4757   005FCE  90D8               	bcf	status,0,c
  4758   005FD0  3609               	rlcf	??___fpclassifyf^0,f,c
  4759   005FD2  360A               	rlcf	(??___fpclassifyf+1)^0,f,c
  4760   005FD4  360B               	rlcf	(??___fpclassifyf+2)^0,f,c
  4761   005FD6  360C               	rlcf	(??___fpclassifyf+3)^0,f,c
  4762   005FD8  2EE8               	decfsz	wreg,f,c
  4763   005FDA  EFE7  F02F         	goto	u4695
  4764   005FDE  5009               	movf	??___fpclassifyf^0,w,c
  4765   005FE0  100A               	iorwf	(??___fpclassifyf+1)^0,w,c
  4766   005FE2  100B               	iorwf	(??___fpclassifyf+2)^0,w,c
  4767   005FE4  100C               	iorwf	(??___fpclassifyf+3)^0,w,c
  4768   005FE6  B4D8               	btfsc	status,2,c
  4769   005FE8  EFF8  F02F         	goto	u4701
  4770   005FEC  EFFB  F02F         	goto	u4700
  4771   005FF0                     u4701:
  4772   005FF0  0E01               	movlw	1
  4773   005FF2  EFFC  F02F         	goto	u4710
  4774   005FF6                     u4700:
  4775   005FF6  0E00               	movlw	0
  4776   005FF8                     u4710:
  4777   005FF8  6E05               	movwf	?___fpclassifyf^0,c
  4778   005FFA  6A06               	clrf	(?___fpclassifyf+1)^0,c
  4779   005FFC  EF04  F030         	goto	l939
  4780   006000                     l3924:
  4781   006000  0E00               	movlw	0
  4782   006002  6E06               	movwf	(?___fpclassifyf+1)^0,c
  4783   006004  0E04               	movlw	4
  4784   006006  6E05               	movwf	?___fpclassifyf^0,c
  4785   006008                     l939:
  4786   006008  0012               	return		;funcret
  4787   00600A                     __end_of___fpclassifyf:
  4788                           	callstack 0
  4789                           
  4790 ;; *************** function ___fltol *****************
  4791 ;; Defined at:
  4792 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\fltol.c"
  4793 ;; Parameters:    Size  Location     Type
  4794 ;;  f1              4    4[COMRAM] int 
  4795 ;; Auto vars:     Size  Location     Type
  4796 ;;  exp1            1   13[COMRAM] unsigned char 
  4797 ;;  sign1           1   12[COMRAM] unsigned char 
  4798 ;; Return value:  Size  Location     Type
  4799 ;;                  4    4[COMRAM] long 
  4800 ;; Registers used:
  4801 ;;		wreg, status,2, status,0
  4802 ;; Tracked objects:
  4803 ;;		On entry : 0/0
  4804 ;;		On exit  : 0/0
  4805 ;;		Unchanged: 0/0
  4806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4807 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4808 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4809 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4810 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4811 ;;Total ram usage:       10 bytes
  4812 ;; Hardware stack levels used: 1
  4813 ;; Hardware stack levels required when called: 1
  4814 ;; This function calls:
  4815 ;;		Nothing
  4816 ;; This function is called by:
  4817 ;;		_efgtoa
  4818 ;; This function uses a non-reentrant model
  4819 ;;
  4820                           
  4821                           	psect	text16
  4822   005D02                     __ptext16:
  4823                           	callstack 0
  4824   005D02                     ___fltol:
  4825                           	callstack 25
  4826   005D02  3407               	rlcf	(___fltol@f1+2)^0,w,c
  4827   005D04  3408               	rlcf	(___fltol@f1+3)^0,w,c
  4828   005D06  6E0E               	movwf	___fltol@exp1^0,c
  4829   005D08  500E               	movf	___fltol@exp1^0,w,c
  4830   005D0A  A4D8               	btfss	status,2,c
  4831   005D0C  EF8A  F02E         	goto	u4561
  4832   005D10  EF8C  F02E         	goto	u4560
  4833   005D14                     u4561:
  4834   005D14  EF96  F02E         	goto	l3856
  4835   005D18                     u4560:
  4836   005D18                     l3852:
  4837   005D18  0E00               	movlw	0
  4838   005D1A  6E05               	movwf	?___fltol^0,c
  4839   005D1C  0E00               	movlw	0
  4840   005D1E  6E06               	movwf	(?___fltol+1)^0,c
  4841   005D20  0E00               	movlw	0
  4842   005D22  6E07               	movwf	(?___fltol+2)^0,c
  4843   005D24  0E00               	movlw	0
  4844   005D26  6E08               	movwf	(?___fltol+3)^0,c
  4845   005D28  EF03  F02F         	goto	l430
  4846   005D2C                     l3856:
  4847   005D2C  C005  F009         	movff	___fltol@f1,??___fltol
  4848   005D30  C006  F00A         	movff	___fltol@f1+1,??___fltol+1
  4849   005D34  C007  F00B         	movff	___fltol@f1+2,??___fltol+2
  4850   005D38  C008  F00C         	movff	___fltol@f1+3,??___fltol+3
  4851   005D3C  0E20               	movlw	32
  4852   005D3E  EFA6  F02E         	goto	u4570
  4853   005D42                     u4575:
  4854   005D42  90D8               	bcf	status,0,c
  4855   005D44  320C               	rrcf	(??___fltol+3)^0,f,c
  4856   005D46  320B               	rrcf	(??___fltol+2)^0,f,c
  4857   005D48  320A               	rrcf	(??___fltol+1)^0,f,c
  4858   005D4A  3209               	rrcf	??___fltol^0,f,c
  4859   005D4C                     u4570:
  4860   005D4C  2EE8               	decfsz	wreg,f,c
  4861   005D4E  EFA1  F02E         	goto	u4575
  4862   005D52  5009               	movf	??___fltol^0,w,c
  4863   005D54  6E0D               	movwf	___fltol@sign1^0,c
  4864   005D56  8E07               	bsf	(___fltol@f1+2)^0,7,c
  4865   005D58  0EFF               	movlw	255
  4866   005D5A  1605               	andwf	___fltol@f1^0,f,c
  4867   005D5C  0EFF               	movlw	255
  4868   005D5E  1606               	andwf	(___fltol@f1+1)^0,f,c
  4869   005D60  0EFF               	movlw	255
  4870   005D62  1607               	andwf	(___fltol@f1+2)^0,f,c
  4871   005D64  0E00               	movlw	0
  4872   005D66  1608               	andwf	(___fltol@f1+3)^0,f,c
  4873   005D68  0E96               	movlw	150
  4874   005D6A  5E0E               	subwf	___fltol@exp1^0,f,c
  4875   005D6C  BE0E               	btfsc	___fltol@exp1^0,7,c
  4876   005D6E  EFBD  F02E         	goto	u4580
  4877   005D72  EFBB  F02E         	goto	u4581
  4878   005D76                     u4581:
  4879   005D76  EFD3  F02E         	goto	l3876
  4880   005D7A                     u4580:
  4881   005D7A  500E               	movf	___fltol@exp1^0,w,c
  4882   005D7C  0A80               	xorlw	128
  4883   005D7E  0F97               	addlw	151
  4884   005D80  B0D8               	btfsc	status,0,c
  4885   005D82  EFC5  F02E         	goto	u4591
  4886   005D86  EFC7  F02E         	goto	u4590
  4887   005D8A                     u4591:
  4888   005D8A  EFC9  F02E         	goto	l3872
  4889   005D8E                     u4590:
  4890   005D8E  EF8C  F02E         	goto	l3852
  4891   005D92                     l3872:
  4892   005D92  90D8               	bcf	status,0,c
  4893   005D94  3208               	rrcf	(___fltol@f1+3)^0,f,c
  4894   005D96  3207               	rrcf	(___fltol@f1+2)^0,f,c
  4895   005D98  3206               	rrcf	(___fltol@f1+1)^0,f,c
  4896   005D9A  3205               	rrcf	___fltol@f1^0,f,c
  4897   005D9C  3E0E               	incfsz	___fltol@exp1^0,f,c
  4898   005D9E  EFC9  F02E         	goto	l3872
  4899   005DA2  EFEB  F02E         	goto	l3886
  4900   005DA6                     l3876:
  4901   005DA6  0E1F               	movlw	31
  4902   005DA8  640E               	cpfsgt	___fltol@exp1^0,c
  4903   005DAA  EFD9  F02E         	goto	u4601
  4904   005DAE  EFDB  F02E         	goto	u4600
  4905   005DB2                     u4601:
  4906   005DB2  EFE3  F02E         	goto	l3884
  4907   005DB6                     u4600:
  4908   005DB6  EF8C  F02E         	goto	l3852
  4909   005DBA                     l3882:
  4910   005DBA  90D8               	bcf	status,0,c
  4911   005DBC  3605               	rlcf	___fltol@f1^0,f,c
  4912   005DBE  3606               	rlcf	(___fltol@f1+1)^0,f,c
  4913   005DC0  3607               	rlcf	(___fltol@f1+2)^0,f,c
  4914   005DC2  3608               	rlcf	(___fltol@f1+3)^0,f,c
  4915   005DC4  060E               	decf	___fltol@exp1^0,f,c
  4916   005DC6                     l3884:
  4917   005DC6  500E               	movf	___fltol@exp1^0,w,c
  4918   005DC8  A4D8               	btfss	status,2,c
  4919   005DCA  EFE9  F02E         	goto	u4611
  4920   005DCE  EFEB  F02E         	goto	u4610
  4921   005DD2                     u4611:
  4922   005DD2  EFDD  F02E         	goto	l3882
  4923   005DD6                     u4610:
  4924   005DD6                     l3886:
  4925   005DD6  500D               	movf	___fltol@sign1^0,w,c
  4926   005DD8  B4D8               	btfsc	status,2,c
  4927   005DDA  EFF1  F02E         	goto	u4621
  4928   005DDE  EFF3  F02E         	goto	u4620
  4929   005DE2                     u4621:
  4930   005DE2  EFFB  F02E         	goto	l3890
  4931   005DE6                     u4620:
  4932   005DE6  1E08               	comf	(___fltol@f1+3)^0,f,c
  4933   005DE8  1E07               	comf	(___fltol@f1+2)^0,f,c
  4934   005DEA  1E06               	comf	(___fltol@f1+1)^0,f,c
  4935   005DEC  6C05               	negf	___fltol@f1^0,c
  4936   005DEE  0E00               	movlw	0
  4937   005DF0  2206               	addwfc	(___fltol@f1+1)^0,f,c
  4938   005DF2  2207               	addwfc	(___fltol@f1+2)^0,f,c
  4939   005DF4  2208               	addwfc	(___fltol@f1+3)^0,f,c
  4940   005DF6                     l3890:
  4941   005DF6  C005  F005         	movff	___fltol@f1,?___fltol
  4942   005DFA  C006  F006         	movff	___fltol@f1+1,?___fltol+1
  4943   005DFE  C007  F007         	movff	___fltol@f1+2,?___fltol+2
  4944   005E02  C008  F008         	movff	___fltol@f1+3,?___fltol+3
  4945   005E06                     l430:
  4946   005E06  0012               	return		;funcret
  4947   005E08                     __end_of___fltol:
  4948                           	callstack 0
  4949                           
  4950 ;; *************** function ___flsub *****************
  4951 ;; Defined at:
  4952 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcadd.c"
  4953 ;; Parameters:    Size  Location     Type
  4954 ;;  b               4   43[COMRAM] long 
  4955 ;;  a               4   47[COMRAM] long 
  4956 ;; Auto vars:     Size  Location     Type
  4957 ;;		None
  4958 ;; Return value:  Size  Location     Type
  4959 ;;                  4   43[COMRAM] long 
  4960 ;; Registers used:
  4961 ;;		wreg, status,2, status,0, cstack
  4962 ;; Tracked objects:
  4963 ;;		On entry : 0/0
  4964 ;;		On exit  : 0/0
  4965 ;;		Unchanged: 0/0
  4966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4967 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4968 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4969 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4970 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4971 ;;Total ram usage:        8 bytes
  4972 ;; Hardware stack levels used: 1
  4973 ;; Hardware stack levels required when called: 2
  4974 ;; This function calls:
  4975 ;;		___fladd
  4976 ;; This function is called by:
  4977 ;;		_efgtoa
  4978 ;; This function uses a non-reentrant model
  4979 ;;
  4980                           
  4981                           	psect	text17
  4982   0065AC                     __ptext17:
  4983                           	callstack 0
  4984   0065AC                     ___flsub:
  4985                           	callstack 24
  4986   0065AC  0E00               	movlw	0
  4987   0065AE  1A30               	xorwf	___flsub@a^0,f,c
  4988   0065B0  0E00               	movlw	0
  4989   0065B2  1A31               	xorwf	(___flsub@a+1)^0,f,c
  4990   0065B4  0E00               	movlw	0
  4991   0065B6  1A32               	xorwf	(___flsub@a+2)^0,f,c
  4992   0065B8  0E80               	movlw	128
  4993   0065BA  1A33               	xorwf	(___flsub@a+3)^0,f,c
  4994   0065BC  C02C  F005         	movff	___flsub@b,___fladd@b
  4995   0065C0  C02D  F006         	movff	___flsub@b+1,___fladd@b+1
  4996   0065C4  C02E  F007         	movff	___flsub@b+2,___fladd@b+2
  4997   0065C8  C02F  F008         	movff	___flsub@b+3,___fladd@b+3
  4998   0065CC  C030  F009         	movff	___flsub@a,___fladd@a
  4999   0065D0  C031  F00A         	movff	___flsub@a+1,___fladd@a+1
  5000   0065D4  C032  F00B         	movff	___flsub@a+2,___fladd@a+2
  5001   0065D8  C033  F00C         	movff	___flsub@a+3,___fladd@a+3
  5002   0065DC  EC4C  F025         	call	___fladd	;wreg free
  5003   0065E0  C005  F02C         	movff	?___fladd,?___flsub
  5004   0065E4  C006  F02D         	movff	?___fladd+1,?___flsub+1
  5005   0065E8  C007  F02E         	movff	?___fladd+2,?___flsub+2
  5006   0065EC  C008  F02F         	movff	?___fladd+3,?___flsub+3
  5007   0065F0  0012               	return		;funcret
  5008   0065F2                     __end_of___flsub:
  5009                           	callstack 0
  5010                           
  5011 ;; *************** function ___fladd *****************
  5012 ;; Defined at:
  5013 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcadd.c"
  5014 ;; Parameters:    Size  Location     Type
  5015 ;;  b               4    4[COMRAM] long 
  5016 ;;  a               4    8[COMRAM] long 
  5017 ;; Auto vars:     Size  Location     Type
  5018 ;;  grs             1   19[COMRAM] unsigned char 
  5019 ;;  bexp            1   18[COMRAM] unsigned char 
  5020 ;;  aexp            1   17[COMRAM] unsigned char 
  5021 ;;  signs           1   16[COMRAM] unsigned char 
  5022 ;; Return value:  Size  Location     Type
  5023 ;;                  4    4[COMRAM] unsigned char 
  5024 ;; Registers used:
  5025 ;;		wreg, status,2, status,0
  5026 ;; Tracked objects:
  5027 ;;		On entry : 0/0
  5028 ;;		On exit  : 0/0
  5029 ;;		Unchanged: 0/0
  5030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5031 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5032 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5033 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5034 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5035 ;;Total ram usage:       16 bytes
  5036 ;; Hardware stack levels used: 1
  5037 ;; Hardware stack levels required when called: 1
  5038 ;; This function calls:
  5039 ;;		Nothing
  5040 ;; This function is called by:
  5041 ;;		___flsub
  5042 ;;		_efgtoa
  5043 ;; This function uses a non-reentrant model
  5044 ;;
  5045                           
  5046                           	psect	text18
  5047   004A98                     __ptext18:
  5048                           	callstack 0
  5049   004A98                     ___fladd:
  5050                           	callstack 24
  5051   004A98  5008               	movf	(___fladd@b+3)^0,w,c
  5052   004A9A  0B80               	andlw	128
  5053   004A9C  6E11               	movwf	___fladd@signs^0,c
  5054   004A9E  5008               	movf	(___fladd@b+3)^0,w,c
  5055   004AA0  2408               	addwf	(___fladd@b+3)^0,w,c
  5056   004AA2  6E13               	movwf	___fladd@bexp^0,c
  5057   004AA4  AE07               	btfss	(___fladd@b+2)^0,7,c
  5058   004AA6  EF57  F025         	goto	u3651
  5059   004AAA  EF59  F025         	goto	u3650
  5060   004AAE                     u3651:
  5061   004AAE  EF5A  F025         	goto	l3338
  5062   004AB2                     u3650:
  5063   004AB2  8013               	bsf	___fladd@bexp^0,0,c
  5064   004AB4                     l3338:
  5065   004AB4  5013               	movf	___fladd@bexp^0,w,c
  5066   004AB6  B4D8               	btfsc	status,2,c
  5067   004AB8  EF60  F025         	goto	u3661
  5068   004ABC  EF62  F025         	goto	u3660
  5069   004AC0                     u3661:
  5070   004AC0  EF76  F025         	goto	l3348
  5071   004AC4                     u3660:
  5072   004AC4  2813               	incf	___fladd@bexp^0,w,c
  5073   004AC6  A4D8               	btfss	status,2,c
  5074   004AC8  EF68  F025         	goto	u3671
  5075   004ACC  EF6A  F025         	goto	u3670
  5076   004AD0                     u3671:
  5077   004AD0  EF72  F025         	goto	l3344
  5078   004AD4                     u3670:
  5079   004AD4  0E00               	movlw	0
  5080   004AD6  6E05               	movwf	___fladd@b^0,c
  5081   004AD8  0E00               	movlw	0
  5082   004ADA  6E06               	movwf	(___fladd@b+1)^0,c
  5083   004ADC  0E00               	movlw	0
  5084   004ADE  6E07               	movwf	(___fladd@b+2)^0,c
  5085   004AE0  0E00               	movlw	0
  5086   004AE2  6E08               	movwf	(___fladd@b+3)^0,c
  5087   004AE4                     l3344:
  5088   004AE4  8E07               	bsf	(___fladd@b+2)^0,7,c
  5089   004AE6  6A08               	clrf	(___fladd@b+3)^0,c
  5090   004AE8  EF7E  F025         	goto	l3350
  5091   004AEC                     l3348:
  5092   004AEC  0E00               	movlw	0
  5093   004AEE  6E05               	movwf	___fladd@b^0,c
  5094   004AF0  0E00               	movlw	0
  5095   004AF2  6E06               	movwf	(___fladd@b+1)^0,c
  5096   004AF4  0E00               	movlw	0
  5097   004AF6  6E07               	movwf	(___fladd@b+2)^0,c
  5098   004AF8  0E00               	movlw	0
  5099   004AFA  6E08               	movwf	(___fladd@b+3)^0,c
  5100   004AFC                     l3350:
  5101   004AFC  500C               	movf	(___fladd@a+3)^0,w,c
  5102   004AFE  0B80               	andlw	128
  5103   004B00  6E12               	movwf	___fladd@aexp^0,c
  5104   004B02  5011               	movf	___fladd@signs^0,w,c
  5105   004B04  1812               	xorwf	___fladd@aexp^0,w,c
  5106   004B06  B4D8               	btfsc	status,2,c
  5107   004B08  EF88  F025         	goto	u3681
  5108   004B0C  EF8A  F025         	goto	u3680
  5109   004B10                     u3681:
  5110   004B10  EF8B  F025         	goto	l3356
  5111   004B14                     u3680:
  5112   004B14  8C11               	bsf	___fladd@signs^0,6,c
  5113   004B16                     l3356:
  5114   004B16  500C               	movf	(___fladd@a+3)^0,w,c
  5115   004B18  240C               	addwf	(___fladd@a+3)^0,w,c
  5116   004B1A  6E12               	movwf	___fladd@aexp^0,c
  5117   004B1C  AE0B               	btfss	(___fladd@a+2)^0,7,c
  5118   004B1E  EF93  F025         	goto	u3691
  5119   004B22  EF95  F025         	goto	u3690
  5120   004B26                     u3691:
  5121   004B26  EF96  F025         	goto	l3362
  5122   004B2A                     u3690:
  5123   004B2A  8012               	bsf	___fladd@aexp^0,0,c
  5124   004B2C                     l3362:
  5125   004B2C  5012               	movf	___fladd@aexp^0,w,c
  5126   004B2E  B4D8               	btfsc	status,2,c
  5127   004B30  EF9C  F025         	goto	u3701
  5128   004B34  EF9E  F025         	goto	u3700
  5129   004B38                     u3701:
  5130   004B38  EFB2  F025         	goto	l3372
  5131   004B3C                     u3700:
  5132   004B3C  2812               	incf	___fladd@aexp^0,w,c
  5133   004B3E  A4D8               	btfss	status,2,c
  5134   004B40  EFA4  F025         	goto	u3711
  5135   004B44  EFA6  F025         	goto	u3710
  5136   004B48                     u3711:
  5137   004B48  EFAE  F025         	goto	l3368
  5138   004B4C                     u3710:
  5139   004B4C  0E00               	movlw	0
  5140   004B4E  6E09               	movwf	___fladd@a^0,c
  5141   004B50  0E00               	movlw	0
  5142   004B52  6E0A               	movwf	(___fladd@a+1)^0,c
  5143   004B54  0E00               	movlw	0
  5144   004B56  6E0B               	movwf	(___fladd@a+2)^0,c
  5145   004B58  0E00               	movlw	0
  5146   004B5A  6E0C               	movwf	(___fladd@a+3)^0,c
  5147   004B5C                     l3368:
  5148   004B5C  8E0B               	bsf	(___fladd@a+2)^0,7,c
  5149   004B5E  6A0C               	clrf	(___fladd@a+3)^0,c
  5150   004B60  EFBA  F025         	goto	l3374
  5151   004B64                     l3372:
  5152   004B64  0E00               	movlw	0
  5153   004B66  6E09               	movwf	___fladd@a^0,c
  5154   004B68  0E00               	movlw	0
  5155   004B6A  6E0A               	movwf	(___fladd@a+1)^0,c
  5156   004B6C  0E00               	movlw	0
  5157   004B6E  6E0B               	movwf	(___fladd@a+2)^0,c
  5158   004B70  0E00               	movlw	0
  5159   004B72  6E0C               	movwf	(___fladd@a+3)^0,c
  5160   004B74                     l3374:
  5161   004B74  5013               	movf	___fladd@bexp^0,w,c
  5162   004B76  5C12               	subwf	___fladd@aexp^0,w,c
  5163   004B78  B0D8               	btfsc	status,0,c
  5164   004B7A  EFC1  F025         	goto	u3721
  5165   004B7E  EFC3  F025         	goto	u3720
  5166   004B82                     u3721:
  5167   004B82  EFEA  F025         	goto	l3410
  5168   004B86                     u3720:
  5169   004B86  AC11               	btfss	___fladd@signs^0,6,c
  5170   004B88  EFC8  F025         	goto	u3731
  5171   004B8C  EFCA  F025         	goto	u3730
  5172   004B90                     u3731:
  5173   004B90  EFCC  F025         	goto	l3380
  5174   004B94                     u3730:
  5175   004B94  0E80               	movlw	128
  5176   004B96  1A11               	xorwf	___fladd@signs^0,f,c
  5177   004B98                     l3380:
  5178   004B98  C013  F014         	movff	___fladd@bexp,___fladd@grs
  5179   004B9C  C012  F013         	movff	___fladd@aexp,___fladd@bexp
  5180   004BA0  C014  F012         	movff	___fladd@grs,___fladd@aexp
  5181   004BA4  C005  F014         	movff	___fladd@b,___fladd@grs
  5182   004BA8  C009  F005         	movff	___fladd@a,___fladd@b
  5183   004BAC  C014  F009         	movff	___fladd@grs,___fladd@a
  5184   004BB0  C006  F014         	movff	___fladd@b+1,___fladd@grs
  5185   004BB4  C00A  F006         	movff	___fladd@a+1,___fladd@b+1
  5186   004BB8  C014  F00A         	movff	___fladd@grs,___fladd@a+1
  5187   004BBC  C007  F014         	movff	___fladd@b+2,___fladd@grs
  5188   004BC0  C00B  F007         	movff	___fladd@a+2,___fladd@b+2
  5189   004BC4  C014  F00B         	movff	___fladd@grs,___fladd@a+2
  5190   004BC8  C008  F014         	movff	___fladd@b+3,___fladd@grs
  5191   004BCC  C00C  F008         	movff	___fladd@a+3,___fladd@b+3
  5192   004BD0  C014  F00C         	movff	___fladd@grs,___fladd@a+3
  5193   004BD4                     l3410:
  5194   004BD4  6A14               	clrf	___fladd@grs^0,c
  5195   004BD6  5013               	movf	___fladd@bexp^0,w,c
  5196   004BD8  C012  F00D         	movff	___fladd@aexp,??___fladd
  5197   004BDC  6A0E               	clrf	(??___fladd+1)^0,c
  5198   004BDE  5E0D               	subwf	??___fladd^0,f,c
  5199   004BE0  0E00               	movlw	0
  5200   004BE2  5A0E               	subwfb	(??___fladd+1)^0,f,c
  5201   004BE4  BE0E               	btfsc	(??___fladd+1)^0,7,c
  5202   004BE6  EFFE  F025         	goto	u3741
  5203   004BEA  500E               	movf	(??___fladd+1)^0,w,c
  5204   004BEC  E109               	bnz	u3740
  5205   004BEE  0E1A               	movlw	26
  5206   004BF0  5C0D               	subwf	??___fladd^0,w,c
  5207   004BF2  A0D8               	btfss	status,0,c
  5208   004BF4  EFFE  F025         	goto	u3741
  5209   004BF8  EF00  F026         	goto	u3740
  5210   004BFC                     u3741:
  5211   004BFC  EF37  F026         	goto	l662
  5212   004C00                     u3740:
  5213   004C00  5005               	movf	___fladd@b^0,w,c
  5214   004C02  1006               	iorwf	(___fladd@b+1)^0,w,c
  5215   004C04  1007               	iorwf	(___fladd@b+2)^0,w,c
  5216   004C06  1008               	iorwf	(___fladd@b+3)^0,w,c
  5217   004C08  A4D8               	btfss	status,2,c
  5218   004C0A  EF09  F026         	goto	u3751
  5219   004C0E  EF0C  F026         	goto	u3750
  5220   004C12                     u3751:
  5221   004C12  0E01               	movlw	1
  5222   004C14  EF0D  F026         	goto	u3760
  5223   004C18                     u3750:
  5224   004C18  0E00               	movlw	0
  5225   004C1A                     u3760:
  5226   004C1A  6E14               	movwf	___fladd@grs^0,c
  5227   004C1C  0E00               	movlw	0
  5228   004C1E  6E05               	movwf	___fladd@b^0,c
  5229   004C20  0E00               	movlw	0
  5230   004C22  6E06               	movwf	(___fladd@b+1)^0,c
  5231   004C24  0E00               	movlw	0
  5232   004C26  6E07               	movwf	(___fladd@b+2)^0,c
  5233   004C28  0E00               	movlw	0
  5234   004C2A  6E08               	movwf	(___fladd@b+3)^0,c
  5235   004C2C  C012  F013         	movff	___fladd@aexp,___fladd@bexp
  5236   004C30  EF40  F026         	goto	l661
  5237   004C34                     l663:
  5238   004C34  A014               	btfss	___fladd@grs^0,0,c
  5239   004C36  EF1F  F026         	goto	u3771
  5240   004C3A  EF21  F026         	goto	u3770
  5241   004C3E                     u3771:
  5242   004C3E  EF27  F026         	goto	l3420
  5243   004C42                     u3770:
  5244   004C42  90D8               	bcf	status,0,c
  5245   004C44  3014               	rrcf	___fladd@grs^0,w,c
  5246   004C46  0901               	iorlw	1
  5247   004C48  6E14               	movwf	___fladd@grs^0,c
  5248   004C4A  EF29  F026         	goto	l3422
  5249   004C4E                     l3420:
  5250   004C4E  90D8               	bcf	status,0,c
  5251   004C50  3214               	rrcf	___fladd@grs^0,f,c
  5252   004C52                     l3422:
  5253   004C52  A005               	btfss	___fladd@b^0,0,c
  5254   004C54  EF2E  F026         	goto	u3781
  5255   004C58  EF30  F026         	goto	u3780
  5256   004C5C                     u3781:
  5257   004C5C  EF31  F026         	goto	l3426
  5258   004C60                     u3780:
  5259   004C60  8E14               	bsf	___fladd@grs^0,7,c
  5260   004C62                     l3426:
  5261   004C62  3408               	rlcf	(___fladd@b+3)^0,w,c
  5262   004C64  3208               	rrcf	(___fladd@b+3)^0,f,c
  5263   004C66  3207               	rrcf	(___fladd@b+2)^0,f,c
  5264   004C68  3206               	rrcf	(___fladd@b+1)^0,f,c
  5265   004C6A  3205               	rrcf	___fladd@b^0,f,c
  5266   004C6C  2A13               	incf	___fladd@bexp^0,f,c
  5267   004C6E                     l662:
  5268   004C6E  5012               	movf	___fladd@aexp^0,w,c
  5269   004C70  5C13               	subwf	___fladd@bexp^0,w,c
  5270   004C72  A0D8               	btfss	status,0,c
  5271   004C74  EF3E  F026         	goto	u3791
  5272   004C78  EF40  F026         	goto	u3790
  5273   004C7C                     u3791:
  5274   004C7C  EF1A  F026         	goto	l663
  5275   004C80                     u3790:
  5276   004C80                     l661:
  5277   004C80  BC11               	btfsc	___fladd@signs^0,6,c
  5278   004C82  EF45  F026         	goto	u3801
  5279   004C86  EF47  F026         	goto	u3800
  5280   004C8A                     u3801:
  5281   004C8A  EF87  F026         	goto	l3454
  5282   004C8E                     u3800:
  5283   004C8E  5013               	movf	___fladd@bexp^0,w,c
  5284   004C90  A4D8               	btfss	status,2,c
  5285   004C92  EF4D  F026         	goto	u3811
  5286   004C96  EF4F  F026         	goto	u3810
  5287   004C9A                     u3811:
  5288   004C9A  EF59  F026         	goto	l3436
  5289   004C9E                     u3810:
  5290   004C9E  0E00               	movlw	0
  5291   004CA0  6E05               	movwf	?___fladd^0,c
  5292   004CA2  0E00               	movlw	0
  5293   004CA4  6E06               	movwf	(?___fladd+1)^0,c
  5294   004CA6  0E00               	movlw	0
  5295   004CA8  6E07               	movwf	(?___fladd+2)^0,c
  5296   004CAA  0E00               	movlw	0
  5297   004CAC  6E08               	movwf	(?___fladd+3)^0,c
  5298   004CAE  EFA6  F027         	goto	l670
  5299   004CB2                     l3436:
  5300   004CB2  5009               	movf	___fladd@a^0,w,c
  5301   004CB4  2605               	addwf	___fladd@b^0,f,c
  5302   004CB6  500A               	movf	(___fladd@a+1)^0,w,c
  5303   004CB8  2206               	addwfc	(___fladd@b+1)^0,f,c
  5304   004CBA  500B               	movf	(___fladd@a+2)^0,w,c
  5305   004CBC  2207               	addwfc	(___fladd@b+2)^0,f,c
  5306   004CBE  500C               	movf	(___fladd@a+3)^0,w,c
  5307   004CC0  2208               	addwfc	(___fladd@b+3)^0,f,c
  5308   004CC2  A008               	btfss	(___fladd@b+3)^0,0,c
  5309   004CC4  EF66  F026         	goto	u3821
  5310   004CC8  EF68  F026         	goto	u3820
  5311   004CCC                     u3821:
  5312   004CCC  EF14  F027         	goto	l675
  5313   004CD0                     u3820:
  5314   004CD0  A014               	btfss	___fladd@grs^0,0,c
  5315   004CD2  EF6D  F026         	goto	u3831
  5316   004CD6  EF6F  F026         	goto	u3830
  5317   004CDA                     u3831:
  5318   004CDA  EF75  F026         	goto	l3444
  5319   004CDE                     u3830:
  5320   004CDE  90D8               	bcf	status,0,c
  5321   004CE0  3014               	rrcf	___fladd@grs^0,w,c
  5322   004CE2  0901               	iorlw	1
  5323   004CE4  6E14               	movwf	___fladd@grs^0,c
  5324   004CE6  EF77  F026         	goto	l3446
  5325   004CEA                     l3444:
  5326   004CEA  90D8               	bcf	status,0,c
  5327   004CEC  3214               	rrcf	___fladd@grs^0,f,c
  5328   004CEE                     l3446:
  5329   004CEE  A005               	btfss	___fladd@b^0,0,c
  5330   004CF0  EF7C  F026         	goto	u3841
  5331   004CF4  EF7E  F026         	goto	u3840
  5332   004CF8                     u3841:
  5333   004CF8  EF7F  F026         	goto	l3450
  5334   004CFC                     u3840:
  5335   004CFC  8E14               	bsf	___fladd@grs^0,7,c
  5336   004CFE                     l3450:
  5337   004CFE  3408               	rlcf	(___fladd@b+3)^0,w,c
  5338   004D00  3208               	rrcf	(___fladd@b+3)^0,f,c
  5339   004D02  3207               	rrcf	(___fladd@b+2)^0,f,c
  5340   004D04  3206               	rrcf	(___fladd@b+1)^0,f,c
  5341   004D06  3205               	rrcf	___fladd@b^0,f,c
  5342   004D08  2A13               	incf	___fladd@bexp^0,f,c
  5343   004D0A  EF14  F027         	goto	l675
  5344   004D0E                     l3454:
  5345   004D0E  5009               	movf	___fladd@a^0,w,c
  5346   004D10  5C05               	subwf	___fladd@b^0,w,c
  5347   004D12  500A               	movf	(___fladd@a+1)^0,w,c
  5348   004D14  5806               	subwfb	(___fladd@b+1)^0,w,c
  5349   004D16  500B               	movf	(___fladd@a+2)^0,w,c
  5350   004D18  5807               	subwfb	(___fladd@b+2)^0,w,c
  5351   004D1A  5008               	movf	(___fladd@b+3)^0,w,c
  5352   004D1C  0A80               	xorlw	128
  5353   004D1E  6E0D               	movwf	??___fladd^0,c
  5354   004D20  500C               	movf	(___fladd@a+3)^0,w,c
  5355   004D22  0A80               	xorlw	128
  5356   004D24  580D               	subwfb	??___fladd^0,w,c
  5357   004D26  B0D8               	btfsc	status,0,c
  5358   004D28  EF98  F026         	goto	u3851
  5359   004D2C  EF9A  F026         	goto	u3850
  5360   004D30                     u3851:
  5361   004D30  EFC5  F026         	goto	l3464
  5362   004D34                     u3850:
  5363   004D34  5005               	movf	___fladd@b^0,w,c
  5364   004D36  5C09               	subwf	___fladd@a^0,w,c
  5365   004D38  6E0D               	movwf	??___fladd^0,c
  5366   004D3A  5006               	movf	(___fladd@b+1)^0,w,c
  5367   004D3C  580A               	subwfb	(___fladd@a+1)^0,w,c
  5368   004D3E  6E0E               	movwf	(??___fladd+1)^0,c
  5369   004D40  5007               	movf	(___fladd@b+2)^0,w,c
  5370   004D42  580B               	subwfb	(___fladd@a+2)^0,w,c
  5371   004D44  6E0F               	movwf	(??___fladd+2)^0,c
  5372   004D46  5008               	movf	(___fladd@b+3)^0,w,c
  5373   004D48  580C               	subwfb	(___fladd@a+3)^0,w,c
  5374   004D4A  6E10               	movwf	(??___fladd+3)^0,c
  5375   004D4C  0EFF               	movlw	255
  5376   004D4E  240D               	addwf	??___fladd^0,w,c
  5377   004D50  6E05               	movwf	___fladd@b^0,c
  5378   004D52  0EFF               	movlw	255
  5379   004D54  200E               	addwfc	(??___fladd+1)^0,w,c
  5380   004D56  6E06               	movwf	(___fladd@b+1)^0,c
  5381   004D58  0EFF               	movlw	255
  5382   004D5A  200F               	addwfc	(??___fladd+2)^0,w,c
  5383   004D5C  6E07               	movwf	(___fladd@b+2)^0,c
  5384   004D5E  0EFF               	movlw	255
  5385   004D60  2010               	addwfc	(??___fladd+3)^0,w,c
  5386   004D62  6E08               	movwf	(___fladd@b+3)^0,c
  5387   004D64  0E80               	movlw	128
  5388   004D66  1A11               	xorwf	___fladd@signs^0,f,c
  5389   004D68  6C14               	negf	___fladd@grs^0,c
  5390   004D6A  5014               	movf	___fladd@grs^0,w,c
  5391   004D6C  A4D8               	btfss	status,2,c
  5392   004D6E  EFBB  F026         	goto	u3861
  5393   004D72  EFBD  F026         	goto	u3860
  5394   004D76                     u3861:
  5395   004D76  EFCD  F026         	goto	l678
  5396   004D7A                     u3860:
  5397   004D7A  0E01               	movlw	1
  5398   004D7C  2605               	addwf	___fladd@b^0,f,c
  5399   004D7E  0E00               	movlw	0
  5400   004D80  2206               	addwfc	(___fladd@b+1)^0,f,c
  5401   004D82  2207               	addwfc	(___fladd@b+2)^0,f,c
  5402   004D84  2208               	addwfc	(___fladd@b+3)^0,f,c
  5403   004D86  EFCD  F026         	goto	l678
  5404   004D8A                     l3464:
  5405   004D8A  5009               	movf	___fladd@a^0,w,c
  5406   004D8C  5E05               	subwf	___fladd@b^0,f,c
  5407   004D8E  500A               	movf	(___fladd@a+1)^0,w,c
  5408   004D90  5A06               	subwfb	(___fladd@b+1)^0,f,c
  5409   004D92  500B               	movf	(___fladd@a+2)^0,w,c
  5410   004D94  5A07               	subwfb	(___fladd@b+2)^0,f,c
  5411   004D96  500C               	movf	(___fladd@a+3)^0,w,c
  5412   004D98  5A08               	subwfb	(___fladd@b+3)^0,f,c
  5413   004D9A                     l678:
  5414   004D9A  5005               	movf	___fladd@b^0,w,c
  5415   004D9C  1006               	iorwf	(___fladd@b+1)^0,w,c
  5416   004D9E  1007               	iorwf	(___fladd@b+2)^0,w,c
  5417   004DA0  1008               	iorwf	(___fladd@b+3)^0,w,c
  5418   004DA2  A4D8               	btfss	status,2,c
  5419   004DA4  EFD6  F026         	goto	u3871
  5420   004DA8  EFD8  F026         	goto	u3870
  5421   004DAC                     u3871:
  5422   004DAC  EF0D  F027         	goto	l3488
  5423   004DB0                     u3870:
  5424   004DB0  5014               	movf	___fladd@grs^0,w,c
  5425   004DB2  A4D8               	btfss	status,2,c
  5426   004DB4  EFDE  F026         	goto	u3881
  5427   004DB8  EFE0  F026         	goto	u3880
  5428   004DBC                     u3881:
  5429   004DBC  EF0D  F027         	goto	l3488
  5430   004DC0                     u3880:
  5431   004DC0  0E00               	movlw	0
  5432   004DC2  6E05               	movwf	?___fladd^0,c
  5433   004DC4  0E00               	movlw	0
  5434   004DC6  6E06               	movwf	(?___fladd+1)^0,c
  5435   004DC8  0E00               	movlw	0
  5436   004DCA  6E07               	movwf	(?___fladd+2)^0,c
  5437   004DCC  0E00               	movlw	0
  5438   004DCE  6E08               	movwf	(?___fladd+3)^0,c
  5439   004DD0  EFA6  F027         	goto	l670
  5440   004DD4                     l3472:
  5441   004DD4  90D8               	bcf	status,0,c
  5442   004DD6  3605               	rlcf	___fladd@b^0,f,c
  5443   004DD8  3606               	rlcf	(___fladd@b+1)^0,f,c
  5444   004DDA  3607               	rlcf	(___fladd@b+2)^0,f,c
  5445   004DDC  3608               	rlcf	(___fladd@b+3)^0,f,c
  5446   004DDE  AE14               	btfss	___fladd@grs^0,7,c
  5447   004DE0  EFF4  F026         	goto	u3891
  5448   004DE4  EFF6  F026         	goto	u3890
  5449   004DE8                     u3891:
  5450   004DE8  EFF7  F026         	goto	l3478
  5451   004DEC                     u3890:
  5452   004DEC  8005               	bsf	___fladd@b^0,0,c
  5453   004DEE                     l3478:
  5454   004DEE  A014               	btfss	___fladd@grs^0,0,c
  5455   004DF0  EFFC  F026         	goto	u3901
  5456   004DF4  EFFE  F026         	goto	u3900
  5457   004DF8                     u3901:
  5458   004DF8  EF02  F027         	goto	l3482
  5459   004DFC                     u3900:
  5460   004DFC  80D8               	bsf	status,0,c
  5461   004DFE  3614               	rlcf	___fladd@grs^0,f,c
  5462   004E00  EF04  F027         	goto	l3484
  5463   004E04                     l3482:
  5464   004E04  90D8               	bcf	status,0,c
  5465   004E06  3614               	rlcf	___fladd@grs^0,f,c
  5466   004E08                     l3484:
  5467   004E08  5013               	movf	___fladd@bexp^0,w,c
  5468   004E0A  B4D8               	btfsc	status,2,c
  5469   004E0C  EF0A  F027         	goto	u3911
  5470   004E10  EF0C  F027         	goto	u3910
  5471   004E14                     u3911:
  5472   004E14  EF0D  F027         	goto	l3488
  5473   004E18                     u3910:
  5474   004E18  0613               	decf	___fladd@bexp^0,f,c
  5475   004E1A                     l3488:
  5476   004E1A  AE07               	btfss	(___fladd@b+2)^0,7,c
  5477   004E1C  EF12  F027         	goto	u3921
  5478   004E20  EF14  F027         	goto	u3920
  5479   004E24                     u3921:
  5480   004E24  EFEA  F026         	goto	l3472
  5481   004E28                     u3920:
  5482   004E28                     l675:
  5483   004E28  6A12               	clrf	___fladd@aexp^0,c
  5484   004E2A  AE14               	btfss	___fladd@grs^0,7,c
  5485   004E2C  EF1A  F027         	goto	u3931
  5486   004E30  EF1C  F027         	goto	u3930
  5487   004E34                     u3931:
  5488   004E34  EF34  F027         	goto	l687
  5489   004E38                     u3930:
  5490   004E38  C014  F00D         	movff	___fladd@grs,??___fladd
  5491   004E3C  0E7F               	movlw	127
  5492   004E3E  160D               	andwf	??___fladd^0,f,c
  5493   004E40  B4D8               	btfsc	status,2,c
  5494   004E42  EF25  F027         	goto	u3941
  5495   004E46  EF27  F027         	goto	u3940
  5496   004E4A                     u3941:
  5497   004E4A  EF2B  F027         	goto	l688
  5498   004E4E                     u3940:
  5499   004E4E                     l3492:
  5500   004E4E  0E01               	movlw	1
  5501   004E50  6E12               	movwf	___fladd@aexp^0,c
  5502   004E52  EF34  F027         	goto	l687
  5503   004E56                     l688:
  5504   004E56  A005               	btfss	___fladd@b^0,0,c
  5505   004E58  EF30  F027         	goto	u3951
  5506   004E5C  EF32  F027         	goto	u3950
  5507   004E60                     u3951:
  5508   004E60  EF34  F027         	goto	l687
  5509   004E64                     u3950:
  5510   004E64  EF27  F027         	goto	l3492
  5511   004E68                     l687:
  5512   004E68  5012               	movf	___fladd@aexp^0,w,c
  5513   004E6A  B4D8               	btfsc	status,2,c
  5514   004E6C  EF3A  F027         	goto	u3961
  5515   004E70  EF3C  F027         	goto	u3960
  5516   004E74                     u3961:
  5517   004E74  EF67  F027         	goto	l3504
  5518   004E78                     u3960:
  5519   004E78  0E01               	movlw	1
  5520   004E7A  2605               	addwf	___fladd@b^0,f,c
  5521   004E7C  0E00               	movlw	0
  5522   004E7E  2206               	addwfc	(___fladd@b+1)^0,f,c
  5523   004E80  2207               	addwfc	(___fladd@b+2)^0,f,c
  5524   004E82  2208               	addwfc	(___fladd@b+3)^0,f,c
  5525   004E84  A008               	btfss	(___fladd@b+3)^0,0,c
  5526   004E86  EF47  F027         	goto	u3971
  5527   004E8A  EF49  F027         	goto	u3970
  5528   004E8E                     u3971:
  5529   004E8E  EF67  F027         	goto	l3504
  5530   004E92                     u3970:
  5531   004E92  C005  F00D         	movff	___fladd@b,??___fladd
  5532   004E96  C006  F00E         	movff	___fladd@b+1,??___fladd+1
  5533   004E9A  C007  F00F         	movff	___fladd@b+2,??___fladd+2
  5534   004E9E  C008  F010         	movff	___fladd@b+3,??___fladd+3
  5535   004EA2  3410               	rlcf	(??___fladd+3)^0,w,c
  5536   004EA4  3210               	rrcf	(??___fladd+3)^0,f,c
  5537   004EA6  320F               	rrcf	(??___fladd+2)^0,f,c
  5538   004EA8  320E               	rrcf	(??___fladd+1)^0,f,c
  5539   004EAA  320D               	rrcf	??___fladd^0,f,c
  5540   004EAC  C00D  F005         	movff	??___fladd,___fladd@b
  5541   004EB0  C00E  F006         	movff	??___fladd+1,___fladd@b+1
  5542   004EB4  C00F  F007         	movff	??___fladd+2,___fladd@b+2
  5543   004EB8  C010  F008         	movff	??___fladd+3,___fladd@b+3
  5544   004EBC  2813               	incf	___fladd@bexp^0,w,c
  5545   004EBE  B4D8               	btfsc	status,2,c
  5546   004EC0  EF64  F027         	goto	u3981
  5547   004EC4  EF66  F027         	goto	u3980
  5548   004EC8                     u3981:
  5549   004EC8  EF67  F027         	goto	l3504
  5550   004ECC                     u3980:
  5551   004ECC  2A13               	incf	___fladd@bexp^0,f,c
  5552   004ECE                     l3504:
  5553   004ECE  2813               	incf	___fladd@bexp^0,w,c
  5554   004ED0  B4D8               	btfsc	status,2,c
  5555   004ED2  EF6D  F027         	goto	u3991
  5556   004ED6  EF6F  F027         	goto	u3990
  5557   004EDA                     u3991:
  5558   004EDA  EF77  F027         	goto	l3508
  5559   004EDE                     u3990:
  5560   004EDE  5013               	movf	___fladd@bexp^0,w,c
  5561   004EE0  A4D8               	btfss	status,2,c
  5562   004EE2  EF75  F027         	goto	u4001
  5563   004EE6  EF77  F027         	goto	u4000
  5564   004EEA                     u4001:
  5565   004EEA  EF88  F027         	goto	l694
  5566   004EEE                     u4000:
  5567   004EEE                     l3508:
  5568   004EEE  0E00               	movlw	0
  5569   004EF0  6E05               	movwf	___fladd@b^0,c
  5570   004EF2  0E00               	movlw	0
  5571   004EF4  6E06               	movwf	(___fladd@b+1)^0,c
  5572   004EF6  0E00               	movlw	0
  5573   004EF8  6E07               	movwf	(___fladd@b+2)^0,c
  5574   004EFA  0E00               	movlw	0
  5575   004EFC  6E08               	movwf	(___fladd@b+3)^0,c
  5576   004EFE  5013               	movf	___fladd@bexp^0,w,c
  5577   004F00  A4D8               	btfss	status,2,c
  5578   004F02  EF85  F027         	goto	u4011
  5579   004F06  EF87  F027         	goto	u4010
  5580   004F0A                     u4011:
  5581   004F0A  EF88  F027         	goto	l694
  5582   004F0E                     u4010:
  5583   004F0E  6A11               	clrf	___fladd@signs^0,c
  5584   004F10                     l694:
  5585   004F10  A013               	btfss	___fladd@bexp^0,0,c
  5586   004F12  EF8D  F027         	goto	u4021
  5587   004F16  EF8F  F027         	goto	u4020
  5588   004F1A                     u4021:
  5589   004F1A  EF92  F027         	goto	l3514
  5590   004F1E                     u4020:
  5591   004F1E  8E07               	bsf	(___fladd@b+2)^0,7,c
  5592   004F20  EF93  F027         	goto	l3516
  5593   004F24                     l3514:
  5594   004F24  9E07               	bcf	(___fladd@b+2)^0,7,c
  5595   004F26                     l3516:
  5596   004F26  90D8               	bcf	status,0,c
  5597   004F28  3013               	rrcf	___fladd@bexp^0,w,c
  5598   004F2A  6E08               	movwf	(___fladd@b+3)^0,c
  5599   004F2C  AE11               	btfss	___fladd@signs^0,7,c
  5600   004F2E  EF9B  F027         	goto	u4031
  5601   004F32  EF9D  F027         	goto	u4030
  5602   004F36                     u4031:
  5603   004F36  EF9E  F027         	goto	l3522
  5604   004F3A                     u4030:
  5605   004F3A  8E08               	bsf	(___fladd@b+3)^0,7,c
  5606   004F3C                     l3522:
  5607   004F3C  C005  F005         	movff	___fladd@b,?___fladd
  5608   004F40  C006  F006         	movff	___fladd@b+1,?___fladd+1
  5609   004F44  C007  F007         	movff	___fladd@b+2,?___fladd+2
  5610   004F48  C008  F008         	movff	___fladd@b+3,?___fladd+3
  5611   004F4C                     l670:
  5612   004F4C  0012               	return		;funcret
  5613   004F4E                     __end_of___fladd:
  5614                           	callstack 0
  5615                           
  5616 ;; *************** function ___flneg *****************
  5617 ;; Defined at:
  5618 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\flneg.c"
  5619 ;; Parameters:    Size  Location     Type
  5620 ;;  f1              4    4[COMRAM] unsigned char 
  5621 ;; Auto vars:     Size  Location     Type
  5622 ;;		None
  5623 ;; Return value:  Size  Location     Type
  5624 ;;                  4    4[COMRAM] unsigned char 
  5625 ;; Registers used:
  5626 ;;		wreg, status,2, status,0
  5627 ;; Tracked objects:
  5628 ;;		On entry : 0/0
  5629 ;;		On exit  : 0/0
  5630 ;;		Unchanged: 0/0
  5631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5632 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5635 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5636 ;;Total ram usage:        4 bytes
  5637 ;; Hardware stack levels used: 1
  5638 ;; Hardware stack levels required when called: 1
  5639 ;; This function calls:
  5640 ;;		Nothing
  5641 ;; This function is called by:
  5642 ;;		_efgtoa
  5643 ;; This function uses a non-reentrant model
  5644 ;;
  5645                           
  5646                           	psect	text19
  5647   0066A6                     __ptext19:
  5648                           	callstack 0
  5649   0066A6                     ___flneg:
  5650                           	callstack 25
  5651   0066A6  5005               	movf	___flneg@f1^0,w,c
  5652   0066A8  1006               	iorwf	(___flneg@f1+1)^0,w,c
  5653   0066AA  1007               	iorwf	(___flneg@f1+2)^0,w,c
  5654   0066AC  1008               	iorwf	(___flneg@f1+3)^0,w,c
  5655   0066AE  B4D8               	btfsc	status,2,c
  5656   0066B0  EF5C  F033         	goto	u4551
  5657   0066B4  EF5E  F033         	goto	u4550
  5658   0066B8                     u4551:
  5659   0066B8  EF66  F033         	goto	l3846
  5660   0066BC                     u4550:
  5661   0066BC  0E00               	movlw	0
  5662   0066BE  1A05               	xorwf	___flneg@f1^0,f,c
  5663   0066C0  0E00               	movlw	0
  5664   0066C2  1A06               	xorwf	(___flneg@f1+1)^0,f,c
  5665   0066C4  0E00               	movlw	0
  5666   0066C6  1A07               	xorwf	(___flneg@f1+2)^0,f,c
  5667   0066C8  0E80               	movlw	128
  5668   0066CA  1A08               	xorwf	(___flneg@f1+3)^0,f,c
  5669   0066CC                     l3846:
  5670   0066CC  C005  F005         	movff	___flneg@f1,?___flneg
  5671   0066D0  C006  F006         	movff	___flneg@f1+1,?___flneg+1
  5672   0066D4  C007  F007         	movff	___flneg@f1+2,?___flneg+2
  5673   0066D8  C008  F008         	movff	___flneg@f1+3,?___flneg+3
  5674   0066DC  0012               	return		;funcret
  5675   0066DE                     __end_of___flneg:
  5676                           	callstack 0
  5677                           
  5678 ;; *************** function ___flmul *****************
  5679 ;; Defined at:
  5680 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcmul.c"
  5681 ;; Parameters:    Size  Location     Type
  5682 ;;  b               4   18[COMRAM] unsigned char 
  5683 ;;  a               4   22[COMRAM] unsigned char 
  5684 ;; Auto vars:     Size  Location     Type
  5685 ;;  prod            4   37[COMRAM] struct .
  5686 ;;  grs             4   32[COMRAM] unsigned long 
  5687 ;;  temp            2   41[COMRAM] struct .
  5688 ;;  bexp            1   36[COMRAM] unsigned char 
  5689 ;;  aexp            1   31[COMRAM] unsigned char 
  5690 ;;  sign            1   30[COMRAM] unsigned char 
  5691 ;; Return value:  Size  Location     Type
  5692 ;;                  4   18[COMRAM] unsigned char 
  5693 ;; Registers used:
  5694 ;;		wreg, status,2, status,0, prodl, prodh
  5695 ;; Tracked objects:
  5696 ;;		On entry : 0/0
  5697 ;;		On exit  : 0/0
  5698 ;;		Unchanged: 0/0
  5699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5700 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5701 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5702 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5703 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5704 ;;Total ram usage:       25 bytes
  5705 ;; Hardware stack levels used: 1
  5706 ;; Hardware stack levels required when called: 1
  5707 ;; This function calls:
  5708 ;;		Nothing
  5709 ;; This function is called by:
  5710 ;;		_main
  5711 ;;		_efgtoa
  5712 ;; This function uses a non-reentrant model
  5713 ;;
  5714                           
  5715                           	psect	text20
  5716   004F4E                     __ptext20:
  5717                           	callstack 0
  5718   004F4E                     ___flmul:
  5719                           	callstack 25
  5720   004F4E  5016               	movf	(___flmul@b+3)^0,w,c
  5721   004F50  0B80               	andlw	128
  5722   004F52  6E1F               	movwf	___flmul@sign^0,c
  5723   004F54  5016               	movf	(___flmul@b+3)^0,w,c
  5724   004F56  2416               	addwf	(___flmul@b+3)^0,w,c
  5725   004F58  6E25               	movwf	___flmul@bexp^0,c
  5726   004F5A  AE15               	btfss	(___flmul@b+2)^0,7,c
  5727   004F5C  EFB2  F027         	goto	u4281
  5728   004F60  EFB4  F027         	goto	u4280
  5729   004F64                     u4281:
  5730   004F64  EFB5  F027         	goto	l3676
  5731   004F68                     u4280:
  5732   004F68  8025               	bsf	___flmul@bexp^0,0,c
  5733   004F6A                     l3676:
  5734   004F6A  5025               	movf	___flmul@bexp^0,w,c
  5735   004F6C  B4D8               	btfsc	status,2,c
  5736   004F6E  EFBB  F027         	goto	u4291
  5737   004F72  EFBD  F027         	goto	u4290
  5738   004F76                     u4291:
  5739   004F76  EFD0  F027         	goto	l3684
  5740   004F7A                     u4290:
  5741   004F7A  2825               	incf	___flmul@bexp^0,w,c
  5742   004F7C  A4D8               	btfss	status,2,c
  5743   004F7E  EFC3  F027         	goto	u4301
  5744   004F82  EFC5  F027         	goto	u4300
  5745   004F86                     u4301:
  5746   004F86  EFCD  F027         	goto	l3682
  5747   004F8A                     u4300:
  5748   004F8A  0E00               	movlw	0
  5749   004F8C  6E13               	movwf	___flmul@b^0,c
  5750   004F8E  0E00               	movlw	0
  5751   004F90  6E14               	movwf	(___flmul@b+1)^0,c
  5752   004F92  0E00               	movlw	0
  5753   004F94  6E15               	movwf	(___flmul@b+2)^0,c
  5754   004F96  0E00               	movlw	0
  5755   004F98  6E16               	movwf	(___flmul@b+3)^0,c
  5756   004F9A                     l3682:
  5757   004F9A  8E15               	bsf	(___flmul@b+2)^0,7,c
  5758   004F9C  EFD8  F027         	goto	l3686
  5759   004FA0                     l3684:
  5760   004FA0  0E00               	movlw	0
  5761   004FA2  6E13               	movwf	___flmul@b^0,c
  5762   004FA4  0E00               	movlw	0
  5763   004FA6  6E14               	movwf	(___flmul@b+1)^0,c
  5764   004FA8  0E00               	movlw	0
  5765   004FAA  6E15               	movwf	(___flmul@b+2)^0,c
  5766   004FAC  0E00               	movlw	0
  5767   004FAE  6E16               	movwf	(___flmul@b+3)^0,c
  5768   004FB0                     l3686:
  5769   004FB0  501A               	movf	(___flmul@a+3)^0,w,c
  5770   004FB2  0B80               	andlw	128
  5771   004FB4  1A1F               	xorwf	___flmul@sign^0,f,c
  5772   004FB6  501A               	movf	(___flmul@a+3)^0,w,c
  5773   004FB8  241A               	addwf	(___flmul@a+3)^0,w,c
  5774   004FBA  6E20               	movwf	___flmul@aexp^0,c
  5775   004FBC  AE19               	btfss	(___flmul@a+2)^0,7,c
  5776   004FBE  EFE3  F027         	goto	u4311
  5777   004FC2  EFE5  F027         	goto	u4310
  5778   004FC6                     u4311:
  5779   004FC6  EFE6  F027         	goto	l3694
  5780   004FCA                     u4310:
  5781   004FCA  8020               	bsf	___flmul@aexp^0,0,c
  5782   004FCC                     l3694:
  5783   004FCC  5020               	movf	___flmul@aexp^0,w,c
  5784   004FCE  B4D8               	btfsc	status,2,c
  5785   004FD0  EFEC  F027         	goto	u4321
  5786   004FD4  EFEE  F027         	goto	u4320
  5787   004FD8                     u4321:
  5788   004FD8  EF01  F028         	goto	l3702
  5789   004FDC                     u4320:
  5790   004FDC  2820               	incf	___flmul@aexp^0,w,c
  5791   004FDE  A4D8               	btfss	status,2,c
  5792   004FE0  EFF4  F027         	goto	u4331
  5793   004FE4  EFF6  F027         	goto	u4330
  5794   004FE8                     u4331:
  5795   004FE8  EFFE  F027         	goto	l3700
  5796   004FEC                     u4330:
  5797   004FEC  0E00               	movlw	0
  5798   004FEE  6E17               	movwf	___flmul@a^0,c
  5799   004FF0  0E00               	movlw	0
  5800   004FF2  6E18               	movwf	(___flmul@a+1)^0,c
  5801   004FF4  0E00               	movlw	0
  5802   004FF6  6E19               	movwf	(___flmul@a+2)^0,c
  5803   004FF8  0E00               	movlw	0
  5804   004FFA  6E1A               	movwf	(___flmul@a+3)^0,c
  5805   004FFC                     l3700:
  5806   004FFC  8E19               	bsf	(___flmul@a+2)^0,7,c
  5807   004FFE  EF09  F028         	goto	l747
  5808   005002                     l3702:
  5809   005002  0E00               	movlw	0
  5810   005004  6E17               	movwf	___flmul@a^0,c
  5811   005006  0E00               	movlw	0
  5812   005008  6E18               	movwf	(___flmul@a+1)^0,c
  5813   00500A  0E00               	movlw	0
  5814   00500C  6E19               	movwf	(___flmul@a+2)^0,c
  5815   00500E  0E00               	movlw	0
  5816   005010  6E1A               	movwf	(___flmul@a+3)^0,c
  5817   005012                     l747:
  5818   005012  5020               	movf	___flmul@aexp^0,w,c
  5819   005014  B4D8               	btfsc	status,2,c
  5820   005016  EF0F  F028         	goto	u4341
  5821   00501A  EF11  F028         	goto	u4340
  5822   00501E                     u4341:
  5823   00501E  EF19  F028         	goto	l3706
  5824   005022                     u4340:
  5825   005022  5025               	movf	___flmul@bexp^0,w,c
  5826   005024  A4D8               	btfss	status,2,c
  5827   005026  EF17  F028         	goto	u4351
  5828   00502A  EF19  F028         	goto	u4350
  5829   00502E                     u4351:
  5830   00502E  EF23  F028         	goto	l3710
  5831   005032                     u4350:
  5832   005032                     l3706:
  5833   005032  0E00               	movlw	0
  5834   005034  6E13               	movwf	?___flmul^0,c
  5835   005036  0E00               	movlw	0
  5836   005038  6E14               	movwf	(?___flmul+1)^0,c
  5837   00503A  0E00               	movlw	0
  5838   00503C  6E15               	movwf	(?___flmul+2)^0,c
  5839   00503E  0E00               	movlw	0
  5840   005040  6E16               	movwf	(?___flmul+3)^0,c
  5841   005042  EFCB  F029         	goto	l751
  5842   005046                     l3710:
  5843   005046  5019               	movf	(___flmul@a+2)^0,w,c
  5844   005048  0213               	mulwf	___flmul@b^0,c
  5845   00504A  006F FFCC  F02A    	movff	prodl,___flmul@temp
  5846   005050  006F FFD0  F02B    	movff	prodh,___flmul@temp+1
  5847   005056  502A               	movf	___flmul@temp^0,w,c
  5848   005058  6E21               	movwf	___flmul@grs^0,c
  5849   00505A  6A22               	clrf	(___flmul@grs+1)^0,c
  5850   00505C  6A23               	clrf	(___flmul@grs+2)^0,c
  5851   00505E  6A24               	clrf	(___flmul@grs+3)^0,c
  5852   005060  502B               	movf	(___flmul@temp+1)^0,w,c
  5853   005062  6E26               	movwf	___flmul@prod^0,c
  5854   005064  6A27               	clrf	(___flmul@prod+1)^0,c
  5855   005066  6A28               	clrf	(___flmul@prod+2)^0,c
  5856   005068  6A29               	clrf	(___flmul@prod+3)^0,c
  5857   00506A  5018               	movf	(___flmul@a+1)^0,w,c
  5858   00506C  0214               	mulwf	(___flmul@b+1)^0,c
  5859   00506E  006F FFCC  F02A    	movff	prodl,___flmul@temp
  5860   005074  006F FFD0  F02B    	movff	prodh,___flmul@temp+1
  5861   00507A  502A               	movf	___flmul@temp^0,w,c
  5862   00507C  2621               	addwf	___flmul@grs^0,f,c
  5863   00507E  0E00               	movlw	0
  5864   005080  2222               	addwfc	(___flmul@grs+1)^0,f,c
  5865   005082  2223               	addwfc	(___flmul@grs+2)^0,f,c
  5866   005084  2224               	addwfc	(___flmul@grs+3)^0,f,c
  5867   005086  502B               	movf	(___flmul@temp+1)^0,w,c
  5868   005088  2626               	addwf	___flmul@prod^0,f,c
  5869   00508A  0E00               	movlw	0
  5870   00508C  2227               	addwfc	(___flmul@prod+1)^0,f,c
  5871   00508E  2228               	addwfc	(___flmul@prod+2)^0,f,c
  5872   005090  2229               	addwfc	(___flmul@prod+3)^0,f,c
  5873   005092  5017               	movf	___flmul@a^0,w,c
  5874   005094  0215               	mulwf	(___flmul@b+2)^0,c
  5875   005096  006F FFCC  F02A    	movff	prodl,___flmul@temp
  5876   00509C  006F FFD0  F02B    	movff	prodh,___flmul@temp+1
  5877   0050A2  502A               	movf	___flmul@temp^0,w,c
  5878   0050A4  2621               	addwf	___flmul@grs^0,f,c
  5879   0050A6  0E00               	movlw	0
  5880   0050A8  2222               	addwfc	(___flmul@grs+1)^0,f,c
  5881   0050AA  2223               	addwfc	(___flmul@grs+2)^0,f,c
  5882   0050AC  2224               	addwfc	(___flmul@grs+3)^0,f,c
  5883   0050AE  502B               	movf	(___flmul@temp+1)^0,w,c
  5884   0050B0  2626               	addwf	___flmul@prod^0,f,c
  5885   0050B2  0E00               	movlw	0
  5886   0050B4  2227               	addwfc	(___flmul@prod+1)^0,f,c
  5887   0050B6  2228               	addwfc	(___flmul@prod+2)^0,f,c
  5888   0050B8  2229               	addwfc	(___flmul@prod+3)^0,f,c
  5889   0050BA  C023  F024         	movff	___flmul@grs+2,___flmul@grs+3
  5890   0050BE  C022  F023         	movff	___flmul@grs+1,___flmul@grs+2
  5891   0050C2  C021  F022         	movff	___flmul@grs,___flmul@grs+1
  5892   0050C6  6A21               	clrf	___flmul@grs^0,c
  5893   0050C8  5017               	movf	___flmul@a^0,w,c
  5894   0050CA  0214               	mulwf	(___flmul@b+1)^0,c
  5895   0050CC  006F FFCC  F02A    	movff	prodl,___flmul@temp
  5896   0050D2  006F FFD0  F02B    	movff	prodh,___flmul@temp+1
  5897   0050D8  502A               	movf	___flmul@temp^0,w,c
  5898   0050DA  2621               	addwf	___flmul@grs^0,f,c
  5899   0050DC  502B               	movf	(___flmul@temp+1)^0,w,c
  5900   0050DE  2222               	addwfc	(___flmul@grs+1)^0,f,c
  5901   0050E0  0E00               	movlw	0
  5902   0050E2  2223               	addwfc	(___flmul@grs+2)^0,f,c
  5903   0050E4  0E00               	movlw	0
  5904   0050E6  2224               	addwfc	(___flmul@grs+3)^0,f,c
  5905   0050E8  5018               	movf	(___flmul@a+1)^0,w,c
  5906   0050EA  0213               	mulwf	___flmul@b^0,c
  5907   0050EC  006F FFCC  F02A    	movff	prodl,___flmul@temp
  5908   0050F2  006F FFD0  F02B    	movff	prodh,___flmul@temp+1
  5909   0050F8  502A               	movf	___flmul@temp^0,w,c
  5910   0050FA  2621               	addwf	___flmul@grs^0,f,c
  5911   0050FC  502B               	movf	(___flmul@temp+1)^0,w,c
  5912   0050FE  2222               	addwfc	(___flmul@grs+1)^0,f,c
  5913   005100  0E00               	movlw	0
  5914   005102  2223               	addwfc	(___flmul@grs+2)^0,f,c
  5915   005104  0E00               	movlw	0
  5916   005106  2224               	addwfc	(___flmul@grs+3)^0,f,c
  5917   005108  C023  F024         	movff	___flmul@grs+2,___flmul@grs+3
  5918   00510C  C022  F023         	movff	___flmul@grs+1,___flmul@grs+2
  5919   005110  C021  F022         	movff	___flmul@grs,___flmul@grs+1
  5920   005114  6A21               	clrf	___flmul@grs^0,c
  5921   005116  5017               	movf	___flmul@a^0,w,c
  5922   005118  0213               	mulwf	___flmul@b^0,c
  5923   00511A  006F FFCC  F02A    	movff	prodl,___flmul@temp
  5924   005120  006F FFD0  F02B    	movff	prodh,___flmul@temp+1
  5925   005126  502A               	movf	___flmul@temp^0,w,c
  5926   005128  2621               	addwf	___flmul@grs^0,f,c
  5927   00512A  502B               	movf	(___flmul@temp+1)^0,w,c
  5928   00512C  2222               	addwfc	(___flmul@grs+1)^0,f,c
  5929   00512E  0E00               	movlw	0
  5930   005130  2223               	addwfc	(___flmul@grs+2)^0,f,c
  5931   005132  0E00               	movlw	0
  5932   005134  2224               	addwfc	(___flmul@grs+3)^0,f,c
  5933   005136  5019               	movf	(___flmul@a+2)^0,w,c
  5934   005138  0214               	mulwf	(___flmul@b+1)^0,c
  5935   00513A  006F FFCC  F02A    	movff	prodl,___flmul@temp
  5936   005140  006F FFD0  F02B    	movff	prodh,___flmul@temp+1
  5937   005146  502A               	movf	___flmul@temp^0,w,c
  5938   005148  2626               	addwf	___flmul@prod^0,f,c
  5939   00514A  502B               	movf	(___flmul@temp+1)^0,w,c
  5940   00514C  2227               	addwfc	(___flmul@prod+1)^0,f,c
  5941   00514E  0E00               	movlw	0
  5942   005150  2228               	addwfc	(___flmul@prod+2)^0,f,c
  5943   005152  0E00               	movlw	0
  5944   005154  2229               	addwfc	(___flmul@prod+3)^0,f,c
  5945   005156  5018               	movf	(___flmul@a+1)^0,w,c
  5946   005158  0215               	mulwf	(___flmul@b+2)^0,c
  5947   00515A  006F FFCC  F02A    	movff	prodl,___flmul@temp
  5948   005160  006F FFD0  F02B    	movff	prodh,___flmul@temp+1
  5949   005166  502A               	movf	___flmul@temp^0,w,c
  5950   005168  2626               	addwf	___flmul@prod^0,f,c
  5951   00516A  502B               	movf	(___flmul@temp+1)^0,w,c
  5952   00516C  2227               	addwfc	(___flmul@prod+1)^0,f,c
  5953   00516E  0E00               	movlw	0
  5954   005170  2228               	addwfc	(___flmul@prod+2)^0,f,c
  5955   005172  0E00               	movlw	0
  5956   005174  2229               	addwfc	(___flmul@prod+3)^0,f,c
  5957   005176  5019               	movf	(___flmul@a+2)^0,w,c
  5958   005178  0215               	mulwf	(___flmul@b+2)^0,c
  5959   00517A  006F FFCC  F02A    	movff	prodl,___flmul@temp
  5960   005180  006F FFD0  F02B    	movff	prodh,___flmul@temp+1
  5961   005186  502A               	movf	___flmul@temp^0,w,c
  5962   005188  6E1B               	movwf	??___flmul^0,c
  5963   00518A  502B               	movf	(___flmul@temp+1)^0,w,c
  5964   00518C  6E1C               	movwf	(??___flmul+1)^0,c
  5965   00518E  6A1D               	clrf	(??___flmul+2)^0,c
  5966   005190  6A1E               	clrf	(??___flmul+3)^0,c
  5967   005192  C01D  F01E         	movff	??___flmul+2,??___flmul+3
  5968   005196  C01C  F01D         	movff	??___flmul+1,??___flmul+2
  5969   00519A  C01B  F01C         	movff	??___flmul,??___flmul+1
  5970   00519E  6A1B               	clrf	??___flmul^0,c
  5971   0051A0  501B               	movf	??___flmul^0,w,c
  5972   0051A2  2626               	addwf	___flmul@prod^0,f,c
  5973   0051A4  501C               	movf	(??___flmul+1)^0,w,c
  5974   0051A6  2227               	addwfc	(___flmul@prod+1)^0,f,c
  5975   0051A8  501D               	movf	(??___flmul+2)^0,w,c
  5976   0051AA  2228               	addwfc	(___flmul@prod+2)^0,f,c
  5977   0051AC  501E               	movf	(??___flmul+3)^0,w,c
  5978   0051AE  2229               	addwfc	(___flmul@prod+3)^0,f,c
  5979   0051B0  C021  F01B         	movff	___flmul@grs,??___flmul
  5980   0051B4  C022  F01C         	movff	___flmul@grs+1,??___flmul+1
  5981   0051B8  C023  F01D         	movff	___flmul@grs+2,??___flmul+2
  5982   0051BC  C024  F01E         	movff	___flmul@grs+3,??___flmul+3
  5983   0051C0  0E19               	movlw	25
  5984   0051C2  EFE8  F028         	goto	u4360
  5985   0051C6                     u4365:
  5986   0051C6  90D8               	bcf	status,0,c
  5987   0051C8  321E               	rrcf	(??___flmul+3)^0,f,c
  5988   0051CA  321D               	rrcf	(??___flmul+2)^0,f,c
  5989   0051CC  321C               	rrcf	(??___flmul+1)^0,f,c
  5990   0051CE  321B               	rrcf	??___flmul^0,f,c
  5991   0051D0                     u4360:
  5992   0051D0  2EE8               	decfsz	wreg,f,c
  5993   0051D2  EFE3  F028         	goto	u4365
  5994   0051D6  501B               	movf	??___flmul^0,w,c
  5995   0051D8  2626               	addwf	___flmul@prod^0,f,c
  5996   0051DA  501C               	movf	(??___flmul+1)^0,w,c
  5997   0051DC  2227               	addwfc	(___flmul@prod+1)^0,f,c
  5998   0051DE  501D               	movf	(??___flmul+2)^0,w,c
  5999   0051E0  2228               	addwfc	(___flmul@prod+2)^0,f,c
  6000   0051E2  501E               	movf	(??___flmul+3)^0,w,c
  6001   0051E4  2229               	addwfc	(___flmul@prod+3)^0,f,c
  6002   0051E6  C023  F024         	movff	___flmul@grs+2,___flmul@grs+3
  6003   0051EA  C022  F023         	movff	___flmul@grs+1,___flmul@grs+2
  6004   0051EE  C021  F022         	movff	___flmul@grs,___flmul@grs+1
  6005   0051F2  6A21               	clrf	___flmul@grs^0,c
  6006   0051F4  5020               	movf	___flmul@aexp^0,w,c
  6007   0051F6  C025  F01B         	movff	___flmul@bexp,??___flmul
  6008   0051FA  6A1C               	clrf	(??___flmul+1)^0,c
  6009   0051FC  261B               	addwf	??___flmul^0,f,c
  6010   0051FE  0E00               	movlw	0
  6011   005200  221C               	addwfc	(??___flmul+1)^0,f,c
  6012   005202  0E82               	movlw	130
  6013   005204  241B               	addwf	??___flmul^0,w,c
  6014   005206  6E2A               	movwf	___flmul@temp^0,c
  6015   005208  0EFF               	movlw	255
  6016   00520A  201C               	addwfc	(??___flmul+1)^0,w,c
  6017   00520C  6E2B               	movwf	(___flmul@temp+1)^0,c
  6018   00520E  EF1E  F029         	goto	l3758
  6019   005212                     l3752:
  6020   005212  90D8               	bcf	status,0,c
  6021   005214  3626               	rlcf	___flmul@prod^0,f,c
  6022   005216  3627               	rlcf	(___flmul@prod+1)^0,f,c
  6023   005218  3628               	rlcf	(___flmul@prod+2)^0,f,c
  6024   00521A  3629               	rlcf	(___flmul@prod+3)^0,f,c
  6025   00521C  AE24               	btfss	(___flmul@grs+3)^0,7,c
  6026   00521E  EF13  F029         	goto	u4371
  6027   005222  EF15  F029         	goto	u4370
  6028   005226                     u4371:
  6029   005226  EF16  F029         	goto	l754
  6030   00522A                     u4370:
  6031   00522A  8026               	bsf	___flmul@prod^0,0,c
  6032   00522C                     l754:
  6033   00522C  90D8               	bcf	status,0,c
  6034   00522E  3621               	rlcf	___flmul@grs^0,f,c
  6035   005230  3622               	rlcf	(___flmul@grs+1)^0,f,c
  6036   005232  3623               	rlcf	(___flmul@grs+2)^0,f,c
  6037   005234  3624               	rlcf	(___flmul@grs+3)^0,f,c
  6038   005236  062A               	decf	___flmul@temp^0,f,c
  6039   005238  A0D8               	btfss	status,0,c
  6040   00523A  062B               	decf	(___flmul@temp+1)^0,f,c
  6041   00523C                     l3758:
  6042   00523C  AE28               	btfss	(___flmul@prod+2)^0,7,c
  6043   00523E  EF23  F029         	goto	u4381
  6044   005242  EF25  F029         	goto	u4380
  6045   005246                     u4381:
  6046   005246  EF09  F029         	goto	l3752
  6047   00524A                     u4380:
  6048   00524A  6A20               	clrf	___flmul@aexp^0,c
  6049   00524C  AE24               	btfss	(___flmul@grs+3)^0,7,c
  6050   00524E  EF2B  F029         	goto	u4391
  6051   005252  EF2D  F029         	goto	u4390
  6052   005256                     u4391:
  6053   005256  EF51  F029         	goto	l756
  6054   00525A                     u4390:
  6055   00525A  0EFF               	movlw	255
  6056   00525C  1421               	andwf	___flmul@grs^0,w,c
  6057   00525E  6E1B               	movwf	??___flmul^0,c
  6058   005260  0EFF               	movlw	255
  6059   005262  1422               	andwf	(___flmul@grs+1)^0,w,c
  6060   005264  6E1C               	movwf	(??___flmul+1)^0,c
  6061   005266  0EFF               	movlw	255
  6062   005268  1423               	andwf	(___flmul@grs+2)^0,w,c
  6063   00526A  6E1D               	movwf	(??___flmul+2)^0,c
  6064   00526C  0E7F               	movlw	127
  6065   00526E  1424               	andwf	(___flmul@grs+3)^0,w,c
  6066   005270  6E1E               	movwf	(??___flmul+3)^0,c
  6067   005272  501B               	movf	??___flmul^0,w,c
  6068   005274  101C               	iorwf	(??___flmul+1)^0,w,c
  6069   005276  101D               	iorwf	(??___flmul+2)^0,w,c
  6070   005278  101E               	iorwf	(??___flmul+3)^0,w,c
  6071   00527A  B4D8               	btfsc	status,2,c
  6072   00527C  EF42  F029         	goto	u4401
  6073   005280  EF44  F029         	goto	u4400
  6074   005284                     u4401:
  6075   005284  EF48  F029         	goto	l757
  6076   005288                     u4400:
  6077   005288                     l3762:
  6078   005288  0E01               	movlw	1
  6079   00528A  6E20               	movwf	___flmul@aexp^0,c
  6080   00528C  EF51  F029         	goto	l756
  6081   005290                     l757:
  6082   005290  A026               	btfss	___flmul@prod^0,0,c
  6083   005292  EF4D  F029         	goto	u4411
  6084   005296  EF4F  F029         	goto	u4410
  6085   00529A                     u4411:
  6086   00529A  EF51  F029         	goto	l756
  6087   00529E                     u4410:
  6088   00529E  EF44  F029         	goto	l3762
  6089   0052A2                     l756:
  6090   0052A2  5020               	movf	___flmul@aexp^0,w,c
  6091   0052A4  B4D8               	btfsc	status,2,c
  6092   0052A6  EF57  F029         	goto	u4421
  6093   0052AA  EF59  F029         	goto	u4420
  6094   0052AE                     u4421:
  6095   0052AE  EF7D  F029         	goto	l3774
  6096   0052B2                     u4420:
  6097   0052B2  0E01               	movlw	1
  6098   0052B4  2626               	addwf	___flmul@prod^0,f,c
  6099   0052B6  0E00               	movlw	0
  6100   0052B8  2227               	addwfc	(___flmul@prod+1)^0,f,c
  6101   0052BA  2228               	addwfc	(___flmul@prod+2)^0,f,c
  6102   0052BC  2229               	addwfc	(___flmul@prod+3)^0,f,c
  6103   0052BE  A029               	btfss	(___flmul@prod+3)^0,0,c
  6104   0052C0  EF64  F029         	goto	u4431
  6105   0052C4  EF66  F029         	goto	u4430
  6106   0052C8                     u4431:
  6107   0052C8  EF7D  F029         	goto	l3774
  6108   0052CC                     u4430:
  6109   0052CC  C026  F01B         	movff	___flmul@prod,??___flmul
  6110   0052D0  C027  F01C         	movff	___flmul@prod+1,??___flmul+1
  6111   0052D4  C028  F01D         	movff	___flmul@prod+2,??___flmul+2
  6112   0052D8  C029  F01E         	movff	___flmul@prod+3,??___flmul+3
  6113   0052DC  341E               	rlcf	(??___flmul+3)^0,w,c
  6114   0052DE  321E               	rrcf	(??___flmul+3)^0,f,c
  6115   0052E0  321D               	rrcf	(??___flmul+2)^0,f,c
  6116   0052E2  321C               	rrcf	(??___flmul+1)^0,f,c
  6117   0052E4  321B               	rrcf	??___flmul^0,f,c
  6118   0052E6  C01B  F026         	movff	??___flmul,___flmul@prod
  6119   0052EA  C01C  F027         	movff	??___flmul+1,___flmul@prod+1
  6120   0052EE  C01D  F028         	movff	??___flmul+2,___flmul@prod+2
  6121   0052F2  C01E  F029         	movff	??___flmul+3,___flmul@prod+3
  6122   0052F6  4A2A               	infsnz	___flmul@temp^0,f,c
  6123   0052F8  2A2B               	incf	(___flmul@temp+1)^0,f,c
  6124   0052FA                     l3774:
  6125   0052FA  BE2B               	btfsc	(___flmul@temp+1)^0,7,c
  6126   0052FC  EF88  F029         	goto	u4441
  6127   005300  502B               	movf	(___flmul@temp+1)^0,w,c
  6128   005302  E108               	bnz	u4440
  6129   005304  282A               	incf	___flmul@temp^0,w,c
  6130   005306  A0D8               	btfss	status,0,c
  6131   005308  EF88  F029         	goto	u4441
  6132   00530C  EF8A  F029         	goto	u4440
  6133   005310                     u4441:
  6134   005310  EF94  F029         	goto	l3778
  6135   005314                     u4440:
  6136   005314  0E00               	movlw	0
  6137   005316  6E26               	movwf	___flmul@prod^0,c
  6138   005318  0E00               	movlw	0
  6139   00531A  6E27               	movwf	(___flmul@prod+1)^0,c
  6140   00531C  0E80               	movlw	128
  6141   00531E  6E28               	movwf	(___flmul@prod+2)^0,c
  6142   005320  0E7F               	movlw	127
  6143   005322  6E29               	movwf	(___flmul@prod+3)^0,c
  6144   005324  EFC1  F029         	goto	l3792
  6145   005328                     l3778:
  6146   005328  BE2B               	btfsc	(___flmul@temp+1)^0,7,c
  6147   00532A  EFA1  F029         	goto	u4450
  6148   00532E  502B               	movf	(___flmul@temp+1)^0,w,c
  6149   005330  E106               	bnz	u4451
  6150   005332  042A               	decf	___flmul@temp^0,w,c
  6151   005334  B0D8               	btfsc	status,0,c
  6152   005336  EF9F  F029         	goto	u4451
  6153   00533A  EFA1  F029         	goto	u4450
  6154   00533E                     u4451:
  6155   00533E  EFAC  F029         	goto	l764
  6156   005342                     u4450:
  6157   005342  0E00               	movlw	0
  6158   005344  6E26               	movwf	___flmul@prod^0,c
  6159   005346  0E00               	movlw	0
  6160   005348  6E27               	movwf	(___flmul@prod+1)^0,c
  6161   00534A  0E00               	movlw	0
  6162   00534C  6E28               	movwf	(___flmul@prod+2)^0,c
  6163   00534E  0E00               	movlw	0
  6164   005350  6E29               	movwf	(___flmul@prod+3)^0,c
  6165   005352  6A1F               	clrf	___flmul@sign^0,c
  6166   005354  EFC1  F029         	goto	l3792
  6167   005358                     l764:
  6168   005358  C02A  F025         	movff	___flmul@temp,___flmul@bexp
  6169   00535C  0EFF               	movlw	255
  6170   00535E  1626               	andwf	___flmul@prod^0,f,c
  6171   005360  0EFF               	movlw	255
  6172   005362  1627               	andwf	(___flmul@prod+1)^0,f,c
  6173   005364  0E7F               	movlw	127
  6174   005366  1628               	andwf	(___flmul@prod+2)^0,f,c
  6175   005368  0E00               	movlw	0
  6176   00536A  1629               	andwf	(___flmul@prod+3)^0,f,c
  6177   00536C  A025               	btfss	___flmul@bexp^0,0,c
  6178   00536E  EFBB  F029         	goto	u4461
  6179   005372  EFBD  F029         	goto	u4460
  6180   005376                     u4461:
  6181   005376  EFBE  F029         	goto	l3790
  6182   00537A                     u4460:
  6183   00537A  8E28               	bsf	(___flmul@prod+2)^0,7,c
  6184   00537C                     l3790:
  6185   00537C  90D8               	bcf	status,0,c
  6186   00537E  3025               	rrcf	___flmul@bexp^0,w,c
  6187   005380  6E29               	movwf	(___flmul@prod+3)^0,c
  6188   005382                     l3792:
  6189   005382  501F               	movf	___flmul@sign^0,w,c
  6190   005384  1229               	iorwf	(___flmul@prod+3)^0,f,c
  6191   005386  C026  F013         	movff	___flmul@prod,?___flmul
  6192   00538A  C027  F014         	movff	___flmul@prod+1,?___flmul+1
  6193   00538E  C028  F015         	movff	___flmul@prod+2,?___flmul+2
  6194   005392  C029  F016         	movff	___flmul@prod+3,?___flmul+3
  6195   005396                     l751:
  6196   005396  0012               	return		;funcret
  6197   005398                     __end_of___flmul:
  6198                           	callstack 0
  6199                           
  6200 ;; *************** function ___flge *****************
  6201 ;; Defined at:
  6202 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\flge.c"
  6203 ;; Parameters:    Size  Location     Type
  6204 ;;  ff1             4   43[COMRAM] unsigned char 
  6205 ;;  ff2             4   47[COMRAM] unsigned char 
  6206 ;; Auto vars:     Size  Location     Type
  6207 ;;		None
  6208 ;; Return value:  Size  Location     Type
  6209 ;;		None               void
  6210 ;; Registers used:
  6211 ;;		wreg, status,2, status,0
  6212 ;; Tracked objects:
  6213 ;;		On entry : 0/0
  6214 ;;		On exit  : 0/0
  6215 ;;		Unchanged: 0/0
  6216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6217 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6219 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6220 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6221 ;;Total ram usage:       12 bytes
  6222 ;; Hardware stack levels used: 1
  6223 ;; Hardware stack levels required when called: 1
  6224 ;; This function calls:
  6225 ;;		Nothing
  6226 ;; This function is called by:
  6227 ;;		_efgtoa
  6228 ;; This function uses a non-reentrant model
  6229 ;;
  6230                           
  6231                           	psect	text21
  6232   005E08                     __ptext21:
  6233                           	callstack 0
  6234   005E08                     ___flge:
  6235                           	callstack 25
  6236   005E08  0E00               	movlw	0
  6237   005E0A  142C               	andwf	___flge@ff1^0,w,c
  6238   005E0C  6E34               	movwf	??___flge^0,c
  6239   005E0E  0E00               	movlw	0
  6240   005E10  142D               	andwf	(___flge@ff1+1)^0,w,c
  6241   005E12  6E35               	movwf	(??___flge+1)^0,c
  6242   005E14  0E80               	movlw	128
  6243   005E16  142E               	andwf	(___flge@ff1+2)^0,w,c
  6244   005E18  6E36               	movwf	(??___flge+2)^0,c
  6245   005E1A  0E7F               	movlw	127
  6246   005E1C  142F               	andwf	(___flge@ff1+3)^0,w,c
  6247   005E1E  6E37               	movwf	(??___flge+3)^0,c
  6248   005E20  5034               	movf	??___flge^0,w,c
  6249   005E22  1035               	iorwf	(??___flge+1)^0,w,c
  6250   005E24  1036               	iorwf	(??___flge+2)^0,w,c
  6251   005E26  1037               	iorwf	(??___flge+3)^0,w,c
  6252   005E28  A4D8               	btfss	status,2,c
  6253   005E2A  EF19  F02F         	goto	u4501
  6254   005E2E  EF1B  F02F         	goto	u4500
  6255   005E32                     u4501:
  6256   005E32  EF23  F02F         	goto	l3824
  6257   005E36                     u4500:
  6258   005E36  0E00               	movlw	0
  6259   005E38  6E2C               	movwf	___flge@ff1^0,c
  6260   005E3A  0E00               	movlw	0
  6261   005E3C  6E2D               	movwf	(___flge@ff1+1)^0,c
  6262   005E3E  0E00               	movlw	0
  6263   005E40  6E2E               	movwf	(___flge@ff1+2)^0,c
  6264   005E42  0E00               	movlw	0
  6265   005E44  6E2F               	movwf	(___flge@ff1+3)^0,c
  6266   005E46                     l3824:
  6267   005E46  0E00               	movlw	0
  6268   005E48  1430               	andwf	___flge@ff2^0,w,c
  6269   005E4A  6E34               	movwf	??___flge^0,c
  6270   005E4C  0E00               	movlw	0
  6271   005E4E  1431               	andwf	(___flge@ff2+1)^0,w,c
  6272   005E50  6E35               	movwf	(??___flge+1)^0,c
  6273   005E52  0E80               	movlw	128
  6274   005E54  1432               	andwf	(___flge@ff2+2)^0,w,c
  6275   005E56  6E36               	movwf	(??___flge+2)^0,c
  6276   005E58  0E7F               	movlw	127
  6277   005E5A  1433               	andwf	(___flge@ff2+3)^0,w,c
  6278   005E5C  6E37               	movwf	(??___flge+3)^0,c
  6279   005E5E  5034               	movf	??___flge^0,w,c
  6280   005E60  1035               	iorwf	(??___flge+1)^0,w,c
  6281   005E62  1036               	iorwf	(??___flge+2)^0,w,c
  6282   005E64  1037               	iorwf	(??___flge+3)^0,w,c
  6283   005E66  A4D8               	btfss	status,2,c
  6284   005E68  EF38  F02F         	goto	u4511
  6285   005E6C  EF3A  F02F         	goto	u4510
  6286   005E70                     u4511:
  6287   005E70  EF42  F02F         	goto	l3828
  6288   005E74                     u4510:
  6289   005E74  0E00               	movlw	0
  6290   005E76  6E30               	movwf	___flge@ff2^0,c
  6291   005E78  0E00               	movlw	0
  6292   005E7A  6E31               	movwf	(___flge@ff2+1)^0,c
  6293   005E7C  0E00               	movlw	0
  6294   005E7E  6E32               	movwf	(___flge@ff2+2)^0,c
  6295   005E80  0E00               	movlw	0
  6296   005E82  6E33               	movwf	(___flge@ff2+3)^0,c
  6297   005E84                     l3828:
  6298   005E84  AE2F               	btfss	(___flge@ff1+3)^0,7,c
  6299   005E86  EF47  F02F         	goto	u4521
  6300   005E8A  EF49  F02F         	goto	u4520
  6301   005E8E                     u4521:
  6302   005E8E  EF52  F02F         	goto	l3832
  6303   005E92                     u4520:
  6304   005E92  6C2C               	negf	___flge@ff1^0,c
  6305   005E94  1E2D               	comf	(___flge@ff1+1)^0,f,c
  6306   005E96  B0D8               	btfsc	status,0,c
  6307   005E98  2A2D               	incf	(___flge@ff1+1)^0,f,c
  6308   005E9A  1E2E               	comf	(___flge@ff1+2)^0,f,c
  6309   005E9C  B0D8               	btfsc	status,0,c
  6310   005E9E  2A2E               	incf	(___flge@ff1+2)^0,f,c
  6311   005EA0  0E80               	movlw	128
  6312   005EA2  562F               	subfwb	(___flge@ff1+3)^0,f,c
  6313   005EA4                     l3832:
  6314   005EA4  AE33               	btfss	(___flge@ff2+3)^0,7,c
  6315   005EA6  EF57  F02F         	goto	u4531
  6316   005EAA  EF59  F02F         	goto	u4530
  6317   005EAE                     u4531:
  6318   005EAE  EF62  F02F         	goto	l398
  6319   005EB2                     u4530:
  6320   005EB2  6C30               	negf	___flge@ff2^0,c
  6321   005EB4  1E31               	comf	(___flge@ff2+1)^0,f,c
  6322   005EB6  B0D8               	btfsc	status,0,c
  6323   005EB8  2A31               	incf	(___flge@ff2+1)^0,f,c
  6324   005EBA  1E32               	comf	(___flge@ff2+2)^0,f,c
  6325   005EBC  B0D8               	btfsc	status,0,c
  6326   005EBE  2A32               	incf	(___flge@ff2+2)^0,f,c
  6327   005EC0  0E80               	movlw	128
  6328   005EC2  5633               	subfwb	(___flge@ff2+3)^0,f,c
  6329   005EC4                     l398:
  6330   005EC4  0E00               	movlw	0
  6331   005EC6  1A2C               	xorwf	___flge@ff1^0,f,c
  6332   005EC8  0E00               	movlw	0
  6333   005ECA  1A2D               	xorwf	(___flge@ff1+1)^0,f,c
  6334   005ECC  0E00               	movlw	0
  6335   005ECE  1A2E               	xorwf	(___flge@ff1+2)^0,f,c
  6336   005ED0  0E80               	movlw	128
  6337   005ED2  1A2F               	xorwf	(___flge@ff1+3)^0,f,c
  6338   005ED4  0E00               	movlw	0
  6339   005ED6  1A30               	xorwf	___flge@ff2^0,f,c
  6340   005ED8  0E00               	movlw	0
  6341   005EDA  1A31               	xorwf	(___flge@ff2+1)^0,f,c
  6342   005EDC  0E00               	movlw	0
  6343   005EDE  1A32               	xorwf	(___flge@ff2+2)^0,f,c
  6344   005EE0  0E80               	movlw	128
  6345   005EE2  1A33               	xorwf	(___flge@ff2+3)^0,f,c
  6346   005EE4  5030               	movf	___flge@ff2^0,w,c
  6347   005EE6  5C2C               	subwf	___flge@ff1^0,w,c
  6348   005EE8  5031               	movf	(___flge@ff2+1)^0,w,c
  6349   005EEA  582D               	subwfb	(___flge@ff1+1)^0,w,c
  6350   005EEC  5032               	movf	(___flge@ff2+2)^0,w,c
  6351   005EEE  582E               	subwfb	(___flge@ff1+2)^0,w,c
  6352   005EF0  5033               	movf	(___flge@ff2+3)^0,w,c
  6353   005EF2  582F               	subwfb	(___flge@ff1+3)^0,w,c
  6354   005EF4  B0D8               	btfsc	status,0,c
  6355   005EF6  EF7F  F02F         	goto	u4541
  6356   005EFA  EF81  F02F         	goto	u4540
  6357   005EFE                     u4541:
  6358   005EFE  EF84  F02F         	goto	l3838
  6359   005F02                     u4540:
  6360   005F02  90D8               	bcf	status,0,c
  6361   005F04  EF85  F02F         	goto	l403
  6362   005F08                     l3838:
  6363   005F08  80D8               	bsf	status,0,c
  6364   005F0A                     l403:
  6365   005F0A  0012               	return		;funcret
  6366   005F0C                     __end_of___flge:
  6367                           	callstack 0
  6368                           
  6369 ;; *************** function ___fleq *****************
  6370 ;; Defined at:
  6371 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\fleq.c"
  6372 ;; Parameters:    Size  Location     Type
  6373 ;;  ff1             4    4[COMRAM] unsigned char 
  6374 ;;  ff2             4    8[COMRAM] unsigned char 
  6375 ;; Auto vars:     Size  Location     Type
  6376 ;;		None
  6377 ;; Return value:  Size  Location     Type
  6378 ;;		None               void
  6379 ;; Registers used:
  6380 ;;		wreg, status,2, status,0
  6381 ;; Tracked objects:
  6382 ;;		On entry : 0/0
  6383 ;;		On exit  : 0/0
  6384 ;;		Unchanged: 0/0
  6385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6386 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6388 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6389 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6390 ;;Total ram usage:       12 bytes
  6391 ;; Hardware stack levels used: 1
  6392 ;; Hardware stack levels required when called: 1
  6393 ;; This function calls:
  6394 ;;		Nothing
  6395 ;; This function is called by:
  6396 ;;		_efgtoa
  6397 ;; This function uses a non-reentrant model
  6398 ;;
  6399                           
  6400                           	psect	text22
  6401   006240                     __ptext22:
  6402                           	callstack 0
  6403   006240                     ___fleq:
  6404                           	callstack 25
  6405   006240  0E00               	movlw	0
  6406   006242  1405               	andwf	___fleq@ff1^0,w,c
  6407   006244  6E0D               	movwf	??___fleq^0,c
  6408   006246  0E00               	movlw	0
  6409   006248  1406               	andwf	(___fleq@ff1+1)^0,w,c
  6410   00624A  6E0E               	movwf	(??___fleq+1)^0,c
  6411   00624C  0E80               	movlw	128
  6412   00624E  1407               	andwf	(___fleq@ff1+2)^0,w,c
  6413   006250  6E0F               	movwf	(??___fleq+2)^0,c
  6414   006252  0E7F               	movlw	127
  6415   006254  1408               	andwf	(___fleq@ff1+3)^0,w,c
  6416   006256  6E10               	movwf	(??___fleq+3)^0,c
  6417   006258  500D               	movf	??___fleq^0,w,c
  6418   00625A  100E               	iorwf	(??___fleq+1)^0,w,c
  6419   00625C  100F               	iorwf	(??___fleq+2)^0,w,c
  6420   00625E  1010               	iorwf	(??___fleq+3)^0,w,c
  6421   006260  A4D8               	btfss	status,2,c
  6422   006262  EF35  F031         	goto	u4471
  6423   006266  EF37  F031         	goto	u4470
  6424   00626A                     u4471:
  6425   00626A  EF3F  F031         	goto	l3808
  6426   00626E                     u4470:
  6427   00626E  0E00               	movlw	0
  6428   006270  6E05               	movwf	___fleq@ff1^0,c
  6429   006272  0E00               	movlw	0
  6430   006274  6E06               	movwf	(___fleq@ff1+1)^0,c
  6431   006276  0E00               	movlw	0
  6432   006278  6E07               	movwf	(___fleq@ff1+2)^0,c
  6433   00627A  0E00               	movlw	0
  6434   00627C  6E08               	movwf	(___fleq@ff1+3)^0,c
  6435   00627E                     l3808:
  6436   00627E  0E00               	movlw	0
  6437   006280  1409               	andwf	___fleq@ff2^0,w,c
  6438   006282  6E0D               	movwf	??___fleq^0,c
  6439   006284  0E00               	movlw	0
  6440   006286  140A               	andwf	(___fleq@ff2+1)^0,w,c
  6441   006288  6E0E               	movwf	(??___fleq+1)^0,c
  6442   00628A  0E80               	movlw	128
  6443   00628C  140B               	andwf	(___fleq@ff2+2)^0,w,c
  6444   00628E  6E0F               	movwf	(??___fleq+2)^0,c
  6445   006290  0E7F               	movlw	127
  6446   006292  140C               	andwf	(___fleq@ff2+3)^0,w,c
  6447   006294  6E10               	movwf	(??___fleq+3)^0,c
  6448   006296  500D               	movf	??___fleq^0,w,c
  6449   006298  100E               	iorwf	(??___fleq+1)^0,w,c
  6450   00629A  100F               	iorwf	(??___fleq+2)^0,w,c
  6451   00629C  1010               	iorwf	(??___fleq+3)^0,w,c
  6452   00629E  A4D8               	btfss	status,2,c
  6453   0062A0  EF54  F031         	goto	u4481
  6454   0062A4  EF56  F031         	goto	u4480
  6455   0062A8                     u4481:
  6456   0062A8  EF5E  F031         	goto	l3812
  6457   0062AC                     u4480:
  6458   0062AC  0E00               	movlw	0
  6459   0062AE  6E09               	movwf	___fleq@ff2^0,c
  6460   0062B0  0E00               	movlw	0
  6461   0062B2  6E0A               	movwf	(___fleq@ff2+1)^0,c
  6462   0062B4  0E00               	movlw	0
  6463   0062B6  6E0B               	movwf	(___fleq@ff2+2)^0,c
  6464   0062B8  0E00               	movlw	0
  6465   0062BA  6E0C               	movwf	(___fleq@ff2+3)^0,c
  6466   0062BC                     l3812:
  6467   0062BC  5009               	movf	___fleq@ff2^0,w,c
  6468   0062BE  1805               	xorwf	___fleq@ff1^0,w,c
  6469   0062C0  E10F               	bnz	u4490
  6470   0062C2  500A               	movf	(___fleq@ff2+1)^0,w,c
  6471   0062C4  1806               	xorwf	(___fleq@ff1+1)^0,w,c
  6472   0062C6  E10C               	bnz	u4490
  6473   0062C8  500B               	movf	(___fleq@ff2+2)^0,w,c
  6474   0062CA  1807               	xorwf	(___fleq@ff1+2)^0,w,c
  6475   0062CC  E109               	bnz	u4490
  6476   0062CE  500C               	movf	(___fleq@ff2+3)^0,w,c
  6477   0062D0  1808               	xorwf	(___fleq@ff1+3)^0,w,c
  6478   0062D2  B4D8               	btfsc	status,2,c
  6479   0062D4  EF6E  F031         	goto	u4491
  6480   0062D8  EF70  F031         	goto	u4490
  6481   0062DC                     u4491:
  6482   0062DC  EF73  F031         	goto	l3816
  6483   0062E0                     u4490:
  6484   0062E0  90D8               	bcf	status,0,c
  6485   0062E2  EF74  F031         	goto	l392
  6486   0062E6                     l3816:
  6487   0062E6  80D8               	bsf	status,0,c
  6488   0062E8                     l392:
  6489   0062E8  0012               	return		;funcret
  6490   0062EA                     __end_of___fleq:
  6491                           	callstack 0
  6492                           
  6493 ;; *************** function ___fldiv *****************
  6494 ;; Defined at:
  6495 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcdiv.c"
  6496 ;; Parameters:    Size  Location     Type
  6497 ;;  b               4    4[COMRAM] unsigned char 
  6498 ;;  a               4    8[COMRAM] unsigned char 
  6499 ;; Auto vars:     Size  Location     Type
  6500 ;;  grs             4   23[COMRAM] unsigned long 
  6501 ;;  rem             4   16[COMRAM] unsigned long 
  6502 ;;  new_exp         2   21[COMRAM] short 
  6503 ;;  aexp            1   28[COMRAM] unsigned char 
  6504 ;;  bexp            1   27[COMRAM] unsigned char 
  6505 ;;  sign            1   20[COMRAM] unsigned char 
  6506 ;; Return value:  Size  Location     Type
  6507 ;;                  4    4[COMRAM] unsigned char 
  6508 ;; Registers used:
  6509 ;;		wreg, status,2, status,0
  6510 ;; Tracked objects:
  6511 ;;		On entry : 0/0
  6512 ;;		On exit  : 0/0
  6513 ;;		Unchanged: 0/0
  6514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6515 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6516 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6517 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6518 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6519 ;;Total ram usage:       25 bytes
  6520 ;; Hardware stack levels used: 1
  6521 ;; Hardware stack levels required when called: 1
  6522 ;; This function calls:
  6523 ;;		Nothing
  6524 ;; This function is called by:
  6525 ;;		_efgtoa
  6526 ;; This function uses a non-reentrant model
  6527 ;;
  6528                           
  6529                           	psect	text23
  6530   005398                     __ptext23:
  6531                           	callstack 0
  6532   005398                     ___fldiv:
  6533                           	callstack 25
  6534   005398  5008               	movf	(___fldiv@b+3)^0,w,c
  6535   00539A  0B80               	andlw	128
  6536   00539C  6E15               	movwf	___fldiv@sign^0,c
  6537   00539E  5008               	movf	(___fldiv@b+3)^0,w,c
  6538   0053A0  2408               	addwf	(___fldiv@b+3)^0,w,c
  6539   0053A2  6E1C               	movwf	___fldiv@bexp^0,c
  6540   0053A4  AE07               	btfss	(___fldiv@b+2)^0,7,c
  6541   0053A6  EFD7  F029         	goto	u4051
  6542   0053AA  EFD9  F029         	goto	u4050
  6543   0053AE                     u4051:
  6544   0053AE  EFDA  F029         	goto	l3540
  6545   0053B2                     u4050:
  6546   0053B2  801C               	bsf	___fldiv@bexp^0,0,c
  6547   0053B4                     l3540:
  6548   0053B4  501C               	movf	___fldiv@bexp^0,w,c
  6549   0053B6  B4D8               	btfsc	status,2,c
  6550   0053B8  EFE0  F029         	goto	u4061
  6551   0053BC  EFE2  F029         	goto	u4060
  6552   0053C0                     u4061:
  6553   0053C0  EFF6  F029         	goto	l3550
  6554   0053C4                     u4060:
  6555   0053C4  281C               	incf	___fldiv@bexp^0,w,c
  6556   0053C6  A4D8               	btfss	status,2,c
  6557   0053C8  EFE8  F029         	goto	u4071
  6558   0053CC  EFEA  F029         	goto	u4070
  6559   0053D0                     u4071:
  6560   0053D0  EFF2  F029         	goto	l3546
  6561   0053D4                     u4070:
  6562   0053D4  0E00               	movlw	0
  6563   0053D6  6E05               	movwf	___fldiv@b^0,c
  6564   0053D8  0E00               	movlw	0
  6565   0053DA  6E06               	movwf	(___fldiv@b+1)^0,c
  6566   0053DC  0E00               	movlw	0
  6567   0053DE  6E07               	movwf	(___fldiv@b+2)^0,c
  6568   0053E0  0E00               	movlw	0
  6569   0053E2  6E08               	movwf	(___fldiv@b+3)^0,c
  6570   0053E4                     l3546:
  6571   0053E4  8E07               	bsf	(___fldiv@b+2)^0,7,c
  6572   0053E6  6A08               	clrf	(___fldiv@b+3)^0,c
  6573   0053E8  EFFE  F029         	goto	l3552
  6574   0053EC                     l3550:
  6575   0053EC  0E00               	movlw	0
  6576   0053EE  6E05               	movwf	___fldiv@b^0,c
  6577   0053F0  0E00               	movlw	0
  6578   0053F2  6E06               	movwf	(___fldiv@b+1)^0,c
  6579   0053F4  0E00               	movlw	0
  6580   0053F6  6E07               	movwf	(___fldiv@b+2)^0,c
  6581   0053F8  0E00               	movlw	0
  6582   0053FA  6E08               	movwf	(___fldiv@b+3)^0,c
  6583   0053FC                     l3552:
  6584   0053FC  500C               	movf	(___fldiv@a+3)^0,w,c
  6585   0053FE  0B80               	andlw	128
  6586   005400  1A15               	xorwf	___fldiv@sign^0,f,c
  6587   005402  500C               	movf	(___fldiv@a+3)^0,w,c
  6588   005404  240C               	addwf	(___fldiv@a+3)^0,w,c
  6589   005406  6E1D               	movwf	___fldiv@aexp^0,c
  6590   005408  AE0B               	btfss	(___fldiv@a+2)^0,7,c
  6591   00540A  EF09  F02A         	goto	u4081
  6592   00540E  EF0B  F02A         	goto	u4080
  6593   005412                     u4081:
  6594   005412  EF0C  F02A         	goto	l3560
  6595   005416                     u4080:
  6596   005416  801D               	bsf	___fldiv@aexp^0,0,c
  6597   005418                     l3560:
  6598   005418  501D               	movf	___fldiv@aexp^0,w,c
  6599   00541A  B4D8               	btfsc	status,2,c
  6600   00541C  EF12  F02A         	goto	u4091
  6601   005420  EF14  F02A         	goto	u4090
  6602   005424                     u4091:
  6603   005424  EF28  F02A         	goto	l3570
  6604   005428                     u4090:
  6605   005428  281D               	incf	___fldiv@aexp^0,w,c
  6606   00542A  A4D8               	btfss	status,2,c
  6607   00542C  EF1A  F02A         	goto	u4101
  6608   005430  EF1C  F02A         	goto	u4100
  6609   005434                     u4101:
  6610   005434  EF24  F02A         	goto	l3566
  6611   005438                     u4100:
  6612   005438  0E00               	movlw	0
  6613   00543A  6E09               	movwf	___fldiv@a^0,c
  6614   00543C  0E00               	movlw	0
  6615   00543E  6E0A               	movwf	(___fldiv@a+1)^0,c
  6616   005440  0E00               	movlw	0
  6617   005442  6E0B               	movwf	(___fldiv@a+2)^0,c
  6618   005444  0E00               	movlw	0
  6619   005446  6E0C               	movwf	(___fldiv@a+3)^0,c
  6620   005448                     l3566:
  6621   005448  8E0B               	bsf	(___fldiv@a+2)^0,7,c
  6622   00544A  6A0C               	clrf	(___fldiv@a+3)^0,c
  6623   00544C  EF30  F02A         	goto	l3572
  6624   005450                     l3570:
  6625   005450  0E00               	movlw	0
  6626   005452  6E09               	movwf	___fldiv@a^0,c
  6627   005454  0E00               	movlw	0
  6628   005456  6E0A               	movwf	(___fldiv@a+1)^0,c
  6629   005458  0E00               	movlw	0
  6630   00545A  6E0B               	movwf	(___fldiv@a+2)^0,c
  6631   00545C  0E00               	movlw	0
  6632   00545E  6E0C               	movwf	(___fldiv@a+3)^0,c
  6633   005460                     l3572:
  6634   005460  5009               	movf	___fldiv@a^0,w,c
  6635   005462  100A               	iorwf	(___fldiv@a+1)^0,w,c
  6636   005464  100B               	iorwf	(___fldiv@a+2)^0,w,c
  6637   005466  100C               	iorwf	(___fldiv@a+3)^0,w,c
  6638   005468  A4D8               	btfss	status,2,c
  6639   00546A  EF39  F02A         	goto	u4111
  6640   00546E  EF3B  F02A         	goto	u4110
  6641   005472                     u4111:
  6642   005472  EF53  F02A         	goto	l3584
  6643   005476                     u4110:
  6644   005476  0E00               	movlw	0
  6645   005478  6E05               	movwf	___fldiv@b^0,c
  6646   00547A  0E00               	movlw	0
  6647   00547C  6E06               	movwf	(___fldiv@b+1)^0,c
  6648   00547E  0E00               	movlw	0
  6649   005480  6E07               	movwf	(___fldiv@b+2)^0,c
  6650   005482  0E00               	movlw	0
  6651   005484  6E08               	movwf	(___fldiv@b+3)^0,c
  6652   005486  0E80               	movlw	128
  6653   005488  1207               	iorwf	(___fldiv@b+2)^0,f,c
  6654   00548A  0E7F               	movlw	127
  6655   00548C  1208               	iorwf	(___fldiv@b+3)^0,f,c
  6656   00548E                     l3578:
  6657   00548E  5015               	movf	___fldiv@sign^0,w,c
  6658   005490  1208               	iorwf	(___fldiv@b+3)^0,f,c
  6659   005492  C005  F005         	movff	___fldiv@b,?___fldiv
  6660   005496  C006  F006         	movff	___fldiv@b+1,?___fldiv+1
  6661   00549A  C007  F007         	movff	___fldiv@b+2,?___fldiv+2
  6662   00549E  C008  F008         	movff	___fldiv@b+3,?___fldiv+3
  6663   0054A2  EF93  F02B         	goto	l715
  6664   0054A6                     l3584:
  6665   0054A6  501C               	movf	___fldiv@bexp^0,w,c
  6666   0054A8  A4D8               	btfss	status,2,c
  6667   0054AA  EF59  F02A         	goto	u4121
  6668   0054AE  EF5B  F02A         	goto	u4120
  6669   0054B2                     u4121:
  6670   0054B2  EF65  F02A         	goto	l3592
  6671   0054B6                     u4120:
  6672   0054B6  0E00               	movlw	0
  6673   0054B8  6E05               	movwf	?___fldiv^0,c
  6674   0054BA  0E00               	movlw	0
  6675   0054BC  6E06               	movwf	(?___fldiv+1)^0,c
  6676   0054BE  0E00               	movlw	0
  6677   0054C0  6E07               	movwf	(?___fldiv+2)^0,c
  6678   0054C2  0E00               	movlw	0
  6679   0054C4  6E08               	movwf	(?___fldiv+3)^0,c
  6680   0054C6  EF93  F02B         	goto	l715
  6681   0054CA                     l3592:
  6682   0054CA  501D               	movf	___fldiv@aexp^0,w,c
  6683   0054CC  C01C  F00D         	movff	___fldiv@bexp,??___fldiv
  6684   0054D0  6A0E               	clrf	(??___fldiv+1)^0,c
  6685   0054D2  5E0D               	subwf	??___fldiv^0,f,c
  6686   0054D4  0E00               	movlw	0
  6687   0054D6  5A0E               	subwfb	(??___fldiv+1)^0,f,c
  6688   0054D8  0E7F               	movlw	127
  6689   0054DA  240D               	addwf	??___fldiv^0,w,c
  6690   0054DC  6E16               	movwf	___fldiv@new_exp^0,c
  6691   0054DE  0E00               	movlw	0
  6692   0054E0  200E               	addwfc	(??___fldiv+1)^0,w,c
  6693   0054E2  6E17               	movwf	(___fldiv@new_exp+1)^0,c
  6694   0054E4  C005  F011         	movff	___fldiv@b,___fldiv@rem
  6695   0054E8  C006  F012         	movff	___fldiv@b+1,___fldiv@rem+1
  6696   0054EC  C007  F013         	movff	___fldiv@b+2,___fldiv@rem+2
  6697   0054F0  C008  F014         	movff	___fldiv@b+3,___fldiv@rem+3
  6698   0054F4  0E00               	movlw	0
  6699   0054F6  6E05               	movwf	___fldiv@b^0,c
  6700   0054F8  0E00               	movlw	0
  6701   0054FA  6E06               	movwf	(___fldiv@b+1)^0,c
  6702   0054FC  0E00               	movlw	0
  6703   0054FE  6E07               	movwf	(___fldiv@b+2)^0,c
  6704   005500  0E00               	movlw	0
  6705   005502  6E08               	movwf	(___fldiv@b+3)^0,c
  6706   005504  0E00               	movlw	0
  6707   005506  6E18               	movwf	___fldiv@grs^0,c
  6708   005508  0E00               	movlw	0
  6709   00550A  6E19               	movwf	(___fldiv@grs+1)^0,c
  6710   00550C  0E00               	movlw	0
  6711   00550E  6E1A               	movwf	(___fldiv@grs+2)^0,c
  6712   005510  0E00               	movlw	0
  6713   005512  6E1B               	movwf	(___fldiv@grs+3)^0,c
  6714   005514  6A1D               	clrf	___fldiv@aexp^0,c
  6715   005516  EFC5  F02A         	goto	l717
  6716   00551A                     l3602:
  6717   00551A  501D               	movf	___fldiv@aexp^0,w,c
  6718   00551C  B4D8               	btfsc	status,2,c
  6719   00551E  EF93  F02A         	goto	u4131
  6720   005522  EF95  F02A         	goto	u4130
  6721   005526                     u4131:
  6722   005526  EFAC  F02A         	goto	l3610
  6723   00552A                     u4130:
  6724   00552A  90D8               	bcf	status,0,c
  6725   00552C  3611               	rlcf	___fldiv@rem^0,f,c
  6726   00552E  3612               	rlcf	(___fldiv@rem+1)^0,f,c
  6727   005530  3613               	rlcf	(___fldiv@rem+2)^0,f,c
  6728   005532  3614               	rlcf	(___fldiv@rem+3)^0,f,c
  6729   005534  90D8               	bcf	status,0,c
  6730   005536  3605               	rlcf	___fldiv@b^0,f,c
  6731   005538  3606               	rlcf	(___fldiv@b+1)^0,f,c
  6732   00553A  3607               	rlcf	(___fldiv@b+2)^0,f,c
  6733   00553C  3608               	rlcf	(___fldiv@b+3)^0,f,c
  6734   00553E  AE1B               	btfss	(___fldiv@grs+3)^0,7,c
  6735   005540  EFA4  F02A         	goto	u4141
  6736   005544  EFA6  F02A         	goto	u4140
  6737   005548                     u4141:
  6738   005548  EFA7  F02A         	goto	l720
  6739   00554C                     u4140:
  6740   00554C  8005               	bsf	___fldiv@b^0,0,c
  6741   00554E                     l720:
  6742   00554E  90D8               	bcf	status,0,c
  6743   005550  3618               	rlcf	___fldiv@grs^0,f,c
  6744   005552  3619               	rlcf	(___fldiv@grs+1)^0,f,c
  6745   005554  361A               	rlcf	(___fldiv@grs+2)^0,f,c
  6746   005556  361B               	rlcf	(___fldiv@grs+3)^0,f,c
  6747   005558                     l3610:
  6748   005558  5009               	movf	___fldiv@a^0,w,c
  6749   00555A  5C11               	subwf	___fldiv@rem^0,w,c
  6750   00555C  500A               	movf	(___fldiv@a+1)^0,w,c
  6751   00555E  5812               	subwfb	(___fldiv@rem+1)^0,w,c
  6752   005560  500B               	movf	(___fldiv@a+2)^0,w,c
  6753   005562  5813               	subwfb	(___fldiv@rem+2)^0,w,c
  6754   005564  500C               	movf	(___fldiv@a+3)^0,w,c
  6755   005566  5814               	subwfb	(___fldiv@rem+3)^0,w,c
  6756   005568  A0D8               	btfss	status,0,c
  6757   00556A  EFB9  F02A         	goto	u4151
  6758   00556E  EFBB  F02A         	goto	u4150
  6759   005572                     u4151:
  6760   005572  EFC4  F02A         	goto	l3616
  6761   005576                     u4150:
  6762   005576  8C1B               	bsf	(___fldiv@grs+3)^0,6,c
  6763   005578  5009               	movf	___fldiv@a^0,w,c
  6764   00557A  5E11               	subwf	___fldiv@rem^0,f,c
  6765   00557C  500A               	movf	(___fldiv@a+1)^0,w,c
  6766   00557E  5A12               	subwfb	(___fldiv@rem+1)^0,f,c
  6767   005580  500B               	movf	(___fldiv@a+2)^0,w,c
  6768   005582  5A13               	subwfb	(___fldiv@rem+2)^0,f,c
  6769   005584  500C               	movf	(___fldiv@a+3)^0,w,c
  6770   005586  5A14               	subwfb	(___fldiv@rem+3)^0,f,c
  6771   005588                     l3616:
  6772   005588  2A1D               	incf	___fldiv@aexp^0,f,c
  6773   00558A                     l717:
  6774   00558A  0E19               	movlw	25
  6775   00558C  641D               	cpfsgt	___fldiv@aexp^0,c
  6776   00558E  EFCB  F02A         	goto	u4161
  6777   005592  EFCD  F02A         	goto	u4160
  6778   005596                     u4161:
  6779   005596  EF8D  F02A         	goto	l3602
  6780   00559A                     u4160:
  6781   00559A  5011               	movf	___fldiv@rem^0,w,c
  6782   00559C  1012               	iorwf	(___fldiv@rem+1)^0,w,c
  6783   00559E  1013               	iorwf	(___fldiv@rem+2)^0,w,c
  6784   0055A0  1014               	iorwf	(___fldiv@rem+3)^0,w,c
  6785   0055A2  B4D8               	btfsc	status,2,c
  6786   0055A4  EFD6  F02A         	goto	u4171
  6787   0055A8  EFD8  F02A         	goto	u4170
  6788   0055AC                     u4171:
  6789   0055AC  EFF0  F02A         	goto	l3628
  6790   0055B0                     u4170:
  6791   0055B0  8018               	bsf	___fldiv@grs^0,0,c
  6792   0055B2  EFF0  F02A         	goto	l3628
  6793   0055B6                     l3622:
  6794   0055B6  90D8               	bcf	status,0,c
  6795   0055B8  3605               	rlcf	___fldiv@b^0,f,c
  6796   0055BA  3606               	rlcf	(___fldiv@b+1)^0,f,c
  6797   0055BC  3607               	rlcf	(___fldiv@b+2)^0,f,c
  6798   0055BE  3608               	rlcf	(___fldiv@b+3)^0,f,c
  6799   0055C0  AE1B               	btfss	(___fldiv@grs+3)^0,7,c
  6800   0055C2  EFE5  F02A         	goto	u4181
  6801   0055C6  EFE7  F02A         	goto	u4180
  6802   0055CA                     u4181:
  6803   0055CA  EFE8  F02A         	goto	l726
  6804   0055CE                     u4180:
  6805   0055CE  8005               	bsf	___fldiv@b^0,0,c
  6806   0055D0                     l726:
  6807   0055D0  90D8               	bcf	status,0,c
  6808   0055D2  3618               	rlcf	___fldiv@grs^0,f,c
  6809   0055D4  3619               	rlcf	(___fldiv@grs+1)^0,f,c
  6810   0055D6  361A               	rlcf	(___fldiv@grs+2)^0,f,c
  6811   0055D8  361B               	rlcf	(___fldiv@grs+3)^0,f,c
  6812   0055DA  0616               	decf	___fldiv@new_exp^0,f,c
  6813   0055DC  A0D8               	btfss	status,0,c
  6814   0055DE  0617               	decf	(___fldiv@new_exp+1)^0,f,c
  6815   0055E0                     l3628:
  6816   0055E0  AE07               	btfss	(___fldiv@b+2)^0,7,c
  6817   0055E2  EFF5  F02A         	goto	u4191
  6818   0055E6  EFF7  F02A         	goto	u4190
  6819   0055EA                     u4191:
  6820   0055EA  EFDB  F02A         	goto	l3622
  6821   0055EE                     u4190:
  6822   0055EE  6A1D               	clrf	___fldiv@aexp^0,c
  6823   0055F0  AE1B               	btfss	(___fldiv@grs+3)^0,7,c
  6824   0055F2  EFFD  F02A         	goto	u4201
  6825   0055F6  EFFF  F02A         	goto	u4200
  6826   0055FA                     u4201:
  6827   0055FA  EF23  F02B         	goto	l728
  6828   0055FE                     u4200:
  6829   0055FE  0EFF               	movlw	255
  6830   005600  1418               	andwf	___fldiv@grs^0,w,c
  6831   005602  6E0D               	movwf	??___fldiv^0,c
  6832   005604  0EFF               	movlw	255
  6833   005606  1419               	andwf	(___fldiv@grs+1)^0,w,c
  6834   005608  6E0E               	movwf	(??___fldiv+1)^0,c
  6835   00560A  0EFF               	movlw	255
  6836   00560C  141A               	andwf	(___fldiv@grs+2)^0,w,c
  6837   00560E  6E0F               	movwf	(??___fldiv+2)^0,c
  6838   005610  0E7F               	movlw	127
  6839   005612  141B               	andwf	(___fldiv@grs+3)^0,w,c
  6840   005614  6E10               	movwf	(??___fldiv+3)^0,c
  6841   005616  500D               	movf	??___fldiv^0,w,c
  6842   005618  100E               	iorwf	(??___fldiv+1)^0,w,c
  6843   00561A  100F               	iorwf	(??___fldiv+2)^0,w,c
  6844   00561C  1010               	iorwf	(??___fldiv+3)^0,w,c
  6845   00561E  B4D8               	btfsc	status,2,c
  6846   005620  EF14  F02B         	goto	u4211
  6847   005624  EF16  F02B         	goto	u4210
  6848   005628                     u4211:
  6849   005628  EF1A  F02B         	goto	l729
  6850   00562C                     u4210:
  6851   00562C                     l3632:
  6852   00562C  0E01               	movlw	1
  6853   00562E  6E1D               	movwf	___fldiv@aexp^0,c
  6854   005630  EF23  F02B         	goto	l728
  6855   005634                     l729:
  6856   005634  A005               	btfss	___fldiv@b^0,0,c
  6857   005636  EF1F  F02B         	goto	u4221
  6858   00563A  EF21  F02B         	goto	u4220
  6859   00563E                     u4221:
  6860   00563E  EF23  F02B         	goto	l728
  6861   005642                     u4220:
  6862   005642  EF16  F02B         	goto	l3632
  6863   005646                     l728:
  6864   005646  501D               	movf	___fldiv@aexp^0,w,c
  6865   005648  B4D8               	btfsc	status,2,c
  6866   00564A  EF29  F02B         	goto	u4231
  6867   00564E  EF2B  F02B         	goto	u4230
  6868   005652                     u4231:
  6869   005652  EF4F  F02B         	goto	l3644
  6870   005656                     u4230:
  6871   005656  0E01               	movlw	1
  6872   005658  2605               	addwf	___fldiv@b^0,f,c
  6873   00565A  0E00               	movlw	0
  6874   00565C  2206               	addwfc	(___fldiv@b+1)^0,f,c
  6875   00565E  2207               	addwfc	(___fldiv@b+2)^0,f,c
  6876   005660  2208               	addwfc	(___fldiv@b+3)^0,f,c
  6877   005662  A008               	btfss	(___fldiv@b+3)^0,0,c
  6878   005664  EF36  F02B         	goto	u4241
  6879   005668  EF38  F02B         	goto	u4240
  6880   00566C                     u4241:
  6881   00566C  EF4F  F02B         	goto	l3644
  6882   005670                     u4240:
  6883   005670  C005  F00D         	movff	___fldiv@b,??___fldiv
  6884   005674  C006  F00E         	movff	___fldiv@b+1,??___fldiv+1
  6885   005678  C007  F00F         	movff	___fldiv@b+2,??___fldiv+2
  6886   00567C  C008  F010         	movff	___fldiv@b+3,??___fldiv+3
  6887   005680  3410               	rlcf	(??___fldiv+3)^0,w,c
  6888   005682  3210               	rrcf	(??___fldiv+3)^0,f,c
  6889   005684  320F               	rrcf	(??___fldiv+2)^0,f,c
  6890   005686  320E               	rrcf	(??___fldiv+1)^0,f,c
  6891   005688  320D               	rrcf	??___fldiv^0,f,c
  6892   00568A  C00D  F005         	movff	??___fldiv,___fldiv@b
  6893   00568E  C00E  F006         	movff	??___fldiv+1,___fldiv@b+1
  6894   005692  C00F  F007         	movff	??___fldiv+2,___fldiv@b+2
  6895   005696  C010  F008         	movff	??___fldiv+3,___fldiv@b+3
  6896   00569A  4A16               	infsnz	___fldiv@new_exp^0,f,c
  6897   00569C  2A17               	incf	(___fldiv@new_exp+1)^0,f,c
  6898   00569E                     l3644:
  6899   00569E  BE17               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6900   0056A0  EF5A  F02B         	goto	u4251
  6901   0056A4  5017               	movf	(___fldiv@new_exp+1)^0,w,c
  6902   0056A6  E108               	bnz	u4250
  6903   0056A8  2816               	incf	___fldiv@new_exp^0,w,c
  6904   0056AA  A0D8               	btfss	status,0,c
  6905   0056AC  EF5A  F02B         	goto	u4251
  6906   0056B0  EF5C  F02B         	goto	u4250
  6907   0056B4                     u4251:
  6908   0056B4  EF67  F02B         	goto	l3648
  6909   0056B8                     u4250:
  6910   0056B8  0E00               	movlw	0
  6911   0056BA  6E17               	movwf	(___fldiv@new_exp+1)^0,c
  6912   0056BC  6816               	setf	___fldiv@new_exp^0,c
  6913   0056BE  0E00               	movlw	0
  6914   0056C0  6E05               	movwf	___fldiv@b^0,c
  6915   0056C2  0E00               	movlw	0
  6916   0056C4  6E06               	movwf	(___fldiv@b+1)^0,c
  6917   0056C6  0E00               	movlw	0
  6918   0056C8  6E07               	movwf	(___fldiv@b+2)^0,c
  6919   0056CA  0E00               	movlw	0
  6920   0056CC  6E08               	movwf	(___fldiv@b+3)^0,c
  6921   0056CE                     l3648:
  6922   0056CE  BE17               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6923   0056D0  EF74  F02B         	goto	u4260
  6924   0056D4  5017               	movf	(___fldiv@new_exp+1)^0,w,c
  6925   0056D6  E106               	bnz	u4261
  6926   0056D8  0416               	decf	___fldiv@new_exp^0,w,c
  6927   0056DA  B0D8               	btfsc	status,0,c
  6928   0056DC  EF72  F02B         	goto	u4261
  6929   0056E0  EF74  F02B         	goto	u4260
  6930   0056E4                     u4261:
  6931   0056E4  EF81  F02B         	goto	l3654
  6932   0056E8                     u4260:
  6933   0056E8  0E00               	movlw	0
  6934   0056EA  6E17               	movwf	(___fldiv@new_exp+1)^0,c
  6935   0056EC  0E00               	movlw	0
  6936   0056EE  6E16               	movwf	___fldiv@new_exp^0,c
  6937   0056F0  0E00               	movlw	0
  6938   0056F2  6E05               	movwf	___fldiv@b^0,c
  6939   0056F4  0E00               	movlw	0
  6940   0056F6  6E06               	movwf	(___fldiv@b+1)^0,c
  6941   0056F8  0E00               	movlw	0
  6942   0056FA  6E07               	movwf	(___fldiv@b+2)^0,c
  6943   0056FC  0E00               	movlw	0
  6944   0056FE  6E08               	movwf	(___fldiv@b+3)^0,c
  6945   005700  6A15               	clrf	___fldiv@sign^0,c
  6946   005702                     l3654:
  6947   005702  C016  F01C         	movff	___fldiv@new_exp,___fldiv@bexp
  6948   005706  A01C               	btfss	___fldiv@bexp^0,0,c
  6949   005708  EF88  F02B         	goto	u4271
  6950   00570C  EF8A  F02B         	goto	u4270
  6951   005710                     u4271:
  6952   005710  EF8D  F02B         	goto	l3660
  6953   005714                     u4270:
  6954   005714  8E07               	bsf	(___fldiv@b+2)^0,7,c
  6955   005716  EF8E  F02B         	goto	l3662
  6956   00571A                     l3660:
  6957   00571A  9E07               	bcf	(___fldiv@b+2)^0,7,c
  6958   00571C                     l3662:
  6959   00571C  90D8               	bcf	status,0,c
  6960   00571E  301C               	rrcf	___fldiv@bexp^0,w,c
  6961   005720  6E08               	movwf	(___fldiv@b+3)^0,c
  6962   005722  EF47  F02A         	goto	l3578
  6963   005726                     l715:
  6964   005726  0012               	return		;funcret
  6965   005728                     __end_of___fldiv:
  6966                           	callstack 0
  6967                           
  6968 ;; *************** function ___xxtofl *****************
  6969 ;; Defined at:
  6970 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\xxtofl.c"
  6971 ;; Parameters:    Size  Location     Type
  6972 ;;  sign            1    wreg     unsigned char 
  6973 ;;  val             4    4[COMRAM] long 
  6974 ;; Auto vars:     Size  Location     Type
  6975 ;;  sign            1   12[COMRAM] unsigned char 
  6976 ;;  arg             4   14[COMRAM] unsigned long 
  6977 ;;  exp             1   13[COMRAM] unsigned char 
  6978 ;; Return value:  Size  Location     Type
  6979 ;;                  4    4[COMRAM] unsigned char 
  6980 ;; Registers used:
  6981 ;;		wreg, status,2, status,0
  6982 ;; Tracked objects:
  6983 ;;		On entry : 0/0
  6984 ;;		On exit  : 0/0
  6985 ;;		Unchanged: 0/0
  6986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6987 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6988 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6989 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6990 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6991 ;;Total ram usage:       14 bytes
  6992 ;; Hardware stack levels used: 1
  6993 ;; Hardware stack levels required when called: 1
  6994 ;; This function calls:
  6995 ;;		Nothing
  6996 ;; This function is called by:
  6997 ;;		_main
  6998 ;; This function uses a non-reentrant model
  6999 ;;
  7000                           
  7001                           	psect	text24
  7002   005B4E                     __ptext24:
  7003                           	callstack 0
  7004   005B4E                     ___xxtofl:
  7005                           	callstack 29
  7006                           
  7007                           ;incstack = 0
  7008                           ;___xxtofl@sign stored from wreg
  7009   005B4E  6E0D               	movwf	___xxtofl@sign^0,c
  7010   005B50  500D               	movf	___xxtofl@sign^0,w,c
  7011   005B52  B4D8               	btfsc	status,2,c
  7012   005B54  EFAE  F02D         	goto	u3501
  7013   005B58  EFB0  F02D         	goto	u3500
  7014   005B5C                     u3501:
  7015   005B5C  EFD2  F02D         	goto	l788
  7016   005B60                     u3500:
  7017   005B60  BE08               	btfsc	(___xxtofl@val+3)^0,7,c
  7018   005B62  EFB7  F02D         	goto	u3510
  7019   005B66  EFB5  F02D         	goto	u3511
  7020   005B6A                     u3511:
  7021   005B6A  EFD2  F02D         	goto	l788
  7022   005B6E                     u3510:
  7023   005B6E  C005  F009         	movff	___xxtofl@val,??___xxtofl
  7024   005B72  C006  F00A         	movff	___xxtofl@val+1,??___xxtofl+1
  7025   005B76  C007  F00B         	movff	___xxtofl@val+2,??___xxtofl+2
  7026   005B7A  C008  F00C         	movff	___xxtofl@val+3,??___xxtofl+3
  7027   005B7E  1E09               	comf	??___xxtofl^0,f,c
  7028   005B80  1E0A               	comf	(??___xxtofl+1)^0,f,c
  7029   005B82  1E0B               	comf	(??___xxtofl+2)^0,f,c
  7030   005B84  1E0C               	comf	(??___xxtofl+3)^0,f,c
  7031   005B86  2A09               	incf	??___xxtofl^0,f,c
  7032   005B88  0E00               	movlw	0
  7033   005B8A  220A               	addwfc	(??___xxtofl+1)^0,f,c
  7034   005B8C  220B               	addwfc	(??___xxtofl+2)^0,f,c
  7035   005B8E  220C               	addwfc	(??___xxtofl+3)^0,f,c
  7036   005B90  C009  F00F         	movff	??___xxtofl,___xxtofl@arg
  7037   005B94  C00A  F010         	movff	??___xxtofl+1,___xxtofl@arg+1
  7038   005B98  C00B  F011         	movff	??___xxtofl+2,___xxtofl@arg+2
  7039   005B9C  C00C  F012         	movff	??___xxtofl+3,___xxtofl@arg+3
  7040   005BA0  EFDA  F02D         	goto	l3256
  7041   005BA4                     l788:
  7042   005BA4  C005  F00F         	movff	___xxtofl@val,___xxtofl@arg
  7043   005BA8  C006  F010         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7044   005BAC  C007  F011         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7045   005BB0  C008  F012         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7046   005BB4                     l3256:
  7047   005BB4  5005               	movf	___xxtofl@val^0,w,c
  7048   005BB6  1006               	iorwf	(___xxtofl@val+1)^0,w,c
  7049   005BB8  1007               	iorwf	(___xxtofl@val+2)^0,w,c
  7050   005BBA  1008               	iorwf	(___xxtofl@val+3)^0,w,c
  7051   005BBC  A4D8               	btfss	status,2,c
  7052   005BBE  EFE3  F02D         	goto	u3521
  7053   005BC2  EFE5  F02D         	goto	u3520
  7054   005BC6                     u3521:
  7055   005BC6  EFEF  F02D         	goto	l3262
  7056   005BCA                     u3520:
  7057   005BCA  0E00               	movlw	0
  7058   005BCC  6E05               	movwf	?___xxtofl^0,c
  7059   005BCE  0E00               	movlw	0
  7060   005BD0  6E06               	movwf	(?___xxtofl+1)^0,c
  7061   005BD2  0E00               	movlw	0
  7062   005BD4  6E07               	movwf	(?___xxtofl+2)^0,c
  7063   005BD6  0E00               	movlw	0
  7064   005BD8  6E08               	movwf	(?___xxtofl+3)^0,c
  7065   005BDA  EF80  F02E         	goto	l791
  7066   005BDE                     l3262:
  7067   005BDE  0E96               	movlw	150
  7068   005BE0  6E0E               	movwf	___xxtofl@exp^0,c
  7069   005BE2  EFF9  F02D         	goto	l3266
  7070   005BE6                     l3264:
  7071   005BE6  2A0E               	incf	___xxtofl@exp^0,f,c
  7072   005BE8  90D8               	bcf	status,0,c
  7073   005BEA  3212               	rrcf	(___xxtofl@arg+3)^0,f,c
  7074   005BEC  3211               	rrcf	(___xxtofl@arg+2)^0,f,c
  7075   005BEE  3210               	rrcf	(___xxtofl@arg+1)^0,f,c
  7076   005BF0  320F               	rrcf	___xxtofl@arg^0,f,c
  7077   005BF2                     l3266:
  7078   005BF2  0E00               	movlw	0
  7079   005BF4  140F               	andwf	___xxtofl@arg^0,w,c
  7080   005BF6  6E09               	movwf	??___xxtofl^0,c
  7081   005BF8  0E00               	movlw	0
  7082   005BFA  1410               	andwf	(___xxtofl@arg+1)^0,w,c
  7083   005BFC  6E0A               	movwf	(??___xxtofl+1)^0,c
  7084   005BFE  0E00               	movlw	0
  7085   005C00  1411               	andwf	(___xxtofl@arg+2)^0,w,c
  7086   005C02  6E0B               	movwf	(??___xxtofl+2)^0,c
  7087   005C04  0EFE               	movlw	254
  7088   005C06  1412               	andwf	(___xxtofl@arg+3)^0,w,c
  7089   005C08  6E0C               	movwf	(??___xxtofl+3)^0,c
  7090   005C0A  5009               	movf	??___xxtofl^0,w,c
  7091   005C0C  100A               	iorwf	(??___xxtofl+1)^0,w,c
  7092   005C0E  100B               	iorwf	(??___xxtofl+2)^0,w,c
  7093   005C10  100C               	iorwf	(??___xxtofl+3)^0,w,c
  7094   005C12  A4D8               	btfss	status,2,c
  7095   005C14  EF0E  F02E         	goto	u3531
  7096   005C18  EF10  F02E         	goto	u3530
  7097   005C1C                     u3531:
  7098   005C1C  EFF3  F02D         	goto	l3264
  7099   005C20                     u3530:
  7100   005C20  EF1E  F02E         	goto	l795
  7101   005C24                     l3268:
  7102   005C24  2A0E               	incf	___xxtofl@exp^0,f,c
  7103   005C26  0E01               	movlw	1
  7104   005C28  260F               	addwf	___xxtofl@arg^0,f,c
  7105   005C2A  0E00               	movlw	0
  7106   005C2C  2210               	addwfc	(___xxtofl@arg+1)^0,f,c
  7107   005C2E  2211               	addwfc	(___xxtofl@arg+2)^0,f,c
  7108   005C30  2212               	addwfc	(___xxtofl@arg+3)^0,f,c
  7109   005C32  90D8               	bcf	status,0,c
  7110   005C34  3212               	rrcf	(___xxtofl@arg+3)^0,f,c
  7111   005C36  3211               	rrcf	(___xxtofl@arg+2)^0,f,c
  7112   005C38  3210               	rrcf	(___xxtofl@arg+1)^0,f,c
  7113   005C3A  320F               	rrcf	___xxtofl@arg^0,f,c
  7114   005C3C                     l795:
  7115   005C3C  0E00               	movlw	0
  7116   005C3E  140F               	andwf	___xxtofl@arg^0,w,c
  7117   005C40  6E09               	movwf	??___xxtofl^0,c
  7118   005C42  0E00               	movlw	0
  7119   005C44  1410               	andwf	(___xxtofl@arg+1)^0,w,c
  7120   005C46  6E0A               	movwf	(??___xxtofl+1)^0,c
  7121   005C48  0E00               	movlw	0
  7122   005C4A  1411               	andwf	(___xxtofl@arg+2)^0,w,c
  7123   005C4C  6E0B               	movwf	(??___xxtofl+2)^0,c
  7124   005C4E  0EFF               	movlw	255
  7125   005C50  1412               	andwf	(___xxtofl@arg+3)^0,w,c
  7126   005C52  6E0C               	movwf	(??___xxtofl+3)^0,c
  7127   005C54  5009               	movf	??___xxtofl^0,w,c
  7128   005C56  100A               	iorwf	(??___xxtofl+1)^0,w,c
  7129   005C58  100B               	iorwf	(??___xxtofl+2)^0,w,c
  7130   005C5A  100C               	iorwf	(??___xxtofl+3)^0,w,c
  7131   005C5C  A4D8               	btfss	status,2,c
  7132   005C5E  EF33  F02E         	goto	u3541
  7133   005C62  EF35  F02E         	goto	u3540
  7134   005C66                     u3541:
  7135   005C66  EF12  F02E         	goto	l3268
  7136   005C6A                     u3540:
  7137   005C6A  EF3D  F02E         	goto	l3276
  7138   005C6E                     l3274:
  7139   005C6E  060E               	decf	___xxtofl@exp^0,f,c
  7140   005C70  90D8               	bcf	status,0,c
  7141   005C72  360F               	rlcf	___xxtofl@arg^0,f,c
  7142   005C74  3610               	rlcf	(___xxtofl@arg+1)^0,f,c
  7143   005C76  3611               	rlcf	(___xxtofl@arg+2)^0,f,c
  7144   005C78  3612               	rlcf	(___xxtofl@arg+3)^0,f,c
  7145   005C7A                     l3276:
  7146   005C7A  BE11               	btfsc	(___xxtofl@arg+2)^0,7,c
  7147   005C7C  EF42  F02E         	goto	u3551
  7148   005C80  EF44  F02E         	goto	u3550
  7149   005C84                     u3551:
  7150   005C84  EF4C  F02E         	goto	l802
  7151   005C88                     u3550:
  7152   005C88  0E02               	movlw	2
  7153   005C8A  600E               	cpfslt	___xxtofl@exp^0,c
  7154   005C8C  EF4A  F02E         	goto	u3561
  7155   005C90  EF4C  F02E         	goto	u3560
  7156   005C94                     u3561:
  7157   005C94  EF37  F02E         	goto	l3274
  7158   005C98                     u3560:
  7159   005C98                     l802:
  7160   005C98  B00E               	btfsc	___xxtofl@exp^0,0,c
  7161   005C9A  EF51  F02E         	goto	u3571
  7162   005C9E  EF53  F02E         	goto	u3570
  7163   005CA2                     u3571:
  7164   005CA2  EF54  F02E         	goto	l3282
  7165   005CA6                     u3570:
  7166   005CA6  9E11               	bcf	(___xxtofl@arg+2)^0,7,c
  7167   005CA8                     l3282:
  7168   005CA8  90D8               	bcf	status,0,c
  7169   005CAA  320E               	rrcf	___xxtofl@exp^0,f,c
  7170   005CAC  C00E  F009         	movff	___xxtofl@exp,??___xxtofl
  7171   005CB0  6A0A               	clrf	(??___xxtofl+1)^0,c
  7172   005CB2  6A0B               	clrf	(??___xxtofl+2)^0,c
  7173   005CB4  6A0C               	clrf	(??___xxtofl+3)^0,c
  7174   005CB6  C009  F00C         	movff	??___xxtofl,??___xxtofl+3
  7175   005CBA  6A0B               	clrf	(??___xxtofl+2)^0,c
  7176   005CBC  6A0A               	clrf	(??___xxtofl+1)^0,c
  7177   005CBE  6A09               	clrf	??___xxtofl^0,c
  7178   005CC0  5009               	movf	??___xxtofl^0,w,c
  7179   005CC2  120F               	iorwf	___xxtofl@arg^0,f,c
  7180   005CC4  500A               	movf	(??___xxtofl+1)^0,w,c
  7181   005CC6  1210               	iorwf	(___xxtofl@arg+1)^0,f,c
  7182   005CC8  500B               	movf	(??___xxtofl+2)^0,w,c
  7183   005CCA  1211               	iorwf	(___xxtofl@arg+2)^0,f,c
  7184   005CCC  500C               	movf	(??___xxtofl+3)^0,w,c
  7185   005CCE  1212               	iorwf	(___xxtofl@arg+3)^0,f,c
  7186   005CD0  500D               	movf	___xxtofl@sign^0,w,c
  7187   005CD2  B4D8               	btfsc	status,2,c
  7188   005CD4  EF6E  F02E         	goto	u3581
  7189   005CD8  EF70  F02E         	goto	u3580
  7190   005CDC                     u3581:
  7191   005CDC  EF78  F02E         	goto	l3292
  7192   005CE0                     u3580:
  7193   005CE0  BE08               	btfsc	(___xxtofl@val+3)^0,7,c
  7194   005CE2  EF77  F02E         	goto	u3590
  7195   005CE6  EF75  F02E         	goto	u3591
  7196   005CEA                     u3591:
  7197   005CEA  EF78  F02E         	goto	l3292
  7198   005CEE                     u3590:
  7199   005CEE  8E12               	bsf	(___xxtofl@arg+3)^0,7,c
  7200   005CF0                     l3292:
  7201   005CF0  C00F  F005         	movff	___xxtofl@arg,?___xxtofl
  7202   005CF4  C010  F006         	movff	___xxtofl@arg+1,?___xxtofl+1
  7203   005CF8  C011  F007         	movff	___xxtofl@arg+2,?___xxtofl+2
  7204   005CFC  C012  F008         	movff	___xxtofl@arg+3,?___xxtofl+3
  7205   005D00                     l791:
  7206   005D00  0012               	return		;funcret
  7207   005D02                     __end_of___xxtofl:
  7208                           	callstack 0
  7209                           
  7210 ;; *************** function _LCD_String_xy *****************
  7211 ;; Defined at:
  7212 ;;		line 52 in file "./functions.h"
  7213 ;; Parameters:    Size  Location     Type
  7214 ;;  row             1    wreg     unsigned char 
  7215 ;;  pos             1   12[COMRAM] unsigned char 
  7216 ;;  msg             1   13[COMRAM] PTR const unsigned char 
  7217 ;;		 -> data(10), 
  7218 ;; Auto vars:     Size  Location     Type
  7219 ;;  row             1   14[COMRAM] unsigned char 
  7220 ;;  location        1   15[COMRAM] unsigned char 
  7221 ;; Return value:  Size  Location     Type
  7222 ;;                  1    wreg      void 
  7223 ;; Registers used:
  7224 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7225 ;; Tracked objects:
  7226 ;;		On entry : 0/0
  7227 ;;		On exit  : 0/0
  7228 ;;		Unchanged: 0/0
  7229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7230 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7231 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7233 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7234 ;;Total ram usage:        4 bytes
  7235 ;; Hardware stack levels used: 1
  7236 ;; Hardware stack levels required when called: 4
  7237 ;; This function calls:
  7238 ;;		_LCD_Command
  7239 ;;		_LCD_String
  7240 ;; This function is called by:
  7241 ;;		_main
  7242 ;; This function uses a non-reentrant model
  7243 ;;
  7244                           
  7245                           	psect	text25
  7246   006632                     __ptext25:
  7247                           	callstack 0
  7248   006632                     _LCD_String_xy:
  7249                           	callstack 26
  7250                           
  7251                           ;incstack = 0
  7252                           ;LCD_String_xy@row stored from wreg
  7253   006632  6E0F               	movwf	LCD_String_xy@row^0,c
  7254   006634                     
  7255                           ;./functions.h: 55:     if(row<=1)
  7256   006634  0E02               	movlw	2
  7257   006636  600F               	cpfslt	LCD_String_xy@row^0,c
  7258   006638  EF20  F033         	goto	u3471
  7259   00663C  EF22  F033         	goto	u3470
  7260   006640                     u3471:
  7261   006640  EF2B  F033         	goto	l3222
  7262   006644                     u3470:
  7263   006644                     
  7264                           ;./functions.h: 56:     {;./functions.h: 57:         location=(0x80) | ((pos) & 0x0f);
  7265   006644  500D               	movf	LCD_String_xy@pos^0,w,c
  7266   006646  0B0F               	andlw	15
  7267   006648  0980               	iorlw	128
  7268   00664A  6E10               	movwf	LCD_String_xy@location^0,c
  7269   00664C                     
  7270                           ;./functions.h: 58:         LCD_Command(location);
  7271   00664C  5010               	movf	LCD_String_xy@location^0,w,c
  7272   00664E  ECD7  F033         	call	_LCD_Command
  7273                           
  7274                           ;./functions.h: 59:     }
  7275   006652  EF32  F033         	goto	l3226
  7276   006656                     l3222:
  7277                           
  7278                           ;./functions.h: 61:     {;./functions.h: 62:         location=(0xC0) | ((pos) & 0x0f);
  7279   006656  500D               	movf	LCD_String_xy@pos^0,w,c
  7280   006658  0B0F               	andlw	15
  7281   00665A  09C0               	iorlw	192
  7282   00665C  6E10               	movwf	LCD_String_xy@location^0,c
  7283   00665E                     
  7284                           ;./functions.h: 63:         LCD_Command(location);
  7285   00665E  5010               	movf	LCD_String_xy@location^0,w,c
  7286   006660  ECD7  F033         	call	_LCD_Command
  7287   006664                     l3226:
  7288                           
  7289                           ;./functions.h: 65:     LCD_String(msg);
  7290   006664  C00E  F00C         	movff	LCD_String_xy@msg,LCD_String@msg
  7291   006668  EC8A  F033         	call	_LCD_String	;wreg free
  7292   00666C  0012               	return		;funcret
  7293   00666E                     __end_of_LCD_String_xy:
  7294                           	callstack 0
  7295                           
  7296 ;; *************** function _LCD_String *****************
  7297 ;; Defined at:
  7298 ;;		line 43 in file "./functions.h"
  7299 ;; Parameters:    Size  Location     Type
  7300 ;;  msg             1   11[COMRAM] PTR const unsigned char 
  7301 ;;		 -> data(10), 
  7302 ;; Auto vars:     Size  Location     Type
  7303 ;;		None
  7304 ;; Return value:  Size  Location     Type
  7305 ;;                  1    wreg      void 
  7306 ;; Registers used:
  7307 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7308 ;; Tracked objects:
  7309 ;;		On entry : 0/0
  7310 ;;		On exit  : 0/0
  7311 ;;		Unchanged: 0/0
  7312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7313 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7314 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7316 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7317 ;;Total ram usage:        1 bytes
  7318 ;; Hardware stack levels used: 1
  7319 ;; Hardware stack levels required when called: 3
  7320 ;; This function calls:
  7321 ;;		_LCD_Char
  7322 ;; This function is called by:
  7323 ;;		_LCD_String_xy
  7324 ;; This function uses a non-reentrant model
  7325 ;;
  7326                           
  7327                           	psect	text26
  7328   006714                     __ptext26:
  7329                           	callstack 0
  7330   006714                     _LCD_String:
  7331                           	callstack 26
  7332   006714                     
  7333                           ;./functions.h: 43: void LCD_String(const char *msg);./functions.h: 44: {;./functions.h:
      +                           45:     while((*msg)!=0)
  7334   006714  EF93  F033         	goto	l3166
  7335   006718                     l3162:
  7336                           
  7337                           ;./functions.h: 46:     {;./functions.h: 47:       LCD_Char(*msg);
  7338   006718  500C               	movf	LCD_String@msg^0,w,c
  7339   00671A  6ED9               	movwf	fsr2l,c
  7340   00671C  6ADA               	clrf	fsr2h,c
  7341   00671E  50DF               	movf	indf2,w,c
  7342   006720  ECC8  F033         	call	_LCD_Char
  7343   006724                     
  7344                           ;./functions.h: 48:       msg++;
  7345   006724  2A0C               	incf	LCD_String@msg^0,f,c
  7346   006726                     l3166:
  7347                           
  7348                           ;./functions.h: 45:     while((*msg)!=0)
  7349   006726  500C               	movf	LCD_String@msg^0,w,c
  7350   006728  6ED9               	movwf	fsr2l,c
  7351   00672A  6ADA               	clrf	fsr2h,c
  7352   00672C  50DF               	movf	indf2,w,c
  7353   00672E  A4D8               	btfss	status,2,c
  7354   006730  EF9C  F033         	goto	u3451
  7355   006734  EF9E  F033         	goto	u3450
  7356   006738                     u3451:
  7357   006738  EF8C  F033         	goto	l3162
  7358   00673C                     u3450:
  7359   00673C  0012               	return		;funcret
  7360   00673E                     __end_of_LCD_String:
  7361                           	callstack 0
  7362                           
  7363 ;; *************** function _LCD_Char *****************
  7364 ;; Defined at:
  7365 ;;		line 32 in file "./functions.h"
  7366 ;; Parameters:    Size  Location     Type
  7367 ;;  dat             1    wreg     unsigned char 
  7368 ;; Auto vars:     Size  Location     Type
  7369 ;;  dat             1   10[COMRAM] unsigned char 
  7370 ;; Return value:  Size  Location     Type
  7371 ;;                  1    wreg      void 
  7372 ;; Registers used:
  7373 ;;		wreg, status,2, status,0, cstack
  7374 ;; Tracked objects:
  7375 ;;		On entry : 0/0
  7376 ;;		On exit  : 0/0
  7377 ;;		Unchanged: 0/0
  7378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7380 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7382 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7383 ;;Total ram usage:        1 bytes
  7384 ;; Hardware stack levels used: 1
  7385 ;; Hardware stack levels required when called: 2
  7386 ;; This function calls:
  7387 ;;		_MSdelay
  7388 ;; This function is called by:
  7389 ;;		_LCD_String
  7390 ;; This function uses a non-reentrant model
  7391 ;;
  7392                           
  7393                           	psect	text27
  7394   006790                     __ptext27:
  7395                           	callstack 0
  7396   006790                     _LCD_Char:
  7397                           	callstack 26
  7398                           
  7399                           ;incstack = 0
  7400                           ;LCD_Char@dat stored from wreg
  7401   006790  6E0B               	movwf	LCD_Char@dat^0,c
  7402   006792                     
  7403                           ;./functions.h: 32: void LCD_Char(char dat);./functions.h: 33: {;./functions.h: 34:     
      +                          LATB= dat;
  7404   006792  0060  F02F  FFBB   	movff	LCD_Char@dat,16315	;volatile
  7405   006798                     
  7406                           ;./functions.h: 35:     LATDbits.LATD0 = 1;
  7407   006798  80BD               	bsf	189,0,c	;volatile
  7408   00679A                     
  7409                           ;./functions.h: 36:     LATDbits.LATD1=1;
  7410   00679A  82BD               	bsf	189,1,c	;volatile
  7411   00679C                     
  7412                           ;./functions.h: 37:     __nop();
  7413   00679C  0000               	nop	
  7414   00679E                     
  7415                           ;./functions.h: 38:     LATDbits.LATD1=0;
  7416   00679E  92BD               	bcf	189,1,c	;volatile
  7417   0067A0                     
  7418                           ;./functions.h: 39:     MSdelay(1);
  7419   0067A0  0E00               	movlw	0
  7420   0067A2  6E06               	movwf	(MSdelay@val+1)^0,c
  7421   0067A4  0E01               	movlw	1
  7422   0067A6  6E05               	movwf	MSdelay@val^0,c
  7423   0067A8  EC6A  F032         	call	_MSdelay	;wreg free
  7424   0067AC  0012               	return		;funcret
  7425   0067AE                     __end_of_LCD_Char:
  7426                           	callstack 0
  7427                           
  7428 ;; *************** function _LCD_Init *****************
  7429 ;; Defined at:
  7430 ;;		line 63 in file "./init.h"
  7431 ;; Parameters:    Size  Location     Type
  7432 ;;		None
  7433 ;; Auto vars:     Size  Location     Type
  7434 ;;		None
  7435 ;; Return value:  Size  Location     Type
  7436 ;;                  1    wreg      void 
  7437 ;; Registers used:
  7438 ;;		wreg, status,2, status,0, cstack
  7439 ;; Tracked objects:
  7440 ;;		On entry : 0/0
  7441 ;;		On exit  : 0/0
  7442 ;;		Unchanged: 0/0
  7443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7447 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7448 ;;Total ram usage:        0 bytes
  7449 ;; Hardware stack levels used: 1
  7450 ;; Hardware stack levels required when called: 3
  7451 ;; This function calls:
  7452 ;;		_LCD_Command
  7453 ;;		_MSdelay
  7454 ;; This function is called by:
  7455 ;;		_main
  7456 ;; This function uses a non-reentrant model
  7457 ;;
  7458                           
  7459                           	psect	text28
  7460   00673E                     __ptext28:
  7461                           	callstack 0
  7462   00673E                     _LCD_Init:
  7463                           	callstack 27
  7464   00673E                     
  7465                           ;./init.h: 64:     MSdelay(15);
  7466   00673E  0E00               	movlw	0
  7467   006740  6E06               	movwf	(MSdelay@val+1)^0,c
  7468   006742  0E0F               	movlw	15
  7469   006744  6E05               	movwf	MSdelay@val^0,c
  7470   006746  EC6A  F032         	call	_MSdelay	;wreg free
  7471   00674A                     
  7472                           ;./init.h: 65:     TRISB = 0x00;
  7473   00674A  6AC3               	clrf	195,c	;volatile
  7474   00674C                     
  7475                           ;./init.h: 66:     TRISD = 0x00;
  7476   00674C  6AC5               	clrf	197,c	;volatile
  7477                           
  7478                           ;./init.h: 67:     LCD_Command(0x01);
  7479   00674E  0E01               	movlw	1
  7480   006750  ECD7  F033         	call	_LCD_Command
  7481                           
  7482                           ;./init.h: 68:     LCD_Command(0x38);
  7483   006754  0E38               	movlw	56
  7484   006756  ECD7  F033         	call	_LCD_Command
  7485                           
  7486                           ;./init.h: 69:     LCD_Command(0x0c);
  7487   00675A  0E0C               	movlw	12
  7488   00675C  ECD7  F033         	call	_LCD_Command
  7489                           
  7490                           ;./init.h: 70:     LCD_Command(0x06);
  7491   006760  0E06               	movlw	6
  7492   006762  ECD7  F033         	call	_LCD_Command
  7493   006766  0012               	return		;funcret
  7494   006768                     __end_of_LCD_Init:
  7495                           	callstack 0
  7496                           
  7497 ;; *************** function _LCD_Clear *****************
  7498 ;; Defined at:
  7499 ;;		line 17 in file "./functions.h"
  7500 ;; Parameters:    Size  Location     Type
  7501 ;;		None
  7502 ;; Auto vars:     Size  Location     Type
  7503 ;;		None
  7504 ;; Return value:  Size  Location     Type
  7505 ;;                  1    wreg      void 
  7506 ;; Registers used:
  7507 ;;		wreg, status,2, status,0, cstack
  7508 ;; Tracked objects:
  7509 ;;		On entry : 0/0
  7510 ;;		On exit  : 0/0
  7511 ;;		Unchanged: 0/0
  7512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7513 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7514 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7516 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7517 ;;Total ram usage:        0 bytes
  7518 ;; Hardware stack levels used: 1
  7519 ;; Hardware stack levels required when called: 3
  7520 ;; This function calls:
  7521 ;;		_LCD_Command
  7522 ;; This function is called by:
  7523 ;;		_main
  7524 ;; This function uses a non-reentrant model
  7525 ;;
  7526                           
  7527                           	psect	text29
  7528   0067E6                     __ptext29:
  7529                           	callstack 0
  7530   0067E6                     _LCD_Clear:
  7531                           	callstack 27
  7532   0067E6                     
  7533                           ;./functions.h: 19:         LCD_Command(0x01);
  7534   0067E6  0E01               	movlw	1
  7535   0067E8  ECD7  F033         	call	_LCD_Command
  7536   0067EC  0012               	return		;funcret
  7537   0067EE                     __end_of_LCD_Clear:
  7538                           	callstack 0
  7539                           
  7540 ;; *************** function _LCD_Command *****************
  7541 ;; Defined at:
  7542 ;;		line 22 in file "./functions.h"
  7543 ;; Parameters:    Size  Location     Type
  7544 ;;  cmd             1    wreg     unsigned char 
  7545 ;; Auto vars:     Size  Location     Type
  7546 ;;  cmd             1   10[COMRAM] unsigned char 
  7547 ;; Return value:  Size  Location     Type
  7548 ;;                  1    wreg      void 
  7549 ;; Registers used:
  7550 ;;		wreg, status,2, status,0, cstack
  7551 ;; Tracked objects:
  7552 ;;		On entry : 0/0
  7553 ;;		On exit  : 0/0
  7554 ;;		Unchanged: 0/0
  7555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7557 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7559 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7560 ;;Total ram usage:        1 bytes
  7561 ;; Hardware stack levels used: 1
  7562 ;; Hardware stack levels required when called: 2
  7563 ;; This function calls:
  7564 ;;		_MSdelay
  7565 ;; This function is called by:
  7566 ;;		_LCD_Init
  7567 ;;		_LCD_Clear
  7568 ;;		_LCD_String_xy
  7569 ;; This function uses a non-reentrant model
  7570 ;;
  7571                           
  7572                           	psect	text30
  7573   0067AE                     __ptext30:
  7574                           	callstack 0
  7575   0067AE                     _LCD_Command:
  7576                           	callstack 27
  7577                           
  7578                           ;incstack = 0
  7579                           ;LCD_Command@cmd stored from wreg
  7580   0067AE  6E0B               	movwf	LCD_Command@cmd^0,c
  7581   0067B0                     
  7582                           ;./functions.h: 22: void LCD_Command(char cmd );./functions.h: 23: {;./functions.h: 24: 
      +                              LATB= cmd;
  7583   0067B0  0060  F02F  FFBB   	movff	LCD_Command@cmd,16315	;volatile
  7584   0067B6                     
  7585                           ;./functions.h: 25:     LATDbits.LATD0 = 0;
  7586   0067B6  90BD               	bcf	189,0,c	;volatile
  7587   0067B8                     
  7588                           ;./functions.h: 26:     LATDbits.LATD1 = 1;
  7589   0067B8  82BD               	bsf	189,1,c	;volatile
  7590   0067BA                     
  7591                           ;./functions.h: 27:     __nop();
  7592   0067BA  0000               	nop	
  7593   0067BC                     
  7594                           ;./functions.h: 28:     LATDbits.LATD1 = 0;
  7595   0067BC  92BD               	bcf	189,1,c	;volatile
  7596   0067BE                     
  7597                           ;./functions.h: 29:     MSdelay(3);
  7598   0067BE  0E00               	movlw	0
  7599   0067C0  6E06               	movwf	(MSdelay@val+1)^0,c
  7600   0067C2  0E03               	movlw	3
  7601   0067C4  6E05               	movwf	MSdelay@val^0,c
  7602   0067C6  EC6A  F032         	call	_MSdelay	;wreg free
  7603   0067CA  0012               	return		;funcret
  7604   0067CC                     __end_of_LCD_Command:
  7605                           	callstack 0
  7606                           
  7607 ;; *************** function _MSdelay *****************
  7608 ;; Defined at:
  7609 ;;		line 69 in file "./functions.h"
  7610 ;; Parameters:    Size  Location     Type
  7611 ;;  val             2    4[COMRAM] unsigned int 
  7612 ;; Auto vars:     Size  Location     Type
  7613 ;;  j               2    8[COMRAM] unsigned int 
  7614 ;;  i               2    6[COMRAM] unsigned int 
  7615 ;; Return value:  Size  Location     Type
  7616 ;;                  1    wreg      void 
  7617 ;; Registers used:
  7618 ;;		wreg, status,2, status,0
  7619 ;; Tracked objects:
  7620 ;;		On entry : 0/0
  7621 ;;		On exit  : 0/0
  7622 ;;		Unchanged: 0/0
  7623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7624 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7625 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7627 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7628 ;;Total ram usage:        6 bytes
  7629 ;; Hardware stack levels used: 1
  7630 ;; Hardware stack levels required when called: 1
  7631 ;; This function calls:
  7632 ;;		Nothing
  7633 ;; This function is called by:
  7634 ;;		_LCD_Init
  7635 ;;		_LCD_Command
  7636 ;;		_LCD_Char
  7637 ;;		_main
  7638 ;; This function uses a non-reentrant model
  7639 ;;
  7640                           
  7641                           	psect	text31
  7642   0064D4                     __ptext31:
  7643                           	callstack 0
  7644   0064D4                     _MSdelay:
  7645                           	callstack 29
  7646   0064D4                     
  7647                           ;./functions.h: 69: void MSdelay(unsigned int val);./functions.h: 70: {;./functions.h: 7
      +                          1:      unsigned int i,j;;./functions.h: 72:         for(i=0;i<val;i++)
  7648   0064D4  0E00               	movlw	0
  7649   0064D6  6E08               	movwf	(MSdelay@i+1)^0,c
  7650   0064D8  0E00               	movlw	0
  7651   0064DA  6E07               	movwf	MSdelay@i^0,c
  7652   0064DC  EF83  F032         	goto	l2844
  7653   0064E0                     l2832:
  7654                           
  7655                           ;./functions.h: 73:             for(j=0;j<165;j++);
  7656   0064E0  0E00               	movlw	0
  7657   0064E2  6E0A               	movwf	(MSdelay@j+1)^0,c
  7658   0064E4  0E00               	movlw	0
  7659   0064E6  6E09               	movwf	MSdelay@j^0,c
  7660   0064E8                     l2838:
  7661   0064E8  4A09               	infsnz	MSdelay@j^0,f,c
  7662   0064EA  2A0A               	incf	(MSdelay@j+1)^0,f,c
  7663   0064EC  500A               	movf	(MSdelay@j+1)^0,w,c
  7664   0064EE  E109               	bnz	u3060
  7665   0064F0  0EA5               	movlw	165
  7666   0064F2  5C09               	subwf	MSdelay@j^0,w,c
  7667   0064F4  A0D8               	btfss	status,0,c
  7668   0064F6  EF7F  F032         	goto	u3061
  7669   0064FA  EF81  F032         	goto	u3060
  7670   0064FE                     u3061:
  7671   0064FE  EF74  F032         	goto	l2838
  7672   006502                     u3060:
  7673   006502  4A07               	infsnz	MSdelay@i^0,f,c
  7674   006504  2A08               	incf	(MSdelay@i+1)^0,f,c
  7675   006506                     l2844:
  7676   006506  5005               	movf	MSdelay@val^0,w,c
  7677   006508  5C07               	subwf	MSdelay@i^0,w,c
  7678   00650A  5006               	movf	(MSdelay@val+1)^0,w,c
  7679   00650C  5808               	subwfb	(MSdelay@i+1)^0,w,c
  7680   00650E  A0D8               	btfss	status,0,c
  7681   006510  EF8C  F032         	goto	u3071
  7682   006514  EF8E  F032         	goto	u3070
  7683   006518                     u3071:
  7684   006518  EF70  F032         	goto	l2832
  7685   00651C                     u3070:
  7686   00651C  0012               	return		;funcret
  7687   00651E                     __end_of_MSdelay:
  7688                           	callstack 0
  7689                           
  7690 ;; *************** function _INTERRUPT_Initialize *****************
  7691 ;; Defined at:
  7692 ;;		line 24 in file "./init.h"
  7693 ;; Parameters:    Size  Location     Type
  7694 ;;		None
  7695 ;; Auto vars:     Size  Location     Type
  7696 ;;		None
  7697 ;; Return value:  Size  Location     Type
  7698 ;;                  1    wreg      void 
  7699 ;; Registers used:
  7700 ;;		None
  7701 ;; Tracked objects:
  7702 ;;		On entry : 0/0
  7703 ;;		On exit  : 0/0
  7704 ;;		Unchanged: 0/0
  7705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7706 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7707 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7709 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7710 ;;Total ram usage:        0 bytes
  7711 ;; Hardware stack levels used: 1
  7712 ;; Hardware stack levels required when called: 1
  7713 ;; This function calls:
  7714 ;;		Nothing
  7715 ;; This function is called by:
  7716 ;;		_main
  7717 ;; This function uses a non-reentrant model
  7718 ;;
  7719                           
  7720                           	psect	text32
  7721   0067CC                     __ptext32:
  7722                           	callstack 0
  7723   0067CC                     _INTERRUPT_Initialize:
  7724                           	callstack 29
  7725   0067CC                     
  7726                           ;./init.h: 25: TRISCbits.TRISC1 = 1;
  7727   0067CC  82C4               	bsf	196,1,c	;volatile
  7728                           
  7729                           ;./init.h: 26: ANSELCbits.ANSELC1 = 0;
  7730   0067CE  013A               	movlb	58	; () banked
  7731   0067D0  9360               	bcf	96,1,b	;volatile
  7732                           
  7733                           ;./init.h: 27: IOCCNbits.IOCCN1 = 0;
  7734   0067D2  9366               	bcf	102,1,b	;volatile
  7735                           
  7736                           ;./init.h: 28: IOCCPbits.IOCCP1 = 1;
  7737   0067D4  8365               	bsf	101,1,b	;volatile
  7738                           
  7739                           ;./init.h: 31: IOCCFbits.IOCCF1 = 0;
  7740   0067D6  9367               	bcf	103,1,b	;volatile
  7741                           
  7742                           ;./init.h: 32: PIR0bits.IOCIF = 0;
  7743   0067D8  0139               	movlb	57	; () banked
  7744   0067DA  9FA0               	bcf	160,7,b	;volatile
  7745                           
  7746                           ;./init.h: 33: PIE0bits.IOCIE = 1;
  7747   0067DC  8F90               	bsf	144,7,b	;volatile
  7748                           
  7749                           ;./init.h: 34: INTCON0bits.GIEL = 1;
  7750   0067DE  8CD2               	bsf	210,6,c	;volatile
  7751                           
  7752                           ;./init.h: 35: INTCON0bits.GIEH = 1;
  7753   0067E0  8ED2               	bsf	210,7,c	;volatile
  7754                           
  7755                           ;./init.h: 36: INTCON0bits.IPEN = 1;
  7756   0067E2  8AD2               	bsf	210,5,c	;volatile
  7757   0067E4                     
  7758                           ; BSR set to: 57
  7759   0067E4  0012               	return		;funcret
  7760   0067E6                     __end_of_INTERRUPT_Initialize:
  7761                           	callstack 0
  7762                           
  7763 ;; *************** function _ADC_Init *****************
  7764 ;; Defined at:
  7765 ;;		line 40 in file "./init.h"
  7766 ;; Parameters:    Size  Location     Type
  7767 ;;		None
  7768 ;; Auto vars:     Size  Location     Type
  7769 ;;		None
  7770 ;; Return value:  Size  Location     Type
  7771 ;;                  1    wreg      void 
  7772 ;; Registers used:
  7773 ;;		wreg, status,2
  7774 ;; Tracked objects:
  7775 ;;		On entry : 0/0
  7776 ;;		On exit  : 0/0
  7777 ;;		Unchanged: 0/0
  7778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7782 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7783 ;;Total ram usage:        0 bytes
  7784 ;; Hardware stack levels used: 1
  7785 ;; Hardware stack levels required when called: 1
  7786 ;; This function calls:
  7787 ;;		Nothing
  7788 ;; This function is called by:
  7789 ;;		_main
  7790 ;; This function uses a non-reentrant model
  7791 ;;
  7792                           
  7793                           	psect	text33
  7794   006768                     __ptext33:
  7795                           	callstack 0
  7796   006768                     _ADC_Init:
  7797                           	callstack 29
  7798   006768                     
  7799                           ;./init.h: 43:     ADCON0bits.FM = 1;
  7800   006768  013E               	movlb	62	; () banked
  7801   00676A  51F8               	movf	248,w,b	;volatile
  7802   00676C  0BF3               	andlw	-13
  7803   00676E  0904               	iorlw	4
  7804   006770  6FF8               	movwf	248,b	;volatile
  7805   006772                     
  7806                           ; BSR set to: 62
  7807                           ;./init.h: 44:     ADCON0bits.CS = 1;
  7808   006772  89F8               	bsf	248,4,b	;volatile
  7809   006774                     
  7810                           ; BSR set to: 62
  7811                           ;./init.h: 46:     TRISAbits.TRISA0 = 1;
  7812   006774  80C2               	bsf	194,0,c	;volatile
  7813   006776                     
  7814                           ; BSR set to: 62
  7815                           ;./init.h: 47:     ANSELAbits.ANSELA0 = 1;
  7816   006776  013A               	movlb	58	; () banked
  7817   006778  8140               	bsf	64,0,b	;volatile
  7818   00677A                     
  7819                           ; BSR set to: 58
  7820                           ;./init.h: 49:     ADPCH = 0x00;
  7821   00677A  013E               	movlb	62	; () banked
  7822   00677C  6BF1               	clrf	241,b	;volatile
  7823   00677E                     
  7824                           ; BSR set to: 62
  7825                           ;./init.h: 50:     ADCLK = 0x00;
  7826   00677E  6BFF               	clrf	255,b	;volatile
  7827   006780                     
  7828                           ; BSR set to: 62
  7829                           ;./init.h: 52:     ADRESH = 0x00;
  7830   006780  6BF0               	clrf	240,b	;volatile
  7831   006782                     
  7832                           ; BSR set to: 62
  7833                           ;./init.h: 53:     ADRESL = 0x00;
  7834   006782  6BEF               	clrf	239,b	;volatile
  7835   006784                     
  7836                           ; BSR set to: 62
  7837                           ;./init.h: 55:     ADPREL = 0x00;
  7838   006784  6BF6               	clrf	246,b	;volatile
  7839   006786                     
  7840                           ; BSR set to: 62
  7841                           ;./init.h: 56:     ADPREH = 0x00;
  7842   006786  6BF7               	clrf	247,b	;volatile
  7843   006788                     
  7844                           ; BSR set to: 62
  7845                           ;./init.h: 58:     ADACQL = 0x00;
  7846   006788  6BF3               	clrf	243,b	;volatile
  7847   00678A                     
  7848                           ; BSR set to: 62
  7849                           ;./init.h: 59:     ADACQH = 0x00;
  7850   00678A  6BF4               	clrf	244,b	;volatile
  7851   00678C                     
  7852                           ; BSR set to: 62
  7853                           ;./init.h: 61:     ADCON0bits.ON = 1;
  7854   00678C  8FF8               	bsf	248,7,b	;volatile
  7855   00678E                     
  7856                           ; BSR set to: 62
  7857   00678E  0012               	return		;funcret
  7858   006790                     __end_of_ADC_Init:
  7859                           	callstack 0
  7860                           
  7861 ;; *************** function _IOC_ISR *****************
  7862 ;; Defined at:
  7863 ;;		line 76 in file "./functions.h"
  7864 ;; Parameters:    Size  Location     Type
  7865 ;;		None
  7866 ;; Auto vars:     Size  Location     Type
  7867 ;;  k               2    2[COMRAM] int 
  7868 ;; Return value:  Size  Location     Type
  7869 ;;                  1    wreg      void 
  7870 ;; Registers used:
  7871 ;;		wreg, status,2, status,0
  7872 ;; Tracked objects:
  7873 ;;		On entry : 0/0
  7874 ;;		On exit  : 0/0
  7875 ;;		Unchanged: 0/0
  7876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7878 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7879 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7880 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7881 ;;Total ram usage:        4 bytes
  7882 ;; Hardware stack levels used: 1
  7883 ;; This function calls:
  7884 ;;		Nothing
  7885 ;; This function is called by:
  7886 ;;		Interrupt level 2
  7887 ;; This function uses a non-reentrant model
  7888 ;;
  7889                           
  7890                           	psect	text34
  7891   0062EC                     __ptext34:
  7892                           	callstack 0
  7893   0062EC                     _IOC_ISR:
  7894                           	callstack 22
  7895   0062EC                     
  7896                           ;./functions.h: 77:      if (IOCCFbits.IOCCF1 == 1) {
  7897   0062EC  013A               	movlb	58	; () banked
  7898   0062EE  A367               	btfss	103,1,b	;volatile
  7899   0062F0  EF7C  F031         	goto	i2u179_41
  7900   0062F4  EF7E  F031         	goto	i2u179_40
  7901   0062F8                     i2u179_41:
  7902   0062F8  EFAD  F031         	goto	i2l109
  7903   0062FC                     i2u179_40:
  7904   0062FC                     
  7905                           ; BSR set to: 58
  7906                           ;./functions.h: 78:         for (int k = 0; k < 10; k++) {
  7907   0062FC  0E00               	movlw	0
  7908   0062FE  6E04               	movwf	(IOC_ISR@k+1)^0,c
  7909   006300  0E00               	movlw	0
  7910   006302  6E03               	movwf	IOC_ISR@k^0,c
  7911   006304                     i2l107:
  7912                           
  7913                           ;./functions.h: 79:             PORTDbits.RD3 = 0;
  7914   006304  96CD               	bcf	205,3,c	;volatile
  7915   006306                     
  7916                           ;./functions.h: 80:             _delay((unsigned long)((500)*(4000000/4000.0)));
  7917   006306  0E03               	movlw	3
  7918   006308  6E02               	movwf	(??_IOC_ISR+1)^0,c
  7919   00630A  0E8A               	movlw	138
  7920   00630C  6E01               	movwf	??_IOC_ISR^0,c
  7921   00630E  0E56               	movlw	86
  7922   006310                     i2u524_47:
  7923   006310  2EE8               	decfsz	wreg,f,c
  7924   006312  D7FE               	bra	i2u524_47
  7925   006314  2E01               	decfsz	??_IOC_ISR^0,f,c
  7926   006316  D7FC               	bra	i2u524_47
  7927   006318  2E02               	decfsz	(??_IOC_ISR+1)^0,f,c
  7928   00631A  D7FA               	bra	i2u524_47
  7929   00631C                     
  7930                           ;./functions.h: 81:             PORTDbits.RD3 = 1;
  7931   00631C  86CD               	bsf	205,3,c	;volatile
  7932                           
  7933                           ;./functions.h: 82:             _delay((unsigned long)((500)*(4000000/4000.0)));
  7934   00631E  0E03               	movlw	3
  7935   006320  6E02               	movwf	(??_IOC_ISR+1)^0,c
  7936   006322  0E8A               	movlw	138
  7937   006324  6E01               	movwf	??_IOC_ISR^0,c
  7938   006326  0E56               	movlw	86
  7939   006328                     i2u525_47:
  7940   006328  2EE8               	decfsz	wreg,f,c
  7941   00632A  D7FE               	bra	i2u525_47
  7942   00632C  2E01               	decfsz	??_IOC_ISR^0,f,c
  7943   00632E  D7FC               	bra	i2u525_47
  7944   006330  2E02               	decfsz	(??_IOC_ISR+1)^0,f,c
  7945   006332  D7FA               	bra	i2u525_47
  7946   006334                     
  7947                           ;./functions.h: 83:         }
  7948   006334  4A03               	infsnz	IOC_ISR@k^0,f,c
  7949   006336  2A04               	incf	(IOC_ISR@k+1)^0,f,c
  7950   006338  BE04               	btfsc	(IOC_ISR@k+1)^0,7,c
  7951   00633A  EFA8  F031         	goto	i2u180_41
  7952   00633E  5004               	movf	(IOC_ISR@k+1)^0,w,c
  7953   006340  E109               	bnz	i2u180_40
  7954   006342  0E0A               	movlw	10
  7955   006344  5C03               	subwf	IOC_ISR@k^0,w,c
  7956   006346  A0D8               	btfss	status,0,c
  7957   006348  EFA8  F031         	goto	i2u180_41
  7958   00634C  EFAA  F031         	goto	i2u180_40
  7959   006350                     i2u180_41:
  7960   006350  EF82  F031         	goto	i2l107
  7961   006354                     i2u180_40:
  7962   006354                     
  7963                           ;./functions.h: 84:         IOCCFbits.IOCCF1 = 0;
  7964   006354  013A               	movlb	58	; () banked
  7965   006356  9367               	bcf	103,1,b	;volatile
  7966                           
  7967                           ;./functions.h: 85:         PORTDbits.RD3 = 0;
  7968   006358  96CD               	bcf	205,3,c	;volatile
  7969   00635A                     i2l109:
  7970                           
  7971                           ; BSR set to: 58
  7972   00635A  0011               	retfie		f
  7973   00635C                     __end_of_IOC_ISR:
  7974                           	callstack 0
  7975                           
  7976                           ;
  7977                           ; H/W Interrupt Vector Table @ 0x4008
  7978                           ;
  7979                           
  7980                           	psect	ivt0x4008
  7981   004008                     __pivt0x4008:
  7982                           	callstack 0
  7983   004008                     ivt0x4008_base:
  7984                           	callstack 0
  7985                           
  7986                           ; Vector 0 : SWINT
  7987   004008  18BB               	dw	_IOC_ISR shr (0+2)
  7988                           
  7989                           ; Vector 1 : HLVD
  7990   00400A  18BB               	dw	_IOC_ISR shr (0+2)
  7991                           
  7992                           ; Vector 2 : OSF
  7993   00400C  18BB               	dw	_IOC_ISR shr (0+2)
  7994                           
  7995                           ; Vector 3 : CSW
  7996   00400E  18BB               	dw	_IOC_ISR shr (0+2)
  7997                           
  7998                           ; Vector 4 : NVM
  7999   004010  18BB               	dw	_IOC_ISR shr (0+2)
  8000                           
  8001                           ; Vector 5 : SCAN
  8002   004012  18BB               	dw	_IOC_ISR shr (0+2)
  8003                           
  8004                           ; Vector 6 : CRC
  8005   004014  18BB               	dw	_IOC_ISR shr (0+2)
  8006                           
  8007                           ; Vector 7 : IOC
  8008   004016  18BB               	dw	_IOC_ISR shr (0+2)
  8009                           
  8010                           ; Vector 8 : INT0
  8011   004018  18BB               	dw	_IOC_ISR shr (0+2)
  8012                           
  8013                           ; Vector 9 : ZCD
  8014   00401A  18BB               	dw	_IOC_ISR shr (0+2)
  8015                           
  8016                           ; Vector 10 : AD
  8017   00401C  18BB               	dw	_IOC_ISR shr (0+2)
  8018                           
  8019                           ; Vector 11 : ADT
  8020   00401E  18BB               	dw	_IOC_ISR shr (0+2)
  8021                           
  8022                           ; Vector 12 : CMP1
  8023   004020  18BB               	dw	_IOC_ISR shr (0+2)
  8024                           
  8025                           ; Vector 13 : SMT1
  8026   004022  18BB               	dw	_IOC_ISR shr (0+2)
  8027                           
  8028                           ; Vector 14 : SMT1PRA
  8029   004024  18BB               	dw	_IOC_ISR shr (0+2)
  8030                           
  8031                           ; Vector 15 : SMT1PRW
  8032   004026  18BB               	dw	_IOC_ISR shr (0+2)
  8033                           
  8034                           ; Vector 16 : DMA1SCNT
  8035   004028  18BB               	dw	_IOC_ISR shr (0+2)
  8036                           
  8037                           ; Vector 17 : DMA1DCNT
  8038   00402A  18BB               	dw	_IOC_ISR shr (0+2)
  8039                           
  8040                           ; Vector 18 : DMA1OR
  8041   00402C  18BB               	dw	_IOC_ISR shr (0+2)
  8042                           
  8043                           ; Vector 19 : DMA1A
  8044   00402E  18BB               	dw	_IOC_ISR shr (0+2)
  8045                           
  8046                           ; Vector 20 : SPI1RX
  8047   004030  18BB               	dw	_IOC_ISR shr (0+2)
  8048                           
  8049                           ; Vector 21 : SPI1TX
  8050   004032  18BB               	dw	_IOC_ISR shr (0+2)
  8051                           
  8052                           ; Vector 22 : SPI1
  8053   004034  18BB               	dw	_IOC_ISR shr (0+2)
  8054                           
  8055                           ; Vector 23 : I2C1RX
  8056   004036  18BB               	dw	_IOC_ISR shr (0+2)
  8057                           
  8058                           ; Vector 24 : I2C1TX
  8059   004038  18BB               	dw	_IOC_ISR shr (0+2)
  8060                           
  8061                           ; Vector 25 : I2C1
  8062   00403A  18BB               	dw	_IOC_ISR shr (0+2)
  8063                           
  8064                           ; Vector 26 : I2C1E
  8065   00403C  18BB               	dw	_IOC_ISR shr (0+2)
  8066                           
  8067                           ; Vector 27 : U1RX
  8068   00403E  18BB               	dw	_IOC_ISR shr (0+2)
  8069                           
  8070                           ; Vector 28 : U1TX
  8071   004040  18BB               	dw	_IOC_ISR shr (0+2)
  8072                           
  8073                           ; Vector 29 : U1E
  8074   004042  18BB               	dw	_IOC_ISR shr (0+2)
  8075                           
  8076                           ; Vector 30 : U1
  8077   004044  18BB               	dw	_IOC_ISR shr (0+2)
  8078                           
  8079                           ; Vector 31 : TMR0
  8080   004046  18BB               	dw	_IOC_ISR shr (0+2)
  8081                           
  8082                           ; Vector 32 : TMR1
  8083   004048  18BB               	dw	_IOC_ISR shr (0+2)
  8084                           
  8085                           ; Vector 33 : TMR1G
  8086   00404A  18BB               	dw	_IOC_ISR shr (0+2)
  8087                           
  8088                           ; Vector 34 : TMR2
  8089   00404C  18BB               	dw	_IOC_ISR shr (0+2)
  8090                           
  8091                           ; Vector 35 : CCP1
  8092   00404E  18BB               	dw	_IOC_ISR shr (0+2)
  8093                           
  8094                           ; Vector 36 : Undefined
  8095   004050  102B               	dw	ivt0x4008_undefint shr (0+2)
  8096                           
  8097                           ; Vector 37 : NCO1
  8098   004052  18BB               	dw	_IOC_ISR shr (0+2)
  8099                           
  8100                           ; Vector 38 : CWG1
  8101   004054  18BB               	dw	_IOC_ISR shr (0+2)
  8102                           
  8103                           ; Vector 39 : CLC1
  8104   004056  18BB               	dw	_IOC_ISR shr (0+2)
  8105                           
  8106                           ; Vector 40 : INT1
  8107   004058  18BB               	dw	_IOC_ISR shr (0+2)
  8108                           
  8109                           ; Vector 41 : CMP2
  8110   00405A  18BB               	dw	_IOC_ISR shr (0+2)
  8111                           
  8112                           ; Vector 42 : DMA2SCNT
  8113   00405C  18BB               	dw	_IOC_ISR shr (0+2)
  8114                           
  8115                           ; Vector 43 : DMA2DCNT
  8116   00405E  18BB               	dw	_IOC_ISR shr (0+2)
  8117                           
  8118                           ; Vector 44 : DMA2OR
  8119   004060  18BB               	dw	_IOC_ISR shr (0+2)
  8120                           
  8121                           ; Vector 45 : DMA2A
  8122   004062  18BB               	dw	_IOC_ISR shr (0+2)
  8123                           
  8124                           ; Vector 46 : I2C2RX
  8125   004064  18BB               	dw	_IOC_ISR shr (0+2)
  8126                           
  8127                           ; Vector 47 : I2C2TX
  8128   004066  18BB               	dw	_IOC_ISR shr (0+2)
  8129                           
  8130                           ; Vector 48 : I2C2
  8131   004068  18BB               	dw	_IOC_ISR shr (0+2)
  8132                           
  8133                           ; Vector 49 : I2C2E
  8134   00406A  18BB               	dw	_IOC_ISR shr (0+2)
  8135                           
  8136                           ; Vector 50 : U2RX
  8137   00406C  18BB               	dw	_IOC_ISR shr (0+2)
  8138                           
  8139                           ; Vector 51 : U2TX
  8140   00406E  18BB               	dw	_IOC_ISR shr (0+2)
  8141                           
  8142                           ; Vector 52 : U2E
  8143   004070  18BB               	dw	_IOC_ISR shr (0+2)
  8144                           
  8145                           ; Vector 53 : U2
  8146   004072  18BB               	dw	_IOC_ISR shr (0+2)
  8147                           
  8148                           ; Vector 54 : TMR3
  8149   004074  18BB               	dw	_IOC_ISR shr (0+2)
  8150                           
  8151                           ; Vector 55 : TMR3G
  8152   004076  18BB               	dw	_IOC_ISR shr (0+2)
  8153                           
  8154                           ; Vector 56 : TMR4
  8155   004078  18BB               	dw	_IOC_ISR shr (0+2)
  8156                           
  8157                           ; Vector 57 : CCP2
  8158   00407A  18BB               	dw	_IOC_ISR shr (0+2)
  8159                           
  8160                           ; Vector 58 : Undefined
  8161   00407C  102B               	dw	ivt0x4008_undefint shr (0+2)
  8162                           
  8163                           ; Vector 59 : CWG2
  8164   00407E  18BB               	dw	_IOC_ISR shr (0+2)
  8165                           
  8166                           ; Vector 60 : CLC2
  8167   004080  18BB               	dw	_IOC_ISR shr (0+2)
  8168                           
  8169                           ; Vector 61 : INT2
  8170   004082  18BB               	dw	_IOC_ISR shr (0+2)
  8171                           
  8172                           ; Vector 62 : Undefined
  8173   004084  102B               	dw	ivt0x4008_undefint shr (0+2)
  8174                           
  8175                           ; Vector 63 : Undefined
  8176   004086  102B               	dw	ivt0x4008_undefint shr (0+2)
  8177                           
  8178                           ; Vector 64 : Undefined
  8179   004088  102B               	dw	ivt0x4008_undefint shr (0+2)
  8180                           
  8181                           ; Vector 65 : Undefined
  8182   00408A  102B               	dw	ivt0x4008_undefint shr (0+2)
  8183                           
  8184                           ; Vector 66 : Undefined
  8185   00408C  102B               	dw	ivt0x4008_undefint shr (0+2)
  8186                           
  8187                           ; Vector 67 : Undefined
  8188   00408E  102B               	dw	ivt0x4008_undefint shr (0+2)
  8189                           
  8190                           ; Vector 68 : Undefined
  8191   004090  102B               	dw	ivt0x4008_undefint shr (0+2)
  8192                           
  8193                           ; Vector 69 : Undefined
  8194   004092  102B               	dw	ivt0x4008_undefint shr (0+2)
  8195                           
  8196                           ; Vector 70 : TMR5
  8197   004094  18BB               	dw	_IOC_ISR shr (0+2)
  8198                           
  8199                           ; Vector 71 : TMR5G
  8200   004096  18BB               	dw	_IOC_ISR shr (0+2)
  8201                           
  8202                           ; Vector 72 : TMR6
  8203   004098  18BB               	dw	_IOC_ISR shr (0+2)
  8204                           
  8205                           ; Vector 73 : CCP3
  8206   00409A  18BB               	dw	_IOC_ISR shr (0+2)
  8207                           
  8208                           ; Vector 74 : CWG3
  8209   00409C  18BB               	dw	_IOC_ISR shr (0+2)
  8210                           
  8211                           ; Vector 75 : CLC3
  8212   00409E  18BB               	dw	_IOC_ISR shr (0+2)
  8213                           
  8214                           ; Vector 76 : Undefined
  8215   0040A0  102B               	dw	ivt0x4008_undefint shr (0+2)
  8216                           
  8217                           ; Vector 77 : Undefined
  8218   0040A2  102B               	dw	ivt0x4008_undefint shr (0+2)
  8219                           
  8220                           ; Vector 78 : Undefined
  8221   0040A4  102B               	dw	ivt0x4008_undefint shr (0+2)
  8222                           
  8223                           ; Vector 79 : Undefined
  8224   0040A6  102B               	dw	ivt0x4008_undefint shr (0+2)
  8225                           
  8226                           ; Vector 80 : CCP4
  8227   0040A8  18BB               	dw	_IOC_ISR shr (0+2)
  8228                           
  8229                           ; Vector 81 : CLC4
  8230   0040AA  18BB               	dw	_IOC_ISR shr (0+2)
  8231   0040AC                     ivt0x4008_undefint:
  8232                           	callstack 0
  8233   0040AC  00FF               	reset	
  8234                           
  8235                           	psect	rparam
  8236   000001                     ___rparam_used  equ	1
  8237   000000                     ___param_bank   equ	0
  8238   000000                     __Lparam        equ	__Lrparam
  8239   000000                     __Hparam        equ	__Hrparam
  8240                           
  8241                           	psect	config
  8242                           
  8243                           ;Config register CONFIG1L @ 0x300000
  8244                           ;	External Oscillator Selection
  8245                           ;	FEXTOSC = LP, LP (crystal oscillator) optimized for 32.768 kHz; PFM set to low power
  8246                           ;	Reset Oscillator Selection
  8247                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
  8248   300000                     	org	3145728
  8249   300000  F8                 	db	248
  8250                           
  8251                           ;Config register CONFIG1H @ 0x300001
  8252                           ;	Clock out Enable bit
  8253                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  8254                           ;	PRLOCKED One-Way Set Enable bit
  8255                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
  8256                           ;	Clock Switch Enable bit
  8257                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  8258                           ;	Fail-Safe Clock Monitor Enable bit
  8259                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  8260   300001                     	org	3145729
  8261   300001  FF                 	db	255
  8262                           
  8263                           ;Config register CONFIG2L @ 0x300002
  8264                           ;	MCLR Enable bit
  8265                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  8266                           ;	Power-up timer selection bits
  8267                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  8268                           ;	Multi-vector enable bit
  8269                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
  8270                           ;	IVTLOCK bit One-way set enable bit
  8271                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
  8272                           ;	Low Power BOR Enable bit
  8273                           ;	LPBOREN = OFF, ULPBOR disabled
  8274                           ;	Brown-out Reset Enable bits
  8275                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
  8276   300002                     	org	3145730
  8277   300002  FF                 	db	255
  8278                           
  8279                           ;Config register CONFIG2H @ 0x300003
  8280                           ;	Brown-out Reset Voltage Selection bits
  8281                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
  8282                           ;	ZCD Disable bit
  8283                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  8284                           ;	PPSLOCK bit One-Way Set Enable bit
  8285                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
  8286                           ;	Stack Full/Underflow Reset Enable bit
  8287                           ;	STVREN = ON, Stack full/underflow will cause Reset
  8288                           ;	Debugger Enable bit
  8289                           ;	DEBUG = OFF, Background debugger disabled
  8290                           ;	Extended Instruction Set Enable bit
  8291                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  8292   300003                     	org	3145731
  8293   300003  FF                 	db	255
  8294                           
  8295                           ;Config register CONFIG3L @ 0x300004
  8296                           ;	WDT Period selection bits
  8297                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  8298                           ;	WDT operating mode
  8299                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  8300   300004                     	org	3145732
  8301   300004  9F                 	db	159
  8302                           
  8303                           ;Config register CONFIG3H @ 0x300005
  8304                           ;	WDT Window Select bits
  8305                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  8306                           ;	WDT input clock selector
  8307                           ;	WDTCCS = SC, Software Control
  8308   300005                     	org	3145733
  8309   300005  FF                 	db	255
  8310                           
  8311                           ;Config register CONFIG4L @ 0x300006
  8312                           ;	Boot Block Size selection bits
  8313                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  8314                           ;	Boot Block enable bit
  8315                           ;	BBEN = OFF, Boot block disabled
  8316                           ;	Storage Area Flash enable bit
  8317                           ;	SAFEN = OFF, SAF disabled
  8318                           ;	Application Block write protection bit
  8319                           ;	WRTAPP = OFF, Application Block not write protected
  8320   300006                     	org	3145734
  8321   300006  FF                 	db	255
  8322                           
  8323                           ;Config register CONFIG4H @ 0x300007
  8324                           ;	Boot Block Write Protection bit
  8325                           ;	WRTB = OFF, Boot Block not write-protected
  8326                           ;	Configuration Register Write Protection bit
  8327                           ;	WRTC = OFF, Configuration registers not write-protected
  8328                           ;	Data EEPROM Write Protection bit
  8329                           ;	WRTD = OFF, Data EEPROM not write-protected
  8330                           ;	SAF Write protection bit
  8331                           ;	WRTSAF = OFF, SAF not Write Protected
  8332                           ;	Low Voltage Programming Enable bit
  8333                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
  8334   300007                     	org	3145735
  8335   300007  FF                 	db	255
  8336                           
  8337                           ;Config register CONFIG5L @ 0x300008
  8338                           ;	PFM and Data EEPROM Code Protection bit
  8339                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  8340   300008                     	org	3145736
  8341   300008  FF                 	db	255
  8342                           
  8343                           ;Config register CONFIG5H @ 0x300009
  8344                           ;	unspecified, using default values
  8345   300009                     	org	3145737
  8346   300009  FF                 	db	255
  8347                           tosu	equ	0x3FFF
  8348                           tosh	equ	0x3FFE
  8349                           tosl	equ	0x3FFD
  8350                           stkptr	equ	0x3FFC
  8351                           pclatu	equ	0x3FFB
  8352                           pclath	equ	0x3FFA
  8353                           pcl	equ	0x3FF9
  8354                           tblptru	equ	0x3FF8
  8355                           tblptrh	equ	0x3FF7
  8356                           tblptrl	equ	0x3FF6
  8357                           tablat	equ	0x3FF5
  8358                           prodh	equ	0x3FF4
  8359                           prodl	equ	0x3FF3
  8360                           indf0	equ	0x3FEF
  8361                           postinc0	equ	0x3FEE
  8362                           postdec0	equ	0x3FED
  8363                           preinc0	equ	0x3FEC
  8364                           plusw0	equ	0x3FEB
  8365                           fsr0h	equ	0x3FEA
  8366                           fsr0l	equ	0x3FE9
  8367                           wreg	equ	0x3FE8
  8368                           indf1	equ	0x3FE7
  8369                           postinc1	equ	0x3FE6
  8370                           postdec1	equ	0x3FE5
  8371                           preinc1	equ	0x3FE4
  8372                           plusw1	equ	0x3FE3
  8373                           fsr1h	equ	0x3FE2
  8374                           fsr1l	equ	0x3FE1
  8375                           bsr	equ	0x3FE0
  8376                           indf2	equ	0x3FDF
  8377                           postinc2	equ	0x3FDE
  8378                           postdec2	equ	0x3FDD
  8379                           preinc2	equ	0x3FDC
  8380                           plusw2	equ	0x3FDB
  8381                           fsr2h	equ	0x3FDA
  8382                           fsr2l	equ	0x3FD9
  8383                           status	equ	0x3FD8

Data Sizes:
    Strings     16
    Constant    0
    Data        0
    BSS         117
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     73      84
    BANK0           160     68      94
    BANK1           256      0      80
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    efgtoa@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[11]), 

    f$.$buffer	PTR unsigned char  size(1) Largest target is 10
		 -> data(BANK0[10]), 

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(1) Largest target is 10
		 -> data(BANK0[10]), 

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[11]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    LCD_String@msg	PTR const unsigned char  size(1) Largest target is 10
		 -> data(BANK0[10]), 

    LCD_String_xy@msg	PTR const unsigned char  size(1) Largest target is 10
		 -> data(BANK0[10]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[11]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    S989$buffer	PTR unsigned char  size(1) Largest target is 10
		 -> data(BANK0[10]), 

    S989$source	PTR const unsigned char  size(2) Largest target is 0

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sp__strcat	PTR unsigned char  size(1) Largest target is 10
		 -> data(BANK0[10]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 10
		 -> data(BANK0[10]), 

    strcat@dest	PTR unsigned char  size(1) Largest target is 10
		 -> data(BANK0[10]), 

    strcat@src	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_2(CODE[3]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(1) Largest target is 4
		 -> STR_3(CODE[4]), STR_6(CODE[4]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[11]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___flge
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___flmul
    ___flmul->___xxtofl
    ___flge->___flmul
    _LCD_String_xy->_LCD_String
    _LCD_String->_LCD_Char
    _LCD_Char->_MSdelay
    _LCD_Init->_LCD_Command
    _LCD_Clear->_LCD_Command
    _LCD_Command->_MSdelay

Critical Paths under _IOC_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _IOC_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _IOC_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _IOC_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _IOC_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _IOC_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _IOC_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _IOC_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _IOC_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _IOC_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _IOC_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _IOC_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _IOC_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _IOC_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _IOC_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _IOC_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _IOC_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _IOC_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _IOC_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _IOC_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _IOC_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _IOC_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _IOC_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _IOC_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _IOC_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _IOC_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _IOC_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _IOC_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _IOC_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _IOC_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _IOC_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _IOC_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _IOC_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   21681
                                             71 COMRAM     2     2      0
                           _ADC_Init
               _INTERRUPT_Initialize
                          _LCD_Clear
                           _LCD_Init
                      _LCD_String_xy
                            _MSdelay
                            ___flmul
                           ___xxtofl
                            _sprintf
                             _strcat
 ---------------------------------------------------------------------------------
 (1) _strcat                                               4     2      2     122
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             20    14      6   18105
                                             50 BANK0     18    12      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             4     1      3   17781
                                             70 COMRAM     1     1      0
                                             47 BANK0      3     0      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           11     8      3   17554
                                             63 COMRAM     7     7      0
                                             44 BANK0      3     0      3
                             _efgtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (4) _read_prec_or_width                                   7     5      2     266
                                              4 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              53    47      6   16210
                                             55 COMRAM     8     2      6
                                              0 BANK0     44    44      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               6     3      3     115
                                              4 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 (5) _pad                                                  8     3      5    1038
                                             18 COMRAM     8     3      5
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                6     3      3     481
                                             12 COMRAM     6     3      3
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     335
                                              4 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              11     5      6     217
                                              4 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _labs                                                 8     4      4     102
                                              4 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     495
                                             29 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     201
                                              4 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     346
                                              4 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    3031
                                             43 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    2954
                                              4 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4      68
                                              4 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    2235
                                             18 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     290
                                             43 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     142
                                              4 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    1713
                                              4 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     337
                                              4 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) _LCD_String_xy                                        4     2      2     440
                                             12 COMRAM     4     2      2
                        _LCD_Command
                         _LCD_String
 ---------------------------------------------------------------------------------
 (2) _LCD_String                                           1     0      1     171
                                             11 COMRAM     1     0      1
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (3) _LCD_Char                                             1     1      0     125
                                             10 COMRAM     1     1      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             0     0      0     221
                        _LCD_Command
                            _MSdelay
 ---------------------------------------------------------------------------------
 (1) _LCD_Clear                                            0     0      0     125
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (2) _LCD_Command                                          1     1      0     125
                                             10 COMRAM     1     1      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (1) _MSdelay                                              6     4      2      96
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _IOC_ISR                                              4     4      0      30
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _INTERRUPT_Initialize
   _LCD_Clear
     _LCD_Command
       _MSdelay
   _LCD_Init
     _LCD_Command
     _MSdelay
   _LCD_String_xy
     _LCD_Command
     _LCD_String
       _LCD_Char
         _MSdelay
   _MSdelay
   ___flmul
     ___xxtofl (ARG)
   ___xxtofl
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _efgtoa
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _labs
           _memcpy
           _pad
             _fputc
               _putch
             _fputs
               _fputc
           _strcpy
         _fputc
         _read_prec_or_width
   _strcat

 _IOC_ISR (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            8191      0       0      0.0%
BITBIGSFRlh       1169      0       0      0.0%
BITBIGSFRlll       400      0       0      0.0%
BITBIGSFRh         263      0       0      0.0%
BITBANK31          256      0       0      0.0%
BANK31             256      0       0      0.0%
BITBANK30          256      0       0      0.0%
BANK30             256      0       0      0.0%
BITBANK29          256      0       0      0.0%
BANK29             256      0       0      0.0%
BITBANK28          256      0       0      0.0%
BANK28             256      0       0      0.0%
BITBANK27          256      0       0      0.0%
BANK27             256      0       0      0.0%
BITBANK26          256      0       0      0.0%
BANK26             256      0       0      0.0%
BITBANK25          256      0       0      0.0%
BANK25             256      0       0      0.0%
BITBANK24          256      0       0      0.0%
BANK24             256      0       0      0.0%
BITBANK23          256      0       0      0.0%
BANK23             256      0       0      0.0%
BITBANK22          256      0       0      0.0%
BANK22             256      0       0      0.0%
BITBANK21          256      0       0      0.0%
BANK21             256      0       0      0.0%
BITBANK20          256      0       0      0.0%
BANK20             256      0       0      0.0%
BITBANK19          256      0       0      0.0%
BANK19             256      0       0      0.0%
BITBANK18          256      0       0      0.0%
BANK18             256      0       0      0.0%
BITBANK17          256      0       0      0.0%
BANK17             256      0       0      0.0%
BITBANK16          256      0       0      0.0%
BANK16             256      0       0      0.0%
BITBANK15          256      0       0      0.0%
BANK15             256      0       0      0.0%
BITBANK14          256      0       0      0.0%
BANK14             256      0       0      0.0%
BITBANK13          256      0       0      0.0%
BANK13             256      0       0      0.0%
BITBANK12          256      0       0      0.0%
BANK12             256      0       0      0.0%
BITBANK11          256      0       0      0.0%
BANK11             256      0       0      0.0%
BITBANK10          256      0       0      0.0%
BANK10             256      0       0      0.0%
BITBANK9           256      0       0      0.0%
BANK9              256      0       0      0.0%
BITBANK8           256      0       0      0.0%
BANK8              256      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0      80     31.2%
BITBIGSFRllh       213      0       0      0.0%
BITBANK0           160      0       0      0.0%
BANK0              160     68      94     58.8%
BITCOMRAM           95      0       0      0.0%
COMRAM              95     73      84     88.4%
STACK                0      0       0      0.0%
DATA                 0      0     257      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Mon Apr 28 14:41:21 2025

                ___fldiv@aexp 001D                  ___fldiv@bexp 001C                  ___fldiv@sign 0015  
                ?_LCD_Command 0001                            l70 678E                            l73 6766  
                          l82 67AC                            l67 67E4                            l76 67EC  
                          l93 666C                            l79 67CA                            l88 673C  
                 ?_LCD_String 000C                           l101 651C                           l125 601A  
                         l403 5F0A                           l430 5E06                           l407 66DC  
                         l703 65F0                           l720 554E                           l392 62E8  
                         l802 5C98                           l715 5726                           l811 66A4  
                         l717 558A                           l661 4C80                           l726 55D0  
                         l398 5EC4                           l670 4F4C                           l662 4C6E  
                         l902 6192                           l727 55EE                           l751 5396  
                         l663 4C34                           l728 5646                           l912 57E2  
                         l729 5634                           l754 522C                           l842 63C0  
                         l922 593A                           l755 524A                           l747 5012  
                         l675 4E28                           l764 5358                           l756 52A2  
                         l757 5290                           l853 4A96                           l694 4F10  
                         l678 4D9A                           l838 6372                           l791 5D00  
                         l687 4E68                           l688 4E56                           l960 64D2  
                         l856 4436                           l929 6564                           l946 5B4C  
                         l858 427C                           l795 5C3C                           l939 6008  
                         l788 5BA4                           l949 5A90                           l966 647C  
                         l886 487C                           l978 623E                           l986 6630  
                         l898 618A                           l989 67EE                           l998 6422  
                         _pad 635C                           wreg 3FE8                  ___flmul@aexp 0020  
                ___flmul@bexp 0025                  ___flmul@sign 001F                  ___flmul@temp 002A  
                ___flmul@prod 0026                   LCD_Char@dat 000B               __end_of_IOC_ISR 635C  
                ___fltol@exp1 000E                          l1004 65AA                          l3200 6788  
                        l4000 4142                          l3202 678A                          l3210 674C  
                        l4010 4188                          l4002 4146                          l3204 678C  
                        l3212 67E6                          l3220 664C                          l4100 45E2  
                        l4012 4190                          l4004 416C                          l4020 41CA  
                        l3150 67B6                          l3206 673E                          l3222 6656  
                        l3214 6634                          l4110 46AE                          l4102 4600  
                        l4030 4214                          l4022 41F0                          l4014 41A4  
                        l4006 417E                          l3152 67B8                          l3208 674A  
                        l3080 6792                          l3160 6714                          l3224 665E  
                        l3216 6634                          l3400 4BC0                          l3320 61A4  
                        l4120 475E                          l4112 46BE                          l4104 4634  
                        l4040 4246                          l4024 4202                          l4016 41AE  
                        l4008 4182                          l4200 60DC                          l3240 63C2  
                        l3154 67BA                          l3090 67A0                          l3082 6798  
                        l3162 6718                          l3226 6664                          l3218 6644  
                        l3250 5B50                          l3402 4BC4                          l3410 4BD4  
                        l3322 61B4                          l4130 47C2                          l4122 4792  
                        l4114 46CE                          l4106 4666                          l4050 4304  
                        l4026 4206                          l4210 6156                          l4202 60E4  
                        l3242 63CE                          l3180 6768                          l3156 67BC  
                        l3148 67B0                          l3084 679A                          l3164 6724  
                        l3252 5B60                          l3500 4E92                          l3420 4C4E  
                        l3412 4C00                          l3404 4BC8                          l3340 4AC4  
                        l3332 4A98                          l3324 61BE                          l4140 4872  
                        l4132 47C6                          l4124 47A6                          l4116 4702  
                        l4108 467C                          l4060 43C4                          l4052 4336  
                        l4044 428C                          l4028 420C                          l4204 610C  
                        l4212 615E                          l4220 5766                          l3244 63D2  
                        l4300 6028                          l3190 677E                          l3182 6772  
                        l3158 67BE                          l3086 679C                          l3166 6726  
                        l3270 5C26                          l3262 5BDE                          l3254 5B6E  
                        l3510 4F0E                          l3502 4ECC                          l3430 4C8E  
                        l3422 4C52                          l3414 4C1C                          l3406 4BCC  
                        l3350 4AFC                          l3342 4AD4                          l3334 4AA4  
                        l3326 61DA                          l3318 6194                          l4150 48B6  
                        l4142 488E                          l4134 47CE                          l4118 4758  
                        l4126 47AA                          l4070 445A                          l4054 4374  
                        l4046 4292                          l4038 422C                          l4206 6114  
                        l4230 57BA                          l4222 576A                          l4214 5728  
                        l3246 63EE                          l4310 60BA                          l4302 6040  
                        l3192 6780                          l3184 6774                          l3088 679E  
                        l3280 5CA6                          l3272 5C32                          l3264 5BE6  
                        l3256 5BB4                          l3600 5514                          l3520 4F3A  
                        l3512 4F1E                          l3504 4ECE                          l3440 4CD0  
                        l3432 4C9E                          l3424 4C60                          l3416 4C2C  
                        l3408 4BD0                          l3360 4B2A                          l3352 4B02  
                        l3344 4AE4                          l3336 4AB2                          l3328 620C  
                        l4152 48BE                          l4144 489C                          l4160 48DE  
                        l4136 47DA                          l4128 47BA                          l4080 448E  
                        l4072 4462                          l4056 4388                          l4064 4404  
                        l4048 42C6                          l4208 6134                          l4240 5806  
                        l4232 57D4                          l4224 5792                          l4216 5752  
                        l3248 63F4                          l4312 60C8                          l4304 608C  
                        l3194 6782                          l3186 6776                          l3178 67CC  
                        l3290 5CEE                          l3282 5CA8                          l3274 5C6E  
                        l3266 5BF2                          l3258 5BCA                          l3610 5558  
                        l3602 551A                          l3522 4F3C                          l3514 4F24  
                        l3506 4EDE                          l3450 4CFE                          l3442 4CDE  
                        l3426 4C62                          l3418 4C42                          l3370 4B5E  
                        l3362 4B2C                          l3354 4B14                          l3346 4AE6  
                        l3338 4AB4                          l3530 660C                          l4170 4964  
                        l4162 48F0                          l4154 48CE                          l4146 48AC  
                        l4138 4852                          l4090 44D8                          l4082 44A6  
                        l4074 446A                          l4066 443E                          l4058 43BC  
                        l4250 58A6                          l4242 582C                          l4234 57DA  
                        l4226 579A                          l4218 575A                          l4306 60AA  
                        l3196 6784                          l3188 677A                          l3292 5CF0  
                        l3284 5CAC                          l3276 5C7A                          l3268 5C24  
                        l3620 55B0                          l3612 5576                          l3604 552A  
                        l3540 53B4                          l3700 4FFC                          l3516 4F26  
                        l3508 4EEE                          l3460 4D6A                          l3452 4D08  
                        l3444 4CEA                          l3436 4CB2                          l3428 4C6C  
                        l3380 4B98                          l3364 4B3C                          l3372 4B64  
                        l3356 4B16                          l3348 4AEC                          l3532 6610  
                        l4180 49DE                          l4172 4998                          l4164 4902  
                        l4156 48D2                          l4148 48B0                          l4092 44EC  
                        l4084 44B8                          l4076 446E                          l4068 444E  
                        l4252 58B4                          l4244 585E                          l4260 5904  
                        l4228 57AE                          l4308 60B6                          l3198 6786  
                        l2830 64D4                          l3286 5CD0                          l3278 5C88  
                        l3630 55FE                          l3622 55B6                          l3614 5578  
                        l3606 553E                          l3542 53C4                          l3550 53EC  
                        l3534 5398                          l3710 5046                          l3702 5002  
                        l3518 4F2C                          l3462 4D7A                          l3446 4CEE  
                        l3438 4CC2                          l3454 4D0E                          l3390 4BAC  
                        l3382 4B9C                          l3374 4B74                          l3366 4B4C  
                        l3358 4B1C                          l3526 65F2                          l4190 4A4A  
                        l4182 49E6                          l4174 49A0                          l4166 4906  
                        l4158 48D8                          l4094 4550                          l4078 4480  
                        l4086 44C0                          l4238 57E8                          l4270 651E  
                        l2840 64EC                          l2832 64E0                          l3288 5CE0  
                        l3640 5670                          l3632 562C                          l3624 55C0  
                        l3616 5588                          l3608 554C                          l3560 5418  
                        l3552 53FC                          l3544 53D4                          l3536 53A4  
                        l3720 50A2                          l3712 5056                          l3704 5022  
                        l3480 4DFC                          l3472 4DD4                          l3456 4D34  
                        l3464 4D8A                          l3448 4CFC                          l3392 4BB0  
                        l3384 4BA0                          l3376 4B86                          l3368 4B5C  
                        l3800 65BC                          l3528 65FE                          l4192 4A5A  
                        l4184 49F4                          l4168 490C                          l4176 49A4  
                        l4096 45A8                          l4088 44C8                          l4248 5890  
                        l4264 5912                          l4272 6526                          l4280 666E  
                        l2842 6502                          l3650 56E8                          l3642 569A  
                        l3626 55CE                          l3618 559A                          l3562 5428  
                        l3570 5450                          l3554 5402                          l3546 53E4  
                        l3538 53B2                          l3810 62AC                          l3730 50E8  
                        l3722 50AE                          l3714 5060                          l3706 5032  
                        l3490 4E38                          l3482 4E04                          l3474 4DDE  
                        l3466 4DB0                          l3458 4D68                          l3394 4BB4  
                        l3386 4BA4                          l3378 4B94                          l4194 4A72  
                        l4186 4A24                          l4178 49C2                          l4098 45DC  
                        l4258 58E6                          l4274 6538                          l4282 6678  
                        l2844 6506                          l3660 571A                          l3652 5700  
                        l3636 5656                          l3644 569E                          l3628 55E0  
                        l3580 5492                          l3572 5460                          l3564 5438  
                        l3556 5408                          l3548 53E6                          l3812 62BC  
                        l3804 6240                          l3820 5E08                          l3740 5156  
                        l3732 50F8                          l3724 50BA                          l3716 507A  
                        l3492 4E4E                          l3484 4E08                          l3476 4DEC  
                        l3468 4DC0                          l3396 4BB8                          l3388 4BA8  
                        l3900 638E                          l4196 4A7A                          l4188 4A32  
                        l4276 655A                          l4284 6680                          l4292 600A  
                        l2838 64E8                          l3662 571C                          l3654 5702  
                        l3646 56B8                          l3638 5662                          l3574 5476  
                        l3566 5448                          l3558 5416                          l3814 62E0  
                        l3806 626E                          l3830 5E92                          l3822 5E36  
                        l3750 51F4                          l3742 5166                          l3734 5108  
                        l3726 50C8                          l3718 5086                          l3670 4F4E  
                        l3486 4E18                          l3478 4DEE                          l3398 4BBC  
                        l3910 5F6A                          l3902 6392                          l4286 6688  
                        l4294 600E                          ?_pad 0013                          l3656 5706  
                        l3648 56CE                          l3592 54CA                          l3576 5486  
                        l3584 54A6                          l3568 544A                          l3816 62E6  
                        l3808 627E                          l3832 5EA4                          l3824 5E46  
                        l3760 525A                          l3752 5212                          l3744 5186  
                        l3736 5126                          l3728 50D8                          l3680 4F8A  
                        l3672 4F5A                          l3496 4E78                          l3488 4E1A  
                        l3920 5FBC                          l3912 5F92                          l3904 63B0  
                        l4288 6698                          l4296 6012                          l3658 5714  
                        l3594 54E4                          l3586 54B6                          l3578 548E  
                        l3834 5EB2                          l3826 5E74                          l3770 52CC  
                        l3762 5288                          l3754 521C                          l3746 51B0  
                        l3738 5136                          l3690 4FBC                          l3682 4F9A  
                        l3674 4F68                          l3842 66A6                          l3498 4E84  
                        l3850 5D02                          l3914 5F9E                          l3906 5F0C  
                        l3930 656E                          l4298 6016                          l3596 54F4  
                        l3588 54B6                          l3836 5F02                          l3828 5E84  
                        l3780 5342                          l3772 52F6                          l3756 522A  
                        l3748 51E6                          l3692 4FCA                          l3684 4FA0  
                        l3676 4F6A                          l3844 66BC                          l3860 5D58  
                        l3852 5D18                          l3924 6000                          l3908 5F2C  
                        l3940 593C                          l3932 647E                          l3598 5504  
                        l3838 5F08                          l3790 537C                          l3782 5352  
                        l3766 52B2                          l3774 52FA                          l3758 523C  
                        l3694 4FCC                          l3686 4FB0                          l3678 4F7A  
                        l3846 66CC                          l3862 5D68                          l3918 5FAA  
                        l3942 595C                          l3934 648C                          l3784 535C  
                        l3792 5382                          l3776 5314                          l3768 52BE  
                        l3696 4FDC                          l3688 4FB6                          l3872 5D92  
                        l3864 5D6C                          l3856 5D2C                          l3960 5B04  
                        l3952 5A44                          l3944 59B2                          l3936 64A0  
                        l3928 6566                          l3794 5386                          l3786 536C  
                        l3778 5328                          l3698 4FEC                          l3890 5DF6  
                        l3882 5DBA                          l3874 5D9C                          l3866 5D7A  
                        l3858 5D56                          l3962 5B2C                          l3954 5A80  
                        l3946 59C6                          l3970 6438                          l3788 537A  
                        l3884 5DC6                          l3876 5DA6                          l3964 5B3C  
                        l3948 59D4                          l3956 5AB4                          l3972 6448  
                        l3980 40B2                          l3798 65AC                          l3886 5DD6  
                        l3958 5AF0                          l3974 644C                          l3894 635C  
                        l3990 4106                          l3982 40C6                          l3888 5DE6  
                        l3976 645E                          l3968 6424                          l3896 636A  
                        l3992 410E                          l3984 40D4                          l3978 6462  
                        l3898 637E                          l3994 411E                          l3986 40D8  
                        l3996 412E                          l3988 40FC                          l3998 413A  
                        STR_1 2001                          STR_2 200E                          STR_3 2006  
                        STR_6 200A                          _LATB 3FBB                          u4000 4EEE  
                        u4001 4EEA                          u4010 4F0E                          u4011 4F0A  
                        u3060 6502                          u4100 5438                          u4020 4F1E  
                        u3061 64FE                          u4101 5434                          u4021 4F1A  
                        u3070 651C                          u4110 5476                          u4030 4F3A  
                        u3071 6518                          u4111 5472                          u4031 4F36  
                        u4200 55FE                          u4120 54B6                          u4040 6630  
                        u5000 448E                          u4201 55FA                          u4121 54B2  
                        u4041 662C                          u5001 448A                          u4210 562C  
                        u4130 552A                          u4050 53B2                          u5010 44B8  
                        u4211 5628                          u4131 5526                          u4051 53AE  
                        u5011 44B4                          u3500 5B60                          u4220 5642  
                        u4140 554C                          u4060 53C4                          u4300 4F8A  
                        u5100 489C                          u5020 4600                          u3501 5B5C  
                        u4221 563E                          u4141 5548                          u4061 53C0  
                        u4301 4F86                          u5101 4898                          u5021 45FC  
                        u3510 5B6E                          u4230 5656                          u4150 5576  
                        u4070 53D4                          u4310 4FCA                          u5110 48F0  
                        u5030 4666                          u3511 5B6A                          u4231 5652  
                        u4151 5572                          u4071 53D0                          u4311 4FC6  
                        u5111 48EC                          u5031 4662                          u3520 5BCA  
                        u4240 5670                          u4160 559A                          u4080 5416  
                        u4400 5288                          u4320 4FDC                          u5120 49C2  
                        u5040 46AE                          u5200 5792                          u3521 5BC6  
                        u4241 566C                          u4161 5596                          u4081 5412  
                        u4401 5284                          u4321 4FD8                          u5121 49BE  
                        u5041 46AA                          u5201 578E                          u3450 673C  
                        u3530 5C20                          u4250 56B8                          u4170 55B0  
                        u4090 5428                          u4410 529E                          u4330 4FEC  
                        u3610 61A4                          u5130 49DE                          u5050 46BE  
                        u5210 5828                          u3451 6738                          u3531 5C1C  
                        u4251 56B4                          u4171 55AC                          u4091 5424  
                        u4411 529A                          u4331 4FE8                          u3611 61A0  
                        u5131 49DA                          u5051 46BA                          u5211 5824  
                        u3540 5C6A                          u4260 56E8                          u4180 55CE  
                        u4500 5E36                          u4420 52B2                          u4340 5022  
                        u3700 4B3C                          u3620 61B4                          u5140 4A44  
                        u5060 4758                          u5220 655A                          u3541 5C66  
                        u4261 56E4                          u4181 55CA                          u4501 5E32  
                        u4421 52AE                          u4341 501E                          u3701 4B38  
                        u3621 61B0                          u5141 4A3E                          u5061 4754  
                        u5221 6556                          u3470 6644                          u3550 5C88  
                        u4270 5714                          u4190 55EE                          u4510 5E74  
                        u4430 52CC                          u4350 5032                          u3710 4B4C  
                        u3630 61DA                          u5150 4A46                          u5070 47A6  
                        u5230 6028                          u3471 6640                          u3551 5C84  
                        u4271 5710                          u4191 55EA                          u4511 5E70  
                        u4431 52C8                          u4351 502E                          u3711 4B48  
                        u3631 61D6                          u5071 47A2                          u5231 6024  
                        u3560 5C98                          u4520 5E92                          u4440 5314  
                        u4360 51D0                          u4280 4F68                          u3800 4C8E  
                        u3720 4B86                          u4600 5DB6                          u3640 620C  
                        u5160 4A5A                          u5080 4852                          u3480 63EA  
                        u3561 5C94                          u4521 5E8E                          u4441 5310  
                        u4281 4F64                          u3801 4C8A                          u3721 4B82  
                        u4601 5DB2                          u3641 6208                          u5161 4A56  
                        u5081 484E                          u3481 63E6                          u3570 5CA6  
                        u4530 5EB2                          u4450 5342                          u4370 522A  
                        u4290 4F7A                          u3810 4C9E                          u3730 4B94  
                        u3650 4AB2                          u4610 5DD6                          u5090 488E  
                        u5170 610C                          u3490 6422                          u3571 5CA2  
                        u4531 5EAE                          u4451 533E                          u4371 5226  
                        u4291 4F76                          u3811 4C9A                          u3731 4B90  
                        u3651 4AAE                          u4611 5DD2                          u5091 488A  
                        u5171 6108                          u3491 641E                          u3580 5CE0  
                        u4540 5F02                          u4460 537A                          u4380 524A  
                        u3900 4DFC                          u3820 4CD0                          u3740 4C00  
                        u3660 4AC4                          u4620 5DE6                          u4700 5FF6  
                        u5180 618A                          u3581 5CDC                          u4541 5EFE  
                        u4461 5376                          u4381 5246                          u4365 51C6  
                        u3901 4DF8                          u3821 4CCC                          u3741 4BFC  
                        u3661 4AC0                          u4621 5DE2                          u4701 5FF0  
                        u5181 6186                          u3590 5CEE                          u4470 626E  
                        u4390 525A                          u4550 66BC                          u3910 4E18  
                        u3830 4CDE                          u3750 4C18                          u3670 4AD4  
                        u4710 5FF8                          u4630 636A                          u5190 5752  
                        u3591 5CEA                          u4471 626A                          u4391 5256  
                        u4551 66B8                          u3911 4E14                          u3831 4CDA  
                        u3751 4C12                          u3671 4AD0                          u4631 6366  
                        u5191 574E                          u4480 62AC                          u3920 4E28  
                        u3840 4CFC                          u3760 4C1A                          u3680 4B14  
                        u4560 5D18                          u4800 5A80                          u4640 63B0  
                        u4720 65AA                          u4481 62A8                          u3921 4E24  
                        u3841 4CF8                          u3681 4B10                          u4561 5D14  
                        u4801 5A7C                          u4641 63AC                          u4721 65A6  
                        u4490 62E0                          u3930 4E38                          u3850 4D34  
                        u3770 4C42                          u3690 4B2A                          u4570 5D4C  
                        u4650 5F4C                          u4810 5AD4                          u4730 648C  
                        u4491 62DC                          u3931 4E34                          u3851 4D30  
                        u3771 4C3E                          u3691 4B26                          u4731 6488  
                        u3940 4E4E                          u3860 4D7A                          u3780 4C60  
                        u4580 5D7A                          u4660 5F6A                          u4820 5AF0  
                        u4740 5984                          u4900 41F0                          u3941 4E4A  
                        u3861 4D76                          u3781 4C5C                          u4581 5D76  
                        u4661 5F66                          u4821 5AEC                          u4901 41EC  
                        u3950 4E64                          u3870 4DB0                          u3790 4C80  
                        u4590 5D8E                          u4670 5F92                          u4830 5B2C  
                        u4750 59B2                          u4910 4202                          u3951 4E60  
                        u3871 4DAC                          u3791 4C7C                          u4591 5D8A  
                        u4575 5D42                          u4671 5F8E                          u4655 5F42  
                        u4831 5B28                          u4815 5ACA                          u4751 59AE  
                        u4911 41FE                          u3960 4E78                          u3880 4DC0  
                        u4680 5FBC                          u4760 59D4                          u4840 647C  
                        u4920 4278                          u3961 4E74                          u3881 4DBC  
                        u4681 5FB8                          u4761 59D0                          u4745 597A  
                        u4841 6478                          u4921 4274                          u3970 4E92  
                        u3890 4DEC                          u4930 4304                          u4850 40D4  
                        u3971 4E8E                          u3891 4DE8                          u4931 4300  
                        u4851 40D0                          u3980 4ECC                          u4780 5A40  
                        u4940 4336                          u4860 411E                          u3981 4EC8  
                        u4781 5A3C                          u4941 4332                          u4861 411A  
                        u3990 4EDE                          u4790 5A64                          u4950 4374  
                        u4870 412E                          u3991 4EDA                          u4695 5FCE  
                        u4775 59E8                          u4951 4370                          u4871 412A  
                        u4776 59F2                          u4960 4400                          u4880 416C  
                        u4777 5A02                          u4961 43FC                          u4881 4168  
                        u4970 4436                          u4890 417E                          u4795 5A5A  
                        u4971 4432                          u4891 417A                          u4980 444E  
                        u4981 444A                          u4990 4480                          u4991 447C  
                        _data 00B4                          _dbuf 0100                          _labs 647E  
                        _main 600A                          _prec 00B2                          pad@i 0019  
                        pad@p 0016                          fsr1h 3FE2                          fsr2h 3FDA  
                        indf2 3FDF                          fsr1l 3FE1                          fsr2l 3FD9  
            __end_of_ADC_Init 6790                 ___fpclassifyf 5F0C                          prodh 3FF4  
                        prodl 3FF3                          start 40AE               __end_of_MSdelay 651E  
             ___fldiv@new_exp 0016                 _LCD_String_xy 6632                  ___param_bank 0000  
                       ??_pad 0018              __end_of_LCD_Char 67AE              __end_of_LCD_Init 6768  
               ___fltol@sign1 000D                         ?_labs 0005               __end_of___fladd 4F4E  
                       ?_main 0001                         _ADCLK 3EFF                         _ADPCH 3EF1  
             __end_of___fldiv 5728               __end_of___flneg 66DE               __end_of___flmul 5398  
             __end_of___flsub 65F2               __end_of___fltol 5E08                         i2l107 6304  
                       i2l108 6354                         i2l109 635A                  vfpfcnvrt@fmt 008D  
                       _TRISB 3FC3                         _TRISD 3FC5                         _flags 0054  
         read_prec_or_width@c 0009           read_prec_or_width@n 000A                         _fputc 6194  
                       _fputs 65F2                         labs@a 0005                         pad@fp 0013  
                       _width 00B0                         _putch 67EE                         tablat 3FF5  
                       status 3FD8               __end_of_sprintf 66A6                ?___fpclassifyf 0005  
              ?_LCD_String_xy 000D               __initialization 66DE                  __end_of_labs 64D4  
                __end_of_main 60DC                        ??_labs 0009                        ??_main 0048  
           __end_of_LCD_Clear 67EE                 __activetblptr 0003                     ??_IOC_ISR 0001  
  __end_of_read_prec_or_width 6194                        _ADACQH 3EF4                        _ADACQL 3EF3  
                      ?_fputc 0005                        ?_fputs 000D                        _ADRESH 3EF0  
                      _ADRESL 3EEF                        _ADPREH 3EF7                        _ADPREL 3EF6  
                      ?_putch 0001              LCD_String_xy@msg 000E              LCD_String_xy@pos 000D  
            LCD_String_xy@row 000F                     ??_MSdelay 0007                        i2l2140 6306  
                      i2l2132 62EC                        i2l2142 631C                        i2l2134 62FC  
                      i2l2144 6334              __end_of___xxtofl 5D02                  vfprintf@cfmt 0047  
                      ___flge 5E08                        ___fleq 6240                     ??___fladd 000D  
                   ??___fldiv 000D                     ??___flneg 0009                     ??___flmul 001B  
                   ??___flsub 0034                     ??___fltol 0009                        _efgtoa 40B2  
                      _floorf 593C                        _memcpy 6424          read_prec_or_width@ap 0006  
                      clear_0 66E4                        clear_1 66F0                        clear_2 66FC  
                      isa$std 0001                        _result 00AC                        pad@buf 0014  
                      _strcat 63C2                        _strcpy 6566                        fputc@c 0005  
                      fputs@c 0010                        fputs@i 0011                        fputs@s 000D  
             ___fpclassifyf@e 000D                     ?_ADC_Init 0001               ___fpclassifyf@u 000F  
             ___fpclassifyf@x 0005                  __mediumconst 2000                        tblptrh 3FF7  
                      tblptrl 3FF6                        tblptru 3FF8                        putch@c 0001  
            __end_of_vfprintf 6566                     ??_sprintf 0048                    ___flge@ff1 002C  
                  ___flge@ff2 0030               ??___fpclassifyf 0009                  ___xxtofl@arg 000F  
                ___xxtofl@exp 000E                  ___xxtofl@val 0005                    ___fleq@ff1 0005  
                  ___fleq@ff2 0009                     ?_LCD_Char 0001                    __accesstop 0060  
     __end_of__initialization 670E                     ?_LCD_Init 0001               ??_LCD_String_xy 000F  
                  ___flneg@f1 0005                 ___rparam_used 0001                    ___fltol@f1 0005  
              __pcstackCOMRAM 0001                 __end_of_fputc 6240                 __end_of_fputs 6632  
               __end_of_putch 67F0                  ??_LCD_String 000D                    ??_ADC_Init 0005  
                     ??_fputc 0008                       ??_fputs 0010                       ??_putch 0005  
                  __pbssBANK0 00A4                    __pbssBANK1 0100                    ??_LCD_Char 000B  
                  ??_LCD_Init 000C            __end_of_LCD_String 673E                       IVTBASEH 3FD6  
                     IVTBASEL 3FD5                       IVTBASEU 3FD7                       ?___flge 002C  
                     ?___fleq 0005                       ?_efgtoa 0038                       ?_floorf 001E  
                     ?_memcpy 0005                       ?_strcat 0005                       ?_strcpy 0005  
                     _IOC_ISR 62EC                     ?___xxtofl 0005                       _MSdelay 64D4  
               LCD_String@msg 000C                       __Hparam 0000                       __Lparam 0000  
                     ___fladd 4A98                       ___fldiv 5398                       ___flneg 66A6  
                     ___flmul 4F4E                       ___flsub 65AC                       ___fltol 5D02  
                   ?_vfprintf 008F                  __psmallconst 2000                       __pcinit 66DE  
                     __ramtop 2000                       _digital 0052                 ivt0x4008_base 4008  
                     __ptext0 600A                       __ptext1 63C2                       __ptext2 666E  
                     __ptext3 651E                       __ptext4 5728                       __ptext5 60DC  
                     __ptext6 40B2                       __ptext7 6566                       __ptext8 635C  
                     __ptext9 65F2         read_prec_or_width@fmt 0005                    ??___xxtofl 0009  
                   _IOCCFbits 3A67                       efgtoa@c 003D                       efgtoa@d 006B  
                     efgtoa@e 006F                       efgtoa@f 0039                       efgtoa@g 0082  
                     efgtoa@h 0079                       efgtoa@i 0077                       efgtoa@l 007D  
                     efgtoa@m 006D                       efgtoa@n 0086                       efgtoa@p 0062  
                     efgtoa@t 0064                       efgtoa@u 0088                       efgtoa@w 0071  
                   _IOCCNbits 3A66                     _IOCCPbits 3A65                     _LCD_Clear 67E6  
                     _sprintf 666E                       _voltage 004E          end_of_initialization 670E  
                     floorf@e 002C                       floorf@m 0028                       floorf@u 002E  
                     floorf@x 001E                       memcpy@d 000C                       memcpy@n 0009  
                     memcpy@s 000E                       fputc@fp 0007                LCD_Command@cmd 000B  
                     fputs@fp 000F            _read_prec_or_width 60DC             __end_of_vfpfcnvrt 593C  
                  efgtoa@mode 0069                    efgtoa@sign 0081                       postdec2 3FDD  
         ?_read_prec_or_width 0005                       postinc0 3FEE                       postinc1 3FE6  
                     postinc2 3FDE              vfpfcnvrt@convarg 0041                    ??_vfprintf 0047  
                     strcat@i 0007                       strcpy@d 0009                     _PORTDbits 3FCD  
                 ___fladd@grs 0014                 ___xxtofl@sign 000D                     _TRISAbits 3FC2  
                   _TRISCbits 3FC4                    ?_LCD_Clear 0001          ??_read_prec_or_width 0007  
                 ___fldiv@grs 0018                   ___fldiv@rem 0011                   ___flmul@grs 0021  
__end_of_INTERRUPT_Initialize 67E6                 ??_LCD_Command 000B                __end_of___flge 5F0C  
              __end_of___fleq 62EA                   vfpfcnvrt@ap 008E                   vfpfcnvrt@cp 0046  
                 vfpfcnvrt@fp 008C                __end_of_efgtoa 4A98                __end_of_floorf 5B4E  
              __end_of_memcpy 647E                    floorf@F521 00A4                __end_of_strcat 6424  
              __end_of_strcpy 65AC           start_initialization 66DE                   __end_of_pad 63C2  
       __end_of___fpclassifyf 600A         __end_of_LCD_String_xy 666E                   vfprintf@fmt 0090  
                    ??___flge 0034                      ??___fleq 000D                      ??_efgtoa 003E  
                    ??_floorf 0022                      ??_memcpy 000B                      ??_strcat 0007  
                    ??_strcpy 0008                     ___fladd@a 0009                     ___fladd@b 0005  
                   ___fldiv@a 0009                     ___fldiv@b 0005           __end_of_LCD_Command 67CC  
                    ?_IOC_ISR 0001                     ___flmul@a 0017                     ___flmul@b 0013  
                 __pbssCOMRAM 004A                     ___flsub@a 0030                     ___flsub@b 002C  
               __pcstackBANK0 0060                   ??_LCD_Clear 000C                      IOC_ISR@k 0003  
                    ?_MSdelay 0005                   __pivt0x4008 4008                   _efgtoa$1114 0066  
                    ?___fladd 0005                      ?___fldiv 0005                      ?___flneg 0005  
                    ?___flmul 0013                      ?___flsub 002C                      ?___fltol 0005  
                 __smallconst 2000                      _ADC_Init 6768         LCD_String_xy@location 0010  
                    ?_sprintf 0092          _INTERRUPT_Initialize 67CC                      MSdelay@i 0007  
                    MSdelay@j 0009                      _LCD_Char 6790                      _LCD_Init 673E  
                    _LATDbits 3FBD                      _PIE0bits 3990                      i2u180_40 6354  
                    i2u180_41 6350                      _PIR0bits 39A0                      i2u179_40 62FC  
                    i2u179_41 62F8                      i2u524_47 6310                      i2u525_47 6328  
           ivt0x4008_undefint 40AC                     _lux_value 00A8                   _LCD_Command 67AE  
                   _vfpfcnvrt 5728                    _ADCON0bits 3EF8                    vfpfcnvrt@c 0045  
                 _INTCON0bits 3FD2         ?_INTERRUPT_Initialize 0001                      __Hrparam 0000  
                   memcpy@tmp 000B                    vfprintf@ap 0091                      __Lrparam 0000  
                  vfprintf@fp 008F                    ?_vfpfcnvrt 008C                    _ANSELAbits 3A40  
                  _ANSELCbits 3A60            ___fpclassifyf@F465 004A                    sprintf@fmt 0093  
                    ___xxtofl 5B4E                    strcat@dest 0005                      __ptext10 6194  
                    __ptext11 67EE                      __ptext20 4F4E                      __ptext12 6424  
                    __ptext21 5E08                      __ptext13 647E                      __ptext30 67AE  
                    __ptext22 6240                      __ptext14 593C                      __ptext31 64D4  
                    __ptext23 5398                      __ptext15 5F0C                      __ptext32 67CC  
                    __ptext24 5B4E                      __ptext16 5D02                      __ptext33 6768  
                    __ptext25 6632                      __ptext17 65AC                      __ptext34 62EC  
                    __ptext26 6714                      __ptext18 4A98                      __ptext27 6790  
                    __ptext19 66A6                      __ptext28 673E                      __ptext29 67E6  
                  strcpy@dest 0005                    MSdelay@val 0005                      efgtoa@fp 0038  
                    efgtoa@ne 0060                      efgtoa@pp 0068                      efgtoa@ou 0073  
                    isa$xinst 0000                      _vfprintf 651E                    _LCD_String 6714  
                    memcpy@d1 0005                      memcpy@s1 0007        ??_INTERRUPT_Initialize 0005  
                    intlevel2 0000                     sprintf@ap 0098                     strcat@src 0006  
                   strcpy@src 0007                   efgtoa@nmode 006A                   ??_vfpfcnvrt 0040  
                    sprintf@f 0099                      sprintf@s 0092                 ___fladd@signs 0011  
                ___fladd@aexp 0012                  ___fladd@bexp 0013  
