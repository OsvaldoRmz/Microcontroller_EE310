

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Mon Apr 28 16:35:28 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	18F47K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1,group=3
    14                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1,group=3
    15                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1,group=1
    16                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1,group=1
    17                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1,group=1
    18                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1,group=1
    19                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1,group=3
    20                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1,group=1
    21                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1,group=3
    22                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1,group=3
    23                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1,group=3
    24                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1,group=3
    25                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1,group=3
    26                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1,group=3
    27                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1,group=3
    28                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1,group=2
    29                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1,group=2
    30                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1,group=2
    31                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1,group=2
    32                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1,group=2
    33                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1,group=2
    34                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1,group=2
    35                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1,group=2
    36                           	psect	text24,global,reloc=2,class=CODE,space=0,delta=1,group=2
    37                           	psect	text25,global,reloc=2,class=CODE,space=0,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,space=0,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,space=0,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,space=0,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,space=0,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,space=0,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,space=0,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,space=0,delta=1
    45                           	psect	text33,global,reloc=4,class=CODE,space=0,delta=1
    46                           	psect	ivt0x4008,global,reloc=2,class=CODE,space=0,delta=1,noexec,keep,optim=
    47                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    48                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    49                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    50   000000                     
    51                           ; Generated 12/10/2023 GMT
    52                           ; 
    53                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    54                           ; All rights reserved.
    55                           ; 
    56                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    57                           ; 
    58                           ; Redistribution and use in source and binary forms, with or without modification, are
    59                           ; permitted provided that the following conditions are met:
    60                           ; 
    61                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    62                           ;        conditions and the following disclaimer.
    63                           ; 
    64                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    65                           ;        of conditions and the following disclaimer in the documentation and/or other
    66                           ;        materials provided with the distribution. Publication is not required when
    67                           ;        this file is used in an embedded application.
    68                           ; 
    69                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    70                           ;        software without specific prior written permission.
    71                           ; 
    72                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    73                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    74                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    75                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    76                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    77                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    78                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    79                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    80                           ; 
    81                           ; 
    82                           ; Code-generator required, PIC18F47K42 Definitions
    83                           ; 
    84                           ; SFR Addresses
    85   003FE0                     bsr             equ	16352
    86   003FE9                     fsr0            equ	16361
    87   003FEA                     fsr0h           equ	16362
    88   003FE9                     fsr0l           equ	16361
    89   003FE1                     fsr1            equ	16353
    90   003FE2                     fsr1h           equ	16354
    91   003FE1                     fsr1l           equ	16353
    92   003FD9                     fsr2            equ	16345
    93   003FDA                     fsr2h           equ	16346
    94   003FD9                     fsr2l           equ	16345
    95   003FEF                     indf0           equ	16367
    96   003FE7                     indf1           equ	16359
    97   003FDF                     indf2           equ	16351
    98   003FD2                     intcon          equ	16338
    99   0039E5                     nvmcon          equ	14821
   100   003FF9                     pcl             equ	16377
   101   003FFA                     pclath          equ	16378
   102   003FFB                     pclatu          equ	16379
   103   003FEB                     plusw0          equ	16363
   104   003FE3                     plusw1          equ	16355
   105   003FDB                     plusw2          equ	16347
   106   003FED                     postdec0        equ	16365
   107   003FE5                     postdec1        equ	16357
   108   003FDD                     postdec2        equ	16349
   109   003FEE                     postinc0        equ	16366
   110   003FE6                     postinc1        equ	16358
   111   003FDE                     postinc2        equ	16350
   112   003FEC                     preinc0         equ	16364
   113   003FE4                     preinc1         equ	16356
   114   003FDC                     preinc2         equ	16348
   115   003FF3                     prod            equ	16371
   116   003FF4                     prodh           equ	16372
   117   003FF3                     prodl           equ	16371
   118   003FD8                     status          equ	16344
   119   003FF5                     tablat          equ	16373
   120   003FF6                     tblptr          equ	16374
   121   003FF7                     tblptrh         equ	16375
   122   003FF6                     tblptrl         equ	16374
   123   003FF8                     tblptru         equ	16376
   124   003FFD                     tosl            equ	16381
   125   003FE8                     wreg            equ	16360
   126   003880                     STATUS_CSHAD    equ	14464	;# 
   127   003881                     WREG_CSHAD      equ	14465	;# 
   128   003882                     BSR_CSHAD       equ	14466	;# 
   129   003883                     SHADCON         equ	14467	;# 
   130   003884                     STATUS_SHAD     equ	14468	;# 
   131   003885                     WREG_SHAD       equ	14469	;# 
   132   003886                     BSR_SHAD        equ	14470	;# 
   133   003887                     PCLATH_SHAD     equ	14471	;# 
   134   003888                     PCLATU_SHAD     equ	14472	;# 
   135   003889                     FSR0SH          equ	14473	;# 
   136   003889                     FSR0L_SHAD      equ	14473	;# 
   137   00388A                     FSR0H_SHAD      equ	14474	;# 
   138   00388B                     FSR1SH          equ	14475	;# 
   139   00388B                     FSR1L_SHAD      equ	14475	;# 
   140   00388C                     FSR1H_SHAD      equ	14476	;# 
   141   00388D                     FSR2SH          equ	14477	;# 
   142   00388D                     FSR2L_SHAD      equ	14477	;# 
   143   00388E                     FSR2H_SHAD      equ	14478	;# 
   144   00388F                     PRODSH          equ	14479	;# 
   145   00388F                     PRODL_SHAD      equ	14479	;# 
   146   003890                     PRODH_SHAD      equ	14480	;# 
   147   00389D                     IVTADL          equ	14493	;# 
   148   00389E                     IVTADH          equ	14494	;# 
   149   00389F                     IVTADU          equ	14495	;# 
   150   00395B                     WDTCON0         equ	14683	;# 
   151   00395C                     WDTCON1         equ	14684	;# 
   152   00395D                     WDTPSL          equ	14685	;# 
   153   00395E                     WDTPSH          equ	14686	;# 
   154   00395F                     WDTTMR          equ	14687	;# 
   155   003960                     CRCDATA         equ	14688	;# 
   156   003960                     CRCDATL         equ	14688	;# 
   157   003961                     CRCDATH         equ	14689	;# 
   158   003962                     CRCACC          equ	14690	;# 
   159   003962                     CRCACCL         equ	14690	;# 
   160   003963                     CRCACCH         equ	14691	;# 
   161   003964                     CRCSHFT         equ	14692	;# 
   162   003964                     CRCSHIFTL       equ	14692	;# 
   163   003965                     CRCSHIFTH       equ	14693	;# 
   164   003966                     CRCXOR          equ	14694	;# 
   165   003966                     CRCXORL         equ	14694	;# 
   166   003967                     CRCXORH         equ	14695	;# 
   167   003968                     CRCCON0         equ	14696	;# 
   168   003969                     CRCCON1         equ	14697	;# 
   169   003976                     SCANLADR        equ	14710	;# 
   170   003976                     SCANLADRL       equ	14710	;# 
   171   003977                     SCANLADRH       equ	14711	;# 
   172   003978                     SCANLADRU       equ	14712	;# 
   173   003979                     SCANHADR        equ	14713	;# 
   174   003979                     SCANHADRL       equ	14713	;# 
   175   00397A                     SCANHADRH       equ	14714	;# 
   176   00397B                     SCANHADRU       equ	14715	;# 
   177   00397C                     SCANCON0        equ	14716	;# 
   178   00397D                     SCANTRIG        equ	14717	;# 
   179   003980                     IPR0            equ	14720	;# 
   180   003981                     IPR1            equ	14721	;# 
   181   003982                     IPR2            equ	14722	;# 
   182   003983                     IPR3            equ	14723	;# 
   183   003984                     IPR4            equ	14724	;# 
   184   003985                     IPR5            equ	14725	;# 
   185   003986                     IPR6            equ	14726	;# 
   186   003987                     IPR7            equ	14727	;# 
   187   003988                     IPR8            equ	14728	;# 
   188   003989                     IPR9            equ	14729	;# 
   189   00398A                     IPR10           equ	14730	;# 
   190   003990                     PIE0            equ	14736	;# 
   191   003991                     PIE1            equ	14737	;# 
   192   003992                     PIE2            equ	14738	;# 
   193   003993                     PIE3            equ	14739	;# 
   194   003994                     PIE4            equ	14740	;# 
   195   003995                     PIE5            equ	14741	;# 
   196   003996                     PIE6            equ	14742	;# 
   197   003997                     PIE7            equ	14743	;# 
   198   003998                     PIE8            equ	14744	;# 
   199   003999                     PIE9            equ	14745	;# 
   200   00399A                     PIE10           equ	14746	;# 
   201   0039A0                     PIR0            equ	14752	;# 
   202   0039A1                     PIR1            equ	14753	;# 
   203   0039A2                     PIR2            equ	14754	;# 
   204   0039A3                     PIR3            equ	14755	;# 
   205   0039A4                     PIR4            equ	14756	;# 
   206   0039A5                     PIR5            equ	14757	;# 
   207   0039A6                     PIR6            equ	14758	;# 
   208   0039A7                     PIR7            equ	14759	;# 
   209   0039A8                     PIR8            equ	14760	;# 
   210   0039A9                     PIR9            equ	14761	;# 
   211   0039AA                     PIR10           equ	14762	;# 
   212   0039C0                     PMD0            equ	14784	;# 
   213   0039C1                     PMD1            equ	14785	;# 
   214   0039C2                     PMD2            equ	14786	;# 
   215   0039C3                     PMD3            equ	14787	;# 
   216   0039C4                     PMD4            equ	14788	;# 
   217   0039C5                     PMD5            equ	14789	;# 
   218   0039C6                     PMD6            equ	14790	;# 
   219   0039C7                     PMD7            equ	14791	;# 
   220   0039D0                     BORCON          equ	14800	;# 
   221   0039D1                     VREGCON         equ	14801	;# 
   222   0039D8                     CPUDOZE         equ	14808	;# 
   223   0039D9                     OSCCON1         equ	14809	;# 
   224   0039DA                     OSCCON2         equ	14810	;# 
   225   0039DB                     OSCCON3         equ	14811	;# 
   226   0039DC                     OSCSTAT         equ	14812	;# 
   227   0039DC                     OSCSTAT1        equ	14812	;# 
   228   0039DD                     OSCEN           equ	14813	;# 
   229   0039DE                     OSCTUNE         equ	14814	;# 
   230   0039DF                     OSCFRQ          equ	14815	;# 
   231   0039E0                     NVMADRL         equ	14816	;# 
   232   0039E1                     NVMADRH         equ	14817	;# 
   233   0039E3                     NVMDAT          equ	14819	;# 
   234   0039E5                     NVMCON1         equ	14821	;# 
   235   0039E6                     NVMCON2         equ	14822	;# 
   236   0039EF                     PRLOCK          equ	14831	;# 
   237   0039F1                     ISRPR           equ	14833	;# 
   238   0039F2                     MAINPR          equ	14834	;# 
   239   0039F3                     DMA1PR          equ	14835	;# 
   240   0039F4                     DMA2PR          equ	14836	;# 
   241   0039F7                     SCANPR          equ	14839	;# 
   242   003A00                     RA0PPS          equ	14848	;# 
   243   003A01                     RA1PPS          equ	14849	;# 
   244   003A02                     RA2PPS          equ	14850	;# 
   245   003A03                     RA3PPS          equ	14851	;# 
   246   003A04                     RA4PPS          equ	14852	;# 
   247   003A05                     RA5PPS          equ	14853	;# 
   248   003A06                     RA6PPS          equ	14854	;# 
   249   003A07                     RA7PPS          equ	14855	;# 
   250   003A08                     RB0PPS          equ	14856	;# 
   251   003A09                     RB1PPS          equ	14857	;# 
   252   003A0A                     RB2PPS          equ	14858	;# 
   253   003A0B                     RB3PPS          equ	14859	;# 
   254   003A0C                     RB4PPS          equ	14860	;# 
   255   003A0D                     RB5PPS          equ	14861	;# 
   256   003A0E                     RB6PPS          equ	14862	;# 
   257   003A0F                     RB7PPS          equ	14863	;# 
   258   003A10                     RC0PPS          equ	14864	;# 
   259   003A11                     RC1PPS          equ	14865	;# 
   260   003A12                     RC2PPS          equ	14866	;# 
   261   003A13                     RC3PPS          equ	14867	;# 
   262   003A14                     RC4PPS          equ	14868	;# 
   263   003A15                     RC5PPS          equ	14869	;# 
   264   003A16                     RC6PPS          equ	14870	;# 
   265   003A17                     RC7PPS          equ	14871	;# 
   266   003A18                     RD0PPS          equ	14872	;# 
   267   003A19                     RD1PPS          equ	14873	;# 
   268   003A1A                     RD2PPS          equ	14874	;# 
   269   003A1B                     RD3PPS          equ	14875	;# 
   270   003A1C                     RD4PPS          equ	14876	;# 
   271   003A1D                     RD5PPS          equ	14877	;# 
   272   003A1E                     RD6PPS          equ	14878	;# 
   273   003A1F                     RD7PPS          equ	14879	;# 
   274   003A20                     RE0PPS          equ	14880	;# 
   275   003A21                     RE1PPS          equ	14881	;# 
   276   003A22                     RE2PPS          equ	14882	;# 
   277   003A40                     ANSELA          equ	14912	;# 
   278   003A41                     WPUA            equ	14913	;# 
   279   003A42                     ODCONA          equ	14914	;# 
   280   003A43                     SLRCONA         equ	14915	;# 
   281   003A44                     INLVLA          equ	14916	;# 
   282   003A45                     IOCAP           equ	14917	;# 
   283   003A46                     IOCAN           equ	14918	;# 
   284   003A47                     IOCAF           equ	14919	;# 
   285   003A50                     ANSELB          equ	14928	;# 
   286   003A51                     WPUB            equ	14929	;# 
   287   003A52                     ODCONB          equ	14930	;# 
   288   003A53                     SLRCONB         equ	14931	;# 
   289   003A54                     INLVLB          equ	14932	;# 
   290   003A55                     IOCBP           equ	14933	;# 
   291   003A56                     IOCBN           equ	14934	;# 
   292   003A57                     IOCBF           equ	14935	;# 
   293   003A5A                     RB1I2C          equ	14938	;# 
   294   003A5B                     RB2I2C          equ	14939	;# 
   295   003A60                     ANSELC          equ	14944	;# 
   296   003A61                     WPUC            equ	14945	;# 
   297   003A62                     ODCONC          equ	14946	;# 
   298   003A63                     SLRCONC         equ	14947	;# 
   299   003A64                     INLVLC          equ	14948	;# 
   300   003A65                     IOCCP           equ	14949	;# 
   301   003A66                     IOCCN           equ	14950	;# 
   302   003A67                     IOCCF           equ	14951	;# 
   303   003A6A                     RC3I2C          equ	14954	;# 
   304   003A6B                     RC4I2C          equ	14955	;# 
   305   003A70                     ANSELD          equ	14960	;# 
   306   003A71                     WPUD            equ	14961	;# 
   307   003A72                     ODCOND          equ	14962	;# 
   308   003A73                     SLRCOND         equ	14963	;# 
   309   003A74                     INLVLD          equ	14964	;# 
   310   003A7A                     RD0I2C          equ	14970	;# 
   311   003A7B                     RD1I2C          equ	14971	;# 
   312   003A80                     ANSELE          equ	14976	;# 
   313   003A81                     WPUE            equ	14977	;# 
   314   003A82                     ODCONE          equ	14978	;# 
   315   003A83                     SLRCONE         equ	14979	;# 
   316   003A84                     INLVLE          equ	14980	;# 
   317   003A85                     IOCEP           equ	14981	;# 
   318   003A86                     IOCEN           equ	14982	;# 
   319   003A87                     IOCEF           equ	14983	;# 
   320   003ABF                     PPSLOCK         equ	15039	;# 
   321   003AC0                     INT0PPS         equ	15040	;# 
   322   003AC1                     INT1PPS         equ	15041	;# 
   323   003AC2                     INT2PPS         equ	15042	;# 
   324   003AC3                     T0CKIPPS        equ	15043	;# 
   325   003AC4                     T1CKIPPS        equ	15044	;# 
   326   003AC5                     T1GPPS          equ	15045	;# 
   327   003AC6                     T3CKIPPS        equ	15046	;# 
   328   003AC7                     T3GPPS          equ	15047	;# 
   329   003AC8                     T5CKIPPS        equ	15048	;# 
   330   003AC9                     T5GPPS          equ	15049	;# 
   331   003ACA                     T2INPPS         equ	15050	;# 
   332   003ACB                     T4INPPS         equ	15051	;# 
   333   003ACC                     T6INPPS         equ	15052	;# 
   334   003ACD                     CCP1PPS         equ	15053	;# 
   335   003ACE                     CCP2PPS         equ	15054	;# 
   336   003ACF                     CCP3PPS         equ	15055	;# 
   337   003AD0                     CCP4PPS         equ	15056	;# 
   338   003AD1                     SMT1WINPPS      equ	15057	;# 
   339   003AD2                     SMT1SIGPPS      equ	15058	;# 
   340   003AD3                     CWG1INPPS       equ	15059	;# 
   341   003AD4                     CWG2INPPS       equ	15060	;# 
   342   003AD5                     CWG3INPPS       equ	15061	;# 
   343   003AD6                     MD1CARLPPS      equ	15062	;# 
   344   003AD7                     MD1CARHPPS      equ	15063	;# 
   345   003AD8                     MD1SRCPPS       equ	15064	;# 
   346   003AD9                     CLCIN0PPS       equ	15065	;# 
   347   003ADA                     CLCIN1PPS       equ	15066	;# 
   348   003ADB                     CLCIN2PPS       equ	15067	;# 
   349   003ADC                     CLCIN3PPS       equ	15068	;# 
   350   003ADD                     ADACTPPS        equ	15069	;# 
   351   003ADE                     SPI1SCKPPS      equ	15070	;# 
   352   003ADF                     SPI1SDIPPS      equ	15071	;# 
   353   003AE0                     SPI1SSPPS       equ	15072	;# 
   354   003AE1                     I2C1SCLPPS      equ	15073	;# 
   355   003AE2                     I2C1SDAPPS      equ	15074	;# 
   356   003AE3                     I2C2SCLPPS      equ	15075	;# 
   357   003AE4                     I2C2SDAPPS      equ	15076	;# 
   358   003AE5                     U1RXPPS         equ	15077	;# 
   359   003AE6                     U1CTSPPS        equ	15078	;# 
   360   003AE8                     U2RXPPS         equ	15080	;# 
   361   003AE9                     U2CTSPPS        equ	15081	;# 
   362   003BC9                     DMA2BUF         equ	15305	;# 
   363   003BCA                     DMA2DCNT        equ	15306	;# 
   364   003BCA                     DMA2DCNTL       equ	15306	;# 
   365   003BCB                     DMA2DCNTH       equ	15307	;# 
   366   003BCC                     DMA2DPTR        equ	15308	;# 
   367   003BCC                     DMA2DPTRL       equ	15308	;# 
   368   003BCD                     DMA2DPTRH       equ	15309	;# 
   369   003BCE                     DMA2DSZ         equ	15310	;# 
   370   003BCE                     DMA2DSZL        equ	15310	;# 
   371   003BCF                     DMA2DSZH        equ	15311	;# 
   372   003BD0                     DMA2DSA         equ	15312	;# 
   373   003BD0                     DMA2DSAL        equ	15312	;# 
   374   003BD1                     DMA2DSAH        equ	15313	;# 
   375   003BD2                     DMA2SCNT        equ	15314	;# 
   376   003BD2                     DMA2SCNTL       equ	15314	;# 
   377   003BD3                     DMA2SCNTH       equ	15315	;# 
   378   003BD4                     DMA2SPTR        equ	15316	;# 
   379   003BD4                     DMA2SPTRL       equ	15316	;# 
   380   003BD5                     DMA2SPTRH       equ	15317	;# 
   381   003BD6                     DMA2SPTRU       equ	15318	;# 
   382   003BD7                     DMA2SSZ         equ	15319	;# 
   383   003BD7                     DMA2SSZL        equ	15319	;# 
   384   003BD8                     DMA2SSZH        equ	15320	;# 
   385   003BD9                     DMA2SSA         equ	15321	;# 
   386   003BD9                     DMA2SSAL        equ	15321	;# 
   387   003BDA                     DMA2SSAH        equ	15322	;# 
   388   003BDB                     DMA2SSAU        equ	15323	;# 
   389   003BDC                     DMA2CON0        equ	15324	;# 
   390   003BDD                     DMA2CON1        equ	15325	;# 
   391   003BDE                     DMA2AIRQ        equ	15326	;# 
   392   003BDF                     DMA2SIRQ        equ	15327	;# 
   393   003BE9                     DMA1BUF         equ	15337	;# 
   394   003BEA                     DMA1DCNT        equ	15338	;# 
   395   003BEA                     DMA1DCNTL       equ	15338	;# 
   396   003BEB                     DMA1DCNTH       equ	15339	;# 
   397   003BEC                     DMA1DPTR        equ	15340	;# 
   398   003BEC                     DMA1DPTRL       equ	15340	;# 
   399   003BED                     DMA1DPTRH       equ	15341	;# 
   400   003BEE                     DMA1DSZ         equ	15342	;# 
   401   003BEE                     DMA1DSZL        equ	15342	;# 
   402   003BEF                     DMA1DSZH        equ	15343	;# 
   403   003BF0                     DMA1DSA         equ	15344	;# 
   404   003BF0                     DMA1DSAL        equ	15344	;# 
   405   003BF1                     DMA1DSAH        equ	15345	;# 
   406   003BF2                     DMA1SCNT        equ	15346	;# 
   407   003BF2                     DMA1SCNTL       equ	15346	;# 
   408   003BF3                     DMA1SCNTH       equ	15347	;# 
   409   003BF4                     DMA1SPTR        equ	15348	;# 
   410   003BF4                     DMA1SPTRL       equ	15348	;# 
   411   003BF5                     DMA1SPTRH       equ	15349	;# 
   412   003BF6                     DMA1SPTRU       equ	15350	;# 
   413   003BF7                     DMA1SSZ         equ	15351	;# 
   414   003BF7                     DMA1SSZL        equ	15351	;# 
   415   003BF8                     DMA1SSZH        equ	15352	;# 
   416   003BF9                     DMA1SSA         equ	15353	;# 
   417   003BF9                     DMA1SSAL        equ	15353	;# 
   418   003BFA                     DMA1SSAH        equ	15354	;# 
   419   003BFB                     DMA1SSAU        equ	15355	;# 
   420   003BFC                     DMA1CON0        equ	15356	;# 
   421   003BFD                     DMA1CON1        equ	15357	;# 
   422   003BFE                     DMA1AIRQ        equ	15358	;# 
   423   003BFF                     DMA1SIRQ        equ	15359	;# 
   424   003C56                     CLC4CON         equ	15446	;# 
   425   003C57                     CLC4POL         equ	15447	;# 
   426   003C58                     CLC4SEL0        equ	15448	;# 
   427   003C59                     CLC4SEL1        equ	15449	;# 
   428   003C5A                     CLC4SEL2        equ	15450	;# 
   429   003C5B                     CLC4SEL3        equ	15451	;# 
   430   003C5C                     CLC4GLS0        equ	15452	;# 
   431   003C5D                     CLC4GLS1        equ	15453	;# 
   432   003C5E                     CLC4GLS2        equ	15454	;# 
   433   003C5F                     CLC4GLS3        equ	15455	;# 
   434   003C60                     CLC3CON         equ	15456	;# 
   435   003C61                     CLC3POL         equ	15457	;# 
   436   003C62                     CLC3SEL0        equ	15458	;# 
   437   003C63                     CLC3SEL1        equ	15459	;# 
   438   003C64                     CLC3SEL2        equ	15460	;# 
   439   003C65                     CLC3SEL3        equ	15461	;# 
   440   003C66                     CLC3GLS0        equ	15462	;# 
   441   003C67                     CLC3GLS1        equ	15463	;# 
   442   003C68                     CLC3GLS2        equ	15464	;# 
   443   003C69                     CLC3GLS3        equ	15465	;# 
   444   003C6A                     CLC2CON         equ	15466	;# 
   445   003C6B                     CLC2POL         equ	15467	;# 
   446   003C6C                     CLC2SEL0        equ	15468	;# 
   447   003C6D                     CLC2SEL1        equ	15469	;# 
   448   003C6E                     CLC2SEL2        equ	15470	;# 
   449   003C6F                     CLC2SEL3        equ	15471	;# 
   450   003C70                     CLC2GLS0        equ	15472	;# 
   451   003C71                     CLC2GLS1        equ	15473	;# 
   452   003C72                     CLC2GLS2        equ	15474	;# 
   453   003C73                     CLC2GLS3        equ	15475	;# 
   454   003C74                     CLC1CON         equ	15476	;# 
   455   003C75                     CLC1POL         equ	15477	;# 
   456   003C76                     CLC1SEL0        equ	15478	;# 
   457   003C77                     CLC1SEL1        equ	15479	;# 
   458   003C78                     CLC1SEL2        equ	15480	;# 
   459   003C79                     CLC1SEL3        equ	15481	;# 
   460   003C7A                     CLC1GLS0        equ	15482	;# 
   461   003C7B                     CLC1GLS1        equ	15483	;# 
   462   003C7C                     CLC1GLS2        equ	15484	;# 
   463   003C7D                     CLC1GLS3        equ	15485	;# 
   464   003C7E                     CLCDATA0        equ	15486	;# 
   465   003CE5                     CLKRCON         equ	15589	;# 
   466   003CE6                     CLKRCLK         equ	15590	;# 
   467   003CFA                     MD1CON0         equ	15610	;# 
   468   003CFB                     MD1CON1         equ	15611	;# 
   469   003CFC                     MD1SRC          equ	15612	;# 
   470   003CFD                     MD1CARL         equ	15613	;# 
   471   003CFE                     MD1CARH         equ	15614	;# 
   472   003D10                     SPI1RXB         equ	15632	;# 
   473   003D11                     SPI1TXB         equ	15633	;# 
   474   003D12                     SPI1TCNT        equ	15634	;# 
   475   003D12                     SPI1TCNTL       equ	15634	;# 
   476   003D13                     SPI1TCNTH       equ	15635	;# 
   477   003D14                     SPI1CON0        equ	15636	;# 
   478   003D15                     SPI1CON1        equ	15637	;# 
   479   003D16                     SPI1CON2        equ	15638	;# 
   480   003D17                     SPI1STATUS      equ	15639	;# 
   481   003D18                     SPI1TWIDTH      equ	15640	;# 
   482   003D19                     SPI1BAUD        equ	15641	;# 
   483   003D1A                     SPI1INTF        equ	15642	;# 
   484   003D1B                     SPI1INTE        equ	15643	;# 
   485   003D1C                     SPI1CLK         equ	15644	;# 
   486   003D54                     I2C2RXB         equ	15700	;# 
   487   003D55                     I2C2TXB         equ	15701	;# 
   488   003D56                     I2C2CNT         equ	15702	;# 
   489   003D57                     I2C2ADB0        equ	15703	;# 
   490   003D58                     I2C2ADB1        equ	15704	;# 
   491   003D59                     I2C2ADR0        equ	15705	;# 
   492   003D5A                     I2C2ADR1        equ	15706	;# 
   493   003D5B                     I2C2ADR2        equ	15707	;# 
   494   003D5C                     I2C2ADR3        equ	15708	;# 
   495   003D5D                     I2C2CON0        equ	15709	;# 
   496   003D5E                     I2C2CON1        equ	15710	;# 
   497   003D5F                     I2C2CON2        equ	15711	;# 
   498   003D60                     I2C2ERR         equ	15712	;# 
   499   003D61                     I2C2STAT0       equ	15713	;# 
   500   003D62                     I2C2STAT1       equ	15714	;# 
   501   003D63                     I2C2PIR         equ	15715	;# 
   502   003D64                     I2C2PIE         equ	15716	;# 
   503   003D65                     I2C2CLK         equ	15717	;# 
   504   003D66                     I2C2BTO         equ	15718	;# 
   505   003D6A                     I2C1RXB         equ	15722	;# 
   506   003D6B                     I2C1TXB         equ	15723	;# 
   507   003D6C                     I2C1CNT         equ	15724	;# 
   508   003D6D                     I2C1ADB0        equ	15725	;# 
   509   003D6E                     I2C1ADB1        equ	15726	;# 
   510   003D6F                     I2C1ADR0        equ	15727	;# 
   511   003D70                     I2C1ADR1        equ	15728	;# 
   512   003D71                     I2C1ADR2        equ	15729	;# 
   513   003D72                     I2C1ADR3        equ	15730	;# 
   514   003D73                     I2C1CON0        equ	15731	;# 
   515   003D74                     I2C1CON1        equ	15732	;# 
   516   003D75                     I2C1CON2        equ	15733	;# 
   517   003D76                     I2C1ERR         equ	15734	;# 
   518   003D77                     I2C1STAT0       equ	15735	;# 
   519   003D78                     I2C1STAT1       equ	15736	;# 
   520   003D79                     I2C1PIR         equ	15737	;# 
   521   003D7A                     I2C1PIE         equ	15738	;# 
   522   003D7B                     I2C1CLK         equ	15739	;# 
   523   003D7C                     I2C1BTO         equ	15740	;# 
   524   003DD0                     U2RXB           equ	15824	;# 
   525   003DD0                     U2RXBL          equ	15824	;# 
   526   003DD2                     U2TXB           equ	15826	;# 
   527   003DD2                     U2TXBL          equ	15826	;# 
   528   003DD4                     U2P1            equ	15828	;# 
   529   003DD4                     U2P1L           equ	15828	;# 
   530   003DD6                     U2P2            equ	15830	;# 
   531   003DD6                     U2P2L           equ	15830	;# 
   532   003DD8                     U2P3            equ	15832	;# 
   533   003DD8                     U2P3L           equ	15832	;# 
   534   003DDA                     U2CON0          equ	15834	;# 
   535   003DDB                     U2CON1          equ	15835	;# 
   536   003DDC                     U2CON2          equ	15836	;# 
   537   003DDD                     U2BRG           equ	15837	;# 
   538   003DDD                     U2BRGL          equ	15837	;# 
   539   003DDE                     U2BRGH          equ	15838	;# 
   540   003DDF                     U2FIFO          equ	15839	;# 
   541   003DE0                     U2UIR           equ	15840	;# 
   542   003DE1                     U2ERRIR         equ	15841	;# 
   543   003DE2                     U2ERRIE         equ	15842	;# 
   544   003DE8                     U1RXB           equ	15848	;# 
   545   003DE8                     U1RXBL          equ	15848	;# 
   546   003DE9                     U1RXCHK         equ	15849	;# 
   547   003DEA                     U1TXB           equ	15850	;# 
   548   003DEA                     U1TXBL          equ	15850	;# 
   549   003DEB                     U1TXCHK         equ	15851	;# 
   550   003DEC                     U1P1            equ	15852	;# 
   551   003DEC                     U1P1L           equ	15852	;# 
   552   003DED                     U1P1H           equ	15853	;# 
   553   003DEE                     U1P2            equ	15854	;# 
   554   003DEE                     U1P2L           equ	15854	;# 
   555   003DEF                     U1P2H           equ	15855	;# 
   556   003DF0                     U1P3            equ	15856	;# 
   557   003DF0                     U1P3L           equ	15856	;# 
   558   003DF1                     U1P3H           equ	15857	;# 
   559   003DF2                     U1CON0          equ	15858	;# 
   560   003DF3                     U1CON1          equ	15859	;# 
   561   003DF4                     U1CON2          equ	15860	;# 
   562   003DF5                     U1BRG           equ	15861	;# 
   563   003DF5                     U1BRGL          equ	15861	;# 
   564   003DF6                     U1BRGH          equ	15862	;# 
   565   003DF7                     U1FIFO          equ	15863	;# 
   566   003DF8                     U1UIR           equ	15864	;# 
   567   003DF9                     U1ERRIR         equ	15865	;# 
   568   003DFA                     U1ERRIE         equ	15866	;# 
   569   003E9C                     DAC1CON1        equ	16028	;# 
   570   003E9E                     DAC1CON0        equ	16030	;# 
   571   003EB8                     CM2CON0         equ	16056	;# 
   572   003EB9                     CM2CON1         equ	16057	;# 
   573   003EBA                     CM2NCH          equ	16058	;# 
   574   003EBB                     CM2PCH          equ	16059	;# 
   575   003EBC                     CM1CON0         equ	16060	;# 
   576   003EBD                     CM1CON1         equ	16061	;# 
   577   003EBE                     CM1NCH          equ	16062	;# 
   578   003EBF                     CM1PCH          equ	16063	;# 
   579   003EC0                     CMOUT           equ	16064	;# 
   580   003EC1                     FVRCON          equ	16065	;# 
   581   003EC3                     ZCDCON          equ	16067	;# 
   582   003EC9                     HLVDCON0        equ	16073	;# 
   583   003ECA                     HLVDCON1        equ	16074	;# 
   584   003ED7                     ADCP            equ	16087	;# 
   585   003EDE                     ADLTH           equ	16094	;# 
   586   003EDE                     ADLTHL          equ	16094	;# 
   587   003EDF                     ADLTHH          equ	16095	;# 
   588   003EE0                     ADUTH           equ	16096	;# 
   589   003EE0                     ADUTHL          equ	16096	;# 
   590   003EE1                     ADUTHH          equ	16097	;# 
   591   003EE2                     ADERR           equ	16098	;# 
   592   003EE2                     ADERRL          equ	16098	;# 
   593   003EE3                     ADERRH          equ	16099	;# 
   594   003EE4                     ADSTPT          equ	16100	;# 
   595   003EE4                     ADSTPTL         equ	16100	;# 
   596   003EE5                     ADSTPTH         equ	16101	;# 
   597   003EE6                     ADFLTR          equ	16102	;# 
   598   003EE6                     ADFLTRL         equ	16102	;# 
   599   003EE7                     ADFLTRH         equ	16103	;# 
   600   003EE8                     ADACC           equ	16104	;# 
   601   003EE8                     ADACCL          equ	16104	;# 
   602   003EE9                     ADACCH          equ	16105	;# 
   603   003EEA                     ADACCU          equ	16106	;# 
   604   003EEB                     ADCNT           equ	16107	;# 
   605   003EEC                     ADRPT           equ	16108	;# 
   606   003EED                     ADPREV          equ	16109	;# 
   607   003EED                     ADPREVL         equ	16109	;# 
   608   003EEE                     ADPREVH         equ	16110	;# 
   609   003EEF                     ADRES           equ	16111	;# 
   610   003EEF                     ADRESL          equ	16111	;# 
   611   003EF0                     ADRESH          equ	16112	;# 
   612   003EF1                     ADPCH           equ	16113	;# 
   613   003EF3                     ADACQ           equ	16115	;# 
   614   003EF3                     ADACQL          equ	16115	;# 
   615   003EF4                     ADACQH          equ	16116	;# 
   616   003EF5                     ADCAP           equ	16117	;# 
   617   003EF6                     ADPRE           equ	16118	;# 
   618   003EF6                     ADPREL          equ	16118	;# 
   619   003EF7                     ADPREH          equ	16119	;# 
   620   003EF8                     ADCON0          equ	16120	;# 
   621   003EF9                     ADCON1          equ	16121	;# 
   622   003EFA                     ADCON2          equ	16122	;# 
   623   003EFB                     ADCON3          equ	16123	;# 
   624   003EFC                     ADSTAT          equ	16124	;# 
   625   003EFD                     ADREF           equ	16125	;# 
   626   003EFE                     ADACT           equ	16126	;# 
   627   003EFF                     ADCLK           equ	16127	;# 
   628   003F12                     SMT1TMR         equ	16146	;# 
   629   003F12                     SMT1TMRL        equ	16146	;# 
   630   003F13                     SMT1TMRH        equ	16147	;# 
   631   003F14                     SMT1TMRU        equ	16148	;# 
   632   003F15                     SMT1CPR         equ	16149	;# 
   633   003F15                     SMT1CPRL        equ	16149	;# 
   634   003F16                     SMT1CPRH        equ	16150	;# 
   635   003F17                     SMT1CPRU        equ	16151	;# 
   636   003F18                     SMT1CPW         equ	16152	;# 
   637   003F18                     SMT1CPWL        equ	16152	;# 
   638   003F19                     SMT1CPWH        equ	16153	;# 
   639   003F1A                     SMT1CPWU        equ	16154	;# 
   640   003F1B                     SMT1PR          equ	16155	;# 
   641   003F1B                     SMT1PRL         equ	16155	;# 
   642   003F1C                     SMT1PRH         equ	16156	;# 
   643   003F1D                     SMT1PRU         equ	16157	;# 
   644   003F1E                     SMT1CON0        equ	16158	;# 
   645   003F1F                     SMT1CON1        equ	16159	;# 
   646   003F20                     SMT1STAT        equ	16160	;# 
   647   003F21                     SMT1CLK         equ	16161	;# 
   648   003F22                     SMT1SIG         equ	16162	;# 
   649   003F23                     SMT1WIN         equ	16163	;# 
   650   003F38                     NCO1ACC         equ	16184	;# 
   651   003F38                     NCO1ACCL        equ	16184	;# 
   652   003F39                     NCO1ACCH        equ	16185	;# 
   653   003F3A                     NCO1ACCU        equ	16186	;# 
   654   003F3B                     NCO1INC         equ	16187	;# 
   655   003F3B                     NCO1INCL        equ	16187	;# 
   656   003F3C                     NCO1INCH        equ	16188	;# 
   657   003F3D                     NCO1INCU        equ	16189	;# 
   658   003F3E                     NCO1CON         equ	16190	;# 
   659   003F3F                     NCO1CLK         equ	16191	;# 
   660   003F40                     CWG3CLK         equ	16192	;# 
   661   003F40                     CWG3CLKCON      equ	16192	;# 
   662   003F41                     CWG3ISM         equ	16193	;# 
   663   003F41                     CWG3DAT         equ	16193	;# 
   664   003F42                     CWG3DBR         equ	16194	;# 
   665   003F43                     CWG3DBF         equ	16195	;# 
   666   003F44                     CWG3CON0        equ	16196	;# 
   667   003F45                     CWG3CON1        equ	16197	;# 
   668   003F46                     CWG3AS0         equ	16198	;# 
   669   003F47                     CWG3AS1         equ	16199	;# 
   670   003F48                     CWG3STR         equ	16200	;# 
   671   003F49                     CWG2CLK         equ	16201	;# 
   672   003F49                     CWG2CLKCON      equ	16201	;# 
   673   003F4A                     CWG2ISM         equ	16202	;# 
   674   003F4A                     CWG2DAT         equ	16202	;# 
   675   003F4B                     CWG2DBR         equ	16203	;# 
   676   003F4C                     CWG2DBF         equ	16204	;# 
   677   003F4D                     CWG2CON0        equ	16205	;# 
   678   003F4E                     CWG2CON1        equ	16206	;# 
   679   003F4F                     CWG2AS0         equ	16207	;# 
   680   003F50                     CWG2AS1         equ	16208	;# 
   681   003F51                     CWG2STR         equ	16209	;# 
   682   003F52                     CWG1CLK         equ	16210	;# 
   683   003F52                     CWG1CLKCON      equ	16210	;# 
   684   003F53                     CWG1ISM         equ	16211	;# 
   685   003F53                     CWG1DAT         equ	16211	;# 
   686   003F54                     CWG1DBR         equ	16212	;# 
   687   003F55                     CWG1DBF         equ	16213	;# 
   688   003F56                     CWG1CON0        equ	16214	;# 
   689   003F57                     CWG1CON1        equ	16215	;# 
   690   003F58                     CWG1AS0         equ	16216	;# 
   691   003F59                     CWG1AS1         equ	16217	;# 
   692   003F5A                     CWG1STR         equ	16218	;# 
   693   003F5E                     CCPTMRS0        equ	16222	;# 
   694   003F5F                     CCPTMRS1        equ	16223	;# 
   695   003F60                     PWM8DC          equ	16224	;# 
   696   003F60                     PWM8DCL         equ	16224	;# 
   697   003F61                     PWM8DCH         equ	16225	;# 
   698   003F62                     PWM8CON         equ	16226	;# 
   699   003F64                     PWM7DC          equ	16228	;# 
   700   003F64                     PWM7DCL         equ	16228	;# 
   701   003F65                     PWM7DCH         equ	16229	;# 
   702   003F66                     PWM7CON         equ	16230	;# 
   703   003F68                     PWM6DC          equ	16232	;# 
   704   003F68                     PWM6DCL         equ	16232	;# 
   705   003F69                     PWM6DCH         equ	16233	;# 
   706   003F6A                     PWM6CON         equ	16234	;# 
   707   003F6C                     PWM5DC          equ	16236	;# 
   708   003F6C                     PWM5DCL         equ	16236	;# 
   709   003F6D                     PWM5DCH         equ	16237	;# 
   710   003F6E                     PWM5CON         equ	16238	;# 
   711   003F70                     CCPR4           equ	16240	;# 
   712   003F70                     CCPR4L          equ	16240	;# 
   713   003F71                     CCPR4H          equ	16241	;# 
   714   003F72                     CCP4CON         equ	16242	;# 
   715   003F73                     CCP4CAP         equ	16243	;# 
   716   003F74                     CCPR3           equ	16244	;# 
   717   003F74                     CCPR3L          equ	16244	;# 
   718   003F75                     CCPR3H          equ	16245	;# 
   719   003F76                     CCP3CON         equ	16246	;# 
   720   003F77                     CCP3CAP         equ	16247	;# 
   721   003F78                     CCPR2           equ	16248	;# 
   722   003F78                     CCPR2L          equ	16248	;# 
   723   003F79                     CCPR2H          equ	16249	;# 
   724   003F7A                     CCP2CON         equ	16250	;# 
   725   003F7B                     CCP2CAP         equ	16251	;# 
   726   003F7C                     CCPR1           equ	16252	;# 
   727   003F7C                     CCPR1L          equ	16252	;# 
   728   003F7D                     CCPR1H          equ	16253	;# 
   729   003F7E                     CCP1CON         equ	16254	;# 
   730   003F7F                     CCP1CAP         equ	16255	;# 
   731   003F92                     T6TMR           equ	16274	;# 
   732   003F92                     TMR6            equ	16274	;# 
   733   003F93                     T6PR            equ	16275	;# 
   734   003F93                     PR6             equ	16275	;# 
   735   003F94                     T6CON           equ	16276	;# 
   736   003F95                     T6HLT           equ	16277	;# 
   737   003F96                     T6CLKCON        equ	16278	;# 
   738   003F96                     T6CLK           equ	16278	;# 
   739   003F97                     T6RST           equ	16279	;# 
   740   003F98                     TMR5            equ	16280	;# 
   741   003F98                     TMR5L           equ	16280	;# 
   742   003F99                     TMR5H           equ	16281	;# 
   743   003F9A                     T5CON           equ	16282	;# 
   744   003F9A                     TMR5CON         equ	16282	;# 
   745   003F9B                     T5GCON          equ	16283	;# 
   746   003F9B                     TMR5GCON        equ	16283	;# 
   747   003F9C                     T5GATE          equ	16284	;# 
   748   003F9C                     TMR5GATE        equ	16284	;# 
   749   003F9D                     T5CLK           equ	16285	;# 
   750   003F9D                     TMR5CLK         equ	16285	;# 
   751   003F9D                     PR5             equ	16285	;# 
   752   003F9E                     T4TMR           equ	16286	;# 
   753   003F9E                     TMR4            equ	16286	;# 
   754   003F9F                     T4PR            equ	16287	;# 
   755   003F9F                     PR4             equ	16287	;# 
   756   003FA0                     T4CON           equ	16288	;# 
   757   003FA1                     T4HLT           equ	16289	;# 
   758   003FA2                     T4CLKCON        equ	16290	;# 
   759   003FA2                     T4CLK           equ	16290	;# 
   760   003FA3                     T4RST           equ	16291	;# 
   761   003FA4                     TMR3            equ	16292	;# 
   762   003FA4                     TMR3L           equ	16292	;# 
   763   003FA5                     TMR3H           equ	16293	;# 
   764   003FA6                     T3CON           equ	16294	;# 
   765   003FA6                     TMR3CON         equ	16294	;# 
   766   003FA7                     T3GCON          equ	16295	;# 
   767   003FA7                     TMR3GCON        equ	16295	;# 
   768   003FA8                     T3GATE          equ	16296	;# 
   769   003FA8                     TMR3GATE        equ	16296	;# 
   770   003FA9                     T3CLK           equ	16297	;# 
   771   003FA9                     TMR3CLK         equ	16297	;# 
   772   003FA9                     PR3             equ	16297	;# 
   773   003FAA                     T2TMR           equ	16298	;# 
   774   003FAA                     TMR2            equ	16298	;# 
   775   003FAB                     T2PR            equ	16299	;# 
   776   003FAB                     PR2             equ	16299	;# 
   777   003FAC                     T2CON           equ	16300	;# 
   778   003FAD                     T2HLT           equ	16301	;# 
   779   003FAE                     T2CLKCON        equ	16302	;# 
   780   003FAE                     T2CLK           equ	16302	;# 
   781   003FAF                     T2RST           equ	16303	;# 
   782   003FB0                     TMR1            equ	16304	;# 
   783   003FB0                     TMR1L           equ	16304	;# 
   784   003FB1                     TMR1H           equ	16305	;# 
   785   003FB2                     T1CON           equ	16306	;# 
   786   003FB2                     TMR1CON         equ	16306	;# 
   787   003FB3                     T1GCON          equ	16307	;# 
   788   003FB3                     TMR1GCON        equ	16307	;# 
   789   003FB4                     T1GATE          equ	16308	;# 
   790   003FB4                     TMR1GATE        equ	16308	;# 
   791   003FB5                     T1CLK           equ	16309	;# 
   792   003FB5                     TMR1CLK         equ	16309	;# 
   793   003FB5                     PR1             equ	16309	;# 
   794   003FB6                     TMR0L           equ	16310	;# 
   795   003FB6                     TMR0            equ	16310	;# 
   796   003FB7                     TMR0H           equ	16311	;# 
   797   003FB7                     PR0             equ	16311	;# 
   798   003FB8                     T0CON0          equ	16312	;# 
   799   003FB9                     T0CON1          equ	16313	;# 
   800   003FBA                     LATA            equ	16314	;# 
   801   003FBB                     LATB            equ	16315	;# 
   802   003FBC                     LATC            equ	16316	;# 
   803   003FBD                     LATD            equ	16317	;# 
   804   003FBE                     LATE            equ	16318	;# 
   805   003FC2                     TRISA           equ	16322	;# 
   806   003FC3                     TRISB           equ	16323	;# 
   807   003FC4                     TRISC           equ	16324	;# 
   808   003FC5                     TRISD           equ	16325	;# 
   809   003FC6                     TRISE           equ	16326	;# 
   810   003FCA                     PORTA           equ	16330	;# 
   811   003FCB                     PORTB           equ	16331	;# 
   812   003FCC                     PORTC           equ	16332	;# 
   813   003FCD                     PORTD           equ	16333	;# 
   814   003FCE                     PORTE           equ	16334	;# 
   815   003FD2                     INTCON0         equ	16338	;# 
   816   003FD3                     INTCON1         equ	16339	;# 
   817   003FD4                     IVTLOCK         equ	16340	;# 
   818   003FD5                     IVTBASE         equ	16341	;# 
   819   003FD5                     IVTBASEL        equ	16341	;# 
   820   003FD6                     IVTBASEH        equ	16342	;# 
   821   003FD7                     IVTBASEU        equ	16343	;# 
   822   003FD8                     STATUS          equ	16344	;# 
   823   003FD9                     FSR2            equ	16345	;# 
   824   003FD9                     FSR2L           equ	16345	;# 
   825   003FDA                     FSR2H           equ	16346	;# 
   826   003FDB                     PLUSW2          equ	16347	;# 
   827   003FDC                     PREINC2         equ	16348	;# 
   828   003FDD                     POSTDEC2        equ	16349	;# 
   829   003FDE                     POSTINC2        equ	16350	;# 
   830   003FDF                     INDF2           equ	16351	;# 
   831   003FE0                     BSR             equ	16352	;# 
   832   003FE1                     FSR1            equ	16353	;# 
   833   003FE1                     FSR1L           equ	16353	;# 
   834   003FE2                     FSR1H           equ	16354	;# 
   835   003FE3                     PLUSW1          equ	16355	;# 
   836   003FE4                     PREINC1         equ	16356	;# 
   837   003FE5                     POSTDEC1        equ	16357	;# 
   838   003FE6                     POSTINC1        equ	16358	;# 
   839   003FE7                     INDF1           equ	16359	;# 
   840   003FE8                     WREG            equ	16360	;# 
   841   003FE9                     FSR0            equ	16361	;# 
   842   003FE9                     FSR0L           equ	16361	;# 
   843   003FEA                     FSR0H           equ	16362	;# 
   844   003FEB                     PLUSW0          equ	16363	;# 
   845   003FEC                     PREINC0         equ	16364	;# 
   846   003FED                     POSTDEC0        equ	16365	;# 
   847   003FEE                     POSTINC0        equ	16366	;# 
   848   003FEF                     INDF0           equ	16367	;# 
   849   003FF0                     PCON0           equ	16368	;# 
   850   003FF1                     PCON1           equ	16369	;# 
   851   003FF3                     PROD            equ	16371	;# 
   852   003FF3                     PRODL           equ	16371	;# 
   853   003FF4                     PRODH           equ	16372	;# 
   854   003FF5                     TABLAT          equ	16373	;# 
   855   003FF6                     TBLPTR          equ	16374	;# 
   856   003FF6                     TBLPTRL         equ	16374	;# 
   857   003FF7                     TBLPTRH         equ	16375	;# 
   858   003FF8                     TBLPTRU         equ	16376	;# 
   859   003FF9                     PCLAT           equ	16377	;# 
   860   003FF9                     PCL             equ	16377	;# 
   861   003FFA                     PCLATH          equ	16378	;# 
   862   003FFB                     PCLATU          equ	16379	;# 
   863   003FFC                     STKPTR          equ	16380	;# 
   864   003FFD                     TOS             equ	16381	;# 
   865   003FFD                     TOSL            equ	16381	;# 
   866   003FFE                     TOSH            equ	16382	;# 
   867   003FFF                     TOSU            equ	16383	;# 
   868   003990                     _PIE0bits       set	14736
   869   0039A0                     _PIR0bits       set	14752
   870   003A40                     _ANSELAbits     set	14912
   871   003A67                     _IOCCFbits      set	14951
   872   003A65                     _IOCCPbits      set	14949
   873   003A66                     _IOCCNbits      set	14950
   874   003A60                     _ANSELCbits     set	14944
   875   003EF4                     _ADACQH         set	16116
   876   003EF3                     _ADACQL         set	16115
   877   003EF7                     _ADPREH         set	16119
   878   003EF6                     _ADPREL         set	16118
   879   003EEF                     _ADRESL         set	16111
   880   003EF0                     _ADRESH         set	16112
   881   003EFF                     _ADCLK          set	16127
   882   003EF1                     _ADPCH          set	16113
   883   003EF8                     _ADCON0bits     set	16120
   884   003FCD                     _PORTDbits      set	16333
   885   003FBD                     _LATDbits       set	16317
   886   003FBB                     _LATB           set	16315
   887   003FC5                     _TRISD          set	16325
   888   003FC3                     _TRISB          set	16323
   889   003FC2                     _TRISAbits      set	16322
   890   003FD2                     _INTCON0bits    set	16338
   891   003FC4                     _TRISCbits      set	16324
   892                           
   893                           	psect	smallconst
   894   002000                     __psmallconst:
   895                           	callstack 0
   896   002000  00                 	db	0
   897   002001                     STR_2:
   898                           
   899                           ; BSR set to: 58
   900   002001  20                 	db	32
   901   002002  4C                 	db	76	;'L'
   902   002003  55                 	db	85	;'U'
   903   002004  58                 	db	88	;'X'
   904   002005  20                 	db	32
   905   002006  20                 	db	32
   906   002007  20                 	db	32
   907   002008  20                 	db	32
   908   002009  20                 	db	32
   909   00200A  20                 	db	32
   910   00200B  20                 	db	32
   911   00200C  20                 	db	32
   912   00200D  20                 	db	32
   913   00200E  20                 	db	32
   914   00200F  20                 	db	32
   915   002010  20                 	db	32
   916   002011  20                 	db	32
   917   002012  00                 	db	0
   918   002013                     STR_3:
   919                           
   920                           ; BSR set to: 58
   921   002013  54                 	db	84	;'T'
   922   002014  68                 	db	104	;'h'
   923   002015  65                 	db	101	;'e'
   924   002016  20                 	db	32
   925   002017  49                 	db	73	;'I'
   926   002018  6E                 	db	110	;'n'
   927   002019  70                 	db	112	;'p'
   928   00201A  75                 	db	117	;'u'
   929   00201B  74                 	db	116	;'t'
   930   00201C  20                 	db	32
   931   00201D  4C                 	db	76	;'L'
   932   00201E  69                 	db	105	;'i'
   933   00201F  67                 	db	103	;'g'
   934   002020  68                 	db	104	;'h'
   935   002021  74                 	db	116	;'t'
   936   002022  3A                 	db	58	;':'
   937   002023  00                 	db	0
   938   002024                     STR_1:
   939                           
   940                           ; BSR set to: 58
   941   002024  25                 	db	37
   942   002025  2E                 	db	46
   943   002026  32                 	db	50	;'2'
   944   002027  66                 	db	102	;'f'
   945   002028  00                 	db	0
   946   002029                     STR_4:
   947                           
   948                           ; BSR set to: 58
   949   002029  69                 	db	105	;'i'
   950   00202A  6E                 	db	110	;'n'
   951   00202B  66                 	db	102	;'f'
   952   00202C  00                 	db	0
   953   00202D                     STR_7:
   954                           
   955                           ; BSR set to: 58
   956   00202D  6E                 	db	110	;'n'
   957   00202E  61                 	db	97	;'a'
   958   00202F  6E                 	db	110	;'n'
   959   002030  00                 	db	0
   960   00202D                     STR_8           equ	STR_7
   961   00202D                     STR_9           equ	STR_7
   962   002029                     STR_5           equ	STR_4
   963   002029                     STR_6           equ	STR_4
   964   002031  00                 	db	0	; dummy byte at the end
   965   002000                     __smallconst    set	__psmallconst
   966   002000                     __mediumconst   set	__psmallconst
   967   000003                     __activetblptr  equ	3
   968                           
   969                           ; #config settings
   970                           
   971                           	psect	cinit
   972   006A96                     __pcinit:
   973                           	callstack 0
   974   006A96                     start_initialization:
   975                           	callstack 0
   976   006A96                     __initialization:
   977                           	callstack 0
   978                           
   979                           ; Clear objects allocated to BANK1 (80 bytes)
   980   006A96  EE00  F100         	lfsr	0,__pbssBANK1
   981   006A9A  0E50               	movlw	80
   982   006A9C                     clear_0:
   983   006A9C  6AEE               	clrf	postinc0,c
   984   006A9E  06E8               	decf	wreg,f,c
   985   006AA0  E1FD               	bnz	clear_0
   986                           
   987                           ; Clear objects allocated to BANK0 (26 bytes)
   988   006AA2  EE00  F0A4         	lfsr	0,__pbssBANK0
   989   006AA6  0E1A               	movlw	26
   990   006AA8                     clear_1:
   991   006AA8  6AEE               	clrf	postinc0,c
   992   006AAA  06E8               	decf	wreg,f,c
   993   006AAC  E1FD               	bnz	clear_1
   994                           
   995                           ; Clear objects allocated to COMRAM (11 bytes)
   996   006AAE  EE00  F04A         	lfsr	0,__pbssCOMRAM
   997   006AB2  0E0B               	movlw	11
   998   006AB4                     clear_2:
   999   006AB4  6AEE               	clrf	postinc0,c
  1000   006AB6  06E8               	decf	wreg,f,c
  1001   006AB8  E1FD               	bnz	clear_2
  1002                           
  1003                           ;
  1004                           ; Setup IVTBASE
  1005                           ;
  1006   003FD5                     IVTBASEL        equ	16341
  1007   003FD6                     IVTBASEH        equ	16342
  1008   003FD7                     IVTBASEU        equ	16343
  1009   006ABA  0E08               	movlw	(ivt0x4008_base shr 0)& (0+255)
  1010   006ABC  6ED5               	movwf	213,c
  1011   006ABE  0E40               	movlw	(ivt0x4008_base shr (0+8))& (0+255)
  1012   006AC0  6ED6               	movwf	214,c
  1013   006AC2  0E00               	movlw	(ivt0x4008_base shr (0+16))& (0+255)
  1014   006AC4  6ED7               	movwf	215,c
  1015   006AC6                     end_of_initialization:
  1016                           	callstack 0
  1017   006AC6                     __end_of__initialization:
  1018                           	callstack 0
  1019   006AC6  0100               	movlb	0
  1020   006AC8  EFCC  F029         	goto	_main	;jump to C main() function
  1021                           
  1022                           	psect	bssCOMRAM
  1023   00004A                     __pbssCOMRAM:
  1024                           	callstack 0
  1025   00004A                     _lux_value:
  1026                           	callstack 0
  1027   00004A                     	ds	4
  1028   00004E                     _voltage:
  1029                           	callstack 0
  1030   00004E                     	ds	4
  1031   000052                     _digital:
  1032                           	callstack 0
  1033   000052                     	ds	2
  1034   000054                     _flags:
  1035                           	callstack 0
  1036   000054                     	ds	1
  1037                           
  1038                           	psect	bssBANK0
  1039   0000A4                     __pbssBANK0:
  1040                           	callstack 0
  1041   0000A4                     floorf@F521:
  1042                           	callstack 0
  1043   0000A4                     	ds	4
  1044   0000A8                     ___fpclassifyf@F465:
  1045                           	callstack 0
  1046   0000A8                     	ds	4
  1047   0000AC                     _result:
  1048                           	callstack 0
  1049   0000AC                     	ds	4
  1050   0000B0                     _width:
  1051                           	callstack 0
  1052   0000B0                     	ds	2
  1053   0000B2                     _prec:
  1054                           	callstack 0
  1055   0000B2                     	ds	2
  1056   0000B4                     _data:
  1057                           	callstack 0
  1058   0000B4                     	ds	10
  1059                           
  1060                           	psect	bssBANK1
  1061   000100                     __pbssBANK1:
  1062                           	callstack 0
  1063   000100                     _dbuf:
  1064                           	callstack 0
  1065   000100                     	ds	80
  1066                           
  1067                           	psect	cstackBANK0
  1068   000060                     __pcstackBANK0:
  1069                           	callstack 0
  1070   000060                     efgtoa@ne:
  1071                           	callstack 0
  1072                           
  1073                           ; 2 bytes @ 0x0
  1074   000060                     	ds	2
  1075   000062                     efgtoa@p:
  1076                           	callstack 0
  1077                           
  1078                           ; 2 bytes @ 0x2
  1079   000062                     	ds	2
  1080   000064                     efgtoa@t:
  1081                           	callstack 0
  1082                           
  1083                           ; 2 bytes @ 0x4
  1084   000064                     	ds	2
  1085   000066                     _efgtoa$1114:
  1086                           	callstack 0
  1087                           
  1088                           ; 2 bytes @ 0x6
  1089   000066                     	ds	2
  1090   000068                     efgtoa@pp:
  1091                           	callstack 0
  1092                           
  1093                           ; 1 bytes @ 0x8
  1094   000068                     	ds	1
  1095   000069                     efgtoa@mode:
  1096                           	callstack 0
  1097                           
  1098                           ; 1 bytes @ 0x9
  1099   000069                     	ds	1
  1100   00006A                     efgtoa@nmode:
  1101                           	callstack 0
  1102                           
  1103                           ; 1 bytes @ 0xA
  1104   00006A                     	ds	1
  1105   00006B                     efgtoa@d:
  1106                           	callstack 0
  1107                           
  1108                           ; 2 bytes @ 0xB
  1109   00006B                     	ds	2
  1110   00006D                     efgtoa@m:
  1111                           	callstack 0
  1112                           
  1113                           ; 2 bytes @ 0xD
  1114   00006D                     	ds	2
  1115   00006F                     efgtoa@e:
  1116                           	callstack 0
  1117                           
  1118                           ; 2 bytes @ 0xF
  1119   00006F                     	ds	2
  1120   000071                     efgtoa@w:
  1121                           	callstack 0
  1122                           
  1123                           ; 2 bytes @ 0x11
  1124   000071                     	ds	2
  1125   000073                     efgtoa@ou:
  1126                           	callstack 0
  1127                           
  1128                           ; 4 bytes @ 0x13
  1129   000073                     	ds	4
  1130   000077                     efgtoa@i:
  1131                           	callstack 0
  1132                           
  1133                           ; 2 bytes @ 0x17
  1134   000077                     	ds	2
  1135   000079                     efgtoa@h:
  1136                           	callstack 0
  1137                           
  1138                           ; 4 bytes @ 0x19
  1139   000079                     	ds	4
  1140   00007D                     efgtoa@l:
  1141                           	callstack 0
  1142                           
  1143                           ; 4 bytes @ 0x1D
  1144   00007D                     	ds	4
  1145   000081                     efgtoa@sign:
  1146                           	callstack 0
  1147                           
  1148                           ; 1 bytes @ 0x21
  1149   000081                     	ds	1
  1150   000082                     efgtoa@g:
  1151                           	callstack 0
  1152                           
  1153                           ; 4 bytes @ 0x22
  1154   000082                     	ds	4
  1155   000086                     efgtoa@n:
  1156                           	callstack 0
  1157                           
  1158                           ; 2 bytes @ 0x26
  1159   000086                     	ds	2
  1160   000088                     efgtoa@u:
  1161                           	callstack 0
  1162                           
  1163                           ; 4 bytes @ 0x28
  1164   000088                     	ds	4
  1165   00008C                     vfpfcnvrt@fp:
  1166                           	callstack 0
  1167                           
  1168                           ; 1 bytes @ 0x2C
  1169   00008C                     	ds	1
  1170   00008D                     vfpfcnvrt@fmt:
  1171                           	callstack 0
  1172                           
  1173                           ; 1 bytes @ 0x2D
  1174   00008D                     	ds	1
  1175   00008E                     vfpfcnvrt@ap:
  1176                           	callstack 0
  1177                           
  1178                           ; 1 bytes @ 0x2E
  1179   00008E                     	ds	1
  1180   00008F                     ?_vfprintf:
  1181                           	callstack 0
  1182   00008F                     vfprintf@fp:
  1183                           	callstack 0
  1184                           
  1185                           ; 1 bytes @ 0x2F
  1186   00008F                     	ds	1
  1187   000090                     vfprintf@fmt:
  1188                           	callstack 0
  1189                           
  1190                           ; 1 bytes @ 0x30
  1191   000090                     	ds	1
  1192   000091                     vfprintf@ap:
  1193                           	callstack 0
  1194                           
  1195                           ; 1 bytes @ 0x31
  1196   000091                     	ds	1
  1197   000092                     ?_sprintf:
  1198                           	callstack 0
  1199   000092                     sprintf@s:
  1200                           	callstack 0
  1201                           
  1202                           ; 1 bytes @ 0x32
  1203   000092                     	ds	1
  1204   000093                     sprintf@fmt:
  1205                           	callstack 0
  1206                           
  1207                           ; 1 bytes @ 0x33
  1208   000093                     	ds	5
  1209   000098                     sprintf@ap:
  1210                           	callstack 0
  1211                           
  1212                           ; 1 bytes @ 0x38
  1213   000098                     	ds	1
  1214   000099                     sprintf@f:
  1215                           	callstack 0
  1216                           
  1217                           ; 11 bytes @ 0x39
  1218   000099                     	ds	11
  1219                           
  1220                           	psect	cstackCOMRAM
  1221   000001                     __pcstackCOMRAM:
  1222                           	callstack 0
  1223   000001                     ??_IOC_ISR:
  1224                           
  1225                           ; 1 bytes @ 0x0
  1226   000001                     	ds	2
  1227   000003                     IOC_ISR@k:
  1228                           	callstack 0
  1229                           
  1230                           ; 2 bytes @ 0x2
  1231   000003                     	ds	2
  1232   000005                     ?___fpclassifyf:
  1233                           	callstack 0
  1234   000005                     ?_read_prec_or_width:
  1235                           	callstack 0
  1236   000005                     ?___fladd:
  1237                           	callstack 0
  1238   000005                     ?___fldiv:
  1239                           	callstack 0
  1240   000005                     ?_labs:
  1241                           	callstack 0
  1242   000005                     ?___flneg:
  1243                           	callstack 0
  1244   000005                     ?___fltol:
  1245                           	callstack 0
  1246   000005                     ?___xxtofl:
  1247                           	callstack 0
  1248   000005                     read_prec_or_width@fmt:
  1249                           	callstack 0
  1250   000005                     strcat@dest:
  1251                           	callstack 0
  1252   000005                     MSdelay@val:
  1253                           	callstack 0
  1254   000005                     memcpy@d1:
  1255                           	callstack 0
  1256   000005                     fputc@c:
  1257                           	callstack 0
  1258   000005                     strcpy@dest:
  1259                           	callstack 0
  1260   000005                     ___fleq@ff1:
  1261                           	callstack 0
  1262   000005                     ___flneg@f1:
  1263                           	callstack 0
  1264   000005                     ___fltol@f1:
  1265                           	callstack 0
  1266   000005                     ___fladd@b:
  1267                           	callstack 0
  1268   000005                     ___fldiv@b:
  1269                           	callstack 0
  1270   000005                     ___xxtofl@val:
  1271                           	callstack 0
  1272   000005                     ___fpclassifyf@x:
  1273                           	callstack 0
  1274   000005                     labs@a:
  1275                           	callstack 0
  1276   000005                     
  1277                           ; 1 bytes @ 0x4
  1278   000005                     	ds	1
  1279   000006                     read_prec_or_width@ap:
  1280                           	callstack 0
  1281   000006                     strcat@src:
  1282                           	callstack 0
  1283                           
  1284                           ; 1 bytes @ 0x5
  1285   000006                     	ds	1
  1286   000007                     fputc@fp:
  1287                           	callstack 0
  1288   000007                     strcpy@src:
  1289                           	callstack 0
  1290   000007                     MSdelay@i:
  1291                           	callstack 0
  1292   000007                     memcpy@s1:
  1293                           	callstack 0
  1294   000007                     strcat@i:
  1295                           	callstack 0
  1296   000007                     ??_read_prec_or_width:
  1297                           
  1298                           ; 1 bytes @ 0x6
  1299   000007                     	ds	1
  1300   000008                     ??_fputc:
  1301   000008                     ??_strcpy:
  1302                           
  1303                           ; 1 bytes @ 0x7
  1304   000008                     	ds	1
  1305   000009                     read_prec_or_width@c:
  1306                           	callstack 0
  1307   000009                     MSdelay@j:
  1308                           	callstack 0
  1309   000009                     memcpy@n:
  1310                           	callstack 0
  1311   000009                     strcpy@d:
  1312                           	callstack 0
  1313   000009                     ___fleq@ff2:
  1314                           	callstack 0
  1315   000009                     ___fladd@a:
  1316                           	callstack 0
  1317   000009                     ___fldiv@a:
  1318                           	callstack 0
  1319   000009                     ??___fpclassifyf:
  1320   000009                     ??_labs:
  1321   000009                     ??___fltol:
  1322   000009                     ??___xxtofl:
  1323                           
  1324                           ; 1 bytes @ 0x8
  1325   000009                     	ds	1
  1326   00000A                     read_prec_or_width@n:
  1327                           	callstack 0
  1328                           
  1329                           ; 2 bytes @ 0x9
  1330   00000A                     	ds	1
  1331   00000B                     LCD_Command@cmd:
  1332                           	callstack 0
  1333   00000B                     LCD_Char@dat:
  1334                           	callstack 0
  1335   00000B                     memcpy@tmp:
  1336                           	callstack 0
  1337   00000B                     
  1338                           ; 1 bytes @ 0xA
  1339   00000B                     	ds	1
  1340   00000C                     LCD_String@msg:
  1341                           	callstack 0
  1342   00000C                     memcpy@d:
  1343                           	callstack 0
  1344   00000C                     
  1345                           ; 1 bytes @ 0xB
  1346   00000C                     	ds	1
  1347   00000D                     ___fltol@sign1:
  1348                           	callstack 0
  1349   00000D                     ___xxtofl@sign:
  1350                           	callstack 0
  1351   00000D                     ___fpclassifyf@e:
  1352                           	callstack 0
  1353   00000D                     fputs@s:
  1354                           	callstack 0
  1355   00000D                     ??___fladd:
  1356   00000D                     ??___fldiv:
  1357   00000D                     ??___fleq:
  1358                           
  1359                           ; 1 bytes @ 0xC
  1360   00000D                     	ds	1
  1361   00000E                     LCD_String_xy@pos:
  1362                           	callstack 0
  1363   00000E                     ___fltol@exp1:
  1364                           	callstack 0
  1365   00000E                     ___xxtofl@exp:
  1366                           	callstack 0
  1367   00000E                     memcpy@s:
  1368                           	callstack 0
  1369   00000E                     
  1370                           ; 1 bytes @ 0xD
  1371   00000E                     	ds	1
  1372   00000F                     fputs@fp:
  1373                           	callstack 0
  1374   00000F                     LCD_String_xy@msg:
  1375                           	callstack 0
  1376   00000F                     ___xxtofl@arg:
  1377                           	callstack 0
  1378   00000F                     ___fpclassifyf@u:
  1379                           	callstack 0
  1380                           
  1381                           ; 4 bytes @ 0xE
  1382   00000F                     	ds	1
  1383   000010                     fputs@c:
  1384                           	callstack 0
  1385   000010                     
  1386                           ; 1 bytes @ 0xF
  1387   000010                     	ds	1
  1388   000011                     LCD_String_xy@row:
  1389                           	callstack 0
  1390   000011                     ___fladd@signs:
  1391                           	callstack 0
  1392   000011                     fputs@i:
  1393                           	callstack 0
  1394   000011                     ___fldiv@rem:
  1395                           	callstack 0
  1396   000011                     
  1397                           ; 1 bytes @ 0x10
  1398   000011                     	ds	1
  1399   000012                     LCD_String_xy@location:
  1400                           	callstack 0
  1401   000012                     ___fladd@aexp:
  1402                           	callstack 0
  1403                           
  1404                           ; 1 bytes @ 0x11
  1405   000012                     	ds	1
  1406   000013                     ?___flmul:
  1407                           	callstack 0
  1408   000013                     ___fladd@bexp:
  1409                           	callstack 0
  1410   000013                     pad@fp:
  1411                           	callstack 0
  1412   000013                     ___flmul@b:
  1413                           	callstack 0
  1414                           
  1415                           ; 4 bytes @ 0x12
  1416   000013                     	ds	1
  1417   000014                     ___fladd@grs:
  1418                           	callstack 0
  1419   000014                     pad@buf:
  1420                           	callstack 0
  1421                           
  1422                           ; 2 bytes @ 0x13
  1423   000014                     	ds	1
  1424   000015                     ___fldiv@sign:
  1425                           	callstack 0
  1426                           
  1427                           ; 1 bytes @ 0x14
  1428   000015                     	ds	1
  1429   000016                     ___fldiv@new_exp:
  1430                           	callstack 0
  1431   000016                     pad@p:
  1432                           	callstack 0
  1433                           
  1434                           ; 2 bytes @ 0x15
  1435   000016                     	ds	1
  1436   000017                     ___flmul@a:
  1437                           	callstack 0
  1438                           
  1439                           ; 4 bytes @ 0x16
  1440   000017                     	ds	1
  1441   000018                     ___fldiv@grs:
  1442                           	callstack 0
  1443   000018                     ??_pad:
  1444                           
  1445                           ; 1 bytes @ 0x17
  1446   000018                     	ds	1
  1447   000019                     pad@i:
  1448                           	callstack 0
  1449                           
  1450                           ; 2 bytes @ 0x18
  1451   000019                     	ds	2
  1452   00001B                     ??___flmul:
  1453                           
  1454                           ; 1 bytes @ 0x1A
  1455   00001B                     	ds	1
  1456   00001C                     ___fldiv@bexp:
  1457                           	callstack 0
  1458                           
  1459                           ; 1 bytes @ 0x1B
  1460   00001C                     	ds	1
  1461   00001D                     ___fldiv@aexp:
  1462                           	callstack 0
  1463                           
  1464                           ; 1 bytes @ 0x1C
  1465   00001D                     	ds	1
  1466   00001E                     ?_floorf:
  1467                           	callstack 0
  1468   00001E                     floorf@x:
  1469                           	callstack 0
  1470                           
  1471                           ; 4 bytes @ 0x1D
  1472   00001E                     	ds	1
  1473   00001F                     ___flmul@sign:
  1474                           	callstack 0
  1475                           
  1476                           ; 1 bytes @ 0x1E
  1477   00001F                     	ds	1
  1478   000020                     ___flmul@aexp:
  1479                           	callstack 0
  1480                           
  1481                           ; 1 bytes @ 0x1F
  1482   000020                     	ds	1
  1483   000021                     ___flmul@grs:
  1484                           	callstack 0
  1485                           
  1486                           ; 4 bytes @ 0x20
  1487   000021                     	ds	1
  1488   000022                     ??_floorf:
  1489                           
  1490                           ; 1 bytes @ 0x21
  1491   000022                     	ds	3
  1492   000025                     ___flmul@bexp:
  1493                           	callstack 0
  1494                           
  1495                           ; 1 bytes @ 0x24
  1496   000025                     	ds	1
  1497   000026                     ___flmul@prod:
  1498                           	callstack 0
  1499                           
  1500                           ; 4 bytes @ 0x25
  1501   000026                     	ds	2
  1502   000028                     floorf@m:
  1503                           	callstack 0
  1504                           
  1505                           ; 4 bytes @ 0x27
  1506   000028                     	ds	2
  1507   00002A                     ___flmul@temp:
  1508                           	callstack 0
  1509                           
  1510                           ; 2 bytes @ 0x29
  1511   00002A                     	ds	2
  1512   00002C                     ?___flsub:
  1513                           	callstack 0
  1514   00002C                     floorf@e:
  1515                           	callstack 0
  1516   00002C                     ___flge@ff1:
  1517                           	callstack 0
  1518   00002C                     ___flsub@b:
  1519                           	callstack 0
  1520                           
  1521                           ; 4 bytes @ 0x2B
  1522   00002C                     	ds	2
  1523   00002E                     floorf@u:
  1524                           	callstack 0
  1525                           
  1526                           ; 4 bytes @ 0x2D
  1527   00002E                     	ds	2
  1528   000030                     ___flge@ff2:
  1529                           	callstack 0
  1530   000030                     ___flsub@a:
  1531                           	callstack 0
  1532                           
  1533                           ; 4 bytes @ 0x2F
  1534   000030                     	ds	4
  1535   000034                     ??___flge:
  1536                           
  1537                           ; 1 bytes @ 0x33
  1538   000034                     	ds	4
  1539   000038                     efgtoa@fp:
  1540                           	callstack 0
  1541                           
  1542                           ; 1 bytes @ 0x37
  1543   000038                     	ds	1
  1544   000039                     efgtoa@f:
  1545                           	callstack 0
  1546                           
  1547                           ; 4 bytes @ 0x38
  1548   000039                     	ds	4
  1549   00003D                     efgtoa@c:
  1550                           	callstack 0
  1551                           
  1552                           ; 1 bytes @ 0x3C
  1553   00003D                     	ds	1
  1554   00003E                     ??_efgtoa:
  1555                           
  1556                           ; 1 bytes @ 0x3D
  1557   00003E                     	ds	2
  1558   000040                     ??_vfpfcnvrt:
  1559                           
  1560                           ; 1 bytes @ 0x3F
  1561   000040                     	ds	1
  1562   000041                     vfpfcnvrt@convarg:
  1563                           	callstack 0
  1564                           
  1565                           ; 4 bytes @ 0x40
  1566   000041                     	ds	4
  1567   000045                     vfpfcnvrt@c:
  1568                           	callstack 0
  1569                           
  1570                           ; 1 bytes @ 0x44
  1571   000045                     	ds	1
  1572   000046                     vfpfcnvrt@cp:
  1573                           	callstack 0
  1574                           
  1575                           ; 1 bytes @ 0x45
  1576   000046                     	ds	1
  1577   000047                     vfprintf@cfmt:
  1578                           	callstack 0
  1579   000047                     
  1580                           ; 1 bytes @ 0x46
  1581   000047                     	ds	1
  1582   000048                     ??_main:
  1583                           
  1584                           ; 1 bytes @ 0x47
  1585   000048                     	ds	2
  1586                           
  1587 ;;
  1588 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1589 ;;
  1590 ;; *************** function _main *****************
  1591 ;; Defined at:
  1592 ;;		line 19 in file "Adccode.c"
  1593 ;; Parameters:    Size  Location     Type
  1594 ;;		None
  1595 ;; Auto vars:     Size  Location     Type
  1596 ;;		None
  1597 ;; Return value:  Size  Location     Type
  1598 ;;                  1    wreg      void 
  1599 ;; Registers used:
  1600 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1601 ;; Tracked objects:
  1602 ;;		On entry : 0/0
  1603 ;;		On exit  : 0/0
  1604 ;;		Unchanged: 0/0
  1605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1606 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1607 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1608 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1609 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1610 ;;Total ram usage:        2 bytes
  1611 ;; Hardware stack levels required when called: 9
  1612 ;; This function calls:
  1613 ;;		_ADC_Init
  1614 ;;		_INTERRUPT_Initialize
  1615 ;;		_LCD_Init
  1616 ;;		_LCD_String_xy
  1617 ;;		_MSdelay
  1618 ;;		___flge
  1619 ;;		___flmul
  1620 ;;		___xxtofl
  1621 ;;		_sprintf
  1622 ;;		_strcat
  1623 ;; This function is called by:
  1624 ;;		Startup code after reset
  1625 ;; This function uses a non-reentrant model
  1626 ;;
  1627                           
  1628                           	psect	text0
  1629   005398                     __ptext0:
  1630                           	callstack 0
  1631   005398                     _main:
  1632                           	callstack 22
  1633   005398                     
  1634                           ;Adccode.c: 21:   INTERRUPT_Initialize();
  1635   005398  ECAD  F035         	call	_INTERRUPT_Initialize	;wreg free
  1636   00539C                     
  1637                           ;Adccode.c: 22:     LCD_Init();
  1638   00539C  EC66  F035         	call	_LCD_Init	;wreg free
  1639   0053A0                     
  1640                           ;Adccode.c: 23:     ADC_Init();
  1641   0053A0  EC7B  F035         	call	_ADC_Init	;wreg free
  1642   0053A4                     l4370:
  1643                           
  1644                           ;Adccode.c: 25:         ADCON0bits.GO = 1;
  1645   0053A4  013E               	movlb	62	; () banked
  1646   0053A6  81F8               	bsf	248,0,b	;volatile
  1647   0053A8                     l125:
  1648                           
  1649                           ; BSR set to: 62
  1650   0053A8  B1F8               	btfsc	248,0,b	;volatile
  1651   0053AA  EFD9  F029         	goto	u5431
  1652   0053AE  EFDB  F029         	goto	u5430
  1653   0053B2                     u5431:
  1654   0053B2  EFD4  F029         	goto	l125
  1655   0053B6                     u5430:
  1656   0053B6                     
  1657                           ; BSR set to: 62
  1658                           ;Adccode.c: 27:         digital = (ADRESH*256) | (ADRESL);
  1659   0053B6  51EF               	movf	239,w,b	;volatile
  1660   0053B8  006F FBC0  F048    	movff	16112,??_main	;volatile
  1661   0053BE  6A49               	clrf	(??_main+1)^0,c
  1662   0053C0  C048  F049         	movff	??_main,??_main+1
  1663   0053C4  6A48               	clrf	??_main^0,c
  1664   0053C6  1048               	iorwf	??_main^0,w,c
  1665   0053C8  6E52               	movwf	_digital^0,c
  1666   0053CA  5049               	movf	(??_main+1)^0,w,c
  1667   0053CC  6E53               	movwf	(_digital+1)^0,c
  1668   0053CE                     
  1669                           ; BSR set to: 62
  1670                           ;Adccode.c: 28:         voltage= digital*((float)3.3/(float)(4096));
  1671   0053CE  C052  F005         	movff	_digital,___xxtofl@val
  1672   0053D2  C053  F006         	movff	_digital+1,___xxtofl@val+1
  1673   0053D6  0E00               	movlw	0
  1674   0053D8  BE06               	btfsc	(___xxtofl@val+1)^0,7,c
  1675   0053DA  0EFF               	movlw	-1
  1676   0053DC  6E07               	movwf	(___xxtofl@val+2)^0,c
  1677   0053DE  6E08               	movwf	(___xxtofl@val+3)^0,c
  1678   0053E0  0E01               	movlw	1
  1679   0053E2  ECB2  F02F         	call	___xxtofl
  1680   0053E6  C005  F013         	movff	?___xxtofl,___flmul@b
  1681   0053EA  C006  F014         	movff	?___xxtofl+1,___flmul@b+1
  1682   0053EE  C007  F015         	movff	?___xxtofl+2,___flmul@b+2
  1683   0053F2  C008  F016         	movff	?___xxtofl+3,___flmul@b+3
  1684   0053F6  0E33               	movlw	51
  1685   0053F8  6E17               	movwf	___flmul@a^0,c
  1686   0053FA  0E33               	movlw	51
  1687   0053FC  6E18               	movwf	(___flmul@a+1)^0,c
  1688   0053FE  0E53               	movlw	83
  1689   005400  6E19               	movwf	(___flmul@a+2)^0,c
  1690   005402  0E3A               	movlw	58
  1691   005404  6E1A               	movwf	(___flmul@a+3)^0,c
  1692   005406  ECA7  F027         	call	___flmul	;wreg free
  1693   00540A  C013  F04E         	movff	?___flmul,_voltage
  1694   00540E  C014  F04F         	movff	?___flmul+1,_voltage+1
  1695   005412  C015  F050         	movff	?___flmul+2,_voltage+2
  1696   005416  C016  F051         	movff	?___flmul+3,_voltage+3
  1697   00541A                     
  1698                           ;Adccode.c: 30:         if (voltage<1.0){lux_value=voltage*10; }
  1699   00541A  C04E  F02C         	movff	_voltage,___flge@ff1
  1700   00541E  C04F  F02D         	movff	_voltage+1,___flge@ff1+1
  1701   005422  C050  F02E         	movff	_voltage+2,___flge@ff1+2
  1702   005426  C051  F02F         	movff	_voltage+3,___flge@ff1+3
  1703   00542A  0E00               	movlw	0
  1704   00542C  6E30               	movwf	___flge@ff2^0,c
  1705   00542E  0E00               	movlw	0
  1706   005430  6E31               	movwf	(___flge@ff2+1)^0,c
  1707   005432  0E80               	movlw	128
  1708   005434  6E32               	movwf	(___flge@ff2+2)^0,c
  1709   005436  0E3F               	movlw	63
  1710   005438  6E33               	movwf	(___flge@ff2+3)^0,c
  1711   00543A  EC0F  F031         	call	___flge	;wreg free
  1712   00543E  B0D8               	btfsc	status,0,c
  1713   005440  EF24  F02A         	goto	u5441
  1714   005444  EF26  F02A         	goto	u5440
  1715   005448                     u5441:
  1716   005448  EF40  F02A         	goto	l4380
  1717   00544C                     u5440:
  1718   00544C  C04E  F013         	movff	_voltage,___flmul@b
  1719   005450  C04F  F014         	movff	_voltage+1,___flmul@b+1
  1720   005454  C050  F015         	movff	_voltage+2,___flmul@b+2
  1721   005458  C051  F016         	movff	_voltage+3,___flmul@b+3
  1722   00545C  0E00               	movlw	0
  1723   00545E  6E17               	movwf	___flmul@a^0,c
  1724   005460  0E00               	movlw	0
  1725   005462  6E18               	movwf	(___flmul@a+1)^0,c
  1726   005464  0E20               	movlw	32
  1727   005466  6E19               	movwf	(___flmul@a+2)^0,c
  1728   005468  0E41               	movlw	65
  1729   00546A  6E1A               	movwf	(___flmul@a+3)^0,c
  1730   00546C  ECA7  F027         	call	___flmul	;wreg free
  1731   005470  C013  F04A         	movff	?___flmul,_lux_value
  1732   005474  C014  F04B         	movff	?___flmul+1,_lux_value+1
  1733   005478  C015  F04C         	movff	?___flmul+2,_lux_value+2
  1734   00547C  C016  F04D         	movff	?___flmul+3,_lux_value+3
  1735   005480                     l4380:
  1736                           
  1737                           ;Adccode.c: 31:         if (voltage>1.0){lux_value=voltage*20;}
  1738   005480  0E00               	movlw	0
  1739   005482  6E2C               	movwf	___flge@ff1^0,c
  1740   005484  0E00               	movlw	0
  1741   005486  6E2D               	movwf	(___flge@ff1+1)^0,c
  1742   005488  0E80               	movlw	128
  1743   00548A  6E2E               	movwf	(___flge@ff1+2)^0,c
  1744   00548C  0E3F               	movlw	63
  1745   00548E  6E2F               	movwf	(___flge@ff1+3)^0,c
  1746   005490  C04E  F030         	movff	_voltage,___flge@ff2
  1747   005494  C04F  F031         	movff	_voltage+1,___flge@ff2+1
  1748   005498  C050  F032         	movff	_voltage+2,___flge@ff2+2
  1749   00549C  C051  F033         	movff	_voltage+3,___flge@ff2+3
  1750   0054A0  EC0F  F031         	call	___flge	;wreg free
  1751   0054A4  B0D8               	btfsc	status,0,c
  1752   0054A6  EF57  F02A         	goto	u5451
  1753   0054AA  EF59  F02A         	goto	u5450
  1754   0054AE                     u5451:
  1755   0054AE  EF73  F02A         	goto	l4384
  1756   0054B2                     u5450:
  1757   0054B2  C04E  F013         	movff	_voltage,___flmul@b
  1758   0054B6  C04F  F014         	movff	_voltage+1,___flmul@b+1
  1759   0054BA  C050  F015         	movff	_voltage+2,___flmul@b+2
  1760   0054BE  C051  F016         	movff	_voltage+3,___flmul@b+3
  1761   0054C2  0E00               	movlw	0
  1762   0054C4  6E17               	movwf	___flmul@a^0,c
  1763   0054C6  0E00               	movlw	0
  1764   0054C8  6E18               	movwf	(___flmul@a+1)^0,c
  1765   0054CA  0EA0               	movlw	160
  1766   0054CC  6E19               	movwf	(___flmul@a+2)^0,c
  1767   0054CE  0E41               	movlw	65
  1768   0054D0  6E1A               	movwf	(___flmul@a+3)^0,c
  1769   0054D2  ECA7  F027         	call	___flmul	;wreg free
  1770   0054D6  C013  F04A         	movff	?___flmul,_lux_value
  1771   0054DA  C014  F04B         	movff	?___flmul+1,_lux_value+1
  1772   0054DE  C015  F04C         	movff	?___flmul+2,_lux_value+2
  1773   0054E2  C016  F04D         	movff	?___flmul+3,_lux_value+3
  1774   0054E6                     l4384:
  1775                           
  1776                           ;Adccode.c: 32:         if (voltage>1.5){lux_value=voltage*30;}
  1777   0054E6  0E00               	movlw	0
  1778   0054E8  6E2C               	movwf	___flge@ff1^0,c
  1779   0054EA  0E00               	movlw	0
  1780   0054EC  6E2D               	movwf	(___flge@ff1+1)^0,c
  1781   0054EE  0EC0               	movlw	192
  1782   0054F0  6E2E               	movwf	(___flge@ff1+2)^0,c
  1783   0054F2  0E3F               	movlw	63
  1784   0054F4  6E2F               	movwf	(___flge@ff1+3)^0,c
  1785   0054F6  C04E  F030         	movff	_voltage,___flge@ff2
  1786   0054FA  C04F  F031         	movff	_voltage+1,___flge@ff2+1
  1787   0054FE  C050  F032         	movff	_voltage+2,___flge@ff2+2
  1788   005502  C051  F033         	movff	_voltage+3,___flge@ff2+3
  1789   005506  EC0F  F031         	call	___flge	;wreg free
  1790   00550A  B0D8               	btfsc	status,0,c
  1791   00550C  EF8A  F02A         	goto	u5461
  1792   005510  EF8C  F02A         	goto	u5460
  1793   005514                     u5461:
  1794   005514  EFA6  F02A         	goto	l4388
  1795   005518                     u5460:
  1796   005518  C04E  F013         	movff	_voltage,___flmul@b
  1797   00551C  C04F  F014         	movff	_voltage+1,___flmul@b+1
  1798   005520  C050  F015         	movff	_voltage+2,___flmul@b+2
  1799   005524  C051  F016         	movff	_voltage+3,___flmul@b+3
  1800   005528  0E00               	movlw	0
  1801   00552A  6E17               	movwf	___flmul@a^0,c
  1802   00552C  0E00               	movlw	0
  1803   00552E  6E18               	movwf	(___flmul@a+1)^0,c
  1804   005530  0EF0               	movlw	240
  1805   005532  6E19               	movwf	(___flmul@a+2)^0,c
  1806   005534  0E41               	movlw	65
  1807   005536  6E1A               	movwf	(___flmul@a+3)^0,c
  1808   005538  ECA7  F027         	call	___flmul	;wreg free
  1809   00553C  C013  F04A         	movff	?___flmul,_lux_value
  1810   005540  C014  F04B         	movff	?___flmul+1,_lux_value+1
  1811   005544  C015  F04C         	movff	?___flmul+2,_lux_value+2
  1812   005548  C016  F04D         	movff	?___flmul+3,_lux_value+3
  1813   00554C                     l4388:
  1814                           
  1815                           ;Adccode.c: 33:         if (voltage>1.75){lux_value=voltage*40;}
  1816   00554C  0E00               	movlw	0
  1817   00554E  6E2C               	movwf	___flge@ff1^0,c
  1818   005550  0E00               	movlw	0
  1819   005552  6E2D               	movwf	(___flge@ff1+1)^0,c
  1820   005554  0EE0               	movlw	224
  1821   005556  6E2E               	movwf	(___flge@ff1+2)^0,c
  1822   005558  0E3F               	movlw	63
  1823   00555A  6E2F               	movwf	(___flge@ff1+3)^0,c
  1824   00555C  C04E  F030         	movff	_voltage,___flge@ff2
  1825   005560  C04F  F031         	movff	_voltage+1,___flge@ff2+1
  1826   005564  C050  F032         	movff	_voltage+2,___flge@ff2+2
  1827   005568  C051  F033         	movff	_voltage+3,___flge@ff2+3
  1828   00556C  EC0F  F031         	call	___flge	;wreg free
  1829   005570  B0D8               	btfsc	status,0,c
  1830   005572  EFBD  F02A         	goto	u5471
  1831   005576  EFBF  F02A         	goto	u5470
  1832   00557A                     u5471:
  1833   00557A  EFD9  F02A         	goto	l4392
  1834   00557E                     u5470:
  1835   00557E  C04E  F013         	movff	_voltage,___flmul@b
  1836   005582  C04F  F014         	movff	_voltage+1,___flmul@b+1
  1837   005586  C050  F015         	movff	_voltage+2,___flmul@b+2
  1838   00558A  C051  F016         	movff	_voltage+3,___flmul@b+3
  1839   00558E  0E00               	movlw	0
  1840   005590  6E17               	movwf	___flmul@a^0,c
  1841   005592  0E00               	movlw	0
  1842   005594  6E18               	movwf	(___flmul@a+1)^0,c
  1843   005596  0E20               	movlw	32
  1844   005598  6E19               	movwf	(___flmul@a+2)^0,c
  1845   00559A  0E42               	movlw	66
  1846   00559C  6E1A               	movwf	(___flmul@a+3)^0,c
  1847   00559E  ECA7  F027         	call	___flmul	;wreg free
  1848   0055A2  C013  F04A         	movff	?___flmul,_lux_value
  1849   0055A6  C014  F04B         	movff	?___flmul+1,_lux_value+1
  1850   0055AA  C015  F04C         	movff	?___flmul+2,_lux_value+2
  1851   0055AE  C016  F04D         	movff	?___flmul+3,_lux_value+3
  1852   0055B2                     l4392:
  1853                           
  1854                           ;Adccode.c: 34:         if (voltage>2){lux_value=voltage*80;}
  1855   0055B2  0E00               	movlw	0
  1856   0055B4  6E2C               	movwf	___flge@ff1^0,c
  1857   0055B6  0E00               	movlw	0
  1858   0055B8  6E2D               	movwf	(___flge@ff1+1)^0,c
  1859   0055BA  0E00               	movlw	0
  1860   0055BC  6E2E               	movwf	(___flge@ff1+2)^0,c
  1861   0055BE  0E40               	movlw	64
  1862   0055C0  6E2F               	movwf	(___flge@ff1+3)^0,c
  1863   0055C2  C04E  F030         	movff	_voltage,___flge@ff2
  1864   0055C6  C04F  F031         	movff	_voltage+1,___flge@ff2+1
  1865   0055CA  C050  F032         	movff	_voltage+2,___flge@ff2+2
  1866   0055CE  C051  F033         	movff	_voltage+3,___flge@ff2+3
  1867   0055D2  EC0F  F031         	call	___flge	;wreg free
  1868   0055D6  B0D8               	btfsc	status,0,c
  1869   0055D8  EFF0  F02A         	goto	u5481
  1870   0055DC  EFF2  F02A         	goto	u5480
  1871   0055E0                     u5481:
  1872   0055E0  EF0C  F02B         	goto	l4396
  1873   0055E4                     u5480:
  1874   0055E4  C04E  F013         	movff	_voltage,___flmul@b
  1875   0055E8  C04F  F014         	movff	_voltage+1,___flmul@b+1
  1876   0055EC  C050  F015         	movff	_voltage+2,___flmul@b+2
  1877   0055F0  C051  F016         	movff	_voltage+3,___flmul@b+3
  1878   0055F4  0E00               	movlw	0
  1879   0055F6  6E17               	movwf	___flmul@a^0,c
  1880   0055F8  0E00               	movlw	0
  1881   0055FA  6E18               	movwf	(___flmul@a+1)^0,c
  1882   0055FC  0EA0               	movlw	160
  1883   0055FE  6E19               	movwf	(___flmul@a+2)^0,c
  1884   005600  0E42               	movlw	66
  1885   005602  6E1A               	movwf	(___flmul@a+3)^0,c
  1886   005604  ECA7  F027         	call	___flmul	;wreg free
  1887   005608  C013  F04A         	movff	?___flmul,_lux_value
  1888   00560C  C014  F04B         	movff	?___flmul+1,_lux_value+1
  1889   005610  C015  F04C         	movff	?___flmul+2,_lux_value+2
  1890   005614  C016  F04D         	movff	?___flmul+3,_lux_value+3
  1891   005618                     l4396:
  1892                           
  1893                           ;Adccode.c: 35:         if (voltage>2.5){lux_value=voltage*150;}
  1894   005618  0E00               	movlw	0
  1895   00561A  6E2C               	movwf	___flge@ff1^0,c
  1896   00561C  0E00               	movlw	0
  1897   00561E  6E2D               	movwf	(___flge@ff1+1)^0,c
  1898   005620  0E20               	movlw	32
  1899   005622  6E2E               	movwf	(___flge@ff1+2)^0,c
  1900   005624  0E40               	movlw	64
  1901   005626  6E2F               	movwf	(___flge@ff1+3)^0,c
  1902   005628  C04E  F030         	movff	_voltage,___flge@ff2
  1903   00562C  C04F  F031         	movff	_voltage+1,___flge@ff2+1
  1904   005630  C050  F032         	movff	_voltage+2,___flge@ff2+2
  1905   005634  C051  F033         	movff	_voltage+3,___flge@ff2+3
  1906   005638  EC0F  F031         	call	___flge	;wreg free
  1907   00563C  B0D8               	btfsc	status,0,c
  1908   00563E  EF23  F02B         	goto	u5491
  1909   005642  EF25  F02B         	goto	u5490
  1910   005646                     u5491:
  1911   005646  EF3F  F02B         	goto	l4400
  1912   00564A                     u5490:
  1913   00564A  C04E  F013         	movff	_voltage,___flmul@b
  1914   00564E  C04F  F014         	movff	_voltage+1,___flmul@b+1
  1915   005652  C050  F015         	movff	_voltage+2,___flmul@b+2
  1916   005656  C051  F016         	movff	_voltage+3,___flmul@b+3
  1917   00565A  0E00               	movlw	0
  1918   00565C  6E17               	movwf	___flmul@a^0,c
  1919   00565E  0E00               	movlw	0
  1920   005660  6E18               	movwf	(___flmul@a+1)^0,c
  1921   005662  0E16               	movlw	22
  1922   005664  6E19               	movwf	(___flmul@a+2)^0,c
  1923   005666  0E43               	movlw	67
  1924   005668  6E1A               	movwf	(___flmul@a+3)^0,c
  1925   00566A  ECA7  F027         	call	___flmul	;wreg free
  1926   00566E  C013  F04A         	movff	?___flmul,_lux_value
  1927   005672  C014  F04B         	movff	?___flmul+1,_lux_value+1
  1928   005676  C015  F04C         	movff	?___flmul+2,_lux_value+2
  1929   00567A  C016  F04D         	movff	?___flmul+3,_lux_value+3
  1930   00567E                     l4400:
  1931                           
  1932                           ;Adccode.c: 36:         if (voltage>2.75){lux_value=voltage*200;}
  1933   00567E  0E00               	movlw	0
  1934   005680  6E2C               	movwf	___flge@ff1^0,c
  1935   005682  0E00               	movlw	0
  1936   005684  6E2D               	movwf	(___flge@ff1+1)^0,c
  1937   005686  0E30               	movlw	48
  1938   005688  6E2E               	movwf	(___flge@ff1+2)^0,c
  1939   00568A  0E40               	movlw	64
  1940   00568C  6E2F               	movwf	(___flge@ff1+3)^0,c
  1941   00568E  C04E  F030         	movff	_voltage,___flge@ff2
  1942   005692  C04F  F031         	movff	_voltage+1,___flge@ff2+1
  1943   005696  C050  F032         	movff	_voltage+2,___flge@ff2+2
  1944   00569A  C051  F033         	movff	_voltage+3,___flge@ff2+3
  1945   00569E  EC0F  F031         	call	___flge	;wreg free
  1946   0056A2  B0D8               	btfsc	status,0,c
  1947   0056A4  EF56  F02B         	goto	u5501
  1948   0056A8  EF58  F02B         	goto	u5500
  1949   0056AC                     u5501:
  1950   0056AC  EF72  F02B         	goto	l4404
  1951   0056B0                     u5500:
  1952   0056B0  C04E  F013         	movff	_voltage,___flmul@b
  1953   0056B4  C04F  F014         	movff	_voltage+1,___flmul@b+1
  1954   0056B8  C050  F015         	movff	_voltage+2,___flmul@b+2
  1955   0056BC  C051  F016         	movff	_voltage+3,___flmul@b+3
  1956   0056C0  0E00               	movlw	0
  1957   0056C2  6E17               	movwf	___flmul@a^0,c
  1958   0056C4  0E00               	movlw	0
  1959   0056C6  6E18               	movwf	(___flmul@a+1)^0,c
  1960   0056C8  0E48               	movlw	72
  1961   0056CA  6E19               	movwf	(___flmul@a+2)^0,c
  1962   0056CC  0E43               	movlw	67
  1963   0056CE  6E1A               	movwf	(___flmul@a+3)^0,c
  1964   0056D0  ECA7  F027         	call	___flmul	;wreg free
  1965   0056D4  C013  F04A         	movff	?___flmul,_lux_value
  1966   0056D8  C014  F04B         	movff	?___flmul+1,_lux_value+1
  1967   0056DC  C015  F04C         	movff	?___flmul+2,_lux_value+2
  1968   0056E0  C016  F04D         	movff	?___flmul+3,_lux_value+3
  1969   0056E4                     l4404:
  1970                           
  1971                           ;Adccode.c: 37:         if (voltage>3.0){lux_value=voltage*300;}
  1972   0056E4  0E00               	movlw	0
  1973   0056E6  6E2C               	movwf	___flge@ff1^0,c
  1974   0056E8  0E00               	movlw	0
  1975   0056EA  6E2D               	movwf	(___flge@ff1+1)^0,c
  1976   0056EC  0E40               	movlw	64
  1977   0056EE  6E2E               	movwf	(___flge@ff1+2)^0,c
  1978   0056F0  0E40               	movlw	64
  1979   0056F2  6E2F               	movwf	(___flge@ff1+3)^0,c
  1980   0056F4  C04E  F030         	movff	_voltage,___flge@ff2
  1981   0056F8  C04F  F031         	movff	_voltage+1,___flge@ff2+1
  1982   0056FC  C050  F032         	movff	_voltage+2,___flge@ff2+2
  1983   005700  C051  F033         	movff	_voltage+3,___flge@ff2+3
  1984   005704  EC0F  F031         	call	___flge	;wreg free
  1985   005708  B0D8               	btfsc	status,0,c
  1986   00570A  EF89  F02B         	goto	u5511
  1987   00570E  EF8B  F02B         	goto	u5510
  1988   005712                     u5511:
  1989   005712  EFA5  F02B         	goto	l4408
  1990   005716                     u5510:
  1991   005716  C04E  F013         	movff	_voltage,___flmul@b
  1992   00571A  C04F  F014         	movff	_voltage+1,___flmul@b+1
  1993   00571E  C050  F015         	movff	_voltage+2,___flmul@b+2
  1994   005722  C051  F016         	movff	_voltage+3,___flmul@b+3
  1995   005726  0E00               	movlw	0
  1996   005728  6E17               	movwf	___flmul@a^0,c
  1997   00572A  0E00               	movlw	0
  1998   00572C  6E18               	movwf	(___flmul@a+1)^0,c
  1999   00572E  0E96               	movlw	150
  2000   005730  6E19               	movwf	(___flmul@a+2)^0,c
  2001   005732  0E43               	movlw	67
  2002   005734  6E1A               	movwf	(___flmul@a+3)^0,c
  2003   005736  ECA7  F027         	call	___flmul	;wreg free
  2004   00573A  C013  F04A         	movff	?___flmul,_lux_value
  2005   00573E  C014  F04B         	movff	?___flmul+1,_lux_value+1
  2006   005742  C015  F04C         	movff	?___flmul+2,_lux_value+2
  2007   005746  C016  F04D         	movff	?___flmul+3,_lux_value+3
  2008   00574A                     l4408:
  2009                           
  2010                           ;Adccode.c: 41:     sprintf(data,"%.2f",lux_value);
  2011   00574A  0EB4               	movlw	low _data
  2012   00574C  0100               	movlb	0	; () banked
  2013   00574E  6F92               	movwf	sprintf@s& (0+255),b
  2014   005750  0E24               	movlw	low STR_1
  2015   005752  6F93               	movwf	sprintf@fmt& (0+255),b
  2016   005754  C04A  F094         	movff	_lux_value,?_sprintf+2
  2017   005758  C04B  F095         	movff	_lux_value+1,?_sprintf+3
  2018   00575C  C04C  F096         	movff	_lux_value+2,?_sprintf+4
  2019   005760  C04D  F097         	movff	_lux_value+3,?_sprintf+5
  2020   005764  EC13  F035         	call	_sprintf	;wreg free
  2021   005768                     
  2022                           ;Adccode.c: 42:     strcat(data, " LUX             ");
  2023   005768  0EB4               	movlw	low _data
  2024   00576A  6E05               	movwf	strcat@dest^0,c
  2025   00576C  0E01               	movlw	low STR_2
  2026   00576E  6E06               	movwf	strcat@src^0,c
  2027   005770  ECBB  F033         	call	_strcat	;wreg free
  2028   005774                     
  2029                           ;Adccode.c: 43:     LCD_String_xy(1,0,"The Input Light:");
  2030   005774  0E00               	movlw	0
  2031   005776  6E0E               	movwf	LCD_String_xy@pos^0,c
  2032   005778  0E13               	movlw	low STR_3
  2033   00577A  6E0F               	movwf	LCD_String_xy@msg^0,c
  2034   00577C  500F               	movf	LCD_String_xy@msg^0,w,c
  2035   00577E  A4D8               	btfss	status,2,c
  2036   005780  0E20               	movlw	high __smallconst
  2037   005782  6E10               	movwf	(LCD_String_xy@msg+1)^0,c
  2038   005784  0E01               	movlw	1
  2039   005786  ECF3  F034         	call	_LCD_String_xy
  2040   00578A                     
  2041                           ;Adccode.c: 44:     LCD_String_xy(2,4,data);
  2042   00578A  0E04               	movlw	4
  2043   00578C  6E0E               	movwf	LCD_String_xy@pos^0,c
  2044   00578E  0EB4               	movlw	low _data
  2045   005790  6E0F               	movwf	LCD_String_xy@msg^0,c
  2046   005792  6A10               	clrf	(LCD_String_xy@msg+1)^0,c
  2047   005794  0E02               	movlw	2
  2048   005796  ECF3  F034         	call	_LCD_String_xy
  2049   00579A                     
  2050                           ;Adccode.c: 45:     MSdelay(100);
  2051   00579A  0E00               	movlw	0
  2052   00579C  6E06               	movwf	(MSdelay@val+1)^0,c
  2053   00579E  0E64               	movlw	100
  2054   0057A0  6E05               	movwf	MSdelay@val^0,c
  2055   0057A2  EC44  F034         	call	_MSdelay	;wreg free
  2056   0057A6  EFD2  F029         	goto	l4370
  2057   0057AA  EF57  F020         	goto	start
  2058   0057AE                     __end_of_main:
  2059                           	callstack 0
  2060                           
  2061 ;; *************** function _strcat *****************
  2062 ;; Defined at:
  2063 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\strcat.c"
  2064 ;; Parameters:    Size  Location     Type
  2065 ;;  dest            1    4[COMRAM] PTR unsigned char 
  2066 ;;		 -> data(10), 
  2067 ;;  src             1    5[COMRAM] PTR const unsigned char 
  2068 ;;		 -> STR_2(18), 
  2069 ;; Auto vars:     Size  Location     Type
  2070 ;;  i               2    6[COMRAM] unsigned int 
  2071 ;; Return value:  Size  Location     Type
  2072 ;;                  1    4[COMRAM] PTR unsigned char 
  2073 ;; Registers used:
  2074 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2075 ;; Tracked objects:
  2076 ;;		On entry : 0/0
  2077 ;;		On exit  : 0/0
  2078 ;;		Unchanged: 0/0
  2079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2080 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2081 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2083 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2084 ;;Total ram usage:        4 bytes
  2085 ;; Hardware stack levels used: 1
  2086 ;; Hardware stack levels required when called: 1
  2087 ;; This function calls:
  2088 ;;		Nothing
  2089 ;; This function is called by:
  2090 ;;		_main
  2091 ;; This function uses a non-reentrant model
  2092 ;;
  2093                           
  2094                           	psect	text1
  2095   006776                     __ptext1:
  2096                           	callstack 0
  2097   006776                     _strcat:
  2098                           	callstack 29
  2099   006776  0E00               	movlw	0
  2100   006778  6E08               	movwf	(strcat@i+1)^0,c
  2101   00677A  0E00               	movlw	0
  2102   00677C  6E07               	movwf	strcat@i^0,c
  2103   00677E  EFC3  F033         	goto	l3282
  2104   006782                     l3280:
  2105   006782  4A07               	infsnz	strcat@i^0,f,c
  2106   006784  2A08               	incf	(strcat@i+1)^0,f,c
  2107   006786                     l3282:
  2108   006786  5005               	movf	strcat@dest^0,w,c
  2109   006788  2407               	addwf	strcat@i^0,w,c
  2110   00678A  6ED9               	movwf	fsr2l,c
  2111   00678C  6ADA               	clrf	fsr2h,c
  2112   00678E  50DF               	movf	indf2,w,c
  2113   006790  A4D8               	btfss	status,2,c
  2114   006792  EFCD  F033         	goto	u3601
  2115   006796  EFCF  F033         	goto	u3600
  2116   00679A                     u3601:
  2117   00679A  EFC1  F033         	goto	l3280
  2118   00679E                     u3600:
  2119   00679E  EFD4  F033         	goto	l3286
  2120   0067A2                     l3284:
  2121   0067A2  4A07               	infsnz	strcat@i^0,f,c
  2122   0067A4  2A08               	incf	(strcat@i+1)^0,f,c
  2123   0067A6  2A06               	incf	strcat@src^0,f,c
  2124   0067A8                     l3286:
  2125   0067A8  0060  F01B  FFF6   	movff	strcat@src,tblptrl
  2126   0067AE                     	if	1	;There is more than 1 active tblptr byte
  2127   0067AE  0E20               	movlw	high __smallconst
  2128   0067B0  6EF7               	movwf	tblptrh,c
  2129   0067B2                     	endif
  2130   0067B2                     	if	0	;tblptru may be non-zero
  2131   0067B2                     	endif
  2132   0067B2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2133   0067B2  0E00               	movlw	low (__smallconst shr (0+16))
  2134   0067B4  6EF8               	movwf	tblptru,c
  2135   0067B6                     	endif
  2136   0067B6  5005               	movf	strcat@dest^0,w,c
  2137   0067B8  2407               	addwf	strcat@i^0,w,c
  2138   0067BA  6ED9               	movwf	fsr2l,c
  2139   0067BC  6ADA               	clrf	fsr2h,c
  2140   0067BE  0008               	tblrd		*
  2141   0067C0  006F FFD7 FFDF     	movff	tablat,indf2
  2142   0067C6  50DF               	movf	indf2,w,c
  2143   0067C8  A4D8               	btfss	status,2,c
  2144   0067CA  EFE9  F033         	goto	u3611
  2145   0067CE  EFEB  F033         	goto	u3610
  2146   0067D2                     u3611:
  2147   0067D2  EFD1  F033         	goto	l3284
  2148   0067D6                     u3610:
  2149   0067D6  0012               	return		;funcret
  2150   0067D8                     __end_of_strcat:
  2151                           	callstack 0
  2152                           
  2153 ;; *************** function _sprintf *****************
  2154 ;; Defined at:
  2155 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_sprintf.c"
  2156 ;; Parameters:    Size  Location     Type
  2157 ;;  s               1   50[BANK0 ] PTR unsigned char 
  2158 ;;		 -> data(10), 
  2159 ;;  fmt             1   51[BANK0 ] PTR const unsigned char 
  2160 ;;		 -> STR_1(5), 
  2161 ;; Auto vars:     Size  Location     Type
  2162 ;;  f              11   57[BANK0 ] struct _IO_FILE
  2163 ;;  ret             2    0        int 
  2164 ;;  ap              1   56[BANK0 ] PTR void [1]
  2165 ;;		 -> ?_sprintf(2), 
  2166 ;; Return value:  Size  Location     Type
  2167 ;;                  2   50[BANK0 ] int 
  2168 ;; Registers used:
  2169 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2170 ;; Tracked objects:
  2171 ;;		On entry : 0/0
  2172 ;;		On exit  : 0/0
  2173 ;;		Unchanged: 0/0
  2174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2175 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2176 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2178 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2179 ;;Total ram usage:       18 bytes
  2180 ;; Hardware stack levels used: 1
  2181 ;; Hardware stack levels required when called: 8
  2182 ;; This function calls:
  2183 ;;		_vfprintf
  2184 ;; This function is called by:
  2185 ;;		_main
  2186 ;; This function uses a non-reentrant model
  2187 ;;
  2188                           
  2189                           	psect	text2
  2190   006A26                     __ptext2:
  2191                           	callstack 0
  2192   006A26                     _sprintf:
  2193                           	callstack 22
  2194   006A26  0E94               	movlw	low (?_sprintf+2)
  2195   006A28  0100               	movlb	0	; () banked
  2196   006A2A  6F98               	movwf	sprintf@ap& (0+255),b
  2197   006A2C  C092  F099         	movff	sprintf@s,sprintf@f
  2198   006A30                     
  2199                           ; BSR set to: 0
  2200   006A30  0E00               	movlw	0
  2201   006A32  6F9C               	movwf	(sprintf@f+3)& (0+255),b
  2202   006A34  0E00               	movlw	0
  2203   006A36  6F9B               	movwf	(sprintf@f+2)& (0+255),b
  2204   006A38                     
  2205                           ; BSR set to: 0
  2206   006A38  0E00               	movlw	0
  2207   006A3A  6FA3               	movwf	(sprintf@f+10)& (0+255),b
  2208   006A3C  0E00               	movlw	0
  2209   006A3E  6FA2               	movwf	(sprintf@f+9)& (0+255),b
  2210   006A40                     
  2211                           ; BSR set to: 0
  2212   006A40  0E99               	movlw	low sprintf@f
  2213   006A42  6F8F               	movwf	vfprintf@fp& (0+255),b
  2214   006A44  C093  F090         	movff	sprintf@fmt,vfprintf@fmt
  2215   006A48  0E98               	movlw	low sprintf@ap
  2216   006A4A  6F91               	movwf	vfprintf@ap& (0+255),b
  2217   006A4C  EC69  F034         	call	_vfprintf	;wreg free
  2218   006A50  0100               	movlb	0	; () banked
  2219   006A52  5192               	movf	sprintf@s& (0+255),w,b
  2220   006A54  259B               	addwf	(sprintf@f+2)& (0+255),w,b
  2221   006A56  6ED9               	movwf	fsr2l,c
  2222   006A58  6ADA               	clrf	fsr2h,c
  2223   006A5A  6ADF               	clrf	indf2,c
  2224   006A5C                     
  2225                           ; BSR set to: 0
  2226   006A5C  0012               	return		;funcret
  2227   006A5E                     __end_of_sprintf:
  2228                           	callstack 0
  2229                           
  2230 ;; *************** function _vfprintf *****************
  2231 ;; Defined at:
  2232 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  2233 ;; Parameters:    Size  Location     Type
  2234 ;;  fp              1   47[BANK0 ] PTR struct _IO_FILE
  2235 ;;		 -> sprintf@f(11), 
  2236 ;;  fmt             1   48[BANK0 ] PTR const unsigned char 
  2237 ;;		 -> STR_1(5), 
  2238 ;;  ap              1   49[BANK0 ] PTR PTR void 
  2239 ;;		 -> sprintf@ap(1), 
  2240 ;; Auto vars:     Size  Location     Type
  2241 ;;  cfmt            1   70[COMRAM] PTR unsigned char 
  2242 ;;		 -> STR_1(5), 
  2243 ;; Return value:  Size  Location     Type
  2244 ;;                  2   47[BANK0 ] int 
  2245 ;; Registers used:
  2246 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2247 ;; Tracked objects:
  2248 ;;		On entry : 0/0
  2249 ;;		On exit  : 0/0
  2250 ;;		Unchanged: 0/0
  2251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2252 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2253 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2255 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2256 ;;Total ram usage:        4 bytes
  2257 ;; Hardware stack levels used: 1
  2258 ;; Hardware stack levels required when called: 7
  2259 ;; This function calls:
  2260 ;;		_vfpfcnvrt
  2261 ;; This function is called by:
  2262 ;;		_sprintf
  2263 ;; This function uses a non-reentrant model
  2264 ;;
  2265                           
  2266                           	psect	text3
  2267   0068D2                     __ptext3:
  2268                           	callstack 0
  2269   0068D2                     _vfprintf:
  2270                           	callstack 22
  2271   0068D2                     
  2272                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  2273   0068D2  C090  F047         	movff	vfprintf@fmt,vfprintf@cfmt
  2274                           
  2275                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2276   0068D6  EF76  F034         	goto	l4346
  2277   0068DA                     l4344:
  2278                           
  2279                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2280   0068DA  C08F  F08C         	movff	vfprintf@fp,vfpfcnvrt@fp
  2281   0068DE  0E47               	movlw	low vfprintf@cfmt
  2282   0068E0  0100               	movlb	0	; () banked
  2283   0068E2  6F8D               	movwf	vfpfcnvrt@fmt& (0+255),b
  2284   0068E4  C091  F08E         	movff	vfprintf@ap,vfpfcnvrt@ap
  2285   0068E8  EC9F  F02D         	call	_vfpfcnvrt	;wreg free
  2286   0068EC                     l4346:
  2287                           
  2288                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2289   0068EC  0060  F11F  FFF6   	movff	vfprintf@cfmt,tblptrl
  2290   0068F2                     	if	1	;There is more than 1 active tblptr byte
  2291   0068F2  0E20               	movlw	high __smallconst
  2292   0068F4  6EF7               	movwf	tblptrh,c
  2293   0068F6                     	endif
  2294   0068F6                     	if	0	;tblptru may be non-zero
  2295   0068F6                     	endif
  2296   0068F6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2297   0068F6  0E00               	movlw	low (__smallconst shr (0+16))
  2298   0068F8  6EF8               	movwf	tblptru,c
  2299   0068FA                     	endif
  2300   0068FA  0008               	tblrd		*
  2301   0068FC  50F5               	movf	tablat,w,c
  2302   0068FE  0900               	iorlw	0
  2303   006900  A4D8               	btfss	status,2,c
  2304   006902  EF85  F034         	goto	u5421
  2305   006906  EF87  F034         	goto	u5420
  2306   00690A                     u5421:
  2307   00690A  EF6D  F034         	goto	l4344
  2308   00690E                     u5420:
  2309   00690E                     
  2310                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  2311   00690E  0E00               	movlw	0
  2312   006910  0100               	movlb	0	; () banked
  2313   006912  6F90               	movwf	(?_vfprintf+1)& (0+255),b
  2314   006914  0E00               	movlw	0
  2315   006916  6F8F               	movwf	?_vfprintf& (0+255),b
  2316   006918                     
  2317                           ; BSR set to: 0
  2318   006918  0012               	return		;funcret
  2319   00691A                     __end_of_vfprintf:
  2320                           	callstack 0
  2321                           
  2322 ;; *************** function _vfpfcnvrt *****************
  2323 ;; Defined at:
  2324 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  2325 ;; Parameters:    Size  Location     Type
  2326 ;;  fp              1   44[BANK0 ] PTR struct _IO_FILE
  2327 ;;		 -> sprintf@f(11), 
  2328 ;;  fmt             1   45[BANK0 ] PTR PTR unsigned char 
  2329 ;;		 -> vfprintf@cfmt(1), 
  2330 ;;  ap              1   46[BANK0 ] PTR PTR void 
  2331 ;;		 -> sprintf@ap(1), 
  2332 ;; Auto vars:     Size  Location     Type
  2333 ;;  convarg         4   64[COMRAM] struct .
  2334 ;;  cp              1   69[COMRAM] PTR unsigned char 
  2335 ;;		 -> STR_1(5), 
  2336 ;;  c               1   68[COMRAM] unsigned char 
  2337 ;;  done            1    0        _Bool 
  2338 ;; Return value:  Size  Location     Type
  2339 ;;                  1    wreg      void 
  2340 ;; Registers used:
  2341 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2342 ;; Tracked objects:
  2343 ;;		On entry : 0/0
  2344 ;;		On exit  : 0/0
  2345 ;;		Unchanged: 0/0
  2346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2347 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2348 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2349 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2350 ;;      Totals:         7       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2351 ;;Total ram usage:       10 bytes
  2352 ;; Hardware stack levels used: 1
  2353 ;; Hardware stack levels required when called: 6
  2354 ;; This function calls:
  2355 ;;		_efgtoa
  2356 ;;		_fputc
  2357 ;;		_read_prec_or_width
  2358 ;; This function is called by:
  2359 ;;		_vfprintf
  2360 ;; This function uses a non-reentrant model
  2361 ;;
  2362                           
  2363                           	psect	text4
  2364   005B3E                     __ptext4:
  2365                           	callstack 0
  2366   005B3E                     _vfpfcnvrt:
  2367                           	callstack 22
  2368   005B3E                     
  2369                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  2370   005B3E  0100               	movlb	0	; () banked
  2371   005B40  518D               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2372   005B42  6ED9               	movwf	fsr2l,c
  2373   005B44  6ADA               	clrf	fsr2h,c
  2374   005B46  006F FF7F FFF6     	movff	indf2,tblptrl
  2375   005B4C                     	if	1	;There is more than 1 active tblptr byte
  2376   005B4C  0E20               	movlw	high __smallconst
  2377   005B4E  6EF7               	movwf	tblptrh,c
  2378   005B50                     	endif
  2379   005B50                     	if	0	;tblptru may be non-zero
  2380   005B50                     	endif
  2381   005B50                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2382   005B50  0E00               	movlw	low (__smallconst shr (0+16))
  2383   005B52  6EF8               	movwf	tblptru,c
  2384   005B54                     	endif
  2385   005B54  0008               	tblrd		*
  2386   005B56  50F5               	movf	tablat,w,c
  2387   005B58  0A25               	xorlw	37
  2388   005B5A  A4D8               	btfss	status,2,c
  2389   005B5C  EFB2  F02D         	goto	u5391
  2390   005B60  EFB4  F02D         	goto	u5390
  2391   005B64                     u5391:
  2392   005B64  EF94  F02E         	goto	l4336
  2393   005B68                     u5390:
  2394   005B68                     
  2395                           ; BSR set to: 0
  2396                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  2397   005B68  518D               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2398   005B6A  6ED9               	movwf	fsr2l,c
  2399   005B6C  6ADA               	clrf	fsr2h,c
  2400   005B6E  2ADF               	incf	indf2,f,c
  2401   005B70                     
  2402                           ; BSR set to: 0
  2403                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  2404   005B70  0E00               	movlw	0
  2405   005B72  6FB1               	movwf	(_width+1)& (0+255),b
  2406   005B74  0E00               	movlw	0
  2407   005B76  6FB0               	movwf	_width& (0+255),b
  2408   005B78  C0B0  F054         	movff	_width,_flags
  2409   005B7C                     
  2410                           ; BSR set to: 0
  2411                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  2412   005B7C  69B2               	setf	_prec& (0+255),b
  2413   005B7E  69B3               	setf	(_prec+1)& (0+255),b
  2414   005B80                     
  2415                           ; BSR set to: 0
  2416                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1265:         if 
      +                          ((*fmt)[0] == '.') {
  2417   005B80  518D               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2418   005B82  6ED9               	movwf	fsr2l,c
  2419   005B84  6ADA               	clrf	fsr2h,c
  2420   005B86  006F FF7F FFF6     	movff	indf2,tblptrl
  2421   005B8C                     	if	1	;There is more than 1 active tblptr byte
  2422   005B8C  0E20               	movlw	high __smallconst
  2423   005B8E  6EF7               	movwf	tblptrh,c
  2424   005B90                     	endif
  2425   005B90                     	if	0	;tblptru may be non-zero
  2426   005B90                     	endif
  2427   005B90                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2428   005B90  0E00               	movlw	low (__smallconst shr (0+16))
  2429   005B92  6EF8               	movwf	tblptru,c
  2430   005B94                     	endif
  2431   005B94  0008               	tblrd		*
  2432   005B96  50F5               	movf	tablat,w,c
  2433   005B98  0A2E               	xorlw	46
  2434   005B9A  A4D8               	btfss	status,2,c
  2435   005B9C  EFD2  F02D         	goto	u5401
  2436   005BA0  EFD4  F02D         	goto	u5400
  2437   005BA4                     u5401:
  2438   005BA4  EFE2  F02D         	goto	l4300
  2439   005BA8                     u5400:
  2440   005BA8                     
  2441                           ; BSR set to: 0
  2442                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1266:            
      +                           ++*fmt;
  2443   005BA8  518D               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2444   005BAA  6ED9               	movwf	fsr2l,c
  2445   005BAC  6ADA               	clrf	fsr2h,c
  2446   005BAE  2ADF               	incf	indf2,f,c
  2447   005BB0                     
  2448                           ; BSR set to: 0
  2449                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1267:    prec = r
      +                          ead_prec_or_width(fmt, ap);
  2450   005BB0  C08D  F005         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  2451   005BB4  C08E  F006         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  2452   005BB8  EC10  F032         	call	_read_prec_or_width	;wreg free
  2453   005BBC  C005  F0B2         	movff	?_read_prec_or_width,_prec
  2454   005BC0  C006  F0B3         	movff	?_read_prec_or_width+1,_prec+1
  2455   005BC4                     l4300:
  2456                           
  2457                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1689:   cp = *fmt
      +                          ;
  2458   005BC4  0100               	movlb	0	; () banked
  2459   005BC6  518D               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2460   005BC8  6ED9               	movwf	fsr2l,c
  2461   005BCA  6ADA               	clrf	fsr2h,c
  2462   005BCC  50DF               	movf	indf2,w,c
  2463   005BCE  6E46               	movwf	vfpfcnvrt@cp^0,c
  2464   005BD0                     
  2465                           ; BSR set to: 0
  2466                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1690:   c = *cp;
  2467   005BD0  0060  F11B  FFF6   	movff	vfpfcnvrt@cp,tblptrl
  2468   005BD6                     	if	1	;There is more than 1 active tblptr byte
  2469   005BD6  0E20               	movlw	high __smallconst
  2470   005BD8  6EF7               	movwf	tblptrh,c
  2471   005BDA                     	endif
  2472   005BDA                     	if	0	;tblptru may be non-zero
  2473   005BDA                     	endif
  2474   005BDA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2475   005BDA  0E00               	movlw	low (__smallconst shr (0+16))
  2476   005BDC  6EF8               	movwf	tblptru,c
  2477   005BDE                     	endif
  2478   005BDE  0008               	tblrd		*
  2479   005BE0  006F FFD4  F045    	movff	tablat,vfpfcnvrt@c
  2480                           
  2481                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1691:   switch(c)
      +                           {
  2482   005BE6  EFFF  F02D         	goto	l4310
  2483   005BEA                     l4304:
  2484                           
  2485                           ; BSR set to: 0
  2486                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1695:     cp++;
  2487   005BEA  2A46               	incf	vfpfcnvrt@cp^0,f,c
  2488                           
  2489                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1696:     break;
  2490   005BEC  EF0E  F02E         	goto	l4312
  2491   005BF0                     l4306:
  2492                           
  2493                           ; BSR set to: 0
  2494                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1721:     c = 'l'
      +                          ;
  2495   005BF0  0E6C               	movlw	108
  2496   005BF2  6E45               	movwf	vfpfcnvrt@c^0,c
  2497                           
  2498                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1722:     break;
  2499   005BF4  EF0E  F02E         	goto	l4312
  2500   005BF8                     l920:
  2501                           
  2502                           ; BSR set to: 0
  2503                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1724:     c = 0;
  2504   005BF8  6A45               	clrf	vfpfcnvrt@c^0,c
  2505                           
  2506                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1725:     break;
  2507   005BFA  EF0E  F02E         	goto	l4312
  2508   005BFE                     l4310:
  2509                           
  2510                           ; BSR set to: 0
  2511   005BFE  5045               	movf	vfpfcnvrt@c^0,w,c
  2512                           
  2513                           ; Switch size 1, requested type "simple"
  2514                           ; Number of cases is 3, Range of values is 76 to 108
  2515                           ; switch strategies available:
  2516                           ; Name         Instructions Cycles
  2517                           ; simple_byte           10     6 (average)
  2518                           ;	Chosen strategy is simple_byte
  2519   005C00  0A4C               	xorlw	76	; case 76
  2520   005C02  B4D8               	btfsc	status,2,c
  2521   005C04  EFF5  F02D         	goto	l4304
  2522   005C08  0A2A               	xorlw	42	; case 102
  2523   005C0A  B4D8               	btfsc	status,2,c
  2524   005C0C  EFF8  F02D         	goto	l4306
  2525   005C10  0A0A               	xorlw	10	; case 108
  2526   005C12  B4D8               	btfsc	status,2,c
  2527   005C14  EFF5  F02D         	goto	l4304
  2528   005C18  EFFC  F02D         	goto	l920
  2529   005C1C                     l4312:
  2530                           
  2531                           ; BSR set to: 0
  2532   005C1C  0060  F11B  FFF6   	movff	vfpfcnvrt@cp,tblptrl
  2533   005C22                     	if	1	;There is more than 1 active tblptr byte
  2534   005C22  0E20               	movlw	high __smallconst
  2535   005C24  6EF7               	movwf	tblptrh,c
  2536   005C26                     	endif
  2537   005C26                     	if	0	;tblptru may be non-zero
  2538   005C26                     	endif
  2539   005C26                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2540   005C26  0E00               	movlw	low (__smallconst shr (0+16))
  2541   005C28  6EF8               	movwf	tblptru,c
  2542   005C2A                     	endif
  2543   005C2A  0008               	tblrd		*
  2544   005C2C  50F5               	movf	tablat,w,c
  2545   005C2E  0A66               	xorlw	102
  2546   005C30  A4D8               	btfss	status,2,c
  2547   005C32  EF1D  F02E         	goto	u5411
  2548   005C36  EF1F  F02E         	goto	u5410
  2549   005C3A                     u5411:
  2550   005C3A  EF8D  F02E         	goto	l4332
  2551   005C3E                     u5410:
  2552   005C3E  EF53  F02E         	goto	l4320
  2553   005C42                     l4314:
  2554                           
  2555                           ; BSR set to: 0
  2556                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1756:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2557   005C42  518E               	movf	vfpfcnvrt@ap& (0+255),w,b
  2558   005C44  6ED9               	movwf	fsr2l,c
  2559   005C46  6ADA               	clrf	fsr2h,c
  2560   005C48  006F FF7C  F040    	movff	indf2,??_vfpfcnvrt
  2561   005C4E  0E04               	movlw	4
  2562   005C50  26DF               	addwf	indf2,f,c
  2563   005C52  5040               	movf	??_vfpfcnvrt^0,w,c
  2564   005C54  6ED9               	movwf	fsr2l,c
  2565   005C56  6ADA               	clrf	fsr2h,c
  2566   005C58  006F FF78  F041    	movff	postinc2,vfpfcnvrt@convarg
  2567   005C5E  006F FF78  F042    	movff	postinc2,vfpfcnvrt@convarg+1
  2568   005C64  006F FF78  F043    	movff	postinc2,vfpfcnvrt@convarg+2
  2569   005C6A  006F FF78  F044    	movff	postinc2,vfpfcnvrt@convarg+3
  2570                           
  2571                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1757:      break;
  2572   005C70  EF5E  F02E         	goto	l4322
  2573   005C74                     l4316:
  2574                           
  2575                           ; BSR set to: 0
  2576                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1759:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2577   005C74  518E               	movf	vfpfcnvrt@ap& (0+255),w,b
  2578   005C76  6ED9               	movwf	fsr2l,c
  2579   005C78  6ADA               	clrf	fsr2h,c
  2580   005C7A  006F FF7C  F040    	movff	indf2,??_vfpfcnvrt
  2581   005C80  0E04               	movlw	4
  2582   005C82  26DF               	addwf	indf2,f,c
  2583   005C84  5040               	movf	??_vfpfcnvrt^0,w,c
  2584   005C86  6ED9               	movwf	fsr2l,c
  2585   005C88  6ADA               	clrf	fsr2h,c
  2586   005C8A  006F FF78  F041    	movff	postinc2,vfpfcnvrt@convarg
  2587   005C90  006F FF78  F042    	movff	postinc2,vfpfcnvrt@convarg+1
  2588   005C96  006F FF78  F043    	movff	postinc2,vfpfcnvrt@convarg+2
  2589   005C9C  006F FF78  F044    	movff	postinc2,vfpfcnvrt@convarg+3
  2590                           
  2591                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1760:      break;
  2592   005CA2  EF5E  F02E         	goto	l4322
  2593   005CA6                     l4320:
  2594                           
  2595                           ; BSR set to: 0
  2596   005CA6  5045               	movf	vfpfcnvrt@c^0,w,c
  2597                           
  2598                           ; Switch size 1, requested type "simple"
  2599                           ; Number of cases is 2, Range of values is 76 to 108
  2600                           ; switch strategies available:
  2601                           ; Name         Instructions Cycles
  2602                           ; simple_byte            7     4 (average)
  2603                           ;	Chosen strategy is simple_byte
  2604   005CA8  0A4C               	xorlw	76	; case 76
  2605   005CAA  B4D8               	btfsc	status,2,c
  2606   005CAC  EF3A  F02E         	goto	l4316
  2607   005CB0  0A20               	xorlw	32	; case 108
  2608   005CB2  B4D8               	btfsc	status,2,c
  2609   005CB4  EF21  F02E         	goto	l4314
  2610   005CB8  EF5E  F02E         	goto	l4322
  2611   005CBC                     l4322:
  2612                           
  2613                           ; BSR set to: 0
  2614                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1762:    *fmt = c
      +                          p+1;
  2615   005CBC  518D               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2616   005CBE  6ED9               	movwf	fsr2l,c
  2617   005CC0  6ADA               	clrf	fsr2h,c
  2618   005CC2  2846               	incf	vfpfcnvrt@cp^0,w,c
  2619   005CC4  6EDF               	movwf	indf2,c
  2620                           
  2621                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1763:    switch (
      +                          *cp) {
  2622   005CC6  EF7E  F02E         	goto	l4330
  2623   005CCA                     l4324:
  2624                           
  2625                           ; BSR set to: 0
  2626                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1790:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  2627   005CCA  C08C  F038         	movff	vfpfcnvrt@fp,efgtoa@fp
  2628   005CCE  C041  F039         	movff	vfpfcnvrt@convarg,efgtoa@f
  2629   005CD2  C042  F03A         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  2630   005CD6  C043  F03B         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  2631   005CDA  C044  F03C         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  2632   005CDE  0060  F11B  FFF6   	movff	vfpfcnvrt@cp,tblptrl
  2633   005CE4                     	if	1	;There is more than 1 active tblptr byte
  2634   005CE4  0E20               	movlw	high __smallconst
  2635   005CE6  6EF7               	movwf	tblptrh,c
  2636   005CE8                     	endif
  2637   005CE8                     	if	0	;tblptru may be non-zero
  2638   005CE8                     	endif
  2639   005CE8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2640   005CE8  0E00               	movlw	low (__smallconst shr (0+16))
  2641   005CEA  6EF8               	movwf	tblptru,c
  2642   005CEC                     	endif
  2643   005CEC  0008               	tblrd		*
  2644   005CEE  006F FFD4  F03D    	movff	tablat,efgtoa@c
  2645   005CF4  EC59  F020         	call	_efgtoa	;wreg free
  2646   005CF8  EFA8  F02E         	goto	l930
  2647   005CFC                     l4330:
  2648                           
  2649                           ; BSR set to: 0
  2650   005CFC  0060  F11B  FFF6   	movff	vfpfcnvrt@cp,tblptrl
  2651   005D02                     	if	1	;There is more than 1 active tblptr byte
  2652   005D02  0E20               	movlw	high __smallconst
  2653   005D04  6EF7               	movwf	tblptrh,c
  2654   005D06                     	endif
  2655   005D06                     	if	0	;tblptru may be non-zero
  2656   005D06                     	endif
  2657   005D06                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2658   005D06  0E00               	movlw	low (__smallconst shr (0+16))
  2659   005D08  6EF8               	movwf	tblptru,c
  2660   005D0A                     	endif
  2661   005D0A  0008               	tblrd		*
  2662   005D0C  50F5               	movf	tablat,w,c
  2663                           
  2664                           ; Switch size 1, requested type "simple"
  2665                           ; Number of cases is 1, Range of values is 102 to 102
  2666                           ; switch strategies available:
  2667                           ; Name         Instructions Cycles
  2668                           ; simple_byte            4     3 (average)
  2669                           ;	Chosen strategy is simple_byte
  2670   005D0E  0A66               	xorlw	102	; case 102
  2671   005D10  B4D8               	btfsc	status,2,c
  2672   005D12  EF65  F02E         	goto	l4324
  2673   005D16  EF8D  F02E         	goto	l4332
  2674   005D1A                     l4332:
  2675                           
  2676                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  2677   005D1A  0100               	movlb	0	; () banked
  2678   005D1C  518D               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2679   005D1E  6ED9               	movwf	fsr2l,c
  2680   005D20  6ADA               	clrf	fsr2h,c
  2681   005D22  2ADF               	incf	indf2,f,c
  2682   005D24  EFA8  F02E         	goto	l930
  2683   005D28                     l4336:
  2684                           
  2685                           ; BSR set to: 0
  2686                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  2687   005D28  518D               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2688   005D2A  6ED9               	movwf	fsr2l,c
  2689   005D2C  6ADA               	clrf	fsr2h,c
  2690   005D2E  006F FF7F FFF6     	movff	indf2,tblptrl
  2691   005D34                     	if	1	;There is more than 1 active tblptr byte
  2692   005D34  0E20               	movlw	high __smallconst
  2693   005D36  6EF7               	movwf	tblptrh,c
  2694   005D38                     	endif
  2695   005D38                     	if	0	;tblptru may be non-zero
  2696   005D38                     	endif
  2697   005D38                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2698   005D38  0E00               	movlw	low (__smallconst shr (0+16))
  2699   005D3A  6EF8               	movwf	tblptru,c
  2700   005D3C                     	endif
  2701   005D3C  0008               	tblrd		*
  2702   005D3E  50F5               	movf	tablat,w,c
  2703   005D40  6E05               	movwf	fputc@c^0,c
  2704   005D42  6A06               	clrf	(fputc@c+1)^0,c
  2705   005D44  C08C  F007         	movff	vfpfcnvrt@fp,fputc@fp
  2706   005D48  EC6C  F032         	call	_fputc	;wreg free
  2707   005D4C  EF8D  F02E         	goto	l4332
  2708   005D50                     l930:
  2709   005D50  0012               	return		;funcret
  2710   005D52                     __end_of_vfpfcnvrt:
  2711                           	callstack 0
  2712                           
  2713 ;; *************** function _read_prec_or_width *****************
  2714 ;; Defined at:
  2715 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  2716 ;; Parameters:    Size  Location     Type
  2717 ;;  fmt             1    4[COMRAM] PTR PTR const unsigned c
  2718 ;;		 -> vfprintf@cfmt(1), 
  2719 ;;  ap              1    5[COMRAM] PTR PTR void [1]
  2720 ;;		 -> sprintf@ap(1), 
  2721 ;; Auto vars:     Size  Location     Type
  2722 ;;  c               1    8[COMRAM] unsigned char 
  2723 ;;  n               2    9[COMRAM] int 
  2724 ;; Return value:  Size  Location     Type
  2725 ;;                  2    4[COMRAM] int 
  2726 ;; Registers used:
  2727 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  2728 ;; Tracked objects:
  2729 ;;		On entry : 0/0
  2730 ;;		On exit  : 0/0
  2731 ;;		Unchanged: 0/0
  2732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2733 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2734 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2735 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2736 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2737 ;;Total ram usage:        7 bytes
  2738 ;; Hardware stack levels used: 1
  2739 ;; Hardware stack levels required when called: 1
  2740 ;; This function calls:
  2741 ;;		Nothing
  2742 ;; This function is called by:
  2743 ;;		_vfpfcnvrt
  2744 ;; This function uses a non-reentrant model
  2745 ;;
  2746                           
  2747                           	psect	text5
  2748   006420                     __ptext5:
  2749                           	callstack 0
  2750   006420                     _read_prec_or_width:
  2751                           	callstack 26
  2752   006420                     
  2753                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  2754   006420  0E00               	movlw	0
  2755   006422  6E0B               	movwf	(read_prec_or_width@n+1)^0,c
  2756   006424  0E00               	movlw	0
  2757   006426  6E0A               	movwf	read_prec_or_width@n^0,c
  2758   006428                     
  2759                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  2760   006428  5005               	movf	read_prec_or_width@fmt^0,w,c
  2761   00642A  6ED9               	movwf	fsr2l,c
  2762   00642C  6ADA               	clrf	fsr2h,c
  2763   00642E  006F FF7F FFF6     	movff	indf2,tblptrl
  2764   006434                     	if	1	;There is more than 1 active tblptr byte
  2765   006434  0E20               	movlw	high __smallconst
  2766   006436  6EF7               	movwf	tblptrh,c
  2767   006438                     	endif
  2768   006438                     	if	0	;tblptru may be non-zero
  2769   006438                     	endif
  2770   006438                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2771   006438  0E00               	movlw	low (__smallconst shr (0+16))
  2772   00643A  6EF8               	movwf	tblptru,c
  2773   00643C                     	endif
  2774   00643C  0008               	tblrd		*
  2775   00643E  50F5               	movf	tablat,w,c
  2776   006440  0A2A               	xorlw	42
  2777   006442  A4D8               	btfss	status,2,c
  2778   006444  EF26  F032         	goto	u5371
  2779   006448  EF28  F032         	goto	u5370
  2780   00644C                     u5371:
  2781   00644C  EF51  F032         	goto	l4284
  2782   006450                     u5370:
  2783   006450                     
  2784                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  2785   006450  5005               	movf	read_prec_or_width@fmt^0,w,c
  2786   006452  6ED9               	movwf	fsr2l,c
  2787   006454  6ADA               	clrf	fsr2h,c
  2788   006456  2ADF               	incf	indf2,f,c
  2789   006458                     
  2790                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  2791   006458  5006               	movf	read_prec_or_width@ap^0,w,c
  2792   00645A  6ED9               	movwf	fsr2l,c
  2793   00645C  6ADA               	clrf	fsr2h,c
  2794   00645E  0E02               	movlw	2
  2795   006460  26DF               	addwf	indf2,f,c
  2796   006462  5CDF               	subwf	indf2,w,c
  2797   006464  6ED9               	movwf	fsr2l,c
  2798   006466  6ADA               	clrf	fsr2h,c
  2799   006468  006F FF78  F00A    	movff	postinc2,read_prec_or_width@n
  2800   00646E  006F FF78  F00B    	movff	postinc2,read_prec_or_width@n+1
  2801                           
  2802                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  2803   006474  EF67  F032         	goto	l906
  2804   006478                     l4280:
  2805                           
  2806                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
  2807   006478  0E0A               	movlw	10
  2808   00647A  020A               	mulwf	read_prec_or_width@n^0,c
  2809   00647C  006F FFCC  F007    	movff	prodl,??_read_prec_or_width
  2810   006482  006F FFD0  F008    	movff	prodh,??_read_prec_or_width+1
  2811   006488  020B               	mulwf	(read_prec_or_width@n+1)^0,c
  2812   00648A  50F3               	movf	prodl,w,c
  2813   00648C  2608               	addwf	(??_read_prec_or_width+1)^0,f,c
  2814   00648E  5009               	movf	read_prec_or_width@c^0,w,c
  2815   006490  2407               	addwf	??_read_prec_or_width^0,w,c
  2816   006492  6E0A               	movwf	read_prec_or_width@n^0,c
  2817   006494  0E00               	movlw	0
  2818   006496  2008               	addwfc	(??_read_prec_or_width+1)^0,w,c
  2819   006498  6E0B               	movwf	(read_prec_or_width@n+1)^0,c
  2820   00649A                     
  2821                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
  2822   00649A  5005               	movf	read_prec_or_width@fmt^0,w,c
  2823   00649C  6ED9               	movwf	fsr2l,c
  2824   00649E  6ADA               	clrf	fsr2h,c
  2825   0064A0  2ADF               	incf	indf2,f,c
  2826   0064A2                     l4284:
  2827                           
  2828                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  2829   0064A2  5005               	movf	read_prec_or_width@fmt^0,w,c
  2830   0064A4  6ED9               	movwf	fsr2l,c
  2831   0064A6  6ADA               	clrf	fsr2h,c
  2832   0064A8  006F FF7F FFF6     	movff	indf2,tblptrl
  2833   0064AE                     	if	1	;There is more than 1 active tblptr byte
  2834   0064AE  0E20               	movlw	high __smallconst
  2835   0064B0  6EF7               	movwf	tblptrh,c
  2836   0064B2                     	endif
  2837   0064B2                     	if	0	;tblptru may be non-zero
  2838   0064B2                     	endif
  2839   0064B2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2840   0064B2  0E00               	movlw	low (__smallconst shr (0+16))
  2841   0064B4  6EF8               	movwf	tblptru,c
  2842   0064B6                     	endif
  2843   0064B6  0008               	tblrd		*
  2844   0064B8  50F5               	movf	tablat,w,c
  2845   0064BA  0FD0               	addlw	208
  2846   0064BC  6E09               	movwf	read_prec_or_width@c^0,c
  2847   0064BE  0E09               	movlw	9
  2848   0064C0  6409               	cpfsgt	read_prec_or_width@c^0,c
  2849   0064C2  EF65  F032         	goto	u5381
  2850   0064C6  EF67  F032         	goto	u5380
  2851   0064CA                     u5381:
  2852   0064CA  EF3C  F032         	goto	l4280
  2853   0064CE                     u5380:
  2854   0064CE                     l906:
  2855                           
  2856                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
  2857   0064CE  C00A  F005         	movff	read_prec_or_width@n,?_read_prec_or_width
  2858   0064D2  C00B  F006         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  2859   0064D6  0012               	return		;funcret
  2860   0064D8                     __end_of_read_prec_or_width:
  2861                           	callstack 0
  2862                           
  2863 ;; *************** function _efgtoa *****************
  2864 ;; Defined at:
  2865 ;;		line 587 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  2866 ;; Parameters:    Size  Location     Type
  2867 ;;  fp              1   55[COMRAM] PTR struct _IO_FILE
  2868 ;;		 -> sprintf@f(11), 
  2869 ;;  f               4   56[COMRAM] PTR struct _IO_FILE
  2870 ;;  c               1   60[COMRAM] unsigned char 
  2871 ;; Auto vars:     Size  Location     Type
  2872 ;;  u               4   40[BANK0 ] struct flui
  2873 ;;  g               4   34[BANK0 ] struct flui
  2874 ;;  l               4   29[BANK0 ] struct flui
  2875 ;;  h               4   25[BANK0 ] struct flui
  2876 ;;  ou              4   19[BANK0 ] struct flui
  2877 ;;  n               2   38[BANK0 ] int 
  2878 ;;  i               2   23[BANK0 ] int 
  2879 ;;  w               2   17[BANK0 ] int 
  2880 ;;  e               2   15[BANK0 ] int 
  2881 ;;  m               2   13[BANK0 ] int 
  2882 ;;  d               2   11[BANK0 ] int 
  2883 ;;  t               2    4[BANK0 ] int 
  2884 ;;  p               2    2[BANK0 ] int 
  2885 ;;  ne              2    0[BANK0 ] int 
  2886 ;;  sign            1   33[BANK0 ] unsigned char 
  2887 ;;  nmode           1   10[BANK0 ] unsigned char 
  2888 ;;  mode            1    9[BANK0 ] unsigned char 
  2889 ;;  pp              1    8[BANK0 ] unsigned char 
  2890 ;;  esign           1    0        unsigned char 
  2891 ;; Return value:  Size  Location     Type
  2892 ;;                  1    wreg      void 
  2893 ;; Registers used:
  2894 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2895 ;; Tracked objects:
  2896 ;;		On entry : 0/0
  2897 ;;		On exit  : 0/0
  2898 ;;		Unchanged: 0/0
  2899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2900 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2901 ;;      Locals:         0      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2902 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2903 ;;      Totals:         8      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2904 ;;Total ram usage:       52 bytes
  2905 ;; Hardware stack levels used: 1
  2906 ;; Hardware stack levels required when called: 5
  2907 ;; This function calls:
  2908 ;;		___fladd
  2909 ;;		___fldiv
  2910 ;;		___fleq
  2911 ;;		___flge
  2912 ;;		___flmul
  2913 ;;		___flneg
  2914 ;;		___flsub
  2915 ;;		___fltol
  2916 ;;		___fpclassifyf
  2917 ;;		_floorf
  2918 ;;		_labs
  2919 ;;		_memcpy
  2920 ;;		_pad
  2921 ;;		_strcpy
  2922 ;; This function is called by:
  2923 ;;		_vfpfcnvrt
  2924 ;; This function uses a non-reentrant model
  2925 ;;
  2926                           
  2927                           	psect	text6
  2928   0040B2                     __ptext6:
  2929                           	callstack 0
  2930   0040B2                     _efgtoa:
  2931                           	callstack 22
  2932   0040B2                     
  2933                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 587: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v3.00\pic\sources
      +                          \c99\common\doprnt.c: 588: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common
      +                          \doprnt.c: 589:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v3
      +                          .00\pic\sources\c99\common\doprnt.c: 590:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 591:     long double h, l;
  2934   0040B2  0100               	movlb	0	; () banked
  2935   0040B4  6B81               	clrf	efgtoa@sign& (0+255),b
  2936                           
  2937                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 596:     g.f = f;
  2938   0040B6  C039  F082         	movff	efgtoa@f,efgtoa@g
  2939   0040BA  C03A  F083         	movff	efgtoa@f+1,efgtoa@g+1
  2940   0040BE  C03B  F084         	movff	efgtoa@f+2,efgtoa@g+2
  2941   0040C2  C03C  F085         	movff	efgtoa@f+3,efgtoa@g+3
  2942   0040C6                     
  2943                           ; BSR set to: 0
  2944                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 597:     if (g.f 
      +                          < 0.0) {
  2945   0040C6  BF85               	btfsc	(efgtoa@g+3)& (0+255),7,b
  2946   0040C8  EF6A  F020         	goto	u5050
  2947   0040CC  EF68  F020         	goto	u5051
  2948   0040D0                     u5051:
  2949   0040D0  EF7E  F020         	goto	l4060
  2950   0040D4                     u5050:
  2951   0040D4                     
  2952                           ; BSR set to: 0
  2953                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 598:         sign
      +                           = 1;
  2954   0040D4  0E01               	movlw	1
  2955   0040D6  6F81               	movwf	efgtoa@sign& (0+255),b
  2956   0040D8                     
  2957                           ; BSR set to: 0
  2958                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 599:         g.f 
      +                          = -g.f;
  2959   0040D8  C082  F005         	movff	efgtoa@g,___flneg@f1
  2960   0040DC  C083  F006         	movff	efgtoa@g+1,___flneg@f1+1
  2961   0040E0  C084  F007         	movff	efgtoa@g+2,___flneg@f1+2
  2962   0040E4  C085  F008         	movff	efgtoa@g+3,___flneg@f1+3
  2963   0040E8  EC2F  F035         	call	___flneg	;wreg free
  2964   0040EC  C005  F082         	movff	?___flneg,efgtoa@g
  2965   0040F0  C006  F083         	movff	?___flneg+1,efgtoa@g+1
  2966   0040F4  C007  F084         	movff	?___flneg+2,efgtoa@g+2
  2967   0040F8  C008  F085         	movff	?___flneg+3,efgtoa@g+3
  2968   0040FC                     l4060:
  2969                           
  2970                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 603:     n = 0;
  2971   0040FC  0E00               	movlw	0
  2972   0040FE  0100               	movlb	0	; () banked
  2973   004100  6F87               	movwf	(efgtoa@n+1)& (0+255),b
  2974   004102  0E00               	movlw	0
  2975   004104  6F86               	movwf	efgtoa@n& (0+255),b
  2976   004106                     
  2977                           ; BSR set to: 0
  2978                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 604:     w = widt
      +                          h;
  2979   004106  C0B0  F071         	movff	_width,efgtoa@w
  2980   00410A  C0B1  F072         	movff	_width+1,efgtoa@w+1
  2981   00410E                     
  2982                           ; BSR set to: 0
  2983                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 605:     if (sign
  2984   00410E  5181               	movf	efgtoa@sign& (0+255),w,b
  2985   004110  B4D8               	btfsc	status,2,c
  2986   004112  EF8D  F020         	goto	u5061
  2987   004116  EF8F  F020         	goto	u5060
  2988   00411A                     u5061:
  2989   00411A  EFA3  F020         	goto	l4074
  2990   00411E                     u5060:
  2991   00411E                     
  2992                           ; BSR set to: 0
  2993                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 609:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 610:   sign = sign ? '-
      +                          ' : '+';
  2994   00411E  5181               	movf	efgtoa@sign& (0+255),w,b
  2995   004120  A4D8               	btfss	status,2,c
  2996   004122  EF95  F020         	goto	u5071
  2997   004126  EF97  F020         	goto	u5070
  2998   00412A                     u5071:
  2999   00412A  EF9D  F020         	goto	l4070
  3000   00412E                     u5070:
  3001   00412E                     
  3002                           ; BSR set to: 0
  3003   00412E  0E00               	movlw	0
  3004   004130  6F67               	movwf	(_efgtoa$1114+1)& (0+255),b
  3005   004132  0E2B               	movlw	43
  3006   004134  6F66               	movwf	_efgtoa$1114& (0+255),b
  3007   004136  EFA1  F020         	goto	l4072
  3008   00413A                     l4070:
  3009                           
  3010                           ; BSR set to: 0
  3011   00413A  0E00               	movlw	0
  3012   00413C  6F67               	movwf	(_efgtoa$1114+1)& (0+255),b
  3013   00413E  0E2D               	movlw	45
  3014   004140  6F66               	movwf	_efgtoa$1114& (0+255),b
  3015   004142                     l4072:
  3016                           
  3017                           ; BSR set to: 0
  3018   004142  C066  F081         	movff	_efgtoa$1114,efgtoa@sign
  3019   004146                     l4074:
  3020                           
  3021                           ; BSR set to: 0
  3022                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 619:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  3023   004146  C082  F005         	movff	efgtoa@g,___fpclassifyf@x
  3024   00414A  C083  F006         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3025   00414E  C084  F007         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3026   004152  C085  F008         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3027   004156  EC91  F031         	call	___fpclassifyf	;wreg free
  3028   00415A  0405               	decf	?___fpclassifyf^0,w,c
  3029   00415C  1006               	iorwf	(?___fpclassifyf+1)^0,w,c
  3030   00415E  A4D8               	btfss	status,2,c
  3031   004160  EFB4  F020         	goto	u5081
  3032   004164  EFB6  F020         	goto	u5080
  3033   004168                     u5081:
  3034   004168  EFE5  F020         	goto	l4092
  3035   00416C                     u5080:
  3036   00416C                     
  3037                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 620:   if (sign) 
      +                          {
  3038   00416C  0100               	movlb	0	; () banked
  3039   00416E  5181               	movf	efgtoa@sign& (0+255),w,b
  3040   004170  B4D8               	btfsc	status,2,c
  3041   004172  EFBD  F020         	goto	u5091
  3042   004176  EFBF  F020         	goto	u5090
  3043   00417A                     u5091:
  3044   00417A  EFC8  F020         	goto	l4084
  3045   00417E                     u5090:
  3046   00417E                     
  3047                           ; BSR set to: 0
  3048                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 621:    dbuf[0] =
      +                           sign;
  3049   00417E  C081  F100         	movff	efgtoa@sign,_dbuf
  3050   004182                     
  3051                           ; BSR set to: 0
  3052                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 622:    w--;
  3053   004182  0771               	decf	efgtoa@w& (0+255),f,b
  3054   004184  A0D8               	btfss	status,0,c
  3055   004186  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  3056   004188                     
  3057                           ; BSR set to: 0
  3058                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 623:    n = 1;
  3059   004188  0E00               	movlw	0
  3060   00418A  6F87               	movwf	(efgtoa@n+1)& (0+255),b
  3061   00418C  0E01               	movlw	1
  3062   00418E  6F86               	movwf	efgtoa@n& (0+255),b
  3063   004190                     l4084:
  3064                           
  3065                           ; BSR set to: 0
  3066                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 631:   {;C:\Progr
      +                          am Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 632:             strcpy(&d
      +                          buf[n], "inf");
  3067   004190  0E00               	movlw	low _dbuf
  3068   004192  2586               	addwf	efgtoa@n& (0+255),w,b
  3069   004194  6E05               	movwf	strcpy@dest^0,c
  3070   004196  0E01               	movlw	high _dbuf
  3071   004198  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3072   00419A  6E06               	movwf	(strcpy@dest+1)^0,c
  3073   00419C  0E29               	movlw	low STR_4
  3074   00419E  6E07               	movwf	strcpy@src^0,c
  3075   0041A0  EC8D  F034         	call	_strcpy	;wreg free
  3076   0041A4                     l4086:
  3077                           
  3078                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 633:         };C:
      +                          \Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 634:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  3079   0041A4  0100               	movlb	0	; () banked
  3080   0041A6  0EFD               	movlw	253
  3081   0041A8  2771               	addwf	efgtoa@w& (0+255),f,b
  3082   0041AA  0EFF               	movlw	255
  3083   0041AC  2372               	addwfc	(efgtoa@w+1)& (0+255),f,b
  3084   0041AE                     
  3085                           ; BSR set to: 0
  3086                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 635:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  3087   0041AE  C038  F013         	movff	efgtoa@fp,pad@fp
  3088   0041B2  0E00               	movlw	low _dbuf
  3089   0041B4  6E14               	movwf	pad@buf^0,c
  3090   0041B6  0E01               	movlw	high _dbuf
  3091   0041B8  6E15               	movwf	(pad@buf+1)^0,c
  3092   0041BA  C071  F016         	movff	efgtoa@w,pad@p
  3093   0041BE  C072  F017         	movff	efgtoa@w+1,pad@p+1
  3094   0041C2  EC88  F033         	call	_pad	;wreg free
  3095   0041C6  EF4B  F025         	goto	l861
  3096   0041CA                     l4092:
  3097                           
  3098                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 637:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  3099   0041CA  C082  F005         	movff	efgtoa@g,___fpclassifyf@x
  3100   0041CE  C083  F006         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3101   0041D2  C084  F007         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3102   0041D6  C085  F008         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3103   0041DA  EC91  F031         	call	___fpclassifyf	;wreg free
  3104   0041DE  5005               	movf	?___fpclassifyf^0,w,c
  3105   0041E0  1006               	iorwf	(?___fpclassifyf+1)^0,w,c
  3106   0041E2  A4D8               	btfss	status,2,c
  3107   0041E4  EFF6  F020         	goto	u5101
  3108   0041E8  EFF8  F020         	goto	u5100
  3109   0041EC                     u5101:
  3110   0041EC  EF16  F021         	goto	l4110
  3111   0041F0                     u5100:
  3112   0041F0                     
  3113                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 638:   if (sign) 
      +                          {
  3114   0041F0  0100               	movlb	0	; () banked
  3115   0041F2  5181               	movf	efgtoa@sign& (0+255),w,b
  3116   0041F4  B4D8               	btfsc	status,2,c
  3117   0041F6  EFFF  F020         	goto	u5111
  3118   0041FA  EF01  F021         	goto	u5110
  3119   0041FE                     u5111:
  3120   0041FE  EF0A  F021         	goto	l4102
  3121   004202                     u5110:
  3122   004202                     
  3123                           ; BSR set to: 0
  3124                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 639:    dbuf[0] =
      +                           sign;
  3125   004202  C081  F100         	movff	efgtoa@sign,_dbuf
  3126   004206                     
  3127                           ; BSR set to: 0
  3128                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 640:    w--;
  3129   004206  0771               	decf	efgtoa@w& (0+255),f,b
  3130   004208  A0D8               	btfss	status,0,c
  3131   00420A  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  3132   00420C                     
  3133                           ; BSR set to: 0
  3134                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 641:    n = 1;
  3135   00420C  0E00               	movlw	0
  3136   00420E  6F87               	movwf	(efgtoa@n+1)& (0+255),b
  3137   004210  0E01               	movlw	1
  3138   004212  6F86               	movwf	efgtoa@n& (0+255),b
  3139   004214                     l4102:
  3140                           
  3141                           ; BSR set to: 0
  3142                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 649:   {;C:\Progr
      +                          am Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 650:             strcpy(&d
      +                          buf[n], "nan");
  3143   004214  0E00               	movlw	low _dbuf
  3144   004216  2586               	addwf	efgtoa@n& (0+255),w,b
  3145   004218  6E05               	movwf	strcpy@dest^0,c
  3146   00421A  0E01               	movlw	high _dbuf
  3147   00421C  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3148   00421E  6E06               	movwf	(strcpy@dest+1)^0,c
  3149   004220  0E2D               	movlw	low STR_7
  3150   004222  6E07               	movwf	strcpy@src^0,c
  3151   004224  EC8D  F034         	call	_strcpy	;wreg free
  3152   004228  EFD2  F020         	goto	l4086
  3153   00422C                     l4110:
  3154                           
  3155                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 657:     u.f = 1.
      +                          0;
  3156   00422C  0E00               	movlw	0
  3157   00422E  0100               	movlb	0	; () banked
  3158   004230  6F88               	movwf	efgtoa@u& (0+255),b
  3159   004232  0E00               	movlw	0
  3160   004234  6F89               	movwf	(efgtoa@u+1)& (0+255),b
  3161   004236  0E80               	movlw	128
  3162   004238  6F8A               	movwf	(efgtoa@u+2)& (0+255),b
  3163   00423A  0E3F               	movlw	63
  3164   00423C  6F8B               	movwf	(efgtoa@u+3)& (0+255),b
  3165                           
  3166                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 658:     e = 0;
  3167   00423E  0E00               	movlw	0
  3168   004240  6F70               	movwf	(efgtoa@e+1)& (0+255),b
  3169   004242  0E00               	movlw	0
  3170   004244  6F6F               	movwf	efgtoa@e& (0+255),b
  3171   004246                     
  3172                           ; BSR set to: 0
  3173                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 659:  if (!(g.f =
      +                          = 0.0)) {
  3174   004246  C082  F005         	movff	efgtoa@g,___fleq@ff1
  3175   00424A  C083  F006         	movff	efgtoa@g+1,___fleq@ff1+1
  3176   00424E  C084  F007         	movff	efgtoa@g+2,___fleq@ff1+2
  3177   004252  C085  F008         	movff	efgtoa@g+3,___fleq@ff1+3
  3178   004256  0E00               	movlw	0
  3179   004258  6E09               	movwf	___fleq@ff2^0,c
  3180   00425A  0E00               	movlw	0
  3181   00425C  6E0A               	movwf	(___fleq@ff2+1)^0,c
  3182   00425E  0E00               	movlw	0
  3183   004260  6E0B               	movwf	(___fleq@ff2+2)^0,c
  3184   004262  0E00               	movlw	0
  3185   004264  6E0C               	movwf	(___fleq@ff2+3)^0,c
  3186   004266  ECC2  F032         	call	___fleq	;wreg free
  3187   00426A  B0D8               	btfsc	status,0,c
  3188   00426C  EF3A  F021         	goto	u5121
  3189   004270  EF3C  F021         	goto	u5120
  3190   004274                     u5121:
  3191   004274  EF1B  F022         	goto	l864
  3192   004278                     u5120:
  3193   004278  EF49  F021         	goto	l4118
  3194   00427C                     l866:
  3195                           
  3196                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 661:    u = ou;
  3197   00427C  C073  F088         	movff	efgtoa@ou,efgtoa@u
  3198   004280  C074  F089         	movff	efgtoa@ou+1,efgtoa@u+1
  3199   004284  C075  F08A         	movff	efgtoa@ou+2,efgtoa@u+2
  3200   004288  C076  F08B         	movff	efgtoa@ou+3,efgtoa@u+3
  3201   00428C                     
  3202                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 662:    ++e;
  3203   00428C  0100               	movlb	0	; () banked
  3204   00428E  4B6F               	infsnz	efgtoa@e& (0+255),f,b
  3205   004290  2B70               	incf	(efgtoa@e+1)& (0+255),f,b
  3206   004292                     l4118:
  3207                           
  3208                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 660:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  3209   004292  C088  F013         	movff	efgtoa@u,___flmul@b
  3210   004296  C089  F014         	movff	efgtoa@u+1,___flmul@b+1
  3211   00429A  C08A  F015         	movff	efgtoa@u+2,___flmul@b+2
  3212   00429E  C08B  F016         	movff	efgtoa@u+3,___flmul@b+3
  3213   0042A2  0E00               	movlw	0
  3214   0042A4  6E17               	movwf	___flmul@a^0,c
  3215   0042A6  0E00               	movlw	0
  3216   0042A8  6E18               	movwf	(___flmul@a+1)^0,c
  3217   0042AA  0E20               	movlw	32
  3218   0042AC  6E19               	movwf	(___flmul@a+2)^0,c
  3219   0042AE  0E41               	movlw	65
  3220   0042B0  6E1A               	movwf	(___flmul@a+3)^0,c
  3221   0042B2  ECA7  F027         	call	___flmul	;wreg free
  3222   0042B6  C013  F073         	movff	?___flmul,efgtoa@ou
  3223   0042BA  C014  F074         	movff	?___flmul+1,efgtoa@ou+1
  3224   0042BE  C015  F075         	movff	?___flmul+2,efgtoa@ou+2
  3225   0042C2  C016  F076         	movff	?___flmul+3,efgtoa@ou+3
  3226   0042C6  0100               	movlb	0	; () banked
  3227   0042C8  5173               	movf	efgtoa@ou& (0+255),w,b
  3228   0042CA  5D82               	subwf	efgtoa@g& (0+255),w,b
  3229   0042CC  6E05               	movwf	labs@a^0,c
  3230   0042CE  5174               	movf	(efgtoa@ou+1)& (0+255),w,b
  3231   0042D0  5983               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3232   0042D2  6E06               	movwf	(labs@a+1)^0,c
  3233   0042D4  5175               	movf	(efgtoa@ou+2)& (0+255),w,b
  3234   0042D6  5984               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3235   0042D8  6E07               	movwf	(labs@a+2)^0,c
  3236   0042DA  5176               	movf	(efgtoa@ou+3)& (0+255),w,b
  3237   0042DC  5985               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3238   0042DE  6E08               	movwf	(labs@a+3)^0,c
  3239   0042E0  EC19  F034         	call	_labs	;wreg free
  3240   0042E4  BE08               	btfsc	(?_labs+3)^0,7,c
  3241   0042E6  EF80  F021         	goto	u5131
  3242   0042EA  5008               	movf	(?_labs+3)^0,w,c
  3243   0042EC  1007               	iorwf	(?_labs+2)^0,w,c
  3244   0042EE  1006               	iorwf	(?_labs+1)^0,w,c
  3245   0042F0  E109               	bnz	u5130
  3246   0042F2  0E02               	movlw	2
  3247   0042F4  5C05               	subwf	?_labs^0,w,c
  3248   0042F6  A0D8               	btfss	status,0,c
  3249   0042F8  EF80  F021         	goto	u5131
  3250   0042FC  EF82  F021         	goto	u5130
  3251   004300                     u5131:
  3252   004300  EF3E  F021         	goto	l866
  3253   004304                     u5130:
  3254   004304  C073  F02C         	movff	efgtoa@ou,___flge@ff1
  3255   004308  C074  F02D         	movff	efgtoa@ou+1,___flge@ff1+1
  3256   00430C  C075  F02E         	movff	efgtoa@ou+2,___flge@ff1+2
  3257   004310  C076  F02F         	movff	efgtoa@ou+3,___flge@ff1+3
  3258   004314  C082  F030         	movff	efgtoa@g,___flge@ff2
  3259   004318  C083  F031         	movff	efgtoa@g+1,___flge@ff2+1
  3260   00431C  C084  F032         	movff	efgtoa@g+2,___flge@ff2+2
  3261   004320  C085  F033         	movff	efgtoa@g+3,___flge@ff2+3
  3262   004324  EC0F  F031         	call	___flge	;wreg free
  3263   004328  A0D8               	btfss	status,0,c
  3264   00432A  EF99  F021         	goto	u5141
  3265   00432E  EF9B  F021         	goto	u5140
  3266   004332                     u5141:
  3267   004332  EF3E  F021         	goto	l866
  3268   004336                     u5140:
  3269   004336                     
  3270                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 664:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  3271   004336  0100               	movlb	0	; () banked
  3272   004338  5188               	movf	efgtoa@u& (0+255),w,b
  3273   00433A  5D82               	subwf	efgtoa@g& (0+255),w,b
  3274   00433C  6E05               	movwf	labs@a^0,c
  3275   00433E  5189               	movf	(efgtoa@u+1)& (0+255),w,b
  3276   004340  5983               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3277   004342  6E06               	movwf	(labs@a+1)^0,c
  3278   004344  518A               	movf	(efgtoa@u+2)& (0+255),w,b
  3279   004346  5984               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3280   004348  6E07               	movwf	(labs@a+2)^0,c
  3281   00434A  518B               	movf	(efgtoa@u+3)& (0+255),w,b
  3282   00434C  5985               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3283   00434E  6E08               	movwf	(labs@a+3)^0,c
  3284   004350  EC19  F034         	call	_labs	;wreg free
  3285   004354  BE08               	btfsc	(?_labs+3)^0,7,c
  3286   004356  EFBA  F021         	goto	u5150
  3287   00435A  5008               	movf	(?_labs+3)^0,w,c
  3288   00435C  1007               	iorwf	(?_labs+2)^0,w,c
  3289   00435E  1006               	iorwf	(?_labs+1)^0,w,c
  3290   004360  E107               	bnz	u5151
  3291   004362  0E02               	movlw	2
  3292   004364  5C05               	subwf	?_labs^0,w,c
  3293   004366  B0D8               	btfsc	status,0,c
  3294   004368  EFB8  F021         	goto	u5151
  3295   00436C  EFBA  F021         	goto	u5150
  3296   004370                     u5151:
  3297   004370  EF02  F022         	goto	l4136
  3298   004374                     u5150:
  3299   004374                     l4126:
  3300                           
  3301                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 665:    g = u;
  3302   004374  C088  F082         	movff	efgtoa@u,efgtoa@g
  3303   004378  C089  F083         	movff	efgtoa@u+1,efgtoa@g+1
  3304   00437C  C08A  F084         	movff	efgtoa@u+2,efgtoa@g+2
  3305   004380  C08B  F085         	movff	efgtoa@u+3,efgtoa@g+3
  3306                           
  3307                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 666:   }
  3308   004384  EF1B  F022         	goto	l864
  3309   004388                     l4128:
  3310                           
  3311                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 669:     u.f = u.
      +                          f/10.0;
  3312   004388  C088  F005         	movff	efgtoa@u,___fldiv@b
  3313   00438C  C089  F006         	movff	efgtoa@u+1,___fldiv@b+1
  3314   004390  C08A  F007         	movff	efgtoa@u+2,___fldiv@b+2
  3315   004394  C08B  F008         	movff	efgtoa@u+3,___fldiv@b+3
  3316   004398  0E00               	movlw	0
  3317   00439A  6E09               	movwf	___fldiv@a^0,c
  3318   00439C  0E00               	movlw	0
  3319   00439E  6E0A               	movwf	(___fldiv@a+1)^0,c
  3320   0043A0  0E20               	movlw	32
  3321   0043A2  6E0B               	movwf	(___fldiv@a+2)^0,c
  3322   0043A4  0E41               	movlw	65
  3323   0043A6  6E0C               	movwf	(___fldiv@a+3)^0,c
  3324   0043A8  ECD7  F02B         	call	___fldiv	;wreg free
  3325   0043AC  C005  F088         	movff	?___fldiv,efgtoa@u
  3326   0043B0  C006  F089         	movff	?___fldiv+1,efgtoa@u+1
  3327   0043B4  C007  F08A         	movff	?___fldiv+2,efgtoa@u+2
  3328   0043B8  C008  F08B         	movff	?___fldiv+3,efgtoa@u+3
  3329   0043BC                     
  3330                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 670:     --e;
  3331   0043BC  0100               	movlb	0	; () banked
  3332   0043BE  076F               	decf	efgtoa@e& (0+255),f,b
  3333   0043C0  A0D8               	btfss	status,0,c
  3334   0043C2  0770               	decf	(efgtoa@e+1)& (0+255),f,b
  3335   0043C4                     
  3336                           ; BSR set to: 0
  3337                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 671:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  3338   0043C4  5188               	movf	efgtoa@u& (0+255),w,b
  3339   0043C6  5D82               	subwf	efgtoa@g& (0+255),w,b
  3340   0043C8  6E05               	movwf	labs@a^0,c
  3341   0043CA  5189               	movf	(efgtoa@u+1)& (0+255),w,b
  3342   0043CC  5983               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3343   0043CE  6E06               	movwf	(labs@a+1)^0,c
  3344   0043D0  518A               	movf	(efgtoa@u+2)& (0+255),w,b
  3345   0043D2  5984               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3346   0043D4  6E07               	movwf	(labs@a+2)^0,c
  3347   0043D6  518B               	movf	(efgtoa@u+3)& (0+255),w,b
  3348   0043D8  5985               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3349   0043DA  6E08               	movwf	(labs@a+3)^0,c
  3350   0043DC  EC19  F034         	call	_labs	;wreg free
  3351   0043E0  BE08               	btfsc	(?_labs+3)^0,7,c
  3352   0043E2  EF00  F022         	goto	u5160
  3353   0043E6  5008               	movf	(?_labs+3)^0,w,c
  3354   0043E8  1007               	iorwf	(?_labs+2)^0,w,c
  3355   0043EA  1006               	iorwf	(?_labs+1)^0,w,c
  3356   0043EC  E107               	bnz	u5161
  3357   0043EE  0E02               	movlw	2
  3358   0043F0  5C05               	subwf	?_labs^0,w,c
  3359   0043F2  B0D8               	btfsc	status,0,c
  3360   0043F4  EFFE  F021         	goto	u5161
  3361   0043F8  EF00  F022         	goto	u5160
  3362   0043FC                     u5161:
  3363   0043FC  EF02  F022         	goto	l4136
  3364   004400                     u5160:
  3365   004400  EFBA  F021         	goto	l4126
  3366   004404                     l4136:
  3367                           
  3368                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 668:    while (g.
      +                          f < u.f) {
  3369   004404  C082  F02C         	movff	efgtoa@g,___flge@ff1
  3370   004408  C083  F02D         	movff	efgtoa@g+1,___flge@ff1+1
  3371   00440C  C084  F02E         	movff	efgtoa@g+2,___flge@ff1+2
  3372   004410  C085  F02F         	movff	efgtoa@g+3,___flge@ff1+3
  3373   004414  C088  F030         	movff	efgtoa@u,___flge@ff2
  3374   004418  C089  F031         	movff	efgtoa@u+1,___flge@ff2+1
  3375   00441C  C08A  F032         	movff	efgtoa@u+2,___flge@ff2+2
  3376   004420  C08B  F033         	movff	efgtoa@u+3,___flge@ff2+3
  3377   004424  EC0F  F031         	call	___flge	;wreg free
  3378   004428  A0D8               	btfss	status,0,c
  3379   00442A  EF19  F022         	goto	u5171
  3380   00442E  EF1B  F022         	goto	u5170
  3381   004432                     u5171:
  3382   004432  EFC4  F021         	goto	l4128
  3383   004436                     u5170:
  3384   004436                     l864:
  3385                           
  3386                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 683:  mode = c;
  3387   004436  C03D  F069         	movff	efgtoa@c,efgtoa@mode
  3388                           
  3389                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 685:     nmode = 
      +                          mode;
  3390   00443A  C069  F06A         	movff	efgtoa@mode,efgtoa@nmode
  3391   00443E                     
  3392                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 695:  {;C:\Progra
      +                          m Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 696:         p = (prec < 0)
      +                           ? 6 : prec;
  3393   00443E  0100               	movlb	0	; () banked
  3394   004440  BFB3               	btfsc	(_prec+1)& (0+255),7,b
  3395   004442  EF25  F022         	goto	u5181
  3396   004446  EF27  F022         	goto	u5180
  3397   00444A                     u5181:
  3398   00444A  EF2D  F022         	goto	l4142
  3399   00444E                     u5180:
  3400   00444E                     
  3401                           ; BSR set to: 0
  3402   00444E  C0B2  F062         	movff	_prec,efgtoa@p
  3403   004452  C0B3  F063         	movff	_prec+1,efgtoa@p+1
  3404   004456  EF31  F022         	goto	l4144
  3405   00445A                     l4142:
  3406                           
  3407                           ; BSR set to: 0
  3408   00445A  0E00               	movlw	0
  3409   00445C  6F63               	movwf	(efgtoa@p+1)& (0+255),b
  3410   00445E  0E06               	movlw	6
  3411   004460  6F62               	movwf	efgtoa@p& (0+255),b
  3412   004462                     l4144:
  3413                           
  3414                           ; BSR set to: 0
  3415                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 697:     };C:\Pro
      +                          gram Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 711:     m = p;
  3416   004462  C062  F06D         	movff	efgtoa@p,efgtoa@m
  3417   004466  C063  F06E         	movff	efgtoa@p+1,efgtoa@m+1
  3418   00446A                     
  3419                           ; BSR set to: 0
  3420                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 715:  {;C:\Progra
      +                          m Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 716:         ++m;
  3421   00446A  4B6D               	infsnz	efgtoa@m& (0+255),f,b
  3422   00446C  2B6E               	incf	(efgtoa@m+1)& (0+255),f,b
  3423   00446E                     
  3424                           ; BSR set to: 0
  3425                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 717:     };C:\Pro
      +                          gram Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 721:     if (nmode == 'f
      +                          ') {
  3426   00446E  0E66               	movlw	102
  3427   004470  196A               	xorwf	efgtoa@nmode& (0+255),w,b
  3428   004472  A4D8               	btfss	status,2,c
  3429   004474  EF3E  F022         	goto	u5191
  3430   004478  EF40  F022         	goto	u5190
  3431   00447C                     u5191:
  3432   00447C  EF60  F022         	goto	l4158
  3433   004480                     u5190:
  3434   004480                     
  3435                           ; BSR set to: 0
  3436                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 722:         if (
      +                          e < 0) {
  3437   004480  BF70               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3438   004482  EF47  F022         	goto	u5200
  3439   004486  EF45  F022         	goto	u5201
  3440   00448A                     u5201:
  3441   00448A  EF53  F022         	goto	l4154
  3442   00448E                     u5200:
  3443   00448E                     
  3444                           ; BSR set to: 0
  3445                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 723:             
      +                          u.f = 1.0;
  3446   00448E  0E00               	movlw	0
  3447   004490  6F88               	movwf	efgtoa@u& (0+255),b
  3448   004492  0E00               	movlw	0
  3449   004494  6F89               	movwf	(efgtoa@u+1)& (0+255),b
  3450   004496  0E80               	movlw	128
  3451   004498  6F8A               	movwf	(efgtoa@u+2)& (0+255),b
  3452   00449A  0E3F               	movlw	63
  3453   00449C  6F8B               	movwf	(efgtoa@u+3)& (0+255),b
  3454                           
  3455                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 724:             
      +                          e = 0;
  3456   00449E  0E00               	movlw	0
  3457   0044A0  6F70               	movwf	(efgtoa@e+1)& (0+255),b
  3458   0044A2  0E00               	movlw	0
  3459   0044A4  6F6F               	movwf	efgtoa@e& (0+255),b
  3460   0044A6                     l4154:
  3461                           
  3462                           ; BSR set to: 0
  3463                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 726:         if (
      +                          !(mode == 'g')) {
  3464   0044A6  0E67               	movlw	103
  3465   0044A8  1969               	xorwf	efgtoa@mode& (0+255),w,b
  3466   0044AA  B4D8               	btfsc	status,2,c
  3467   0044AC  EF5A  F022         	goto	u5211
  3468   0044B0  EF5C  F022         	goto	u5210
  3469   0044B4                     u5211:
  3470   0044B4  EF60  F022         	goto	l4158
  3471   0044B8                     u5210:
  3472   0044B8                     
  3473                           ; BSR set to: 0
  3474                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 727:             
      +                          m += e;
  3475   0044B8  516F               	movf	efgtoa@e& (0+255),w,b
  3476   0044BA  276D               	addwf	efgtoa@m& (0+255),f,b
  3477   0044BC  5170               	movf	(efgtoa@e+1)& (0+255),w,b
  3478   0044BE  236E               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3479   0044C0                     l4158:
  3480                           
  3481                           ; BSR set to: 0
  3482                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 733:     i = 0;
  3483   0044C0  0E00               	movlw	0
  3484   0044C2  6F78               	movwf	(efgtoa@i+1)& (0+255),b
  3485   0044C4  0E00               	movlw	0
  3486   0044C6  6F77               	movwf	efgtoa@i& (0+255),b
  3487   0044C8                     
  3488                           ; BSR set to: 0
  3489                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 734:     h = g.f;
  3490   0044C8  C082  F079         	movff	efgtoa@g,efgtoa@h
  3491   0044CC  C083  F07A         	movff	efgtoa@g+1,efgtoa@h+1
  3492   0044D0  C084  F07B         	movff	efgtoa@g+2,efgtoa@h+2
  3493   0044D4  C085  F07C         	movff	efgtoa@g+3,efgtoa@h+3
  3494   0044D8                     
  3495                           ; BSR set to: 0
  3496                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 735:     ou = u;
  3497   0044D8  C088  F073         	movff	efgtoa@u,efgtoa@ou
  3498   0044DC  C089  F074         	movff	efgtoa@u+1,efgtoa@ou+1
  3499   0044E0  C08A  F075         	movff	efgtoa@u+2,efgtoa@ou+2
  3500   0044E4  C08B  F076         	movff	efgtoa@u+3,efgtoa@ou+3
  3501                           
  3502                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
  3503   0044E8  EFF1  F022         	goto	l4172
  3504   0044EC                     l4164:
  3505                           
  3506                           ; BSR set to: 0
  3507                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 737:         l = 
      +                          floorf(h/u.f);
  3508   0044EC  C079  F005         	movff	efgtoa@h,___fldiv@b
  3509   0044F0  C07A  F006         	movff	efgtoa@h+1,___fldiv@b+1
  3510   0044F4  C07B  F007         	movff	efgtoa@h+2,___fldiv@b+2
  3511   0044F8  C07C  F008         	movff	efgtoa@h+3,___fldiv@b+3
  3512   0044FC  C088  F009         	movff	efgtoa@u,___fldiv@a
  3513   004500  C089  F00A         	movff	efgtoa@u+1,___fldiv@a+1
  3514   004504  C08A  F00B         	movff	efgtoa@u+2,___fldiv@a+2
  3515   004508  C08B  F00C         	movff	efgtoa@u+3,___fldiv@a+3
  3516   00450C  ECD7  F02B         	call	___fldiv	;wreg free
  3517   004510  C005  F01E         	movff	?___fldiv,floorf@x
  3518   004514  C006  F01F         	movff	?___fldiv+1,floorf@x+1
  3519   004518  C007  F020         	movff	?___fldiv+2,floorf@x+2
  3520   00451C  C008  F021         	movff	?___fldiv+3,floorf@x+3
  3521   004520  ECA9  F02E         	call	_floorf	;wreg free
  3522   004524  C01E  F07D         	movff	?_floorf,efgtoa@l
  3523   004528  C01F  F07E         	movff	?_floorf+1,efgtoa@l+1
  3524   00452C  C020  F07F         	movff	?_floorf+2,efgtoa@l+2
  3525   004530  C021  F080         	movff	?_floorf+3,efgtoa@l+3
  3526                           
  3527                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 738:         d = 
      +                          (int)l;
  3528   004534  C07D  F005         	movff	efgtoa@l,___fltol@f1
  3529   004538  C07E  F006         	movff	efgtoa@l+1,___fltol@f1+1
  3530   00453C  C07F  F007         	movff	efgtoa@l+2,___fltol@f1+2
  3531   004540  C080  F008         	movff	efgtoa@l+3,___fltol@f1+3
  3532   004544  EC8C  F030         	call	___fltol	;wreg free
  3533   004548  C005  F06B         	movff	?___fltol,efgtoa@d
  3534   00454C  C006  F06C         	movff	?___fltol+1,efgtoa@d+1
  3535   004550                     
  3536                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 739:         h -=
      +                           l*u.f;
  3537   004550  C079  F02C         	movff	efgtoa@h,___flsub@b
  3538   004554  C07A  F02D         	movff	efgtoa@h+1,___flsub@b+1
  3539   004558  C07B  F02E         	movff	efgtoa@h+2,___flsub@b+2
  3540   00455C  C07C  F02F         	movff	efgtoa@h+3,___flsub@b+3
  3541   004560  C07D  F017         	movff	efgtoa@l,___flmul@a
  3542   004564  C07E  F018         	movff	efgtoa@l+1,___flmul@a+1
  3543   004568  C07F  F019         	movff	efgtoa@l+2,___flmul@a+2
  3544   00456C  C080  F01A         	movff	efgtoa@l+3,___flmul@a+3
  3545   004570  C088  F013         	movff	efgtoa@u,___flmul@b
  3546   004574  C089  F014         	movff	efgtoa@u+1,___flmul@b+1
  3547   004578  C08A  F015         	movff	efgtoa@u+2,___flmul@b+2
  3548   00457C  C08B  F016         	movff	efgtoa@u+3,___flmul@b+3
  3549   004580  ECA7  F027         	call	___flmul	;wreg free
  3550   004584  C013  F030         	movff	?___flmul,___flsub@a
  3551   004588  C014  F031         	movff	?___flmul+1,___flsub@a+1
  3552   00458C  C015  F032         	movff	?___flmul+2,___flsub@a+2
  3553   004590  C016  F033         	movff	?___flmul+3,___flsub@a+3
  3554   004594  ECB0  F034         	call	___flsub	;wreg free
  3555   004598  C02C  F079         	movff	?___flsub,efgtoa@h
  3556   00459C  C02D  F07A         	movff	?___flsub+1,efgtoa@h+1
  3557   0045A0  C02E  F07B         	movff	?___flsub+2,efgtoa@h+2
  3558   0045A4  C02F  F07C         	movff	?___flsub+3,efgtoa@h+3
  3559   0045A8                     
  3560                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 740:         u.f 
      +                          = u.f/10.0;
  3561   0045A8  C088  F005         	movff	efgtoa@u,___fldiv@b
  3562   0045AC  C089  F006         	movff	efgtoa@u+1,___fldiv@b+1
  3563   0045B0  C08A  F007         	movff	efgtoa@u+2,___fldiv@b+2
  3564   0045B4  C08B  F008         	movff	efgtoa@u+3,___fldiv@b+3
  3565   0045B8  0E00               	movlw	0
  3566   0045BA  6E09               	movwf	___fldiv@a^0,c
  3567   0045BC  0E00               	movlw	0
  3568   0045BE  6E0A               	movwf	(___fldiv@a+1)^0,c
  3569   0045C0  0E20               	movlw	32
  3570   0045C2  6E0B               	movwf	(___fldiv@a+2)^0,c
  3571   0045C4  0E41               	movlw	65
  3572   0045C6  6E0C               	movwf	(___fldiv@a+3)^0,c
  3573   0045C8  ECD7  F02B         	call	___fldiv	;wreg free
  3574   0045CC  C005  F088         	movff	?___fldiv,efgtoa@u
  3575   0045D0  C006  F089         	movff	?___fldiv+1,efgtoa@u+1
  3576   0045D4  C007  F08A         	movff	?___fldiv+2,efgtoa@u+2
  3577   0045D8  C008  F08B         	movff	?___fldiv+3,efgtoa@u+3
  3578   0045DC                     
  3579                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 741:         ++i;
  3580   0045DC  0100               	movlb	0	; () banked
  3581   0045DE  4B77               	infsnz	efgtoa@i& (0+255),f,b
  3582   0045E0  2B78               	incf	(efgtoa@i+1)& (0+255),f,b
  3583   0045E2                     l4172:
  3584                           
  3585                           ; BSR set to: 0
  3586                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
  3587   0045E2  516D               	movf	efgtoa@m& (0+255),w,b
  3588   0045E4  5D77               	subwf	efgtoa@i& (0+255),w,b
  3589   0045E6  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  3590   0045E8  0A80               	xorlw	128
  3591   0045EA  6E3E               	movwf	??_efgtoa^0,c
  3592   0045EC  516E               	movf	(efgtoa@m+1)& (0+255),w,b
  3593   0045EE  0A80               	xorlw	128
  3594   0045F0  583E               	subwfb	??_efgtoa^0,w,c
  3595   0045F2  A0D8               	btfss	status,0,c
  3596   0045F4  EFFE  F022         	goto	u5221
  3597   0045F8  EF00  F023         	goto	u5220
  3598   0045FC                     u5221:
  3599   0045FC  EF76  F022         	goto	l4164
  3600   004600                     u5220:
  3601   004600                     
  3602                           ; BSR set to: 0
  3603                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 745:     l = u.f*
      +                          5.0;
  3604   004600  C088  F013         	movff	efgtoa@u,___flmul@b
  3605   004604  C089  F014         	movff	efgtoa@u+1,___flmul@b+1
  3606   004608  C08A  F015         	movff	efgtoa@u+2,___flmul@b+2
  3607   00460C  C08B  F016         	movff	efgtoa@u+3,___flmul@b+3
  3608   004610  0E00               	movlw	0
  3609   004612  6E17               	movwf	___flmul@a^0,c
  3610   004614  0E00               	movlw	0
  3611   004616  6E18               	movwf	(___flmul@a+1)^0,c
  3612   004618  0EA0               	movlw	160
  3613   00461A  6E19               	movwf	(___flmul@a+2)^0,c
  3614   00461C  0E40               	movlw	64
  3615   00461E  6E1A               	movwf	(___flmul@a+3)^0,c
  3616   004620  ECA7  F027         	call	___flmul	;wreg free
  3617   004624  C013  F07D         	movff	?___flmul,efgtoa@l
  3618   004628  C014  F07E         	movff	?___flmul+1,efgtoa@l+1
  3619   00462C  C015  F07F         	movff	?___flmul+2,efgtoa@l+2
  3620   004630  C016  F080         	movff	?___flmul+3,efgtoa@l+3
  3621   004634                     
  3622                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 746:     if (h < 
      +                          l) {
  3623   004634  C079  F02C         	movff	efgtoa@h,___flge@ff1
  3624   004638  C07A  F02D         	movff	efgtoa@h+1,___flge@ff1+1
  3625   00463C  C07B  F02E         	movff	efgtoa@h+2,___flge@ff1+2
  3626   004640  C07C  F02F         	movff	efgtoa@h+3,___flge@ff1+3
  3627   004644  C07D  F030         	movff	efgtoa@l,___flge@ff2
  3628   004648  C07E  F031         	movff	efgtoa@l+1,___flge@ff2+1
  3629   00464C  C07F  F032         	movff	efgtoa@l+2,___flge@ff2+2
  3630   004650  C080  F033         	movff	efgtoa@l+3,___flge@ff2+3
  3631   004654  EC0F  F031         	call	___flge	;wreg free
  3632   004658  B0D8               	btfsc	status,0,c
  3633   00465A  EF31  F023         	goto	u5231
  3634   00465E  EF33  F023         	goto	u5230
  3635   004662                     u5231:
  3636   004662  EF3E  F023         	goto	l4180
  3637   004666                     u5230:
  3638   004666                     
  3639                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 747:         l = 
      +                          0.0;
  3640   004666  0E00               	movlw	0
  3641   004668  0100               	movlb	0	; () banked
  3642   00466A  6F7D               	movwf	efgtoa@l& (0+255),b
  3643   00466C  0E00               	movlw	0
  3644   00466E  6F7E               	movwf	(efgtoa@l+1)& (0+255),b
  3645   004670  0E00               	movlw	0
  3646   004672  6F7F               	movwf	(efgtoa@l+2)& (0+255),b
  3647   004674  0E00               	movlw	0
  3648   004676  6F80               	movwf	(efgtoa@l+3)& (0+255),b
  3649                           
  3650                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 748:     } else {
  3651   004678  EF67  F023         	goto	l4186
  3652   00467C                     l4180:
  3653                           
  3654                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 750:         if (
      +                          (h == l) && !(d % 2)) {
  3655   00467C  C079  F005         	movff	efgtoa@h,___fleq@ff1
  3656   004680  C07A  F006         	movff	efgtoa@h+1,___fleq@ff1+1
  3657   004684  C07B  F007         	movff	efgtoa@h+2,___fleq@ff1+2
  3658   004688  C07C  F008         	movff	efgtoa@h+3,___fleq@ff1+3
  3659   00468C  C07D  F009         	movff	efgtoa@l,___fleq@ff2
  3660   004690  C07E  F00A         	movff	efgtoa@l+1,___fleq@ff2+1
  3661   004694  C07F  F00B         	movff	efgtoa@l+2,___fleq@ff2+2
  3662   004698  C080  F00C         	movff	efgtoa@l+3,___fleq@ff2+3
  3663   00469C  ECC2  F032         	call	___fleq	;wreg free
  3664   0046A0  A0D8               	btfss	status,0,c
  3665   0046A2  EF55  F023         	goto	u5241
  3666   0046A6  EF57  F023         	goto	u5240
  3667   0046AA                     u5241:
  3668   0046AA  EF67  F023         	goto	l4186
  3669   0046AE                     u5240:
  3670   0046AE  0100               	movlb	0	; () banked
  3671   0046B0  B16B               	btfsc	efgtoa@d& (0+255),0,b
  3672   0046B2  EF5D  F023         	goto	u5251
  3673   0046B6  EF5F  F023         	goto	u5250
  3674   0046BA                     u5251:
  3675   0046BA  EF67  F023         	goto	l4186
  3676   0046BE                     u5250:
  3677   0046BE                     
  3678                           ; BSR set to: 0
  3679                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 751:             
      +                          l = 0.0;
  3680   0046BE  0E00               	movlw	0
  3681   0046C0  6F7D               	movwf	efgtoa@l& (0+255),b
  3682   0046C2  0E00               	movlw	0
  3683   0046C4  6F7E               	movwf	(efgtoa@l+1)& (0+255),b
  3684   0046C6  0E00               	movlw	0
  3685   0046C8  6F7F               	movwf	(efgtoa@l+2)& (0+255),b
  3686   0046CA  0E00               	movlw	0
  3687   0046CC  6F80               	movwf	(efgtoa@l+3)& (0+255),b
  3688   0046CE                     l4186:
  3689                           
  3690                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 756:     h = g.f 
      +                          + l;
  3691   0046CE  C082  F005         	movff	efgtoa@g,___fladd@b
  3692   0046D2  C083  F006         	movff	efgtoa@g+1,___fladd@b+1
  3693   0046D6  C084  F007         	movff	efgtoa@g+2,___fladd@b+2
  3694   0046DA  C085  F008         	movff	efgtoa@g+3,___fladd@b+3
  3695   0046DE  C07D  F009         	movff	efgtoa@l,___fladd@a
  3696   0046E2  C07E  F00A         	movff	efgtoa@l+1,___fladd@a+1
  3697   0046E6  C07F  F00B         	movff	efgtoa@l+2,___fladd@a+2
  3698   0046EA  C080  F00C         	movff	efgtoa@l+3,___fladd@a+3
  3699   0046EE  EC4C  F025         	call	___fladd	;wreg free
  3700   0046F2  C005  F079         	movff	?___fladd,efgtoa@h
  3701   0046F6  C006  F07A         	movff	?___fladd+1,efgtoa@h+1
  3702   0046FA  C007  F07B         	movff	?___fladd+2,efgtoa@h+2
  3703   0046FE  C008  F07C         	movff	?___fladd+3,efgtoa@h+3
  3704   004702                     
  3705                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 758:  if (h >= (o
      +                          u.f*10.0)) {
  3706   004702  C079  F02C         	movff	efgtoa@h,___flge@ff1
  3707   004706  C07A  F02D         	movff	efgtoa@h+1,___flge@ff1+1
  3708   00470A  C07B  F02E         	movff	efgtoa@h+2,___flge@ff1+2
  3709   00470E  C07C  F02F         	movff	efgtoa@h+3,___flge@ff1+3
  3710   004712  0E00               	movlw	0
  3711   004714  6E17               	movwf	___flmul@a^0,c
  3712   004716  0E00               	movlw	0
  3713   004718  6E18               	movwf	(___flmul@a+1)^0,c
  3714   00471A  0E20               	movlw	32
  3715   00471C  6E19               	movwf	(___flmul@a+2)^0,c
  3716   00471E  0E41               	movlw	65
  3717   004720  6E1A               	movwf	(___flmul@a+3)^0,c
  3718   004722  C073  F013         	movff	efgtoa@ou,___flmul@b
  3719   004726  C074  F014         	movff	efgtoa@ou+1,___flmul@b+1
  3720   00472A  C075  F015         	movff	efgtoa@ou+2,___flmul@b+2
  3721   00472E  C076  F016         	movff	efgtoa@ou+3,___flmul@b+3
  3722   004732  ECA7  F027         	call	___flmul	;wreg free
  3723   004736  C013  F030         	movff	?___flmul,___flge@ff2
  3724   00473A  C014  F031         	movff	?___flmul+1,___flge@ff2+1
  3725   00473E  C015  F032         	movff	?___flmul+2,___flge@ff2+2
  3726   004742  C016  F033         	movff	?___flmul+3,___flge@ff2+3
  3727   004746  EC0F  F031         	call	___flge	;wreg free
  3728   00474A  A0D8               	btfss	status,0,c
  3729   00474C  EFAA  F023         	goto	u5261
  3730   004750  EFAC  F023         	goto	u5260
  3731   004754                     u5261:
  3732   004754  EFD5  F023         	goto	l4198
  3733   004758                     u5260:
  3734   004758                     
  3735                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 759:   e++;
  3736   004758  0100               	movlb	0	; () banked
  3737   00475A  4B6F               	infsnz	efgtoa@e& (0+255),f,b
  3738   00475C  2B70               	incf	(efgtoa@e+1)& (0+255),f,b
  3739   00475E                     
  3740                           ; BSR set to: 0
  3741                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 760:   ou.f *= 10
      +                          .0;
  3742   00475E  C073  F013         	movff	efgtoa@ou,___flmul@b
  3743   004762  C074  F014         	movff	efgtoa@ou+1,___flmul@b+1
  3744   004766  C075  F015         	movff	efgtoa@ou+2,___flmul@b+2
  3745   00476A  C076  F016         	movff	efgtoa@ou+3,___flmul@b+3
  3746   00476E  0E00               	movlw	0
  3747   004770  6E17               	movwf	___flmul@a^0,c
  3748   004772  0E00               	movlw	0
  3749   004774  6E18               	movwf	(___flmul@a+1)^0,c
  3750   004776  0E20               	movlw	32
  3751   004778  6E19               	movwf	(___flmul@a+2)^0,c
  3752   00477A  0E41               	movlw	65
  3753   00477C  6E1A               	movwf	(___flmul@a+3)^0,c
  3754   00477E  ECA7  F027         	call	___flmul	;wreg free
  3755   004782  C013  F073         	movff	?___flmul,efgtoa@ou
  3756   004786  C014  F074         	movff	?___flmul+1,efgtoa@ou+1
  3757   00478A  C015  F075         	movff	?___flmul+2,efgtoa@ou+2
  3758   00478E  C016  F076         	movff	?___flmul+3,efgtoa@ou+3
  3759   004792                     
  3760                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 762:   if (nmode 
      +                          == 'f') {
  3761   004792  0E66               	movlw	102
  3762   004794  0100               	movlb	0	; () banked
  3763   004796  196A               	xorwf	efgtoa@nmode& (0+255),w,b
  3764   004798  A4D8               	btfss	status,2,c
  3765   00479A  EFD1  F023         	goto	u5271
  3766   00479E  EFD3  F023         	goto	u5270
  3767   0047A2                     u5271:
  3768   0047A2  EFD5  F023         	goto	l4198
  3769   0047A6                     u5270:
  3770   0047A6                     
  3771                           ; BSR set to: 0
  3772                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 764:    m++;
  3773   0047A6  4B6D               	infsnz	efgtoa@m& (0+255),f,b
  3774   0047A8  2B6E               	incf	(efgtoa@m+1)& (0+255),f,b
  3775   0047AA                     l4198:
  3776                           
  3777                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 770:     u = ou;
  3778   0047AA  C073  F088         	movff	efgtoa@ou,efgtoa@u
  3779   0047AE  C074  F089         	movff	efgtoa@ou+1,efgtoa@u+1
  3780   0047B2  C075  F08A         	movff	efgtoa@ou+2,efgtoa@u+2
  3781   0047B6  C076  F08B         	movff	efgtoa@ou+3,efgtoa@u+3
  3782   0047BA                     
  3783                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 774:  ne = e;
  3784   0047BA  C06F  F060         	movff	efgtoa@e,efgtoa@ne
  3785   0047BE  C070  F061         	movff	efgtoa@e+1,efgtoa@ne+1
  3786   0047C2                     
  3787                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 776:     pp = 0;
  3788   0047C2  0100               	movlb	0	; () banked
  3789   0047C4  6B68               	clrf	efgtoa@pp& (0+255),b
  3790   0047C6                     
  3791                           ; BSR set to: 0
  3792                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 777:     t = 0;
  3793   0047C6  0E00               	movlw	0
  3794   0047C8  6F65               	movwf	(efgtoa@t+1)& (0+255),b
  3795   0047CA  0E00               	movlw	0
  3796   0047CC  6F64               	movwf	efgtoa@t& (0+255),b
  3797   0047CE                     
  3798                           ; BSR set to: 0
  3799                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 778:     i = 0;
  3800   0047CE  0E00               	movlw	0
  3801   0047D0  6F78               	movwf	(efgtoa@i+1)& (0+255),b
  3802   0047D2  0E00               	movlw	0
  3803   0047D4  6F77               	movwf	efgtoa@i& (0+255),b
  3804                           
  3805                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3806   0047D6  EFD2  F024         	goto	l4248
  3807   0047DA                     l4208:
  3808                           
  3809                           ; BSR set to: 0
  3810                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 780:         l = 
      +                          floorf(h/u.f);
  3811   0047DA  C079  F005         	movff	efgtoa@h,___fldiv@b
  3812   0047DE  C07A  F006         	movff	efgtoa@h+1,___fldiv@b+1
  3813   0047E2  C07B  F007         	movff	efgtoa@h+2,___fldiv@b+2
  3814   0047E6  C07C  F008         	movff	efgtoa@h+3,___fldiv@b+3
  3815   0047EA  C088  F009         	movff	efgtoa@u,___fldiv@a
  3816   0047EE  C089  F00A         	movff	efgtoa@u+1,___fldiv@a+1
  3817   0047F2  C08A  F00B         	movff	efgtoa@u+2,___fldiv@a+2
  3818   0047F6  C08B  F00C         	movff	efgtoa@u+3,___fldiv@a+3
  3819   0047FA  ECD7  F02B         	call	___fldiv	;wreg free
  3820   0047FE  C005  F01E         	movff	?___fldiv,floorf@x
  3821   004802  C006  F01F         	movff	?___fldiv+1,floorf@x+1
  3822   004806  C007  F020         	movff	?___fldiv+2,floorf@x+2
  3823   00480A  C008  F021         	movff	?___fldiv+3,floorf@x+3
  3824   00480E  ECA9  F02E         	call	_floorf	;wreg free
  3825   004812  C01E  F07D         	movff	?_floorf,efgtoa@l
  3826   004816  C01F  F07E         	movff	?_floorf+1,efgtoa@l+1
  3827   00481A  C020  F07F         	movff	?_floorf+2,efgtoa@l+2
  3828   00481E  C021  F080         	movff	?_floorf+3,efgtoa@l+3
  3829                           
  3830                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 781:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  3831   004822  C07D  F005         	movff	efgtoa@l,___fltol@f1
  3832   004826  C07E  F006         	movff	efgtoa@l+1,___fltol@f1+1
  3833   00482A  C07F  F007         	movff	efgtoa@l+2,___fltol@f1+2
  3834   00482E  C080  F008         	movff	efgtoa@l+3,___fltol@f1+3
  3835   004832  EC8C  F030         	call	___fltol	;wreg free
  3836   004836  BE06               	btfsc	(?___fltol+1)^0,7,c
  3837   004838  EF29  F024         	goto	u5280
  3838   00483C  5006               	movf	(?___fltol+1)^0,w,c
  3839   00483E  E107               	bnz	u5281
  3840   004840  0E0A               	movlw	10
  3841   004842  5C05               	subwf	?___fltol^0,w,c
  3842   004844  B0D8               	btfsc	status,0,c
  3843   004846  EF27  F024         	goto	u5281
  3844   00484A  EF29  F024         	goto	u5280
  3845   00484E                     u5281:
  3846   00484E  EF39  F024         	goto	l4212
  3847   004852                     u5280:
  3848   004852  C07D  F005         	movff	efgtoa@l,___fltol@f1
  3849   004856  C07E  F006         	movff	efgtoa@l+1,___fltol@f1+1
  3850   00485A  C07F  F007         	movff	efgtoa@l+2,___fltol@f1+2
  3851   00485E  C080  F008         	movff	efgtoa@l+3,___fltol@f1+3
  3852   004862  EC8C  F030         	call	___fltol	;wreg free
  3853   004866  C005  F06B         	movff	?___fltol,efgtoa@d
  3854   00486A  C006  F06C         	movff	?___fltol+1,efgtoa@d+1
  3855   00486E  EF3E  F024         	goto	l894
  3856   004872                     l4212:
  3857   004872  0E00               	movlw	0
  3858   004874  0100               	movlb	0	; () banked
  3859   004876  6F6C               	movwf	(efgtoa@d+1)& (0+255),b
  3860   004878  0E09               	movlw	9
  3861   00487A  6F6B               	movwf	efgtoa@d& (0+255),b
  3862   00487C                     l894:
  3863                           
  3864                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 792:   {;C:\Progr
      +                          am Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 793:             if (!pp &
      +                          & (ne < 0)) {
  3865   00487C  0100               	movlb	0	; () banked
  3866   00487E  5168               	movf	efgtoa@pp& (0+255),w,b
  3867   004880  A4D8               	btfss	status,2,c
  3868   004882  EF45  F024         	goto	u5291
  3869   004886  EF47  F024         	goto	u5290
  3870   00488A                     u5291:
  3871   00488A  EF6F  F024         	goto	l4232
  3872   00488E                     u5290:
  3873   00488E                     
  3874                           ; BSR set to: 0
  3875   00488E  BF61               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3876   004890  EF4E  F024         	goto	u5300
  3877   004894  EF4C  F024         	goto	u5301
  3878   004898                     u5301:
  3879   004898  EF6F  F024         	goto	l4232
  3880   00489C                     u5300:
  3881   00489C                     
  3882                           ; BSR set to: 0
  3883                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 794:             
      +                              dbuf[n++] = '.';
  3884   00489C  0E00               	movlw	low _dbuf
  3885   00489E  2586               	addwf	efgtoa@n& (0+255),w,b
  3886   0048A0  6ED9               	movwf	fsr2l,c
  3887   0048A2  0E01               	movlw	high _dbuf
  3888   0048A4  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3889   0048A6  6EDA               	movwf	fsr2h,c
  3890   0048A8  0E2E               	movlw	46
  3891   0048AA  6EDF               	movwf	indf2,c
  3892   0048AC                     
  3893                           ; BSR set to: 0
  3894   0048AC  4B86               	infsnz	efgtoa@n& (0+255),f,b
  3895   0048AE  2B87               	incf	(efgtoa@n+1)& (0+255),f,b
  3896   0048B0                     
  3897                           ; BSR set to: 0
  3898                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 795:             
      +                              --w;
  3899   0048B0  0771               	decf	efgtoa@w& (0+255),f,b
  3900   0048B2  A0D8               	btfss	status,0,c
  3901   0048B4  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  3902   0048B6                     
  3903                           ; BSR set to: 0
  3904                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 796:             
      +                              pp = 1;
  3905   0048B6  0E01               	movlw	1
  3906   0048B8  6F68               	movwf	efgtoa@pp& (0+255),b
  3907   0048BA  EF6F  F024         	goto	l4232
  3908   0048BE                     l4224:
  3909                           
  3910                           ; BSR set to: 0
  3911                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 799:             
      +                              dbuf[n++] = '0';
  3912   0048BE  0E00               	movlw	low _dbuf
  3913   0048C0  2586               	addwf	efgtoa@n& (0+255),w,b
  3914   0048C2  6ED9               	movwf	fsr2l,c
  3915   0048C4  0E01               	movlw	high _dbuf
  3916   0048C6  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3917   0048C8  6EDA               	movwf	fsr2h,c
  3918   0048CA  0E30               	movlw	48
  3919   0048CC  6EDF               	movwf	indf2,c
  3920   0048CE                     
  3921                           ; BSR set to: 0
  3922   0048CE  4B86               	infsnz	efgtoa@n& (0+255),f,b
  3923   0048D0  2B87               	incf	(efgtoa@n+1)& (0+255),f,b
  3924   0048D2                     
  3925                           ; BSR set to: 0
  3926                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 800:             
      +                              --w;
  3927   0048D2  0771               	decf	efgtoa@w& (0+255),f,b
  3928   0048D4  A0D8               	btfss	status,0,c
  3929   0048D6  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  3930   0048D8                     
  3931                           ; BSR set to: 0
  3932                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 801:             
      +                              --t;
  3933   0048D8  0764               	decf	efgtoa@t& (0+255),f,b
  3934   0048DA  A0D8               	btfss	status,0,c
  3935   0048DC  0765               	decf	(efgtoa@t+1)& (0+255),f,b
  3936   0048DE                     l4232:
  3937                           
  3938                           ; BSR set to: 0
  3939                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 798:             
      +                          while (t) {
  3940   0048DE  5164               	movf	efgtoa@t& (0+255),w,b
  3941   0048E0  1165               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3942   0048E2  A4D8               	btfss	status,2,c
  3943   0048E4  EF76  F024         	goto	u5311
  3944   0048E8  EF78  F024         	goto	u5310
  3945   0048EC                     u5311:
  3946   0048EC  EF5F  F024         	goto	l4224
  3947   0048F0                     u5310:
  3948   0048F0                     
  3949                           ; BSR set to: 0
  3950                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 803:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  3951   0048F0  0E00               	movlw	low _dbuf
  3952   0048F2  2586               	addwf	efgtoa@n& (0+255),w,b
  3953   0048F4  6ED9               	movwf	fsr2l,c
  3954   0048F6  0E01               	movlw	high _dbuf
  3955   0048F8  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3956   0048FA  6EDA               	movwf	fsr2h,c
  3957   0048FC  516B               	movf	efgtoa@d& (0+255),w,b
  3958   0048FE  0F30               	addlw	48
  3959   004900  6EDF               	movwf	indf2,c
  3960   004902                     
  3961                           ; BSR set to: 0
  3962   004902  4B86               	infsnz	efgtoa@n& (0+255),f,b
  3963   004904  2B87               	incf	(efgtoa@n+1)& (0+255),f,b
  3964   004906                     
  3965                           ; BSR set to: 0
  3966                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 804:             
      +                          --w;
  3967   004906  0771               	decf	efgtoa@w& (0+255),f,b
  3968   004908  A0D8               	btfss	status,0,c
  3969   00490A  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  3970   00490C                     
  3971                           ; BSR set to: 0
  3972                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 805:         };C:
      +                          \Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 806:         h -= l*
      +                          u.f;
  3973   00490C  C079  F02C         	movff	efgtoa@h,___flsub@b
  3974   004910  C07A  F02D         	movff	efgtoa@h+1,___flsub@b+1
  3975   004914  C07B  F02E         	movff	efgtoa@h+2,___flsub@b+2
  3976   004918  C07C  F02F         	movff	efgtoa@h+3,___flsub@b+3
  3977   00491C  C07D  F017         	movff	efgtoa@l,___flmul@a
  3978   004920  C07E  F018         	movff	efgtoa@l+1,___flmul@a+1
  3979   004924  C07F  F019         	movff	efgtoa@l+2,___flmul@a+2
  3980   004928  C080  F01A         	movff	efgtoa@l+3,___flmul@a+3
  3981   00492C  C088  F013         	movff	efgtoa@u,___flmul@b
  3982   004930  C089  F014         	movff	efgtoa@u+1,___flmul@b+1
  3983   004934  C08A  F015         	movff	efgtoa@u+2,___flmul@b+2
  3984   004938  C08B  F016         	movff	efgtoa@u+3,___flmul@b+3
  3985   00493C  ECA7  F027         	call	___flmul	;wreg free
  3986   004940  C013  F030         	movff	?___flmul,___flsub@a
  3987   004944  C014  F031         	movff	?___flmul+1,___flsub@a+1
  3988   004948  C015  F032         	movff	?___flmul+2,___flsub@a+2
  3989   00494C  C016  F033         	movff	?___flmul+3,___flsub@a+3
  3990   004950  ECB0  F034         	call	___flsub	;wreg free
  3991   004954  C02C  F079         	movff	?___flsub,efgtoa@h
  3992   004958  C02D  F07A         	movff	?___flsub+1,efgtoa@h+1
  3993   00495C  C02E  F07B         	movff	?___flsub+2,efgtoa@h+2
  3994   004960  C02F  F07C         	movff	?___flsub+3,efgtoa@h+3
  3995   004964                     
  3996                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 807:         u.f 
      +                          = u.f/10.0;
  3997   004964  C088  F005         	movff	efgtoa@u,___fldiv@b
  3998   004968  C089  F006         	movff	efgtoa@u+1,___fldiv@b+1
  3999   00496C  C08A  F007         	movff	efgtoa@u+2,___fldiv@b+2
  4000   004970  C08B  F008         	movff	efgtoa@u+3,___fldiv@b+3
  4001   004974  0E00               	movlw	0
  4002   004976  6E09               	movwf	___fldiv@a^0,c
  4003   004978  0E00               	movlw	0
  4004   00497A  6E0A               	movwf	(___fldiv@a+1)^0,c
  4005   00497C  0E20               	movlw	32
  4006   00497E  6E0B               	movwf	(___fldiv@a+2)^0,c
  4007   004980  0E41               	movlw	65
  4008   004982  6E0C               	movwf	(___fldiv@a+3)^0,c
  4009   004984  ECD7  F02B         	call	___fldiv	;wreg free
  4010   004988  C005  F088         	movff	?___fldiv,efgtoa@u
  4011   00498C  C006  F089         	movff	?___fldiv+1,efgtoa@u+1
  4012   004990  C007  F08A         	movff	?___fldiv+2,efgtoa@u+2
  4013   004994  C008  F08B         	movff	?___fldiv+3,efgtoa@u+3
  4014   004998                     
  4015                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 808:         --ne
      +                          ;
  4016   004998  0100               	movlb	0	; () banked
  4017   00499A  0760               	decf	efgtoa@ne& (0+255),f,b
  4018   00499C  A0D8               	btfss	status,0,c
  4019   00499E  0761               	decf	(efgtoa@ne+1)& (0+255),f,b
  4020   0049A0                     
  4021                           ; BSR set to: 0
  4022                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 809:         ++i;
  4023   0049A0  4B77               	infsnz	efgtoa@i& (0+255),f,b
  4024   0049A2  2B78               	incf	(efgtoa@i+1)& (0+255),f,b
  4025   0049A4                     l4248:
  4026                           
  4027                           ; BSR set to: 0
  4028                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4029   0049A4  516D               	movf	efgtoa@m& (0+255),w,b
  4030   0049A6  5D77               	subwf	efgtoa@i& (0+255),w,b
  4031   0049A8  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  4032   0049AA  0A80               	xorlw	128
  4033   0049AC  6E3E               	movwf	??_efgtoa^0,c
  4034   0049AE  516E               	movf	(efgtoa@m+1)& (0+255),w,b
  4035   0049B0  0A80               	xorlw	128
  4036   0049B2  583E               	subwfb	??_efgtoa^0,w,c
  4037   0049B4  B0D8               	btfsc	status,0,c
  4038   0049B6  EFDF  F024         	goto	u5321
  4039   0049BA  EFE1  F024         	goto	u5320
  4040   0049BE                     u5321:
  4041   0049BE  EFEF  F024         	goto	l4252
  4042   0049C2                     u5320:
  4043   0049C2                     
  4044                           ; BSR set to: 0
  4045   0049C2  BF87               	btfsc	(efgtoa@n+1)& (0+255),7,b
  4046   0049C4  EFED  F024         	goto	u5331
  4047   0049C8  5187               	movf	(efgtoa@n+1)& (0+255),w,b
  4048   0049CA  E109               	bnz	u5330
  4049   0049CC  0E4B               	movlw	75
  4050   0049CE  5D86               	subwf	efgtoa@n& (0+255),w,b
  4051   0049D0  A0D8               	btfss	status,0,c
  4052   0049D2  EFED  F024         	goto	u5331
  4053   0049D6  EFEF  F024         	goto	u5330
  4054   0049DA                     u5331:
  4055   0049DA  EFED  F023         	goto	l4208
  4056   0049DE                     u5330:
  4057   0049DE                     l4252:
  4058                           
  4059                           ; BSR set to: 0
  4060                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 816:  i = sizeof(
      +                          dbuf) - 1;
  4061   0049DE  0E00               	movlw	0
  4062   0049E0  6F78               	movwf	(efgtoa@i+1)& (0+255),b
  4063   0049E2  0E4F               	movlw	79
  4064   0049E4  6F77               	movwf	efgtoa@i& (0+255),b
  4065   0049E6                     
  4066                           ; BSR set to: 0
  4067                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 817:     dbuf[i] 
      +                          = '\0';
  4068   0049E6  0E00               	movlw	low _dbuf
  4069   0049E8  2577               	addwf	efgtoa@i& (0+255),w,b
  4070   0049EA  6ED9               	movwf	fsr2l,c
  4071   0049EC  0E01               	movlw	high _dbuf
  4072   0049EE  2178               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4073   0049F0  6EDA               	movwf	fsr2h,c
  4074   0049F2  6ADF               	clrf	indf2,c
  4075   0049F4                     
  4076                           ; BSR set to: 0
  4077                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 848:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  4078   0049F4  0E00               	movlw	low _dbuf
  4079   0049F6  6E3E               	movwf	??_efgtoa^0,c
  4080   0049F8  0E01               	movlw	high _dbuf
  4081   0049FA  6E3F               	movwf	(??_efgtoa+1)^0,c
  4082   0049FC  5186               	movf	efgtoa@n& (0+255),w,b
  4083   0049FE  5E3E               	subwf	??_efgtoa^0,f,c
  4084   004A00  5187               	movf	(efgtoa@n+1)& (0+255),w,b
  4085   004A02  5A3F               	subwfb	(??_efgtoa+1)^0,f,c
  4086   004A04  5177               	movf	efgtoa@i& (0+255),w,b
  4087   004A06  243E               	addwf	??_efgtoa^0,w,c
  4088   004A08  6E05               	movwf	memcpy@d1^0,c
  4089   004A0A  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  4090   004A0C  203F               	addwfc	(??_efgtoa+1)^0,w,c
  4091   004A0E  6E06               	movwf	(memcpy@d1+1)^0,c
  4092   004A10  0E00               	movlw	low _dbuf
  4093   004A12  6E07               	movwf	memcpy@s1^0,c
  4094   004A14  0E01               	movlw	high _dbuf
  4095   004A16  6E08               	movwf	(memcpy@s1+1)^0,c
  4096   004A18  C086  F009         	movff	efgtoa@n,memcpy@n
  4097   004A1C  C087  F00A         	movff	efgtoa@n+1,memcpy@n+1
  4098   004A20  ECEC  F033         	call	_memcpy	;wreg free
  4099   004A24                     
  4100                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 849:  n = i-n;
  4101   004A24  0100               	movlb	0	; () banked
  4102   004A26  5186               	movf	efgtoa@n& (0+255),w,b
  4103   004A28  5D77               	subwf	efgtoa@i& (0+255),w,b
  4104   004A2A  6F86               	movwf	efgtoa@n& (0+255),b
  4105   004A2C  5187               	movf	(efgtoa@n+1)& (0+255),w,b
  4106   004A2E  5978               	subwfb	(efgtoa@i+1)& (0+255),w,b
  4107   004A30  6F87               	movwf	(efgtoa@n+1)& (0+255),b
  4108   004A32                     
  4109                           ; BSR set to: 0
  4110                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 850:  i = sign ==
      +                           0 ? 0 : 1;
  4111   004A32  5181               	movf	efgtoa@sign& (0+255),w,b
  4112   004A34  A4D8               	btfss	status,2,c
  4113   004A36  EF1F  F025         	goto	u5341
  4114   004A3A  EF22  F025         	goto	u5340
  4115   004A3E                     u5341:
  4116   004A3E  0E01               	movlw	1
  4117   004A40  EF23  F025         	goto	u5350
  4118   004A44                     u5340:
  4119   004A44  0E00               	movlw	0
  4120   004A46                     u5350:
  4121   004A46  6F77               	movwf	efgtoa@i& (0+255),b
  4122   004A48  6B78               	clrf	(efgtoa@i+1)& (0+255),b
  4123   004A4A                     
  4124                           ; BSR set to: 0
  4125                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 861:  if (sign) {
  4126   004A4A  5181               	movf	efgtoa@sign& (0+255),w,b
  4127   004A4C  B4D8               	btfsc	status,2,c
  4128   004A4E  EF2B  F025         	goto	u5361
  4129   004A52  EF2D  F025         	goto	u5360
  4130   004A56                     u5361:
  4131   004A56  EF39  F025         	goto	l4266
  4132   004A5A                     u5360:
  4133   004A5A                     
  4134                           ; BSR set to: 0
  4135                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 862:   dbuf[--n] 
      +                          = sign;
  4136   004A5A  0786               	decf	efgtoa@n& (0+255),f,b
  4137   004A5C  A0D8               	btfss	status,0,c
  4138   004A5E  0787               	decf	(efgtoa@n+1)& (0+255),f,b
  4139   004A60  0E00               	movlw	low _dbuf
  4140   004A62  2586               	addwf	efgtoa@n& (0+255),w,b
  4141   004A64  6ED9               	movwf	fsr2l,c
  4142   004A66  0E01               	movlw	high _dbuf
  4143   004A68  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4144   004A6A  6EDA               	movwf	fsr2h,c
  4145   004A6C  0060  F207  FFDF   	movff	efgtoa@sign,indf2
  4146   004A72                     l4266:
  4147                           
  4148                           ; BSR set to: 0
  4149                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 864:  w -= i;
  4150   004A72  5177               	movf	efgtoa@i& (0+255),w,b
  4151   004A74  5F71               	subwf	efgtoa@w& (0+255),f,b
  4152   004A76  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  4153   004A78  5B72               	subwfb	(efgtoa@w+1)& (0+255),f,b
  4154   004A7A                     
  4155                           ; BSR set to: 0
  4156                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 867:     return (
      +                          void) pad(fp, &dbuf[n], w);
  4157   004A7A  C038  F013         	movff	efgtoa@fp,pad@fp
  4158   004A7E  0E00               	movlw	low _dbuf
  4159   004A80  2586               	addwf	efgtoa@n& (0+255),w,b
  4160   004A82  6E14               	movwf	pad@buf^0,c
  4161   004A84  0E01               	movlw	high _dbuf
  4162   004A86  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4163   004A88  6E15               	movwf	(pad@buf+1)^0,c
  4164   004A8A  C071  F016         	movff	efgtoa@w,pad@p
  4165   004A8E  C072  F017         	movff	efgtoa@w+1,pad@p+1
  4166   004A92  EC88  F033         	call	_pad	;wreg free
  4167   004A96                     l861:
  4168   004A96  0012               	return		;funcret
  4169   004A98                     __end_of_efgtoa:
  4170                           	callstack 0
  4171                           
  4172 ;; *************** function _strcpy *****************
  4173 ;; Defined at:
  4174 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\strcpy.c"
  4175 ;; Parameters:    Size  Location     Type
  4176 ;;  dest            2    4[COMRAM] PTR unsigned char 
  4177 ;;		 -> dbuf(80), 
  4178 ;;  src             1    6[COMRAM] PTR const unsigned char 
  4179 ;;		 -> STR_7(4), STR_4(4), 
  4180 ;; Auto vars:     Size  Location     Type
  4181 ;;  d               2    8[COMRAM] PTR unsigned char 
  4182 ;;		 -> dbuf(80), 
  4183 ;; Return value:  Size  Location     Type
  4184 ;;                  2    4[COMRAM] PTR unsigned char 
  4185 ;; Registers used:
  4186 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4187 ;; Tracked objects:
  4188 ;;		On entry : 0/0
  4189 ;;		On exit  : 0/0
  4190 ;;		Unchanged: 0/0
  4191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4192 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4193 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4194 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4195 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4196 ;;Total ram usage:        6 bytes
  4197 ;; Hardware stack levels used: 1
  4198 ;; Hardware stack levels required when called: 1
  4199 ;; This function calls:
  4200 ;;		Nothing
  4201 ;; This function is called by:
  4202 ;;		_efgtoa
  4203 ;; This function uses a non-reentrant model
  4204 ;;
  4205                           
  4206                           	psect	text7
  4207   00691A                     __ptext7:
  4208                           	callstack 0
  4209   00691A                     _strcpy:
  4210                           	callstack 25
  4211   00691A  C005  F009         	movff	strcpy@dest,strcpy@d
  4212   00691E  C006  F00A         	movff	strcpy@dest+1,strcpy@d+1
  4213   006922                     l4002:
  4214   006922  2A07               	incf	strcpy@src^0,f,c
  4215   006924  0407               	decf	strcpy@src^0,w,c
  4216   006926  6E08               	movwf	??_strcpy^0,c
  4217   006928  0060  F023  FFF6   	movff	??_strcpy,tblptrl
  4218   00692E                     	if	1	;There is more than 1 active tblptr byte
  4219   00692E  0E20               	movlw	high __smallconst
  4220   006930  6EF7               	movwf	tblptrh,c
  4221   006932                     	endif
  4222   006932                     	if	0	;tblptru may be non-zero
  4223   006932                     	endif
  4224   006932                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4225   006932  0E00               	movlw	low (__smallconst shr (0+16))
  4226   006934  6EF8               	movwf	tblptru,c
  4227   006936                     	endif
  4228   006936  0060  F027  FFD9   	movff	strcpy@d,fsr2l
  4229   00693C  0060  F02B  FFDA   	movff	strcpy@d+1,fsr2h
  4230   006942  4A09               	infsnz	strcpy@d^0,f,c
  4231   006944  2A0A               	incf	(strcpy@d+1)^0,f,c
  4232   006946  0008               	tblrd		*
  4233   006948  006F FFD7 FFDF     	movff	tablat,indf2
  4234   00694E  50DF               	movf	indf2,w,c
  4235   006950  A4D8               	btfss	status,2,c
  4236   006952  EFAD  F034         	goto	u4921
  4237   006956  EFAF  F034         	goto	u4920
  4238   00695A                     u4921:
  4239   00695A  EF91  F034         	goto	l4002
  4240   00695E                     u4920:
  4241   00695E  0012               	return		;funcret
  4242   006960                     __end_of_strcpy:
  4243                           	callstack 0
  4244                           
  4245 ;; *************** function _pad *****************
  4246 ;; Defined at:
  4247 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  4248 ;; Parameters:    Size  Location     Type
  4249 ;;  fp              1   18[COMRAM] PTR struct _IO_FILE
  4250 ;;		 -> sprintf@f(11), 
  4251 ;;  buf             2   19[COMRAM] PTR unsigned char 
  4252 ;;		 -> dbuf(80), 
  4253 ;;  p               2   21[COMRAM] int 
  4254 ;; Auto vars:     Size  Location     Type
  4255 ;;  i               2   24[COMRAM] int 
  4256 ;; Return value:  Size  Location     Type
  4257 ;;                  1    wreg      void 
  4258 ;; Registers used:
  4259 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4260 ;; Tracked objects:
  4261 ;;		On entry : 0/0
  4262 ;;		On exit  : 0/0
  4263 ;;		Unchanged: 0/0
  4264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4265 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4266 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4267 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4268 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4269 ;;Total ram usage:        8 bytes
  4270 ;; Hardware stack levels used: 1
  4271 ;; Hardware stack levels required when called: 4
  4272 ;; This function calls:
  4273 ;;		_fputc
  4274 ;;		_fputs
  4275 ;; This function is called by:
  4276 ;;		_efgtoa
  4277 ;; This function uses a non-reentrant model
  4278 ;;
  4279                           
  4280                           	psect	text8
  4281   006710                     __ptext8:
  4282                           	callstack 0
  4283   006710                     _pad:
  4284                           	callstack 22
  4285   006710                     
  4286                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c:
      +                           205:  if (p < 0) {
  4287   006710  BE17               	btfsc	(pad@p+1)^0,7,c
  4288   006712  EF8F  F033         	goto	u4830
  4289   006716  EF8D  F033         	goto	u4831
  4290   00671A                     u4831:
  4291   00671A  EF93  F033         	goto	l846
  4292   00671E                     u4830:
  4293   00671E                     
  4294                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 206:   p = 0;
  4295   00671E  0E00               	movlw	0
  4296   006720  6E17               	movwf	(pad@p+1)^0,c
  4297   006722  0E00               	movlw	0
  4298   006724  6E16               	movwf	pad@p^0,c
  4299   006726                     l846:
  4300                           
  4301                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 208:     i = 0;
  4302   006726  0E00               	movlw	0
  4303   006728  6E1A               	movwf	(pad@i+1)^0,c
  4304   00672A  0E00               	movlw	0
  4305   00672C  6E19               	movwf	pad@i^0,c
  4306                           
  4307                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  4308   00672E  EFA3  F033         	goto	l3974
  4309   006732                     l3970:
  4310                           
  4311                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
  4312   006732  0E00               	movlw	0
  4313   006734  6E06               	movwf	(fputc@c+1)^0,c
  4314   006736  0E20               	movlw	32
  4315   006738  6E05               	movwf	fputc@c^0,c
  4316   00673A  C013  F007         	movff	pad@fp,fputc@fp
  4317   00673E  EC6C  F032         	call	_fputc	;wreg free
  4318   006742                     
  4319                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 211:         ++i;
  4320   006742  4A19               	infsnz	pad@i^0,f,c
  4321   006744  2A1A               	incf	(pad@i+1)^0,f,c
  4322   006746                     l3974:
  4323                           
  4324                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  4325   006746  5016               	movf	pad@p^0,w,c
  4326   006748  5C19               	subwf	pad@i^0,w,c
  4327   00674A  501A               	movf	(pad@i+1)^0,w,c
  4328   00674C  0A80               	xorlw	128
  4329   00674E  6E18               	movwf	??_pad^0,c
  4330   006750  5017               	movf	(pad@p+1)^0,w,c
  4331   006752  0A80               	xorlw	128
  4332   006754  5818               	subwfb	??_pad^0,w,c
  4333   006756  A0D8               	btfss	status,0,c
  4334   006758  EFB0  F033         	goto	u4841
  4335   00675C  EFB2  F033         	goto	u4840
  4336   006760                     u4841:
  4337   006760  EF99  F033         	goto	l3970
  4338   006764                     u4840:
  4339   006764                     
  4340                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
  4341   006764  C014  F00D         	movff	pad@buf,fputs@s
  4342   006768  C015  F00E         	movff	pad@buf+1,fputs@s+1
  4343   00676C  C013  F00F         	movff	pad@fp,fputs@fp
  4344   006770  ECD3  F034         	call	_fputs	;wreg free
  4345   006774  0012               	return		;funcret
  4346   006776                     __end_of_pad:
  4347                           	callstack 0
  4348                           
  4349 ;; *************** function _fputs *****************
  4350 ;; Defined at:
  4351 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputs.c"
  4352 ;; Parameters:    Size  Location     Type
  4353 ;;  s               2   12[COMRAM] PTR const unsigned char 
  4354 ;;		 -> dbuf(80), 
  4355 ;;  fp              1   14[COMRAM] PTR struct _IO_FILE
  4356 ;;		 -> sprintf@f(11), 
  4357 ;; Auto vars:     Size  Location     Type
  4358 ;;  i               2   16[COMRAM] int 
  4359 ;;  c               1   15[COMRAM] unsigned char 
  4360 ;; Return value:  Size  Location     Type
  4361 ;;                  2   12[COMRAM] int 
  4362 ;; Registers used:
  4363 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4364 ;; Tracked objects:
  4365 ;;		On entry : 0/0
  4366 ;;		On exit  : 0/0
  4367 ;;		Unchanged: 0/0
  4368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4369 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4370 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4372 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4373 ;;Total ram usage:        6 bytes
  4374 ;; Hardware stack levels used: 1
  4375 ;; Hardware stack levels required when called: 3
  4376 ;; This function calls:
  4377 ;;		_fputc
  4378 ;; This function is called by:
  4379 ;;		_pad
  4380 ;; This function uses a non-reentrant model
  4381 ;;
  4382                           
  4383                           	psect	text9
  4384   0069A6                     __ptext9:
  4385                           	callstack 0
  4386   0069A6                     _fputs:
  4387                           	callstack 22
  4388   0069A6  0E00               	movlw	0
  4389   0069A8  6E12               	movwf	(fputs@i+1)^0,c
  4390   0069AA  0E00               	movlw	0
  4391   0069AC  6E11               	movwf	fputs@i^0,c
  4392   0069AE  EFE2  F034         	goto	l3604
  4393   0069B2                     l3600:
  4394   0069B2  C010  F005         	movff	fputs@c,fputc@c
  4395   0069B6  6A06               	clrf	(fputc@c+1)^0,c
  4396   0069B8  C00F  F007         	movff	fputs@fp,fputc@fp
  4397   0069BC  EC6C  F032         	call	_fputc	;wreg free
  4398   0069C0  4A11               	infsnz	fputs@i^0,f,c
  4399   0069C2  2A12               	incf	(fputs@i+1)^0,f,c
  4400   0069C4                     l3604:
  4401   0069C4  5011               	movf	fputs@i^0,w,c
  4402   0069C6  240D               	addwf	fputs@s^0,w,c
  4403   0069C8  6ED9               	movwf	fsr2l,c
  4404   0069CA  5012               	movf	(fputs@i+1)^0,w,c
  4405   0069CC  200E               	addwfc	(fputs@s+1)^0,w,c
  4406   0069CE  6EDA               	movwf	fsr2h,c
  4407   0069D0  50DF               	movf	indf2,w,c
  4408   0069D2  6E10               	movwf	fputs@c^0,c
  4409   0069D4  5010               	movf	fputs@c^0,w,c
  4410   0069D6  A4D8               	btfss	status,2,c
  4411   0069D8  EFF0  F034         	goto	u4241
  4412   0069DC  EFF2  F034         	goto	u4240
  4413   0069E0                     u4241:
  4414   0069E0  EFD9  F034         	goto	l3600
  4415   0069E4                     u4240:
  4416   0069E4  0012               	return		;funcret
  4417   0069E6                     __end_of_fputs:
  4418                           	callstack 0
  4419                           
  4420 ;; *************** function _fputc *****************
  4421 ;; Defined at:
  4422 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputc.c"
  4423 ;; Parameters:    Size  Location     Type
  4424 ;;  c               2    4[COMRAM] int 
  4425 ;;  fp              1    6[COMRAM] PTR struct _IO_FILE
  4426 ;;		 -> sprintf@f(11), 
  4427 ;; Auto vars:     Size  Location     Type
  4428 ;;		None
  4429 ;; Return value:  Size  Location     Type
  4430 ;;                  2    4[COMRAM] int 
  4431 ;; Registers used:
  4432 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4433 ;; Tracked objects:
  4434 ;;		On entry : 0/0
  4435 ;;		On exit  : 0/0
  4436 ;;		Unchanged: 0/0
  4437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4438 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4439 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4440 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4441 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4442 ;;Total ram usage:        8 bytes
  4443 ;; Hardware stack levels used: 1
  4444 ;; Hardware stack levels required when called: 2
  4445 ;; This function calls:
  4446 ;;		_putch
  4447 ;; This function is called by:
  4448 ;;		_pad
  4449 ;;		_vfpfcnvrt
  4450 ;;		_fputs
  4451 ;; This function uses a non-reentrant model
  4452 ;;
  4453                           
  4454                           	psect	text10
  4455   0064D8                     __ptext10:
  4456                           	callstack 0
  4457   0064D8                     _fputc:
  4458                           	callstack 25
  4459   0064D8  5007               	movf	fputc@fp^0,w,c
  4460   0064DA  B4D8               	btfsc	status,2,c
  4461   0064DC  EF72  F032         	goto	u3811
  4462   0064E0  EF74  F032         	goto	u3810
  4463   0064E4                     u3811:
  4464   0064E4  EF7C  F032         	goto	l3394
  4465   0064E8                     u3810:
  4466   0064E8  5007               	movf	fputc@fp^0,w,c
  4467   0064EA  A4D8               	btfss	status,2,c
  4468   0064EC  EF7A  F032         	goto	u3821
  4469   0064F0  EF7C  F032         	goto	u3820
  4470   0064F4                     u3821:
  4471   0064F4  EF81  F032         	goto	l3396
  4472   0064F8                     u3820:
  4473   0064F8                     l3394:
  4474   0064F8  5005               	movf	fputc@c^0,w,c
  4475   0064FA  ECBA  F035         	call	_putch
  4476   0064FE  EFC1  F032         	goto	l986
  4477   006502                     l3396:
  4478   006502  5007               	movf	fputc@fp^0,w,c
  4479   006504  6ED9               	movwf	fsr2l,c
  4480   006506  6ADA               	clrf	fsr2h,c
  4481   006508  0E09               	movlw	9
  4482   00650A  26D9               	addwf	fsr2l,f,c
  4483   00650C  50DE               	movf	postinc2,w,c
  4484   00650E  10DE               	iorwf	postinc2,w,c
  4485   006510  B4D8               	btfsc	status,2,c
  4486   006512  EF8D  F032         	goto	u3831
  4487   006516  EF8F  F032         	goto	u3830
  4488   00651A                     u3831:
  4489   00651A  EFA8  F032         	goto	l3400
  4490   00651E                     u3830:
  4491   00651E  5007               	movf	fputc@fp^0,w,c
  4492   006520  6ED9               	movwf	fsr2l,c
  4493   006522  6ADA               	clrf	fsr2h,c
  4494   006524  0E09               	movlw	9
  4495   006526  26D9               	addwf	fsr2l,f,c
  4496   006528  5007               	movf	fputc@fp^0,w,c
  4497   00652A  6EE1               	movwf	fsr1l,c
  4498   00652C  6AE2               	clrf	fsr1h,c
  4499   00652E  0E02               	movlw	2
  4500   006530  26E1               	addwf	fsr1l,f,c
  4501   006532  50DE               	movf	postinc2,w,c
  4502   006534  5CE6               	subwf	postinc1,w,c
  4503   006536  50E6               	movf	postinc1,w,c
  4504   006538  0A80               	xorlw	128
  4505   00653A  6E0C               	movwf	(??_fputc+4)^0,c
  4506   00653C  50DE               	movf	postinc2,w,c
  4507   00653E  0A80               	xorlw	128
  4508   006540  580C               	subwfb	(??_fputc+4)^0,w,c
  4509   006542  B0D8               	btfsc	status,0,c
  4510   006544  EFA6  F032         	goto	u3841
  4511   006548  EFA8  F032         	goto	u3840
  4512   00654C                     u3841:
  4513   00654C  EFC1  F032         	goto	l986
  4514   006550                     u3840:
  4515   006550                     l3400:
  4516   006550  5007               	movf	fputc@fp^0,w,c
  4517   006552  6ED9               	movwf	fsr2l,c
  4518   006554  6ADA               	clrf	fsr2h,c
  4519   006556  0E02               	movlw	2
  4520   006558  26D9               	addwf	fsr2l,f,c
  4521   00655A  50DF               	movf	indf2,w,c
  4522   00655C  6E08               	movwf	??_fputc^0,c
  4523   00655E  5007               	movf	fputc@fp^0,w,c
  4524   006560  6ED9               	movwf	fsr2l,c
  4525   006562  6ADA               	clrf	fsr2h,c
  4526   006564  50DF               	movf	indf2,w,c
  4527   006566  2408               	addwf	??_fputc^0,w,c
  4528   006568  6ED9               	movwf	fsr2l,c
  4529   00656A  6ADA               	clrf	fsr2h,c
  4530   00656C  0060  F017  FFDF   	movff	fputc@c,indf2
  4531   006572  5007               	movf	fputc@fp^0,w,c
  4532   006574  6ED9               	movwf	fsr2l,c
  4533   006576  6ADA               	clrf	fsr2h,c
  4534   006578  0E02               	movlw	2
  4535   00657A  26D9               	addwf	fsr2l,f,c
  4536   00657C  2ADE               	incf	postinc2,f,c
  4537   00657E  0E00               	movlw	0
  4538   006580  22DD               	addwfc	postdec2,f,c
  4539   006582                     l986:
  4540   006582  0012               	return		;funcret
  4541   006584                     __end_of_fputc:
  4542                           	callstack 0
  4543                           
  4544 ;; *************** function _putch *****************
  4545 ;; Defined at:
  4546 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\putch.c"
  4547 ;; Parameters:    Size  Location     Type
  4548 ;;  c               1    wreg     unsigned char 
  4549 ;; Auto vars:     Size  Location     Type
  4550 ;;  c               1    0[COMRAM] unsigned char 
  4551 ;; Return value:  Size  Location     Type
  4552 ;;                  1    wreg      void 
  4553 ;; Registers used:
  4554 ;;		wreg
  4555 ;; Tracked objects:
  4556 ;;		On entry : 0/0
  4557 ;;		On exit  : 0/0
  4558 ;;		Unchanged: 0/0
  4559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4561 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4563 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4564 ;;Total ram usage:        0 bytes
  4565 ;; Hardware stack levels used: 1
  4566 ;; Hardware stack levels required when called: 1
  4567 ;; This function calls:
  4568 ;;		Nothing
  4569 ;; This function is called by:
  4570 ;;		_fputc
  4571 ;; This function uses a non-reentrant model
  4572 ;;
  4573                           
  4574                           	psect	text11
  4575   006B74                     __ptext11:
  4576                           	callstack 0
  4577   006B74                     _putch:
  4578                           	callstack 25
  4579   006B74  0012               	return		;funcret
  4580   006B76                     __end_of_putch:
  4581                           	callstack 0
  4582                           
  4583 ;; *************** function _memcpy *****************
  4584 ;; Defined at:
  4585 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\memcpy.c"
  4586 ;; Parameters:    Size  Location     Type
  4587 ;;  d1              2    4[COMRAM] PTR void 
  4588 ;;		 -> dbuf(80), 
  4589 ;;  s1              2    6[COMRAM] PTR const void 
  4590 ;;		 -> dbuf(80), 
  4591 ;;  n               2    8[COMRAM] unsigned int 
  4592 ;; Auto vars:     Size  Location     Type
  4593 ;;  s               2   13[COMRAM] PTR const unsigned char 
  4594 ;;		 -> dbuf(80), 
  4595 ;;  d               2   11[COMRAM] PTR unsigned char 
  4596 ;;		 -> dbuf(80), 
  4597 ;;  tmp             1   10[COMRAM] unsigned char 
  4598 ;; Return value:  Size  Location     Type
  4599 ;;                  2    4[COMRAM] PTR void 
  4600 ;; Registers used:
  4601 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4602 ;; Tracked objects:
  4603 ;;		On entry : 0/0
  4604 ;;		On exit  : 0/0
  4605 ;;		Unchanged: 0/0
  4606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4607 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4608 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4610 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4611 ;;Total ram usage:       11 bytes
  4612 ;; Hardware stack levels used: 1
  4613 ;; Hardware stack levels required when called: 1
  4614 ;; This function calls:
  4615 ;;		Nothing
  4616 ;; This function is called by:
  4617 ;;		_efgtoa
  4618 ;; This function uses a non-reentrant model
  4619 ;;
  4620                           
  4621                           	psect	text12
  4622   0067D8                     __ptext12:
  4623                           	callstack 0
  4624   0067D8                     _memcpy:
  4625                           	callstack 25
  4626   0067D8  C007  F00E         	movff	memcpy@s1,memcpy@s
  4627   0067DC  C008  F00F         	movff	memcpy@s1+1,memcpy@s+1
  4628   0067E0  C005  F00C         	movff	memcpy@d1,memcpy@d
  4629   0067E4  C006  F00D         	movff	memcpy@d1+1,memcpy@d+1
  4630   0067E8  EF0B  F034         	goto	l4050
  4631   0067EC                     l4042:
  4632   0067EC  0060  F03B  FFD9   	movff	memcpy@s,fsr2l
  4633   0067F2  0060  F03F  FFDA   	movff	memcpy@s+1,fsr2h
  4634   0067F8  50DF               	movf	indf2,w,c
  4635   0067FA  6E0B               	movwf	memcpy@tmp^0,c
  4636   0067FC  4A0E               	infsnz	memcpy@s^0,f,c
  4637   0067FE  2A0F               	incf	(memcpy@s+1)^0,f,c
  4638   006800  0060  F033  FFD9   	movff	memcpy@d,fsr2l
  4639   006806  0060  F037  FFDA   	movff	memcpy@d+1,fsr2h
  4640   00680C  0060  F02F  FFDF   	movff	memcpy@tmp,indf2
  4641   006812  4A0C               	infsnz	memcpy@d^0,f,c
  4642   006814  2A0D               	incf	(memcpy@d+1)^0,f,c
  4643   006816                     l4050:
  4644   006816  0609               	decf	memcpy@n^0,f,c
  4645   006818  A0D8               	btfss	status,0,c
  4646   00681A  060A               	decf	(memcpy@n+1)^0,f,c
  4647   00681C  2809               	incf	memcpy@n^0,w,c
  4648   00681E  E106               	bnz	u5041
  4649   006820  280A               	incf	(memcpy@n+1)^0,w,c
  4650   006822  A4D8               	btfss	status,2,c
  4651   006824  EF16  F034         	goto	u5041
  4652   006828  EF18  F034         	goto	u5040
  4653   00682C                     u5041:
  4654   00682C  EFF6  F033         	goto	l4042
  4655   006830                     u5040:
  4656   006830  0012               	return		;funcret
  4657   006832                     __end_of_memcpy:
  4658                           	callstack 0
  4659                           
  4660 ;; *************** function _labs *****************
  4661 ;; Defined at:
  4662 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\labs.c"
  4663 ;; Parameters:    Size  Location     Type
  4664 ;;  a               4    4[COMRAM] long 
  4665 ;; Auto vars:     Size  Location     Type
  4666 ;;		None
  4667 ;; Return value:  Size  Location     Type
  4668 ;;                  4    4[COMRAM] long 
  4669 ;; Registers used:
  4670 ;;		wreg, status,2, status,0
  4671 ;; Tracked objects:
  4672 ;;		On entry : 0/0
  4673 ;;		On exit  : 0/0
  4674 ;;		Unchanged: 0/0
  4675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4676 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4677 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4678 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4679 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4680 ;;Total ram usage:        8 bytes
  4681 ;; Hardware stack levels used: 1
  4682 ;; Hardware stack levels required when called: 1
  4683 ;; This function calls:
  4684 ;;		Nothing
  4685 ;; This function is called by:
  4686 ;;		_efgtoa
  4687 ;; This function uses a non-reentrant model
  4688 ;;
  4689                           
  4690                           	psect	text13
  4691   006832                     __ptext13:
  4692                           	callstack 0
  4693   006832                     _labs:
  4694                           	callstack 25
  4695   006832  BE08               	btfsc	(labs@a+3)^0,7,c
  4696   006834  EF1E  F034         	goto	u4931
  4697   006838  EF20  F034         	goto	u4930
  4698   00683C                     u4931:
  4699   00683C  EF2A  F034         	goto	l4008
  4700   006840                     u4930:
  4701   006840  C005  F005         	movff	labs@a,?_labs
  4702   006844  C006  F006         	movff	labs@a+1,?_labs+1
  4703   006848  C007  F007         	movff	labs@a+2,?_labs+2
  4704   00684C  C008  F008         	movff	labs@a+3,?_labs+3
  4705   006850  EF43  F034         	goto	l968
  4706   006854                     l4008:
  4707   006854  C005  F009         	movff	labs@a,??_labs
  4708   006858  C006  F00A         	movff	labs@a+1,??_labs+1
  4709   00685C  C007  F00B         	movff	labs@a+2,??_labs+2
  4710   006860  C008  F00C         	movff	labs@a+3,??_labs+3
  4711   006864  1E09               	comf	??_labs^0,f,c
  4712   006866  1E0A               	comf	(??_labs+1)^0,f,c
  4713   006868  1E0B               	comf	(??_labs+2)^0,f,c
  4714   00686A  1E0C               	comf	(??_labs+3)^0,f,c
  4715   00686C  2A09               	incf	??_labs^0,f,c
  4716   00686E  0E00               	movlw	0
  4717   006870  220A               	addwfc	(??_labs+1)^0,f,c
  4718   006872  220B               	addwfc	(??_labs+2)^0,f,c
  4719   006874  220C               	addwfc	(??_labs+3)^0,f,c
  4720   006876  C009  F005         	movff	??_labs,?_labs
  4721   00687A  C00A  F006         	movff	??_labs+1,?_labs+1
  4722   00687E  C00B  F007         	movff	??_labs+2,?_labs+2
  4723   006882  C00C  F008         	movff	??_labs+3,?_labs+3
  4724   006886                     l968:
  4725   006886  0012               	return		;funcret
  4726   006888                     __end_of_labs:
  4727                           	callstack 0
  4728                           
  4729 ;; *************** function _floorf *****************
  4730 ;; Defined at:
  4731 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\floorf.c"
  4732 ;; Parameters:    Size  Location     Type
  4733 ;;  x               4   29[COMRAM] float 
  4734 ;; Auto vars:     Size  Location     Type
  4735 ;;  u               4   45[COMRAM] struct .
  4736 ;;  m               4   39[COMRAM] unsigned long 
  4737 ;;  e               2   43[COMRAM] int 
  4738 ;; Return value:  Size  Location     Type
  4739 ;;                  4   29[COMRAM] float 
  4740 ;; Registers used:
  4741 ;;		wreg, status,2, status,0
  4742 ;; Tracked objects:
  4743 ;;		On entry : 0/0
  4744 ;;		On exit  : 0/0
  4745 ;;		Unchanged: 0/0
  4746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4747 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4748 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4749 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4750 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4751 ;;Total ram usage:       20 bytes
  4752 ;; Hardware stack levels used: 1
  4753 ;; Hardware stack levels required when called: 1
  4754 ;; This function calls:
  4755 ;;		Nothing
  4756 ;; This function is called by:
  4757 ;;		_efgtoa
  4758 ;; This function uses a non-reentrant model
  4759 ;;
  4760                           
  4761                           	psect	text14
  4762   005D52                     __ptext14:
  4763                           	callstack 0
  4764   005D52                     _floorf:
  4765                           	callstack 25
  4766   005D52  C0A4  F02E         	movff	floorf@F521,floorf@u
  4767   005D56  C0A5  F02F         	movff	floorf@F521+1,floorf@u+1
  4768   005D5A  C0A6  F030         	movff	floorf@F521+2,floorf@u+2
  4769   005D5E  C0A7  F031         	movff	floorf@F521+3,floorf@u+3
  4770   005D62  C01E  F02E         	movff	floorf@x,floorf@u
  4771   005D66  C01F  F02F         	movff	floorf@x+1,floorf@u+1
  4772   005D6A  C020  F030         	movff	floorf@x+2,floorf@u+2
  4773   005D6E  C021  F031         	movff	floorf@x+3,floorf@u+3
  4774   005D72  0E81               	movlw	129
  4775   005D74  6E22               	movwf	??_floorf^0,c
  4776   005D76  0EFF               	movlw	255
  4777   005D78  6E23               	movwf	(??_floorf+1)^0,c
  4778   005D7A  C02E  F024         	movff	floorf@u,??_floorf+2
  4779   005D7E  C02F  F025         	movff	floorf@u+1,??_floorf+3
  4780   005D82  C030  F026         	movff	floorf@u+2,??_floorf+4
  4781   005D86  C031  F027         	movff	floorf@u+3,??_floorf+5
  4782   005D8A  0E18               	movlw	24
  4783   005D8C  EFCD  F02E         	goto	u4940
  4784   005D90                     u4945:
  4785   005D90  90D8               	bcf	status,0,c
  4786   005D92  3227               	rrcf	(??_floorf+5)^0,f,c
  4787   005D94  3226               	rrcf	(??_floorf+4)^0,f,c
  4788   005D96  3225               	rrcf	(??_floorf+3)^0,f,c
  4789   005D98  3224               	rrcf	(??_floorf+2)^0,f,c
  4790   005D9A                     u4940:
  4791   005D9A  2EE8               	decfsz	wreg,f,c
  4792   005D9C  EFC8  F02E         	goto	u4945
  4793   005DA0  5024               	movf	(??_floorf+2)^0,w,c
  4794   005DA2  2422               	addwf	??_floorf^0,w,c
  4795   005DA4  6E2C               	movwf	floorf@e^0,c
  4796   005DA6  0E00               	movlw	0
  4797   005DA8  2023               	addwfc	(??_floorf+1)^0,w,c
  4798   005DAA  6E2D               	movwf	(floorf@e+1)^0,c
  4799   005DAC  BE2D               	btfsc	(floorf@e+1)^0,7,c
  4800   005DAE  EFE2  F02E         	goto	u4951
  4801   005DB2  502D               	movf	(floorf@e+1)^0,w,c
  4802   005DB4  E109               	bnz	u4950
  4803   005DB6  0E17               	movlw	23
  4804   005DB8  5C2C               	subwf	floorf@e^0,w,c
  4805   005DBA  A0D8               	btfss	status,0,c
  4806   005DBC  EFE2  F02E         	goto	u4951
  4807   005DC0  EFE4  F02E         	goto	u4950
  4808   005DC4                     u4951:
  4809   005DC4  EFEE  F02E         	goto	l4018
  4810   005DC8                     u4950:
  4811   005DC8                     l4016:
  4812   005DC8  C01E  F01E         	movff	floorf@x,?_floorf
  4813   005DCC  C01F  F01F         	movff	floorf@x+1,?_floorf+1
  4814   005DD0  C020  F020         	movff	floorf@x+2,?_floorf+2
  4815   005DD4  C021  F021         	movff	floorf@x+3,?_floorf+3
  4816   005DD8  EFB1  F02F         	goto	l954
  4817   005DDC                     l4018:
  4818   005DDC  BE2D               	btfsc	(floorf@e+1)^0,7,c
  4819   005DDE  EFF3  F02E         	goto	u4961
  4820   005DE2  EFF5  F02E         	goto	u4960
  4821   005DE6                     u4961:
  4822   005DE6  EF65  F02F         	goto	l4028
  4823   005DEA                     u4960:
  4824   005DEA  C02C  F022         	movff	floorf@e,??_floorf
  4825   005DEE  0EFF               	movlw	255
  4826   005DF0  6E23               	movwf	(??_floorf+1)^0,c
  4827   005DF2  0EFF               	movlw	255
  4828   005DF4  6E24               	movwf	(??_floorf+2)^0,c
  4829   005DF6  0E7F               	movlw	127
  4830   005DF8  6E25               	movwf	(??_floorf+3)^0,c
  4831   005DFA  0E00               	movlw	0
  4832   005DFC  6E26               	movwf	(??_floorf+4)^0,c
  4833   005DFE                     u4975:
  4834   005DFE  6622               	tstfsz	??_floorf^0,c
  4835   005E00  EF04  F02F         	goto	u4976
  4836   005E04  EF0C  F02F         	goto	u4977
  4837   005E08                     u4976:
  4838   005E08  3426               	rlcf	(??_floorf+4)^0,w,c
  4839   005E0A  3226               	rrcf	(??_floorf+4)^0,f,c
  4840   005E0C  3225               	rrcf	(??_floorf+3)^0,f,c
  4841   005E0E  3224               	rrcf	(??_floorf+2)^0,f,c
  4842   005E10  3223               	rrcf	(??_floorf+1)^0,f,c
  4843   005E12  2E22               	decfsz	??_floorf^0,f,c
  4844   005E14  EFFF  F02E         	goto	u4975
  4845   005E18                     u4977:
  4846   005E18  C023  F028         	movff	??_floorf+1,floorf@m
  4847   005E1C  C024  F029         	movff	??_floorf+2,floorf@m+1
  4848   005E20  C025  F02A         	movff	??_floorf+3,floorf@m+2
  4849   005E24  C026  F02B         	movff	??_floorf+4,floorf@m+3
  4850   005E28  5028               	movf	floorf@m^0,w,c
  4851   005E2A  142E               	andwf	floorf@u^0,w,c
  4852   005E2C  6E22               	movwf	??_floorf^0,c
  4853   005E2E  5029               	movf	(floorf@m+1)^0,w,c
  4854   005E30  142F               	andwf	(floorf@u+1)^0,w,c
  4855   005E32  6E23               	movwf	(??_floorf+1)^0,c
  4856   005E34  502A               	movf	(floorf@m+2)^0,w,c
  4857   005E36  1430               	andwf	(floorf@u+2)^0,w,c
  4858   005E38  6E24               	movwf	(??_floorf+2)^0,c
  4859   005E3A  502B               	movf	(floorf@m+3)^0,w,c
  4860   005E3C  1431               	andwf	(floorf@u+3)^0,w,c
  4861   005E3E  6E25               	movwf	(??_floorf+3)^0,c
  4862   005E40  5022               	movf	??_floorf^0,w,c
  4863   005E42  1023               	iorwf	(??_floorf+1)^0,w,c
  4864   005E44  1024               	iorwf	(??_floorf+2)^0,w,c
  4865   005E46  1025               	iorwf	(??_floorf+3)^0,w,c
  4866   005E48  A4D8               	btfss	status,2,c
  4867   005E4A  EF29  F02F         	goto	u4981
  4868   005E4E  EF2B  F02F         	goto	u4980
  4869   005E52                     u4981:
  4870   005E52  EF2D  F02F         	goto	l4024
  4871   005E56                     u4980:
  4872   005E56  EFE4  F02E         	goto	l4016
  4873   005E5A                     l4024:
  4874   005E5A  C02E  F022         	movff	floorf@u,??_floorf
  4875   005E5E  C02F  F023         	movff	floorf@u+1,??_floorf+1
  4876   005E62  C030  F024         	movff	floorf@u+2,??_floorf+2
  4877   005E66  C031  F025         	movff	floorf@u+3,??_floorf+3
  4878   005E6A  0E20               	movlw	32
  4879   005E6C  EF3D  F02F         	goto	u4990
  4880   005E70                     u4995:
  4881   005E70  90D8               	bcf	status,0,c
  4882   005E72  3225               	rrcf	(??_floorf+3)^0,f,c
  4883   005E74  3224               	rrcf	(??_floorf+2)^0,f,c
  4884   005E76  3223               	rrcf	(??_floorf+1)^0,f,c
  4885   005E78  3222               	rrcf	??_floorf^0,f,c
  4886   005E7A                     u4990:
  4887   005E7A  2EE8               	decfsz	wreg,f,c
  4888   005E7C  EF38  F02F         	goto	u4995
  4889   005E80  5022               	movf	??_floorf^0,w,c
  4890   005E82  1023               	iorwf	(??_floorf+1)^0,w,c
  4891   005E84  1024               	iorwf	(??_floorf+2)^0,w,c
  4892   005E86  1025               	iorwf	(??_floorf+3)^0,w,c
  4893   005E88  B4D8               	btfsc	status,2,c
  4894   005E8A  EF49  F02F         	goto	u5001
  4895   005E8E  EF4B  F02F         	goto	u5000
  4896   005E92                     u5001:
  4897   005E92  EF53  F02F         	goto	l957
  4898   005E96                     u5000:
  4899   005E96  5028               	movf	floorf@m^0,w,c
  4900   005E98  262E               	addwf	floorf@u^0,f,c
  4901   005E9A  5029               	movf	(floorf@m+1)^0,w,c
  4902   005E9C  222F               	addwfc	(floorf@u+1)^0,f,c
  4903   005E9E  502A               	movf	(floorf@m+2)^0,w,c
  4904   005EA0  2230               	addwfc	(floorf@u+2)^0,f,c
  4905   005EA2  502B               	movf	(floorf@m+3)^0,w,c
  4906   005EA4  2231               	addwfc	(floorf@u+3)^0,f,c
  4907   005EA6                     l957:
  4908   005EA6  1C28               	comf	floorf@m^0,w,c
  4909   005EA8  6E22               	movwf	??_floorf^0,c
  4910   005EAA  1C29               	comf	(floorf@m+1)^0,w,c
  4911   005EAC  6E23               	movwf	(??_floorf+1)^0,c
  4912   005EAE  1C2A               	comf	(floorf@m+2)^0,w,c
  4913   005EB0  6E24               	movwf	(??_floorf+2)^0,c
  4914   005EB2  1C2B               	comf	(floorf@m+3)^0,w,c
  4915   005EB4  6E25               	movwf	(??_floorf+3)^0,c
  4916   005EB6  5022               	movf	??_floorf^0,w,c
  4917   005EB8  162E               	andwf	floorf@u^0,f,c
  4918   005EBA  5023               	movf	(??_floorf+1)^0,w,c
  4919   005EBC  162F               	andwf	(floorf@u+1)^0,f,c
  4920   005EBE  5024               	movf	(??_floorf+2)^0,w,c
  4921   005EC0  1630               	andwf	(floorf@u+2)^0,f,c
  4922   005EC2  5025               	movf	(??_floorf+3)^0,w,c
  4923   005EC4  1631               	andwf	(floorf@u+3)^0,f,c
  4924   005EC6  EFA9  F02F         	goto	l4036
  4925   005ECA                     l4028:
  4926   005ECA  C02E  F022         	movff	floorf@u,??_floorf
  4927   005ECE  C02F  F023         	movff	floorf@u+1,??_floorf+1
  4928   005ED2  C030  F024         	movff	floorf@u+2,??_floorf+2
  4929   005ED6  C031  F025         	movff	floorf@u+3,??_floorf+3
  4930   005EDA  0E20               	movlw	32
  4931   005EDC  EF75  F02F         	goto	u5010
  4932   005EE0                     u5015:
  4933   005EE0  90D8               	bcf	status,0,c
  4934   005EE2  3225               	rrcf	(??_floorf+3)^0,f,c
  4935   005EE4  3224               	rrcf	(??_floorf+2)^0,f,c
  4936   005EE6  3223               	rrcf	(??_floorf+1)^0,f,c
  4937   005EE8  3222               	rrcf	??_floorf^0,f,c
  4938   005EEA                     u5010:
  4939   005EEA  2EE8               	decfsz	wreg,f,c
  4940   005EEC  EF70  F02F         	goto	u5015
  4941   005EF0  5022               	movf	??_floorf^0,w,c
  4942   005EF2  1023               	iorwf	(??_floorf+1)^0,w,c
  4943   005EF4  1024               	iorwf	(??_floorf+2)^0,w,c
  4944   005EF6  1025               	iorwf	(??_floorf+3)^0,w,c
  4945   005EF8  A4D8               	btfss	status,2,c
  4946   005EFA  EF81  F02F         	goto	u5021
  4947   005EFE  EF83  F02F         	goto	u5020
  4948   005F02                     u5021:
  4949   005F02  EF8D  F02F         	goto	l4032
  4950   005F06                     u5020:
  4951   005F06  0E00               	movlw	0
  4952   005F08  6E2E               	movwf	floorf@u^0,c
  4953   005F0A  0E00               	movlw	0
  4954   005F0C  6E2F               	movwf	(floorf@u+1)^0,c
  4955   005F0E  0E00               	movlw	0
  4956   005F10  6E30               	movwf	(floorf@u+2)^0,c
  4957   005F12  0E00               	movlw	0
  4958   005F14  6E31               	movwf	(floorf@u+3)^0,c
  4959   005F16  EFA9  F02F         	goto	l4036
  4960   005F1A                     l4032:
  4961   005F1A  90D8               	bcf	status,0,c
  4962   005F1C  342E               	rlcf	floorf@u^0,w,c
  4963   005F1E  6E22               	movwf	??_floorf^0,c
  4964   005F20  342F               	rlcf	(floorf@u+1)^0,w,c
  4965   005F22  6E23               	movwf	(??_floorf+1)^0,c
  4966   005F24  3430               	rlcf	(floorf@u+2)^0,w,c
  4967   005F26  6E24               	movwf	(??_floorf+2)^0,c
  4968   005F28  3431               	rlcf	(floorf@u+3)^0,w,c
  4969   005F2A  6E25               	movwf	(??_floorf+3)^0,c
  4970   005F2C  5022               	movf	??_floorf^0,w,c
  4971   005F2E  1023               	iorwf	(??_floorf+1)^0,w,c
  4972   005F30  1024               	iorwf	(??_floorf+2)^0,w,c
  4973   005F32  1025               	iorwf	(??_floorf+3)^0,w,c
  4974   005F34  B4D8               	btfsc	status,2,c
  4975   005F36  EF9F  F02F         	goto	u5031
  4976   005F3A  EFA1  F02F         	goto	u5030
  4977   005F3E                     u5031:
  4978   005F3E  EFA9  F02F         	goto	l4036
  4979   005F42                     u5030:
  4980   005F42  0E00               	movlw	0
  4981   005F44  6E2E               	movwf	floorf@u^0,c
  4982   005F46  0E00               	movlw	0
  4983   005F48  6E2F               	movwf	(floorf@u+1)^0,c
  4984   005F4A  0E80               	movlw	128
  4985   005F4C  6E30               	movwf	(floorf@u+2)^0,c
  4986   005F4E  0EBF               	movlw	191
  4987   005F50  6E31               	movwf	(floorf@u+3)^0,c
  4988   005F52                     l4036:
  4989   005F52  C02E  F01E         	movff	floorf@u,?_floorf
  4990   005F56  C02F  F01F         	movff	floorf@u+1,?_floorf+1
  4991   005F5A  C030  F020         	movff	floorf@u+2,?_floorf+2
  4992   005F5E  C031  F021         	movff	floorf@u+3,?_floorf+3
  4993   005F62                     l954:
  4994   005F62  0012               	return		;funcret
  4995   005F64                     __end_of_floorf:
  4996                           	callstack 0
  4997                           
  4998 ;; *************** function ___fpclassifyf *****************
  4999 ;; Defined at:
  5000 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\__fpclassifyf.c"
  5001 ;; Parameters:    Size  Location     Type
  5002 ;;  x               4    4[COMRAM] float 
  5003 ;; Auto vars:     Size  Location     Type
  5004 ;;  u               4   14[COMRAM] struct .
  5005 ;;  e               2   12[COMRAM] int 
  5006 ;; Return value:  Size  Location     Type
  5007 ;;                  2    4[COMRAM] int 
  5008 ;; Registers used:
  5009 ;;		wreg, status,2, status,0
  5010 ;; Tracked objects:
  5011 ;;		On entry : 0/0
  5012 ;;		On exit  : 0/0
  5013 ;;		Unchanged: 0/0
  5014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5015 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5016 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5017 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5018 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5019 ;;Total ram usage:       14 bytes
  5020 ;; Hardware stack levels used: 1
  5021 ;; Hardware stack levels required when called: 1
  5022 ;; This function calls:
  5023 ;;		Nothing
  5024 ;; This function is called by:
  5025 ;;		_efgtoa
  5026 ;; This function uses a non-reentrant model
  5027 ;;
  5028                           
  5029                           	psect	text15
  5030   006322                     __ptext15:
  5031                           	callstack 0
  5032   006322                     ___fpclassifyf:
  5033                           	callstack 25
  5034   006322  C0A8  F00F         	movff	___fpclassifyf@F465,___fpclassifyf@u
  5035   006326  C0A9  F010         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  5036   00632A  C0AA  F011         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  5037   00632E  C0AB  F012         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  5038   006332  C005  F00F         	movff	___fpclassifyf@x,___fpclassifyf@u
  5039   006336  C006  F010         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  5040   00633A  C007  F011         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  5041   00633E  C008  F012         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5042   006342  C00F  F009         	movff	___fpclassifyf@u,??___fpclassifyf
  5043   006346  C010  F00A         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5044   00634A  C011  F00B         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5045   00634E  C012  F00C         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5046   006352  0E18               	movlw	24
  5047   006354  EFB1  F031         	goto	u4850
  5048   006358                     u4855:
  5049   006358  90D8               	bcf	status,0,c
  5050   00635A  320C               	rrcf	(??___fpclassifyf+3)^0,f,c
  5051   00635C  320B               	rrcf	(??___fpclassifyf+2)^0,f,c
  5052   00635E  320A               	rrcf	(??___fpclassifyf+1)^0,f,c
  5053   006360  3209               	rrcf	??___fpclassifyf^0,f,c
  5054   006362                     u4850:
  5055   006362  2EE8               	decfsz	wreg,f,c
  5056   006364  EFAC  F031         	goto	u4855
  5057   006368  5009               	movf	??___fpclassifyf^0,w,c
  5058   00636A  6E0D               	movwf	___fpclassifyf@e^0,c
  5059   00636C  6A0E               	clrf	(___fpclassifyf@e+1)^0,c
  5060   00636E  500D               	movf	___fpclassifyf@e^0,w,c
  5061   006370  100E               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5062   006372  A4D8               	btfss	status,2,c
  5063   006374  EFBE  F031         	goto	u4861
  5064   006378  EFC0  F031         	goto	u4860
  5065   00637C                     u4861:
  5066   00637C  EFE0  F031         	goto	l3990
  5067   006380                     u4860:
  5068   006380  90D8               	bcf	status,0,c
  5069   006382  340F               	rlcf	___fpclassifyf@u^0,w,c
  5070   006384  6E09               	movwf	??___fpclassifyf^0,c
  5071   006386  3410               	rlcf	(___fpclassifyf@u+1)^0,w,c
  5072   006388  6E0A               	movwf	(??___fpclassifyf+1)^0,c
  5073   00638A  3411               	rlcf	(___fpclassifyf@u+2)^0,w,c
  5074   00638C  6E0B               	movwf	(??___fpclassifyf+2)^0,c
  5075   00638E  3412               	rlcf	(___fpclassifyf@u+3)^0,w,c
  5076   006390  6E0C               	movwf	(??___fpclassifyf+3)^0,c
  5077   006392  5009               	movf	??___fpclassifyf^0,w,c
  5078   006394  100A               	iorwf	(??___fpclassifyf+1)^0,w,c
  5079   006396  100B               	iorwf	(??___fpclassifyf+2)^0,w,c
  5080   006398  100C               	iorwf	(??___fpclassifyf+3)^0,w,c
  5081   00639A  A4D8               	btfss	status,2,c
  5082   00639C  EFD2  F031         	goto	u4871
  5083   0063A0  EFD4  F031         	goto	u4870
  5084   0063A4                     u4871:
  5085   0063A4  EFDA  F031         	goto	l3986
  5086   0063A8                     u4870:
  5087   0063A8  0E00               	movlw	0
  5088   0063AA  6E06               	movwf	(?___fpclassifyf+1)^0,c
  5089   0063AC  0E02               	movlw	2
  5090   0063AE  6E05               	movwf	?___fpclassifyf^0,c
  5091   0063B0  EF0F  F032         	goto	l947
  5092   0063B4                     l3986:
  5093   0063B4  0E00               	movlw	0
  5094   0063B6  6E06               	movwf	(?___fpclassifyf+1)^0,c
  5095   0063B8  0E03               	movlw	3
  5096   0063BA  6E05               	movwf	?___fpclassifyf^0,c
  5097   0063BC  EF0F  F032         	goto	l947
  5098   0063C0                     l3990:
  5099   0063C0  280D               	incf	___fpclassifyf@e^0,w,c
  5100   0063C2  100E               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5101   0063C4  A4D8               	btfss	status,2,c
  5102   0063C6  EFE7  F031         	goto	u4881
  5103   0063CA  EFE9  F031         	goto	u4880
  5104   0063CE                     u4881:
  5105   0063CE  EF0B  F032         	goto	l3996
  5106   0063D2                     u4880:
  5107   0063D2  C00F  F009         	movff	___fpclassifyf@u,??___fpclassifyf
  5108   0063D6  C010  F00A         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5109   0063DA  C011  F00B         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5110   0063DE  C012  F00C         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5111   0063E2  0E09               	movlw	9
  5112   0063E4                     u4895:
  5113   0063E4  90D8               	bcf	status,0,c
  5114   0063E6  3609               	rlcf	??___fpclassifyf^0,f,c
  5115   0063E8  360A               	rlcf	(??___fpclassifyf+1)^0,f,c
  5116   0063EA  360B               	rlcf	(??___fpclassifyf+2)^0,f,c
  5117   0063EC  360C               	rlcf	(??___fpclassifyf+3)^0,f,c
  5118   0063EE  2EE8               	decfsz	wreg,f,c
  5119   0063F0  EFF2  F031         	goto	u4895
  5120   0063F4  5009               	movf	??___fpclassifyf^0,w,c
  5121   0063F6  100A               	iorwf	(??___fpclassifyf+1)^0,w,c
  5122   0063F8  100B               	iorwf	(??___fpclassifyf+2)^0,w,c
  5123   0063FA  100C               	iorwf	(??___fpclassifyf+3)^0,w,c
  5124   0063FC  B4D8               	btfsc	status,2,c
  5125   0063FE  EF03  F032         	goto	u4901
  5126   006402  EF06  F032         	goto	u4900
  5127   006406                     u4901:
  5128   006406  0E01               	movlw	1
  5129   006408  EF07  F032         	goto	u4910
  5130   00640C                     u4900:
  5131   00640C  0E00               	movlw	0
  5132   00640E                     u4910:
  5133   00640E  6E05               	movwf	?___fpclassifyf^0,c
  5134   006410  6A06               	clrf	(?___fpclassifyf+1)^0,c
  5135   006412  EF0F  F032         	goto	l947
  5136   006416                     l3996:
  5137   006416  0E00               	movlw	0
  5138   006418  6E06               	movwf	(?___fpclassifyf+1)^0,c
  5139   00641A  0E04               	movlw	4
  5140   00641C  6E05               	movwf	?___fpclassifyf^0,c
  5141   00641E                     l947:
  5142   00641E  0012               	return		;funcret
  5143   006420                     __end_of___fpclassifyf:
  5144                           	callstack 0
  5145                           
  5146 ;; *************** function ___fltol *****************
  5147 ;; Defined at:
  5148 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\fltol.c"
  5149 ;; Parameters:    Size  Location     Type
  5150 ;;  f1              4    4[COMRAM] int 
  5151 ;; Auto vars:     Size  Location     Type
  5152 ;;  exp1            1   13[COMRAM] unsigned char 
  5153 ;;  sign1           1   12[COMRAM] unsigned char 
  5154 ;; Return value:  Size  Location     Type
  5155 ;;                  4    4[COMRAM] long 
  5156 ;; Registers used:
  5157 ;;		wreg, status,2, status,0
  5158 ;; Tracked objects:
  5159 ;;		On entry : 0/0
  5160 ;;		On exit  : 0/0
  5161 ;;		Unchanged: 0/0
  5162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5163 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5164 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5165 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5166 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5167 ;;Total ram usage:       10 bytes
  5168 ;; Hardware stack levels used: 1
  5169 ;; Hardware stack levels required when called: 1
  5170 ;; This function calls:
  5171 ;;		Nothing
  5172 ;; This function is called by:
  5173 ;;		_efgtoa
  5174 ;; This function uses a non-reentrant model
  5175 ;;
  5176                           
  5177                           	psect	text16
  5178   006118                     __ptext16:
  5179                           	callstack 0
  5180   006118                     ___fltol:
  5181                           	callstack 25
  5182   006118  3407               	rlcf	(___fltol@f1+2)^0,w,c
  5183   00611A  3408               	rlcf	(___fltol@f1+3)^0,w,c
  5184   00611C  6E0E               	movwf	___fltol@exp1^0,c
  5185   00611E  500E               	movf	___fltol@exp1^0,w,c
  5186   006120  A4D8               	btfss	status,2,c
  5187   006122  EF95  F030         	goto	u4761
  5188   006126  EF97  F030         	goto	u4760
  5189   00612A                     u4761:
  5190   00612A  EFA1  F030         	goto	l3928
  5191   00612E                     u4760:
  5192   00612E                     l3924:
  5193   00612E  0E00               	movlw	0
  5194   006130  6E05               	movwf	?___fltol^0,c
  5195   006132  0E00               	movlw	0
  5196   006134  6E06               	movwf	(?___fltol+1)^0,c
  5197   006136  0E00               	movlw	0
  5198   006138  6E07               	movwf	(?___fltol+2)^0,c
  5199   00613A  0E00               	movlw	0
  5200   00613C  6E08               	movwf	(?___fltol+3)^0,c
  5201   00613E  EF0E  F031         	goto	l438
  5202   006142                     l3928:
  5203   006142  C005  F009         	movff	___fltol@f1,??___fltol
  5204   006146  C006  F00A         	movff	___fltol@f1+1,??___fltol+1
  5205   00614A  C007  F00B         	movff	___fltol@f1+2,??___fltol+2
  5206   00614E  C008  F00C         	movff	___fltol@f1+3,??___fltol+3
  5207   006152  0E20               	movlw	32
  5208   006154  EFB1  F030         	goto	u4770
  5209   006158                     u4775:
  5210   006158  90D8               	bcf	status,0,c
  5211   00615A  320C               	rrcf	(??___fltol+3)^0,f,c
  5212   00615C  320B               	rrcf	(??___fltol+2)^0,f,c
  5213   00615E  320A               	rrcf	(??___fltol+1)^0,f,c
  5214   006160  3209               	rrcf	??___fltol^0,f,c
  5215   006162                     u4770:
  5216   006162  2EE8               	decfsz	wreg,f,c
  5217   006164  EFAC  F030         	goto	u4775
  5218   006168  5009               	movf	??___fltol^0,w,c
  5219   00616A  6E0D               	movwf	___fltol@sign1^0,c
  5220   00616C  8E07               	bsf	(___fltol@f1+2)^0,7,c
  5221   00616E  0EFF               	movlw	255
  5222   006170  1605               	andwf	___fltol@f1^0,f,c
  5223   006172  0EFF               	movlw	255
  5224   006174  1606               	andwf	(___fltol@f1+1)^0,f,c
  5225   006176  0EFF               	movlw	255
  5226   006178  1607               	andwf	(___fltol@f1+2)^0,f,c
  5227   00617A  0E00               	movlw	0
  5228   00617C  1608               	andwf	(___fltol@f1+3)^0,f,c
  5229   00617E  0E96               	movlw	150
  5230   006180  5E0E               	subwf	___fltol@exp1^0,f,c
  5231   006182  BE0E               	btfsc	___fltol@exp1^0,7,c
  5232   006184  EFC8  F030         	goto	u4780
  5233   006188  EFC6  F030         	goto	u4781
  5234   00618C                     u4781:
  5235   00618C  EFDE  F030         	goto	l3948
  5236   006190                     u4780:
  5237   006190  500E               	movf	___fltol@exp1^0,w,c
  5238   006192  0A80               	xorlw	128
  5239   006194  0F97               	addlw	151
  5240   006196  B0D8               	btfsc	status,0,c
  5241   006198  EFD0  F030         	goto	u4791
  5242   00619C  EFD2  F030         	goto	u4790
  5243   0061A0                     u4791:
  5244   0061A0  EFD4  F030         	goto	l3944
  5245   0061A4                     u4790:
  5246   0061A4  EF97  F030         	goto	l3924
  5247   0061A8                     l3944:
  5248   0061A8  90D8               	bcf	status,0,c
  5249   0061AA  3208               	rrcf	(___fltol@f1+3)^0,f,c
  5250   0061AC  3207               	rrcf	(___fltol@f1+2)^0,f,c
  5251   0061AE  3206               	rrcf	(___fltol@f1+1)^0,f,c
  5252   0061B0  3205               	rrcf	___fltol@f1^0,f,c
  5253   0061B2  3E0E               	incfsz	___fltol@exp1^0,f,c
  5254   0061B4  EFD4  F030         	goto	l3944
  5255   0061B8  EFF6  F030         	goto	l3958
  5256   0061BC                     l3948:
  5257   0061BC  0E1F               	movlw	31
  5258   0061BE  640E               	cpfsgt	___fltol@exp1^0,c
  5259   0061C0  EFE4  F030         	goto	u4801
  5260   0061C4  EFE6  F030         	goto	u4800
  5261   0061C8                     u4801:
  5262   0061C8  EFEE  F030         	goto	l3956
  5263   0061CC                     u4800:
  5264   0061CC  EF97  F030         	goto	l3924
  5265   0061D0                     l3954:
  5266   0061D0  90D8               	bcf	status,0,c
  5267   0061D2  3605               	rlcf	___fltol@f1^0,f,c
  5268   0061D4  3606               	rlcf	(___fltol@f1+1)^0,f,c
  5269   0061D6  3607               	rlcf	(___fltol@f1+2)^0,f,c
  5270   0061D8  3608               	rlcf	(___fltol@f1+3)^0,f,c
  5271   0061DA  060E               	decf	___fltol@exp1^0,f,c
  5272   0061DC                     l3956:
  5273   0061DC  500E               	movf	___fltol@exp1^0,w,c
  5274   0061DE  A4D8               	btfss	status,2,c
  5275   0061E0  EFF4  F030         	goto	u4811
  5276   0061E4  EFF6  F030         	goto	u4810
  5277   0061E8                     u4811:
  5278   0061E8  EFE8  F030         	goto	l3954
  5279   0061EC                     u4810:
  5280   0061EC                     l3958:
  5281   0061EC  500D               	movf	___fltol@sign1^0,w,c
  5282   0061EE  B4D8               	btfsc	status,2,c
  5283   0061F0  EFFC  F030         	goto	u4821
  5284   0061F4  EFFE  F030         	goto	u4820
  5285   0061F8                     u4821:
  5286   0061F8  EF06  F031         	goto	l3962
  5287   0061FC                     u4820:
  5288   0061FC  1E08               	comf	(___fltol@f1+3)^0,f,c
  5289   0061FE  1E07               	comf	(___fltol@f1+2)^0,f,c
  5290   006200  1E06               	comf	(___fltol@f1+1)^0,f,c
  5291   006202  6C05               	negf	___fltol@f1^0,c
  5292   006204  0E00               	movlw	0
  5293   006206  2206               	addwfc	(___fltol@f1+1)^0,f,c
  5294   006208  2207               	addwfc	(___fltol@f1+2)^0,f,c
  5295   00620A  2208               	addwfc	(___fltol@f1+3)^0,f,c
  5296   00620C                     l3962:
  5297   00620C  C005  F005         	movff	___fltol@f1,?___fltol
  5298   006210  C006  F006         	movff	___fltol@f1+1,?___fltol+1
  5299   006214  C007  F007         	movff	___fltol@f1+2,?___fltol+2
  5300   006218  C008  F008         	movff	___fltol@f1+3,?___fltol+3
  5301   00621C                     l438:
  5302   00621C  0012               	return		;funcret
  5303   00621E                     __end_of___fltol:
  5304                           	callstack 0
  5305                           
  5306 ;; *************** function ___flsub *****************
  5307 ;; Defined at:
  5308 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcadd.c"
  5309 ;; Parameters:    Size  Location     Type
  5310 ;;  b               4   43[COMRAM] long 
  5311 ;;  a               4   47[COMRAM] long 
  5312 ;; Auto vars:     Size  Location     Type
  5313 ;;		None
  5314 ;; Return value:  Size  Location     Type
  5315 ;;                  4   43[COMRAM] long 
  5316 ;; Registers used:
  5317 ;;		wreg, status,2, status,0, cstack
  5318 ;; Tracked objects:
  5319 ;;		On entry : 0/0
  5320 ;;		On exit  : 0/0
  5321 ;;		Unchanged: 0/0
  5322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5323 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5324 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5326 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5327 ;;Total ram usage:        8 bytes
  5328 ;; Hardware stack levels used: 1
  5329 ;; Hardware stack levels required when called: 2
  5330 ;; This function calls:
  5331 ;;		___fladd
  5332 ;; This function is called by:
  5333 ;;		_efgtoa
  5334 ;; This function uses a non-reentrant model
  5335 ;;
  5336                           
  5337                           	psect	text17
  5338   006960                     __ptext17:
  5339                           	callstack 0
  5340   006960                     ___flsub:
  5341                           	callstack 24
  5342   006960  0E00               	movlw	0
  5343   006962  1A30               	xorwf	___flsub@a^0,f,c
  5344   006964  0E00               	movlw	0
  5345   006966  1A31               	xorwf	(___flsub@a+1)^0,f,c
  5346   006968  0E00               	movlw	0
  5347   00696A  1A32               	xorwf	(___flsub@a+2)^0,f,c
  5348   00696C  0E80               	movlw	128
  5349   00696E  1A33               	xorwf	(___flsub@a+3)^0,f,c
  5350   006970  C02C  F005         	movff	___flsub@b,___fladd@b
  5351   006974  C02D  F006         	movff	___flsub@b+1,___fladd@b+1
  5352   006978  C02E  F007         	movff	___flsub@b+2,___fladd@b+2
  5353   00697C  C02F  F008         	movff	___flsub@b+3,___fladd@b+3
  5354   006980  C030  F009         	movff	___flsub@a,___fladd@a
  5355   006984  C031  F00A         	movff	___flsub@a+1,___fladd@a+1
  5356   006988  C032  F00B         	movff	___flsub@a+2,___fladd@a+2
  5357   00698C  C033  F00C         	movff	___flsub@a+3,___fladd@a+3
  5358   006990  EC4C  F025         	call	___fladd	;wreg free
  5359   006994  C005  F02C         	movff	?___fladd,?___flsub
  5360   006998  C006  F02D         	movff	?___fladd+1,?___flsub+1
  5361   00699C  C007  F02E         	movff	?___fladd+2,?___flsub+2
  5362   0069A0  C008  F02F         	movff	?___fladd+3,?___flsub+3
  5363   0069A4  0012               	return		;funcret
  5364   0069A6                     __end_of___flsub:
  5365                           	callstack 0
  5366                           
  5367 ;; *************** function ___fladd *****************
  5368 ;; Defined at:
  5369 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcadd.c"
  5370 ;; Parameters:    Size  Location     Type
  5371 ;;  b               4    4[COMRAM] long 
  5372 ;;  a               4    8[COMRAM] long 
  5373 ;; Auto vars:     Size  Location     Type
  5374 ;;  grs             1   19[COMRAM] unsigned char 
  5375 ;;  bexp            1   18[COMRAM] unsigned char 
  5376 ;;  aexp            1   17[COMRAM] unsigned char 
  5377 ;;  signs           1   16[COMRAM] unsigned char 
  5378 ;; Return value:  Size  Location     Type
  5379 ;;                  4    4[COMRAM] unsigned char 
  5380 ;; Registers used:
  5381 ;;		wreg, status,2, status,0
  5382 ;; Tracked objects:
  5383 ;;		On entry : 0/0
  5384 ;;		On exit  : 0/0
  5385 ;;		Unchanged: 0/0
  5386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5387 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5388 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5389 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5390 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5391 ;;Total ram usage:       16 bytes
  5392 ;; Hardware stack levels used: 1
  5393 ;; Hardware stack levels required when called: 1
  5394 ;; This function calls:
  5395 ;;		Nothing
  5396 ;; This function is called by:
  5397 ;;		___flsub
  5398 ;;		_efgtoa
  5399 ;; This function uses a non-reentrant model
  5400 ;;
  5401                           
  5402                           	psect	text18
  5403   004A98                     __ptext18:
  5404                           	callstack 0
  5405   004A98                     ___fladd:
  5406                           	callstack 24
  5407   004A98  5008               	movf	(___fladd@b+3)^0,w,c
  5408   004A9A  0B80               	andlw	128
  5409   004A9C  6E11               	movwf	___fladd@signs^0,c
  5410   004A9E  5008               	movf	(___fladd@b+3)^0,w,c
  5411   004AA0  2408               	addwf	(___fladd@b+3)^0,w,c
  5412   004AA2  6E13               	movwf	___fladd@bexp^0,c
  5413   004AA4  AE07               	btfss	(___fladd@b+2)^0,7,c
  5414   004AA6  EF57  F025         	goto	u3851
  5415   004AAA  EF59  F025         	goto	u3850
  5416   004AAE                     u3851:
  5417   004AAE  EF5A  F025         	goto	l3410
  5418   004AB2                     u3850:
  5419   004AB2  8013               	bsf	___fladd@bexp^0,0,c
  5420   004AB4                     l3410:
  5421   004AB4  5013               	movf	___fladd@bexp^0,w,c
  5422   004AB6  B4D8               	btfsc	status,2,c
  5423   004AB8  EF60  F025         	goto	u3861
  5424   004ABC  EF62  F025         	goto	u3860
  5425   004AC0                     u3861:
  5426   004AC0  EF76  F025         	goto	l3420
  5427   004AC4                     u3860:
  5428   004AC4  2813               	incf	___fladd@bexp^0,w,c
  5429   004AC6  A4D8               	btfss	status,2,c
  5430   004AC8  EF68  F025         	goto	u3871
  5431   004ACC  EF6A  F025         	goto	u3870
  5432   004AD0                     u3871:
  5433   004AD0  EF72  F025         	goto	l3416
  5434   004AD4                     u3870:
  5435   004AD4  0E00               	movlw	0
  5436   004AD6  6E05               	movwf	___fladd@b^0,c
  5437   004AD8  0E00               	movlw	0
  5438   004ADA  6E06               	movwf	(___fladd@b+1)^0,c
  5439   004ADC  0E00               	movlw	0
  5440   004ADE  6E07               	movwf	(___fladd@b+2)^0,c
  5441   004AE0  0E00               	movlw	0
  5442   004AE2  6E08               	movwf	(___fladd@b+3)^0,c
  5443   004AE4                     l3416:
  5444   004AE4  8E07               	bsf	(___fladd@b+2)^0,7,c
  5445   004AE6  6A08               	clrf	(___fladd@b+3)^0,c
  5446   004AE8  EF7E  F025         	goto	l3422
  5447   004AEC                     l3420:
  5448   004AEC  0E00               	movlw	0
  5449   004AEE  6E05               	movwf	___fladd@b^0,c
  5450   004AF0  0E00               	movlw	0
  5451   004AF2  6E06               	movwf	(___fladd@b+1)^0,c
  5452   004AF4  0E00               	movlw	0
  5453   004AF6  6E07               	movwf	(___fladd@b+2)^0,c
  5454   004AF8  0E00               	movlw	0
  5455   004AFA  6E08               	movwf	(___fladd@b+3)^0,c
  5456   004AFC                     l3422:
  5457   004AFC  500C               	movf	(___fladd@a+3)^0,w,c
  5458   004AFE  0B80               	andlw	128
  5459   004B00  6E12               	movwf	___fladd@aexp^0,c
  5460   004B02  5011               	movf	___fladd@signs^0,w,c
  5461   004B04  1812               	xorwf	___fladd@aexp^0,w,c
  5462   004B06  B4D8               	btfsc	status,2,c
  5463   004B08  EF88  F025         	goto	u3881
  5464   004B0C  EF8A  F025         	goto	u3880
  5465   004B10                     u3881:
  5466   004B10  EF8B  F025         	goto	l3428
  5467   004B14                     u3880:
  5468   004B14  8C11               	bsf	___fladd@signs^0,6,c
  5469   004B16                     l3428:
  5470   004B16  500C               	movf	(___fladd@a+3)^0,w,c
  5471   004B18  240C               	addwf	(___fladd@a+3)^0,w,c
  5472   004B1A  6E12               	movwf	___fladd@aexp^0,c
  5473   004B1C  AE0B               	btfss	(___fladd@a+2)^0,7,c
  5474   004B1E  EF93  F025         	goto	u3891
  5475   004B22  EF95  F025         	goto	u3890
  5476   004B26                     u3891:
  5477   004B26  EF96  F025         	goto	l3434
  5478   004B2A                     u3890:
  5479   004B2A  8012               	bsf	___fladd@aexp^0,0,c
  5480   004B2C                     l3434:
  5481   004B2C  5012               	movf	___fladd@aexp^0,w,c
  5482   004B2E  B4D8               	btfsc	status,2,c
  5483   004B30  EF9C  F025         	goto	u3901
  5484   004B34  EF9E  F025         	goto	u3900
  5485   004B38                     u3901:
  5486   004B38  EFB2  F025         	goto	l3444
  5487   004B3C                     u3900:
  5488   004B3C  2812               	incf	___fladd@aexp^0,w,c
  5489   004B3E  A4D8               	btfss	status,2,c
  5490   004B40  EFA4  F025         	goto	u3911
  5491   004B44  EFA6  F025         	goto	u3910
  5492   004B48                     u3911:
  5493   004B48  EFAE  F025         	goto	l3440
  5494   004B4C                     u3910:
  5495   004B4C  0E00               	movlw	0
  5496   004B4E  6E09               	movwf	___fladd@a^0,c
  5497   004B50  0E00               	movlw	0
  5498   004B52  6E0A               	movwf	(___fladd@a+1)^0,c
  5499   004B54  0E00               	movlw	0
  5500   004B56  6E0B               	movwf	(___fladd@a+2)^0,c
  5501   004B58  0E00               	movlw	0
  5502   004B5A  6E0C               	movwf	(___fladd@a+3)^0,c
  5503   004B5C                     l3440:
  5504   004B5C  8E0B               	bsf	(___fladd@a+2)^0,7,c
  5505   004B5E  6A0C               	clrf	(___fladd@a+3)^0,c
  5506   004B60  EFBA  F025         	goto	l3446
  5507   004B64                     l3444:
  5508   004B64  0E00               	movlw	0
  5509   004B66  6E09               	movwf	___fladd@a^0,c
  5510   004B68  0E00               	movlw	0
  5511   004B6A  6E0A               	movwf	(___fladd@a+1)^0,c
  5512   004B6C  0E00               	movlw	0
  5513   004B6E  6E0B               	movwf	(___fladd@a+2)^0,c
  5514   004B70  0E00               	movlw	0
  5515   004B72  6E0C               	movwf	(___fladd@a+3)^0,c
  5516   004B74                     l3446:
  5517   004B74  5013               	movf	___fladd@bexp^0,w,c
  5518   004B76  5C12               	subwf	___fladd@aexp^0,w,c
  5519   004B78  B0D8               	btfsc	status,0,c
  5520   004B7A  EFC1  F025         	goto	u3921
  5521   004B7E  EFC3  F025         	goto	u3920
  5522   004B82                     u3921:
  5523   004B82  EFEA  F025         	goto	l3482
  5524   004B86                     u3920:
  5525   004B86  AC11               	btfss	___fladd@signs^0,6,c
  5526   004B88  EFC8  F025         	goto	u3931
  5527   004B8C  EFCA  F025         	goto	u3930
  5528   004B90                     u3931:
  5529   004B90  EFCC  F025         	goto	l3452
  5530   004B94                     u3930:
  5531   004B94  0E80               	movlw	128
  5532   004B96  1A11               	xorwf	___fladd@signs^0,f,c
  5533   004B98                     l3452:
  5534   004B98  C013  F014         	movff	___fladd@bexp,___fladd@grs
  5535   004B9C  C012  F013         	movff	___fladd@aexp,___fladd@bexp
  5536   004BA0  C014  F012         	movff	___fladd@grs,___fladd@aexp
  5537   004BA4  C005  F014         	movff	___fladd@b,___fladd@grs
  5538   004BA8  C009  F005         	movff	___fladd@a,___fladd@b
  5539   004BAC  C014  F009         	movff	___fladd@grs,___fladd@a
  5540   004BB0  C006  F014         	movff	___fladd@b+1,___fladd@grs
  5541   004BB4  C00A  F006         	movff	___fladd@a+1,___fladd@b+1
  5542   004BB8  C014  F00A         	movff	___fladd@grs,___fladd@a+1
  5543   004BBC  C007  F014         	movff	___fladd@b+2,___fladd@grs
  5544   004BC0  C00B  F007         	movff	___fladd@a+2,___fladd@b+2
  5545   004BC4  C014  F00B         	movff	___fladd@grs,___fladd@a+2
  5546   004BC8  C008  F014         	movff	___fladd@b+3,___fladd@grs
  5547   004BCC  C00C  F008         	movff	___fladd@a+3,___fladd@b+3
  5548   004BD0  C014  F00C         	movff	___fladd@grs,___fladd@a+3
  5549   004BD4                     l3482:
  5550   004BD4  6A14               	clrf	___fladd@grs^0,c
  5551   004BD6  5013               	movf	___fladd@bexp^0,w,c
  5552   004BD8  C012  F00D         	movff	___fladd@aexp,??___fladd
  5553   004BDC  6A0E               	clrf	(??___fladd+1)^0,c
  5554   004BDE  5E0D               	subwf	??___fladd^0,f,c
  5555   004BE0  0E00               	movlw	0
  5556   004BE2  5A0E               	subwfb	(??___fladd+1)^0,f,c
  5557   004BE4  BE0E               	btfsc	(??___fladd+1)^0,7,c
  5558   004BE6  EFFE  F025         	goto	u3941
  5559   004BEA  500E               	movf	(??___fladd+1)^0,w,c
  5560   004BEC  E109               	bnz	u3940
  5561   004BEE  0E1A               	movlw	26
  5562   004BF0  5C0D               	subwf	??___fladd^0,w,c
  5563   004BF2  A0D8               	btfss	status,0,c
  5564   004BF4  EFFE  F025         	goto	u3941
  5565   004BF8  EF00  F026         	goto	u3940
  5566   004BFC                     u3941:
  5567   004BFC  EF37  F026         	goto	l670
  5568   004C00                     u3940:
  5569   004C00  5005               	movf	___fladd@b^0,w,c
  5570   004C02  1006               	iorwf	(___fladd@b+1)^0,w,c
  5571   004C04  1007               	iorwf	(___fladd@b+2)^0,w,c
  5572   004C06  1008               	iorwf	(___fladd@b+3)^0,w,c
  5573   004C08  A4D8               	btfss	status,2,c
  5574   004C0A  EF09  F026         	goto	u3951
  5575   004C0E  EF0C  F026         	goto	u3950
  5576   004C12                     u3951:
  5577   004C12  0E01               	movlw	1
  5578   004C14  EF0D  F026         	goto	u3960
  5579   004C18                     u3950:
  5580   004C18  0E00               	movlw	0
  5581   004C1A                     u3960:
  5582   004C1A  6E14               	movwf	___fladd@grs^0,c
  5583   004C1C  0E00               	movlw	0
  5584   004C1E  6E05               	movwf	___fladd@b^0,c
  5585   004C20  0E00               	movlw	0
  5586   004C22  6E06               	movwf	(___fladd@b+1)^0,c
  5587   004C24  0E00               	movlw	0
  5588   004C26  6E07               	movwf	(___fladd@b+2)^0,c
  5589   004C28  0E00               	movlw	0
  5590   004C2A  6E08               	movwf	(___fladd@b+3)^0,c
  5591   004C2C  C012  F013         	movff	___fladd@aexp,___fladd@bexp
  5592   004C30  EF40  F026         	goto	l669
  5593   004C34                     l671:
  5594   004C34  A014               	btfss	___fladd@grs^0,0,c
  5595   004C36  EF1F  F026         	goto	u3971
  5596   004C3A  EF21  F026         	goto	u3970
  5597   004C3E                     u3971:
  5598   004C3E  EF27  F026         	goto	l3492
  5599   004C42                     u3970:
  5600   004C42  90D8               	bcf	status,0,c
  5601   004C44  3014               	rrcf	___fladd@grs^0,w,c
  5602   004C46  0901               	iorlw	1
  5603   004C48  6E14               	movwf	___fladd@grs^0,c
  5604   004C4A  EF29  F026         	goto	l3494
  5605   004C4E                     l3492:
  5606   004C4E  90D8               	bcf	status,0,c
  5607   004C50  3214               	rrcf	___fladd@grs^0,f,c
  5608   004C52                     l3494:
  5609   004C52  A005               	btfss	___fladd@b^0,0,c
  5610   004C54  EF2E  F026         	goto	u3981
  5611   004C58  EF30  F026         	goto	u3980
  5612   004C5C                     u3981:
  5613   004C5C  EF31  F026         	goto	l3498
  5614   004C60                     u3980:
  5615   004C60  8E14               	bsf	___fladd@grs^0,7,c
  5616   004C62                     l3498:
  5617   004C62  3408               	rlcf	(___fladd@b+3)^0,w,c
  5618   004C64  3208               	rrcf	(___fladd@b+3)^0,f,c
  5619   004C66  3207               	rrcf	(___fladd@b+2)^0,f,c
  5620   004C68  3206               	rrcf	(___fladd@b+1)^0,f,c
  5621   004C6A  3205               	rrcf	___fladd@b^0,f,c
  5622   004C6C  2A13               	incf	___fladd@bexp^0,f,c
  5623   004C6E                     l670:
  5624   004C6E  5012               	movf	___fladd@aexp^0,w,c
  5625   004C70  5C13               	subwf	___fladd@bexp^0,w,c
  5626   004C72  A0D8               	btfss	status,0,c
  5627   004C74  EF3E  F026         	goto	u3991
  5628   004C78  EF40  F026         	goto	u3990
  5629   004C7C                     u3991:
  5630   004C7C  EF1A  F026         	goto	l671
  5631   004C80                     u3990:
  5632   004C80                     l669:
  5633   004C80  BC11               	btfsc	___fladd@signs^0,6,c
  5634   004C82  EF45  F026         	goto	u4001
  5635   004C86  EF47  F026         	goto	u4000
  5636   004C8A                     u4001:
  5637   004C8A  EF87  F026         	goto	l3526
  5638   004C8E                     u4000:
  5639   004C8E  5013               	movf	___fladd@bexp^0,w,c
  5640   004C90  A4D8               	btfss	status,2,c
  5641   004C92  EF4D  F026         	goto	u4011
  5642   004C96  EF4F  F026         	goto	u4010
  5643   004C9A                     u4011:
  5644   004C9A  EF59  F026         	goto	l3508
  5645   004C9E                     u4010:
  5646   004C9E  0E00               	movlw	0
  5647   004CA0  6E05               	movwf	?___fladd^0,c
  5648   004CA2  0E00               	movlw	0
  5649   004CA4  6E06               	movwf	(?___fladd+1)^0,c
  5650   004CA6  0E00               	movlw	0
  5651   004CA8  6E07               	movwf	(?___fladd+2)^0,c
  5652   004CAA  0E00               	movlw	0
  5653   004CAC  6E08               	movwf	(?___fladd+3)^0,c
  5654   004CAE  EFA6  F027         	goto	l678
  5655   004CB2                     l3508:
  5656   004CB2  5009               	movf	___fladd@a^0,w,c
  5657   004CB4  2605               	addwf	___fladd@b^0,f,c
  5658   004CB6  500A               	movf	(___fladd@a+1)^0,w,c
  5659   004CB8  2206               	addwfc	(___fladd@b+1)^0,f,c
  5660   004CBA  500B               	movf	(___fladd@a+2)^0,w,c
  5661   004CBC  2207               	addwfc	(___fladd@b+2)^0,f,c
  5662   004CBE  500C               	movf	(___fladd@a+3)^0,w,c
  5663   004CC0  2208               	addwfc	(___fladd@b+3)^0,f,c
  5664   004CC2  A008               	btfss	(___fladd@b+3)^0,0,c
  5665   004CC4  EF66  F026         	goto	u4021
  5666   004CC8  EF68  F026         	goto	u4020
  5667   004CCC                     u4021:
  5668   004CCC  EF14  F027         	goto	l683
  5669   004CD0                     u4020:
  5670   004CD0  A014               	btfss	___fladd@grs^0,0,c
  5671   004CD2  EF6D  F026         	goto	u4031
  5672   004CD6  EF6F  F026         	goto	u4030
  5673   004CDA                     u4031:
  5674   004CDA  EF75  F026         	goto	l3516
  5675   004CDE                     u4030:
  5676   004CDE  90D8               	bcf	status,0,c
  5677   004CE0  3014               	rrcf	___fladd@grs^0,w,c
  5678   004CE2  0901               	iorlw	1
  5679   004CE4  6E14               	movwf	___fladd@grs^0,c
  5680   004CE6  EF77  F026         	goto	l3518
  5681   004CEA                     l3516:
  5682   004CEA  90D8               	bcf	status,0,c
  5683   004CEC  3214               	rrcf	___fladd@grs^0,f,c
  5684   004CEE                     l3518:
  5685   004CEE  A005               	btfss	___fladd@b^0,0,c
  5686   004CF0  EF7C  F026         	goto	u4041
  5687   004CF4  EF7E  F026         	goto	u4040
  5688   004CF8                     u4041:
  5689   004CF8  EF7F  F026         	goto	l3522
  5690   004CFC                     u4040:
  5691   004CFC  8E14               	bsf	___fladd@grs^0,7,c
  5692   004CFE                     l3522:
  5693   004CFE  3408               	rlcf	(___fladd@b+3)^0,w,c
  5694   004D00  3208               	rrcf	(___fladd@b+3)^0,f,c
  5695   004D02  3207               	rrcf	(___fladd@b+2)^0,f,c
  5696   004D04  3206               	rrcf	(___fladd@b+1)^0,f,c
  5697   004D06  3205               	rrcf	___fladd@b^0,f,c
  5698   004D08  2A13               	incf	___fladd@bexp^0,f,c
  5699   004D0A  EF14  F027         	goto	l683
  5700   004D0E                     l3526:
  5701   004D0E  5009               	movf	___fladd@a^0,w,c
  5702   004D10  5C05               	subwf	___fladd@b^0,w,c
  5703   004D12  500A               	movf	(___fladd@a+1)^0,w,c
  5704   004D14  5806               	subwfb	(___fladd@b+1)^0,w,c
  5705   004D16  500B               	movf	(___fladd@a+2)^0,w,c
  5706   004D18  5807               	subwfb	(___fladd@b+2)^0,w,c
  5707   004D1A  5008               	movf	(___fladd@b+3)^0,w,c
  5708   004D1C  0A80               	xorlw	128
  5709   004D1E  6E0D               	movwf	??___fladd^0,c
  5710   004D20  500C               	movf	(___fladd@a+3)^0,w,c
  5711   004D22  0A80               	xorlw	128
  5712   004D24  580D               	subwfb	??___fladd^0,w,c
  5713   004D26  B0D8               	btfsc	status,0,c
  5714   004D28  EF98  F026         	goto	u4051
  5715   004D2C  EF9A  F026         	goto	u4050
  5716   004D30                     u4051:
  5717   004D30  EFC5  F026         	goto	l3536
  5718   004D34                     u4050:
  5719   004D34  5005               	movf	___fladd@b^0,w,c
  5720   004D36  5C09               	subwf	___fladd@a^0,w,c
  5721   004D38  6E0D               	movwf	??___fladd^0,c
  5722   004D3A  5006               	movf	(___fladd@b+1)^0,w,c
  5723   004D3C  580A               	subwfb	(___fladd@a+1)^0,w,c
  5724   004D3E  6E0E               	movwf	(??___fladd+1)^0,c
  5725   004D40  5007               	movf	(___fladd@b+2)^0,w,c
  5726   004D42  580B               	subwfb	(___fladd@a+2)^0,w,c
  5727   004D44  6E0F               	movwf	(??___fladd+2)^0,c
  5728   004D46  5008               	movf	(___fladd@b+3)^0,w,c
  5729   004D48  580C               	subwfb	(___fladd@a+3)^0,w,c
  5730   004D4A  6E10               	movwf	(??___fladd+3)^0,c
  5731   004D4C  0EFF               	movlw	255
  5732   004D4E  240D               	addwf	??___fladd^0,w,c
  5733   004D50  6E05               	movwf	___fladd@b^0,c
  5734   004D52  0EFF               	movlw	255
  5735   004D54  200E               	addwfc	(??___fladd+1)^0,w,c
  5736   004D56  6E06               	movwf	(___fladd@b+1)^0,c
  5737   004D58  0EFF               	movlw	255
  5738   004D5A  200F               	addwfc	(??___fladd+2)^0,w,c
  5739   004D5C  6E07               	movwf	(___fladd@b+2)^0,c
  5740   004D5E  0EFF               	movlw	255
  5741   004D60  2010               	addwfc	(??___fladd+3)^0,w,c
  5742   004D62  6E08               	movwf	(___fladd@b+3)^0,c
  5743   004D64  0E80               	movlw	128
  5744   004D66  1A11               	xorwf	___fladd@signs^0,f,c
  5745   004D68  6C14               	negf	___fladd@grs^0,c
  5746   004D6A  5014               	movf	___fladd@grs^0,w,c
  5747   004D6C  A4D8               	btfss	status,2,c
  5748   004D6E  EFBB  F026         	goto	u4061
  5749   004D72  EFBD  F026         	goto	u4060
  5750   004D76                     u4061:
  5751   004D76  EFCD  F026         	goto	l686
  5752   004D7A                     u4060:
  5753   004D7A  0E01               	movlw	1
  5754   004D7C  2605               	addwf	___fladd@b^0,f,c
  5755   004D7E  0E00               	movlw	0
  5756   004D80  2206               	addwfc	(___fladd@b+1)^0,f,c
  5757   004D82  2207               	addwfc	(___fladd@b+2)^0,f,c
  5758   004D84  2208               	addwfc	(___fladd@b+3)^0,f,c
  5759   004D86  EFCD  F026         	goto	l686
  5760   004D8A                     l3536:
  5761   004D8A  5009               	movf	___fladd@a^0,w,c
  5762   004D8C  5E05               	subwf	___fladd@b^0,f,c
  5763   004D8E  500A               	movf	(___fladd@a+1)^0,w,c
  5764   004D90  5A06               	subwfb	(___fladd@b+1)^0,f,c
  5765   004D92  500B               	movf	(___fladd@a+2)^0,w,c
  5766   004D94  5A07               	subwfb	(___fladd@b+2)^0,f,c
  5767   004D96  500C               	movf	(___fladd@a+3)^0,w,c
  5768   004D98  5A08               	subwfb	(___fladd@b+3)^0,f,c
  5769   004D9A                     l686:
  5770   004D9A  5005               	movf	___fladd@b^0,w,c
  5771   004D9C  1006               	iorwf	(___fladd@b+1)^0,w,c
  5772   004D9E  1007               	iorwf	(___fladd@b+2)^0,w,c
  5773   004DA0  1008               	iorwf	(___fladd@b+3)^0,w,c
  5774   004DA2  A4D8               	btfss	status,2,c
  5775   004DA4  EFD6  F026         	goto	u4071
  5776   004DA8  EFD8  F026         	goto	u4070
  5777   004DAC                     u4071:
  5778   004DAC  EF0D  F027         	goto	l3560
  5779   004DB0                     u4070:
  5780   004DB0  5014               	movf	___fladd@grs^0,w,c
  5781   004DB2  A4D8               	btfss	status,2,c
  5782   004DB4  EFDE  F026         	goto	u4081
  5783   004DB8  EFE0  F026         	goto	u4080
  5784   004DBC                     u4081:
  5785   004DBC  EF0D  F027         	goto	l3560
  5786   004DC0                     u4080:
  5787   004DC0  0E00               	movlw	0
  5788   004DC2  6E05               	movwf	?___fladd^0,c
  5789   004DC4  0E00               	movlw	0
  5790   004DC6  6E06               	movwf	(?___fladd+1)^0,c
  5791   004DC8  0E00               	movlw	0
  5792   004DCA  6E07               	movwf	(?___fladd+2)^0,c
  5793   004DCC  0E00               	movlw	0
  5794   004DCE  6E08               	movwf	(?___fladd+3)^0,c
  5795   004DD0  EFA6  F027         	goto	l678
  5796   004DD4                     l3544:
  5797   004DD4  90D8               	bcf	status,0,c
  5798   004DD6  3605               	rlcf	___fladd@b^0,f,c
  5799   004DD8  3606               	rlcf	(___fladd@b+1)^0,f,c
  5800   004DDA  3607               	rlcf	(___fladd@b+2)^0,f,c
  5801   004DDC  3608               	rlcf	(___fladd@b+3)^0,f,c
  5802   004DDE  AE14               	btfss	___fladd@grs^0,7,c
  5803   004DE0  EFF4  F026         	goto	u4091
  5804   004DE4  EFF6  F026         	goto	u4090
  5805   004DE8                     u4091:
  5806   004DE8  EFF7  F026         	goto	l3550
  5807   004DEC                     u4090:
  5808   004DEC  8005               	bsf	___fladd@b^0,0,c
  5809   004DEE                     l3550:
  5810   004DEE  A014               	btfss	___fladd@grs^0,0,c
  5811   004DF0  EFFC  F026         	goto	u4101
  5812   004DF4  EFFE  F026         	goto	u4100
  5813   004DF8                     u4101:
  5814   004DF8  EF02  F027         	goto	l3554
  5815   004DFC                     u4100:
  5816   004DFC  80D8               	bsf	status,0,c
  5817   004DFE  3614               	rlcf	___fladd@grs^0,f,c
  5818   004E00  EF04  F027         	goto	l3556
  5819   004E04                     l3554:
  5820   004E04  90D8               	bcf	status,0,c
  5821   004E06  3614               	rlcf	___fladd@grs^0,f,c
  5822   004E08                     l3556:
  5823   004E08  5013               	movf	___fladd@bexp^0,w,c
  5824   004E0A  B4D8               	btfsc	status,2,c
  5825   004E0C  EF0A  F027         	goto	u4111
  5826   004E10  EF0C  F027         	goto	u4110
  5827   004E14                     u4111:
  5828   004E14  EF0D  F027         	goto	l3560
  5829   004E18                     u4110:
  5830   004E18  0613               	decf	___fladd@bexp^0,f,c
  5831   004E1A                     l3560:
  5832   004E1A  AE07               	btfss	(___fladd@b+2)^0,7,c
  5833   004E1C  EF12  F027         	goto	u4121
  5834   004E20  EF14  F027         	goto	u4120
  5835   004E24                     u4121:
  5836   004E24  EFEA  F026         	goto	l3544
  5837   004E28                     u4120:
  5838   004E28                     l683:
  5839   004E28  6A12               	clrf	___fladd@aexp^0,c
  5840   004E2A  AE14               	btfss	___fladd@grs^0,7,c
  5841   004E2C  EF1A  F027         	goto	u4131
  5842   004E30  EF1C  F027         	goto	u4130
  5843   004E34                     u4131:
  5844   004E34  EF34  F027         	goto	l695
  5845   004E38                     u4130:
  5846   004E38  C014  F00D         	movff	___fladd@grs,??___fladd
  5847   004E3C  0E7F               	movlw	127
  5848   004E3E  160D               	andwf	??___fladd^0,f,c
  5849   004E40  B4D8               	btfsc	status,2,c
  5850   004E42  EF25  F027         	goto	u4141
  5851   004E46  EF27  F027         	goto	u4140
  5852   004E4A                     u4141:
  5853   004E4A  EF2B  F027         	goto	l696
  5854   004E4E                     u4140:
  5855   004E4E                     l3564:
  5856   004E4E  0E01               	movlw	1
  5857   004E50  6E12               	movwf	___fladd@aexp^0,c
  5858   004E52  EF34  F027         	goto	l695
  5859   004E56                     l696:
  5860   004E56  A005               	btfss	___fladd@b^0,0,c
  5861   004E58  EF30  F027         	goto	u4151
  5862   004E5C  EF32  F027         	goto	u4150
  5863   004E60                     u4151:
  5864   004E60  EF34  F027         	goto	l695
  5865   004E64                     u4150:
  5866   004E64  EF27  F027         	goto	l3564
  5867   004E68                     l695:
  5868   004E68  5012               	movf	___fladd@aexp^0,w,c
  5869   004E6A  B4D8               	btfsc	status,2,c
  5870   004E6C  EF3A  F027         	goto	u4161
  5871   004E70  EF3C  F027         	goto	u4160
  5872   004E74                     u4161:
  5873   004E74  EF67  F027         	goto	l3576
  5874   004E78                     u4160:
  5875   004E78  0E01               	movlw	1
  5876   004E7A  2605               	addwf	___fladd@b^0,f,c
  5877   004E7C  0E00               	movlw	0
  5878   004E7E  2206               	addwfc	(___fladd@b+1)^0,f,c
  5879   004E80  2207               	addwfc	(___fladd@b+2)^0,f,c
  5880   004E82  2208               	addwfc	(___fladd@b+3)^0,f,c
  5881   004E84  A008               	btfss	(___fladd@b+3)^0,0,c
  5882   004E86  EF47  F027         	goto	u4171
  5883   004E8A  EF49  F027         	goto	u4170
  5884   004E8E                     u4171:
  5885   004E8E  EF67  F027         	goto	l3576
  5886   004E92                     u4170:
  5887   004E92  C005  F00D         	movff	___fladd@b,??___fladd
  5888   004E96  C006  F00E         	movff	___fladd@b+1,??___fladd+1
  5889   004E9A  C007  F00F         	movff	___fladd@b+2,??___fladd+2
  5890   004E9E  C008  F010         	movff	___fladd@b+3,??___fladd+3
  5891   004EA2  3410               	rlcf	(??___fladd+3)^0,w,c
  5892   004EA4  3210               	rrcf	(??___fladd+3)^0,f,c
  5893   004EA6  320F               	rrcf	(??___fladd+2)^0,f,c
  5894   004EA8  320E               	rrcf	(??___fladd+1)^0,f,c
  5895   004EAA  320D               	rrcf	??___fladd^0,f,c
  5896   004EAC  C00D  F005         	movff	??___fladd,___fladd@b
  5897   004EB0  C00E  F006         	movff	??___fladd+1,___fladd@b+1
  5898   004EB4  C00F  F007         	movff	??___fladd+2,___fladd@b+2
  5899   004EB8  C010  F008         	movff	??___fladd+3,___fladd@b+3
  5900   004EBC  2813               	incf	___fladd@bexp^0,w,c
  5901   004EBE  B4D8               	btfsc	status,2,c
  5902   004EC0  EF64  F027         	goto	u4181
  5903   004EC4  EF66  F027         	goto	u4180
  5904   004EC8                     u4181:
  5905   004EC8  EF67  F027         	goto	l3576
  5906   004ECC                     u4180:
  5907   004ECC  2A13               	incf	___fladd@bexp^0,f,c
  5908   004ECE                     l3576:
  5909   004ECE  2813               	incf	___fladd@bexp^0,w,c
  5910   004ED0  B4D8               	btfsc	status,2,c
  5911   004ED2  EF6D  F027         	goto	u4191
  5912   004ED6  EF6F  F027         	goto	u4190
  5913   004EDA                     u4191:
  5914   004EDA  EF77  F027         	goto	l3580
  5915   004EDE                     u4190:
  5916   004EDE  5013               	movf	___fladd@bexp^0,w,c
  5917   004EE0  A4D8               	btfss	status,2,c
  5918   004EE2  EF75  F027         	goto	u4201
  5919   004EE6  EF77  F027         	goto	u4200
  5920   004EEA                     u4201:
  5921   004EEA  EF88  F027         	goto	l702
  5922   004EEE                     u4200:
  5923   004EEE                     l3580:
  5924   004EEE  0E00               	movlw	0
  5925   004EF0  6E05               	movwf	___fladd@b^0,c
  5926   004EF2  0E00               	movlw	0
  5927   004EF4  6E06               	movwf	(___fladd@b+1)^0,c
  5928   004EF6  0E00               	movlw	0
  5929   004EF8  6E07               	movwf	(___fladd@b+2)^0,c
  5930   004EFA  0E00               	movlw	0
  5931   004EFC  6E08               	movwf	(___fladd@b+3)^0,c
  5932   004EFE  5013               	movf	___fladd@bexp^0,w,c
  5933   004F00  A4D8               	btfss	status,2,c
  5934   004F02  EF85  F027         	goto	u4211
  5935   004F06  EF87  F027         	goto	u4210
  5936   004F0A                     u4211:
  5937   004F0A  EF88  F027         	goto	l702
  5938   004F0E                     u4210:
  5939   004F0E  6A11               	clrf	___fladd@signs^0,c
  5940   004F10                     l702:
  5941   004F10  A013               	btfss	___fladd@bexp^0,0,c
  5942   004F12  EF8D  F027         	goto	u4221
  5943   004F16  EF8F  F027         	goto	u4220
  5944   004F1A                     u4221:
  5945   004F1A  EF92  F027         	goto	l3586
  5946   004F1E                     u4220:
  5947   004F1E  8E07               	bsf	(___fladd@b+2)^0,7,c
  5948   004F20  EF93  F027         	goto	l3588
  5949   004F24                     l3586:
  5950   004F24  9E07               	bcf	(___fladd@b+2)^0,7,c
  5951   004F26                     l3588:
  5952   004F26  90D8               	bcf	status,0,c
  5953   004F28  3013               	rrcf	___fladd@bexp^0,w,c
  5954   004F2A  6E08               	movwf	(___fladd@b+3)^0,c
  5955   004F2C  AE11               	btfss	___fladd@signs^0,7,c
  5956   004F2E  EF9B  F027         	goto	u4231
  5957   004F32  EF9D  F027         	goto	u4230
  5958   004F36                     u4231:
  5959   004F36  EF9E  F027         	goto	l3594
  5960   004F3A                     u4230:
  5961   004F3A  8E08               	bsf	(___fladd@b+3)^0,7,c
  5962   004F3C                     l3594:
  5963   004F3C  C005  F005         	movff	___fladd@b,?___fladd
  5964   004F40  C006  F006         	movff	___fladd@b+1,?___fladd+1
  5965   004F44  C007  F007         	movff	___fladd@b+2,?___fladd+2
  5966   004F48  C008  F008         	movff	___fladd@b+3,?___fladd+3
  5967   004F4C                     l678:
  5968   004F4C  0012               	return		;funcret
  5969   004F4E                     __end_of___fladd:
  5970                           	callstack 0
  5971                           
  5972 ;; *************** function ___flneg *****************
  5973 ;; Defined at:
  5974 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\flneg.c"
  5975 ;; Parameters:    Size  Location     Type
  5976 ;;  f1              4    4[COMRAM] unsigned char 
  5977 ;; Auto vars:     Size  Location     Type
  5978 ;;		None
  5979 ;; Return value:  Size  Location     Type
  5980 ;;                  4    4[COMRAM] unsigned char 
  5981 ;; Registers used:
  5982 ;;		wreg, status,2, status,0
  5983 ;; Tracked objects:
  5984 ;;		On entry : 0/0
  5985 ;;		On exit  : 0/0
  5986 ;;		Unchanged: 0/0
  5987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5988 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5991 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5992 ;;Total ram usage:        4 bytes
  5993 ;; Hardware stack levels used: 1
  5994 ;; Hardware stack levels required when called: 1
  5995 ;; This function calls:
  5996 ;;		Nothing
  5997 ;; This function is called by:
  5998 ;;		_efgtoa
  5999 ;; This function uses a non-reentrant model
  6000 ;;
  6001                           
  6002                           	psect	text19
  6003   006A5E                     __ptext19:
  6004                           	callstack 0
  6005   006A5E                     ___flneg:
  6006                           	callstack 25
  6007   006A5E  5005               	movf	___flneg@f1^0,w,c
  6008   006A60  1006               	iorwf	(___flneg@f1+1)^0,w,c
  6009   006A62  1007               	iorwf	(___flneg@f1+2)^0,w,c
  6010   006A64  1008               	iorwf	(___flneg@f1+3)^0,w,c
  6011   006A66  B4D8               	btfsc	status,2,c
  6012   006A68  EF38  F035         	goto	u4751
  6013   006A6C  EF3A  F035         	goto	u4750
  6014   006A70                     u4751:
  6015   006A70  EF42  F035         	goto	l3918
  6016   006A74                     u4750:
  6017   006A74  0E00               	movlw	0
  6018   006A76  1A05               	xorwf	___flneg@f1^0,f,c
  6019   006A78  0E00               	movlw	0
  6020   006A7A  1A06               	xorwf	(___flneg@f1+1)^0,f,c
  6021   006A7C  0E00               	movlw	0
  6022   006A7E  1A07               	xorwf	(___flneg@f1+2)^0,f,c
  6023   006A80  0E80               	movlw	128
  6024   006A82  1A08               	xorwf	(___flneg@f1+3)^0,f,c
  6025   006A84                     l3918:
  6026   006A84  C005  F005         	movff	___flneg@f1,?___flneg
  6027   006A88  C006  F006         	movff	___flneg@f1+1,?___flneg+1
  6028   006A8C  C007  F007         	movff	___flneg@f1+2,?___flneg+2
  6029   006A90  C008  F008         	movff	___flneg@f1+3,?___flneg+3
  6030   006A94  0012               	return		;funcret
  6031   006A96                     __end_of___flneg:
  6032                           	callstack 0
  6033                           
  6034 ;; *************** function ___flmul *****************
  6035 ;; Defined at:
  6036 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcmul.c"
  6037 ;; Parameters:    Size  Location     Type
  6038 ;;  b               4   18[COMRAM] unsigned char 
  6039 ;;  a               4   22[COMRAM] unsigned char 
  6040 ;; Auto vars:     Size  Location     Type
  6041 ;;  prod            4   37[COMRAM] struct .
  6042 ;;  grs             4   32[COMRAM] unsigned long 
  6043 ;;  temp            2   41[COMRAM] struct .
  6044 ;;  bexp            1   36[COMRAM] unsigned char 
  6045 ;;  aexp            1   31[COMRAM] unsigned char 
  6046 ;;  sign            1   30[COMRAM] unsigned char 
  6047 ;; Return value:  Size  Location     Type
  6048 ;;                  4   18[COMRAM] unsigned char 
  6049 ;; Registers used:
  6050 ;;		wreg, status,2, status,0, prodl, prodh
  6051 ;; Tracked objects:
  6052 ;;		On entry : 0/0
  6053 ;;		On exit  : 0/0
  6054 ;;		Unchanged: 0/0
  6055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6056 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6057 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6058 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6059 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6060 ;;Total ram usage:       25 bytes
  6061 ;; Hardware stack levels used: 1
  6062 ;; Hardware stack levels required when called: 1
  6063 ;; This function calls:
  6064 ;;		Nothing
  6065 ;; This function is called by:
  6066 ;;		_main
  6067 ;;		_efgtoa
  6068 ;; This function uses a non-reentrant model
  6069 ;;
  6070                           
  6071                           	psect	text20
  6072   004F4E                     __ptext20:
  6073                           	callstack 0
  6074   004F4E                     ___flmul:
  6075                           	callstack 25
  6076   004F4E  5016               	movf	(___flmul@b+3)^0,w,c
  6077   004F50  0B80               	andlw	128
  6078   004F52  6E1F               	movwf	___flmul@sign^0,c
  6079   004F54  5016               	movf	(___flmul@b+3)^0,w,c
  6080   004F56  2416               	addwf	(___flmul@b+3)^0,w,c
  6081   004F58  6E25               	movwf	___flmul@bexp^0,c
  6082   004F5A  AE15               	btfss	(___flmul@b+2)^0,7,c
  6083   004F5C  EFB2  F027         	goto	u4481
  6084   004F60  EFB4  F027         	goto	u4480
  6085   004F64                     u4481:
  6086   004F64  EFB5  F027         	goto	l3748
  6087   004F68                     u4480:
  6088   004F68  8025               	bsf	___flmul@bexp^0,0,c
  6089   004F6A                     l3748:
  6090   004F6A  5025               	movf	___flmul@bexp^0,w,c
  6091   004F6C  B4D8               	btfsc	status,2,c
  6092   004F6E  EFBB  F027         	goto	u4491
  6093   004F72  EFBD  F027         	goto	u4490
  6094   004F76                     u4491:
  6095   004F76  EFD0  F027         	goto	l3756
  6096   004F7A                     u4490:
  6097   004F7A  2825               	incf	___flmul@bexp^0,w,c
  6098   004F7C  A4D8               	btfss	status,2,c
  6099   004F7E  EFC3  F027         	goto	u4501
  6100   004F82  EFC5  F027         	goto	u4500
  6101   004F86                     u4501:
  6102   004F86  EFCD  F027         	goto	l3754
  6103   004F8A                     u4500:
  6104   004F8A  0E00               	movlw	0
  6105   004F8C  6E13               	movwf	___flmul@b^0,c
  6106   004F8E  0E00               	movlw	0
  6107   004F90  6E14               	movwf	(___flmul@b+1)^0,c
  6108   004F92  0E00               	movlw	0
  6109   004F94  6E15               	movwf	(___flmul@b+2)^0,c
  6110   004F96  0E00               	movlw	0
  6111   004F98  6E16               	movwf	(___flmul@b+3)^0,c
  6112   004F9A                     l3754:
  6113   004F9A  8E15               	bsf	(___flmul@b+2)^0,7,c
  6114   004F9C  EFD8  F027         	goto	l3758
  6115   004FA0                     l3756:
  6116   004FA0  0E00               	movlw	0
  6117   004FA2  6E13               	movwf	___flmul@b^0,c
  6118   004FA4  0E00               	movlw	0
  6119   004FA6  6E14               	movwf	(___flmul@b+1)^0,c
  6120   004FA8  0E00               	movlw	0
  6121   004FAA  6E15               	movwf	(___flmul@b+2)^0,c
  6122   004FAC  0E00               	movlw	0
  6123   004FAE  6E16               	movwf	(___flmul@b+3)^0,c
  6124   004FB0                     l3758:
  6125   004FB0  501A               	movf	(___flmul@a+3)^0,w,c
  6126   004FB2  0B80               	andlw	128
  6127   004FB4  1A1F               	xorwf	___flmul@sign^0,f,c
  6128   004FB6  501A               	movf	(___flmul@a+3)^0,w,c
  6129   004FB8  241A               	addwf	(___flmul@a+3)^0,w,c
  6130   004FBA  6E20               	movwf	___flmul@aexp^0,c
  6131   004FBC  AE19               	btfss	(___flmul@a+2)^0,7,c
  6132   004FBE  EFE3  F027         	goto	u4511
  6133   004FC2  EFE5  F027         	goto	u4510
  6134   004FC6                     u4511:
  6135   004FC6  EFE6  F027         	goto	l3766
  6136   004FCA                     u4510:
  6137   004FCA  8020               	bsf	___flmul@aexp^0,0,c
  6138   004FCC                     l3766:
  6139   004FCC  5020               	movf	___flmul@aexp^0,w,c
  6140   004FCE  B4D8               	btfsc	status,2,c
  6141   004FD0  EFEC  F027         	goto	u4521
  6142   004FD4  EFEE  F027         	goto	u4520
  6143   004FD8                     u4521:
  6144   004FD8  EF01  F028         	goto	l3774
  6145   004FDC                     u4520:
  6146   004FDC  2820               	incf	___flmul@aexp^0,w,c
  6147   004FDE  A4D8               	btfss	status,2,c
  6148   004FE0  EFF4  F027         	goto	u4531
  6149   004FE4  EFF6  F027         	goto	u4530
  6150   004FE8                     u4531:
  6151   004FE8  EFFE  F027         	goto	l3772
  6152   004FEC                     u4530:
  6153   004FEC  0E00               	movlw	0
  6154   004FEE  6E17               	movwf	___flmul@a^0,c
  6155   004FF0  0E00               	movlw	0
  6156   004FF2  6E18               	movwf	(___flmul@a+1)^0,c
  6157   004FF4  0E00               	movlw	0
  6158   004FF6  6E19               	movwf	(___flmul@a+2)^0,c
  6159   004FF8  0E00               	movlw	0
  6160   004FFA  6E1A               	movwf	(___flmul@a+3)^0,c
  6161   004FFC                     l3772:
  6162   004FFC  8E19               	bsf	(___flmul@a+2)^0,7,c
  6163   004FFE  EF09  F028         	goto	l755
  6164   005002                     l3774:
  6165   005002  0E00               	movlw	0
  6166   005004  6E17               	movwf	___flmul@a^0,c
  6167   005006  0E00               	movlw	0
  6168   005008  6E18               	movwf	(___flmul@a+1)^0,c
  6169   00500A  0E00               	movlw	0
  6170   00500C  6E19               	movwf	(___flmul@a+2)^0,c
  6171   00500E  0E00               	movlw	0
  6172   005010  6E1A               	movwf	(___flmul@a+3)^0,c
  6173   005012                     l755:
  6174   005012  5020               	movf	___flmul@aexp^0,w,c
  6175   005014  B4D8               	btfsc	status,2,c
  6176   005016  EF0F  F028         	goto	u4541
  6177   00501A  EF11  F028         	goto	u4540
  6178   00501E                     u4541:
  6179   00501E  EF19  F028         	goto	l3778
  6180   005022                     u4540:
  6181   005022  5025               	movf	___flmul@bexp^0,w,c
  6182   005024  A4D8               	btfss	status,2,c
  6183   005026  EF17  F028         	goto	u4551
  6184   00502A  EF19  F028         	goto	u4550
  6185   00502E                     u4551:
  6186   00502E  EF23  F028         	goto	l3782
  6187   005032                     u4550:
  6188   005032                     l3778:
  6189   005032  0E00               	movlw	0
  6190   005034  6E13               	movwf	?___flmul^0,c
  6191   005036  0E00               	movlw	0
  6192   005038  6E14               	movwf	(?___flmul+1)^0,c
  6193   00503A  0E00               	movlw	0
  6194   00503C  6E15               	movwf	(?___flmul+2)^0,c
  6195   00503E  0E00               	movlw	0
  6196   005040  6E16               	movwf	(?___flmul+3)^0,c
  6197   005042  EFCB  F029         	goto	l759
  6198   005046                     l3782:
  6199   005046  5019               	movf	(___flmul@a+2)^0,w,c
  6200   005048  0213               	mulwf	___flmul@b^0,c
  6201   00504A  006F FFCC  F02A    	movff	prodl,___flmul@temp
  6202   005050  006F FFD0  F02B    	movff	prodh,___flmul@temp+1
  6203   005056  502A               	movf	___flmul@temp^0,w,c
  6204   005058  6E21               	movwf	___flmul@grs^0,c
  6205   00505A  6A22               	clrf	(___flmul@grs+1)^0,c
  6206   00505C  6A23               	clrf	(___flmul@grs+2)^0,c
  6207   00505E  6A24               	clrf	(___flmul@grs+3)^0,c
  6208   005060  502B               	movf	(___flmul@temp+1)^0,w,c
  6209   005062  6E26               	movwf	___flmul@prod^0,c
  6210   005064  6A27               	clrf	(___flmul@prod+1)^0,c
  6211   005066  6A28               	clrf	(___flmul@prod+2)^0,c
  6212   005068  6A29               	clrf	(___flmul@prod+3)^0,c
  6213   00506A  5018               	movf	(___flmul@a+1)^0,w,c
  6214   00506C  0214               	mulwf	(___flmul@b+1)^0,c
  6215   00506E  006F FFCC  F02A    	movff	prodl,___flmul@temp
  6216   005074  006F FFD0  F02B    	movff	prodh,___flmul@temp+1
  6217   00507A  502A               	movf	___flmul@temp^0,w,c
  6218   00507C  2621               	addwf	___flmul@grs^0,f,c
  6219   00507E  0E00               	movlw	0
  6220   005080  2222               	addwfc	(___flmul@grs+1)^0,f,c
  6221   005082  2223               	addwfc	(___flmul@grs+2)^0,f,c
  6222   005084  2224               	addwfc	(___flmul@grs+3)^0,f,c
  6223   005086  502B               	movf	(___flmul@temp+1)^0,w,c
  6224   005088  2626               	addwf	___flmul@prod^0,f,c
  6225   00508A  0E00               	movlw	0
  6226   00508C  2227               	addwfc	(___flmul@prod+1)^0,f,c
  6227   00508E  2228               	addwfc	(___flmul@prod+2)^0,f,c
  6228   005090  2229               	addwfc	(___flmul@prod+3)^0,f,c
  6229   005092  5017               	movf	___flmul@a^0,w,c
  6230   005094  0215               	mulwf	(___flmul@b+2)^0,c
  6231   005096  006F FFCC  F02A    	movff	prodl,___flmul@temp
  6232   00509C  006F FFD0  F02B    	movff	prodh,___flmul@temp+1
  6233   0050A2  502A               	movf	___flmul@temp^0,w,c
  6234   0050A4  2621               	addwf	___flmul@grs^0,f,c
  6235   0050A6  0E00               	movlw	0
  6236   0050A8  2222               	addwfc	(___flmul@grs+1)^0,f,c
  6237   0050AA  2223               	addwfc	(___flmul@grs+2)^0,f,c
  6238   0050AC  2224               	addwfc	(___flmul@grs+3)^0,f,c
  6239   0050AE  502B               	movf	(___flmul@temp+1)^0,w,c
  6240   0050B0  2626               	addwf	___flmul@prod^0,f,c
  6241   0050B2  0E00               	movlw	0
  6242   0050B4  2227               	addwfc	(___flmul@prod+1)^0,f,c
  6243   0050B6  2228               	addwfc	(___flmul@prod+2)^0,f,c
  6244   0050B8  2229               	addwfc	(___flmul@prod+3)^0,f,c
  6245   0050BA  C023  F024         	movff	___flmul@grs+2,___flmul@grs+3
  6246   0050BE  C022  F023         	movff	___flmul@grs+1,___flmul@grs+2
  6247   0050C2  C021  F022         	movff	___flmul@grs,___flmul@grs+1
  6248   0050C6  6A21               	clrf	___flmul@grs^0,c
  6249   0050C8  5017               	movf	___flmul@a^0,w,c
  6250   0050CA  0214               	mulwf	(___flmul@b+1)^0,c
  6251   0050CC  006F FFCC  F02A    	movff	prodl,___flmul@temp
  6252   0050D2  006F FFD0  F02B    	movff	prodh,___flmul@temp+1
  6253   0050D8  502A               	movf	___flmul@temp^0,w,c
  6254   0050DA  2621               	addwf	___flmul@grs^0,f,c
  6255   0050DC  502B               	movf	(___flmul@temp+1)^0,w,c
  6256   0050DE  2222               	addwfc	(___flmul@grs+1)^0,f,c
  6257   0050E0  0E00               	movlw	0
  6258   0050E2  2223               	addwfc	(___flmul@grs+2)^0,f,c
  6259   0050E4  0E00               	movlw	0
  6260   0050E6  2224               	addwfc	(___flmul@grs+3)^0,f,c
  6261   0050E8  5018               	movf	(___flmul@a+1)^0,w,c
  6262   0050EA  0213               	mulwf	___flmul@b^0,c
  6263   0050EC  006F FFCC  F02A    	movff	prodl,___flmul@temp
  6264   0050F2  006F FFD0  F02B    	movff	prodh,___flmul@temp+1
  6265   0050F8  502A               	movf	___flmul@temp^0,w,c
  6266   0050FA  2621               	addwf	___flmul@grs^0,f,c
  6267   0050FC  502B               	movf	(___flmul@temp+1)^0,w,c
  6268   0050FE  2222               	addwfc	(___flmul@grs+1)^0,f,c
  6269   005100  0E00               	movlw	0
  6270   005102  2223               	addwfc	(___flmul@grs+2)^0,f,c
  6271   005104  0E00               	movlw	0
  6272   005106  2224               	addwfc	(___flmul@grs+3)^0,f,c
  6273   005108  C023  F024         	movff	___flmul@grs+2,___flmul@grs+3
  6274   00510C  C022  F023         	movff	___flmul@grs+1,___flmul@grs+2
  6275   005110  C021  F022         	movff	___flmul@grs,___flmul@grs+1
  6276   005114  6A21               	clrf	___flmul@grs^0,c
  6277   005116  5017               	movf	___flmul@a^0,w,c
  6278   005118  0213               	mulwf	___flmul@b^0,c
  6279   00511A  006F FFCC  F02A    	movff	prodl,___flmul@temp
  6280   005120  006F FFD0  F02B    	movff	prodh,___flmul@temp+1
  6281   005126  502A               	movf	___flmul@temp^0,w,c
  6282   005128  2621               	addwf	___flmul@grs^0,f,c
  6283   00512A  502B               	movf	(___flmul@temp+1)^0,w,c
  6284   00512C  2222               	addwfc	(___flmul@grs+1)^0,f,c
  6285   00512E  0E00               	movlw	0
  6286   005130  2223               	addwfc	(___flmul@grs+2)^0,f,c
  6287   005132  0E00               	movlw	0
  6288   005134  2224               	addwfc	(___flmul@grs+3)^0,f,c
  6289   005136  5019               	movf	(___flmul@a+2)^0,w,c
  6290   005138  0214               	mulwf	(___flmul@b+1)^0,c
  6291   00513A  006F FFCC  F02A    	movff	prodl,___flmul@temp
  6292   005140  006F FFD0  F02B    	movff	prodh,___flmul@temp+1
  6293   005146  502A               	movf	___flmul@temp^0,w,c
  6294   005148  2626               	addwf	___flmul@prod^0,f,c
  6295   00514A  502B               	movf	(___flmul@temp+1)^0,w,c
  6296   00514C  2227               	addwfc	(___flmul@prod+1)^0,f,c
  6297   00514E  0E00               	movlw	0
  6298   005150  2228               	addwfc	(___flmul@prod+2)^0,f,c
  6299   005152  0E00               	movlw	0
  6300   005154  2229               	addwfc	(___flmul@prod+3)^0,f,c
  6301   005156  5018               	movf	(___flmul@a+1)^0,w,c
  6302   005158  0215               	mulwf	(___flmul@b+2)^0,c
  6303   00515A  006F FFCC  F02A    	movff	prodl,___flmul@temp
  6304   005160  006F FFD0  F02B    	movff	prodh,___flmul@temp+1
  6305   005166  502A               	movf	___flmul@temp^0,w,c
  6306   005168  2626               	addwf	___flmul@prod^0,f,c
  6307   00516A  502B               	movf	(___flmul@temp+1)^0,w,c
  6308   00516C  2227               	addwfc	(___flmul@prod+1)^0,f,c
  6309   00516E  0E00               	movlw	0
  6310   005170  2228               	addwfc	(___flmul@prod+2)^0,f,c
  6311   005172  0E00               	movlw	0
  6312   005174  2229               	addwfc	(___flmul@prod+3)^0,f,c
  6313   005176  5019               	movf	(___flmul@a+2)^0,w,c
  6314   005178  0215               	mulwf	(___flmul@b+2)^0,c
  6315   00517A  006F FFCC  F02A    	movff	prodl,___flmul@temp
  6316   005180  006F FFD0  F02B    	movff	prodh,___flmul@temp+1
  6317   005186  502A               	movf	___flmul@temp^0,w,c
  6318   005188  6E1B               	movwf	??___flmul^0,c
  6319   00518A  502B               	movf	(___flmul@temp+1)^0,w,c
  6320   00518C  6E1C               	movwf	(??___flmul+1)^0,c
  6321   00518E  6A1D               	clrf	(??___flmul+2)^0,c
  6322   005190  6A1E               	clrf	(??___flmul+3)^0,c
  6323   005192  C01D  F01E         	movff	??___flmul+2,??___flmul+3
  6324   005196  C01C  F01D         	movff	??___flmul+1,??___flmul+2
  6325   00519A  C01B  F01C         	movff	??___flmul,??___flmul+1
  6326   00519E  6A1B               	clrf	??___flmul^0,c
  6327   0051A0  501B               	movf	??___flmul^0,w,c
  6328   0051A2  2626               	addwf	___flmul@prod^0,f,c
  6329   0051A4  501C               	movf	(??___flmul+1)^0,w,c
  6330   0051A6  2227               	addwfc	(___flmul@prod+1)^0,f,c
  6331   0051A8  501D               	movf	(??___flmul+2)^0,w,c
  6332   0051AA  2228               	addwfc	(___flmul@prod+2)^0,f,c
  6333   0051AC  501E               	movf	(??___flmul+3)^0,w,c
  6334   0051AE  2229               	addwfc	(___flmul@prod+3)^0,f,c
  6335   0051B0  C021  F01B         	movff	___flmul@grs,??___flmul
  6336   0051B4  C022  F01C         	movff	___flmul@grs+1,??___flmul+1
  6337   0051B8  C023  F01D         	movff	___flmul@grs+2,??___flmul+2
  6338   0051BC  C024  F01E         	movff	___flmul@grs+3,??___flmul+3
  6339   0051C0  0E19               	movlw	25
  6340   0051C2  EFE8  F028         	goto	u4560
  6341   0051C6                     u4565:
  6342   0051C6  90D8               	bcf	status,0,c
  6343   0051C8  321E               	rrcf	(??___flmul+3)^0,f,c
  6344   0051CA  321D               	rrcf	(??___flmul+2)^0,f,c
  6345   0051CC  321C               	rrcf	(??___flmul+1)^0,f,c
  6346   0051CE  321B               	rrcf	??___flmul^0,f,c
  6347   0051D0                     u4560:
  6348   0051D0  2EE8               	decfsz	wreg,f,c
  6349   0051D2  EFE3  F028         	goto	u4565
  6350   0051D6  501B               	movf	??___flmul^0,w,c
  6351   0051D8  2626               	addwf	___flmul@prod^0,f,c
  6352   0051DA  501C               	movf	(??___flmul+1)^0,w,c
  6353   0051DC  2227               	addwfc	(___flmul@prod+1)^0,f,c
  6354   0051DE  501D               	movf	(??___flmul+2)^0,w,c
  6355   0051E0  2228               	addwfc	(___flmul@prod+2)^0,f,c
  6356   0051E2  501E               	movf	(??___flmul+3)^0,w,c
  6357   0051E4  2229               	addwfc	(___flmul@prod+3)^0,f,c
  6358   0051E6  C023  F024         	movff	___flmul@grs+2,___flmul@grs+3
  6359   0051EA  C022  F023         	movff	___flmul@grs+1,___flmul@grs+2
  6360   0051EE  C021  F022         	movff	___flmul@grs,___flmul@grs+1
  6361   0051F2  6A21               	clrf	___flmul@grs^0,c
  6362   0051F4  5020               	movf	___flmul@aexp^0,w,c
  6363   0051F6  C025  F01B         	movff	___flmul@bexp,??___flmul
  6364   0051FA  6A1C               	clrf	(??___flmul+1)^0,c
  6365   0051FC  261B               	addwf	??___flmul^0,f,c
  6366   0051FE  0E00               	movlw	0
  6367   005200  221C               	addwfc	(??___flmul+1)^0,f,c
  6368   005202  0E82               	movlw	130
  6369   005204  241B               	addwf	??___flmul^0,w,c
  6370   005206  6E2A               	movwf	___flmul@temp^0,c
  6371   005208  0EFF               	movlw	255
  6372   00520A  201C               	addwfc	(??___flmul+1)^0,w,c
  6373   00520C  6E2B               	movwf	(___flmul@temp+1)^0,c
  6374   00520E  EF1E  F029         	goto	l3830
  6375   005212                     l3824:
  6376   005212  90D8               	bcf	status,0,c
  6377   005214  3626               	rlcf	___flmul@prod^0,f,c
  6378   005216  3627               	rlcf	(___flmul@prod+1)^0,f,c
  6379   005218  3628               	rlcf	(___flmul@prod+2)^0,f,c
  6380   00521A  3629               	rlcf	(___flmul@prod+3)^0,f,c
  6381   00521C  AE24               	btfss	(___flmul@grs+3)^0,7,c
  6382   00521E  EF13  F029         	goto	u4571
  6383   005222  EF15  F029         	goto	u4570
  6384   005226                     u4571:
  6385   005226  EF16  F029         	goto	l762
  6386   00522A                     u4570:
  6387   00522A  8026               	bsf	___flmul@prod^0,0,c
  6388   00522C                     l762:
  6389   00522C  90D8               	bcf	status,0,c
  6390   00522E  3621               	rlcf	___flmul@grs^0,f,c
  6391   005230  3622               	rlcf	(___flmul@grs+1)^0,f,c
  6392   005232  3623               	rlcf	(___flmul@grs+2)^0,f,c
  6393   005234  3624               	rlcf	(___flmul@grs+3)^0,f,c
  6394   005236  062A               	decf	___flmul@temp^0,f,c
  6395   005238  A0D8               	btfss	status,0,c
  6396   00523A  062B               	decf	(___flmul@temp+1)^0,f,c
  6397   00523C                     l3830:
  6398   00523C  AE28               	btfss	(___flmul@prod+2)^0,7,c
  6399   00523E  EF23  F029         	goto	u4581
  6400   005242  EF25  F029         	goto	u4580
  6401   005246                     u4581:
  6402   005246  EF09  F029         	goto	l3824
  6403   00524A                     u4580:
  6404   00524A  6A20               	clrf	___flmul@aexp^0,c
  6405   00524C  AE24               	btfss	(___flmul@grs+3)^0,7,c
  6406   00524E  EF2B  F029         	goto	u4591
  6407   005252  EF2D  F029         	goto	u4590
  6408   005256                     u4591:
  6409   005256  EF51  F029         	goto	l764
  6410   00525A                     u4590:
  6411   00525A  0EFF               	movlw	255
  6412   00525C  1421               	andwf	___flmul@grs^0,w,c
  6413   00525E  6E1B               	movwf	??___flmul^0,c
  6414   005260  0EFF               	movlw	255
  6415   005262  1422               	andwf	(___flmul@grs+1)^0,w,c
  6416   005264  6E1C               	movwf	(??___flmul+1)^0,c
  6417   005266  0EFF               	movlw	255
  6418   005268  1423               	andwf	(___flmul@grs+2)^0,w,c
  6419   00526A  6E1D               	movwf	(??___flmul+2)^0,c
  6420   00526C  0E7F               	movlw	127
  6421   00526E  1424               	andwf	(___flmul@grs+3)^0,w,c
  6422   005270  6E1E               	movwf	(??___flmul+3)^0,c
  6423   005272  501B               	movf	??___flmul^0,w,c
  6424   005274  101C               	iorwf	(??___flmul+1)^0,w,c
  6425   005276  101D               	iorwf	(??___flmul+2)^0,w,c
  6426   005278  101E               	iorwf	(??___flmul+3)^0,w,c
  6427   00527A  B4D8               	btfsc	status,2,c
  6428   00527C  EF42  F029         	goto	u4601
  6429   005280  EF44  F029         	goto	u4600
  6430   005284                     u4601:
  6431   005284  EF48  F029         	goto	l765
  6432   005288                     u4600:
  6433   005288                     l3834:
  6434   005288  0E01               	movlw	1
  6435   00528A  6E20               	movwf	___flmul@aexp^0,c
  6436   00528C  EF51  F029         	goto	l764
  6437   005290                     l765:
  6438   005290  A026               	btfss	___flmul@prod^0,0,c
  6439   005292  EF4D  F029         	goto	u4611
  6440   005296  EF4F  F029         	goto	u4610
  6441   00529A                     u4611:
  6442   00529A  EF51  F029         	goto	l764
  6443   00529E                     u4610:
  6444   00529E  EF44  F029         	goto	l3834
  6445   0052A2                     l764:
  6446   0052A2  5020               	movf	___flmul@aexp^0,w,c
  6447   0052A4  B4D8               	btfsc	status,2,c
  6448   0052A6  EF57  F029         	goto	u4621
  6449   0052AA  EF59  F029         	goto	u4620
  6450   0052AE                     u4621:
  6451   0052AE  EF7D  F029         	goto	l3846
  6452   0052B2                     u4620:
  6453   0052B2  0E01               	movlw	1
  6454   0052B4  2626               	addwf	___flmul@prod^0,f,c
  6455   0052B6  0E00               	movlw	0
  6456   0052B8  2227               	addwfc	(___flmul@prod+1)^0,f,c
  6457   0052BA  2228               	addwfc	(___flmul@prod+2)^0,f,c
  6458   0052BC  2229               	addwfc	(___flmul@prod+3)^0,f,c
  6459   0052BE  A029               	btfss	(___flmul@prod+3)^0,0,c
  6460   0052C0  EF64  F029         	goto	u4631
  6461   0052C4  EF66  F029         	goto	u4630
  6462   0052C8                     u4631:
  6463   0052C8  EF7D  F029         	goto	l3846
  6464   0052CC                     u4630:
  6465   0052CC  C026  F01B         	movff	___flmul@prod,??___flmul
  6466   0052D0  C027  F01C         	movff	___flmul@prod+1,??___flmul+1
  6467   0052D4  C028  F01D         	movff	___flmul@prod+2,??___flmul+2
  6468   0052D8  C029  F01E         	movff	___flmul@prod+3,??___flmul+3
  6469   0052DC  341E               	rlcf	(??___flmul+3)^0,w,c
  6470   0052DE  321E               	rrcf	(??___flmul+3)^0,f,c
  6471   0052E0  321D               	rrcf	(??___flmul+2)^0,f,c
  6472   0052E2  321C               	rrcf	(??___flmul+1)^0,f,c
  6473   0052E4  321B               	rrcf	??___flmul^0,f,c
  6474   0052E6  C01B  F026         	movff	??___flmul,___flmul@prod
  6475   0052EA  C01C  F027         	movff	??___flmul+1,___flmul@prod+1
  6476   0052EE  C01D  F028         	movff	??___flmul+2,___flmul@prod+2
  6477   0052F2  C01E  F029         	movff	??___flmul+3,___flmul@prod+3
  6478   0052F6  4A2A               	infsnz	___flmul@temp^0,f,c
  6479   0052F8  2A2B               	incf	(___flmul@temp+1)^0,f,c
  6480   0052FA                     l3846:
  6481   0052FA  BE2B               	btfsc	(___flmul@temp+1)^0,7,c
  6482   0052FC  EF88  F029         	goto	u4641
  6483   005300  502B               	movf	(___flmul@temp+1)^0,w,c
  6484   005302  E108               	bnz	u4640
  6485   005304  282A               	incf	___flmul@temp^0,w,c
  6486   005306  A0D8               	btfss	status,0,c
  6487   005308  EF88  F029         	goto	u4641
  6488   00530C  EF8A  F029         	goto	u4640
  6489   005310                     u4641:
  6490   005310  EF94  F029         	goto	l3850
  6491   005314                     u4640:
  6492   005314  0E00               	movlw	0
  6493   005316  6E26               	movwf	___flmul@prod^0,c
  6494   005318  0E00               	movlw	0
  6495   00531A  6E27               	movwf	(___flmul@prod+1)^0,c
  6496   00531C  0E80               	movlw	128
  6497   00531E  6E28               	movwf	(___flmul@prod+2)^0,c
  6498   005320  0E7F               	movlw	127
  6499   005322  6E29               	movwf	(___flmul@prod+3)^0,c
  6500   005324  EFC1  F029         	goto	l3864
  6501   005328                     l3850:
  6502   005328  BE2B               	btfsc	(___flmul@temp+1)^0,7,c
  6503   00532A  EFA1  F029         	goto	u4650
  6504   00532E  502B               	movf	(___flmul@temp+1)^0,w,c
  6505   005330  E106               	bnz	u4651
  6506   005332  042A               	decf	___flmul@temp^0,w,c
  6507   005334  B0D8               	btfsc	status,0,c
  6508   005336  EF9F  F029         	goto	u4651
  6509   00533A  EFA1  F029         	goto	u4650
  6510   00533E                     u4651:
  6511   00533E  EFAC  F029         	goto	l772
  6512   005342                     u4650:
  6513   005342  0E00               	movlw	0
  6514   005344  6E26               	movwf	___flmul@prod^0,c
  6515   005346  0E00               	movlw	0
  6516   005348  6E27               	movwf	(___flmul@prod+1)^0,c
  6517   00534A  0E00               	movlw	0
  6518   00534C  6E28               	movwf	(___flmul@prod+2)^0,c
  6519   00534E  0E00               	movlw	0
  6520   005350  6E29               	movwf	(___flmul@prod+3)^0,c
  6521   005352  6A1F               	clrf	___flmul@sign^0,c
  6522   005354  EFC1  F029         	goto	l3864
  6523   005358                     l772:
  6524   005358  C02A  F025         	movff	___flmul@temp,___flmul@bexp
  6525   00535C  0EFF               	movlw	255
  6526   00535E  1626               	andwf	___flmul@prod^0,f,c
  6527   005360  0EFF               	movlw	255
  6528   005362  1627               	andwf	(___flmul@prod+1)^0,f,c
  6529   005364  0E7F               	movlw	127
  6530   005366  1628               	andwf	(___flmul@prod+2)^0,f,c
  6531   005368  0E00               	movlw	0
  6532   00536A  1629               	andwf	(___flmul@prod+3)^0,f,c
  6533   00536C  A025               	btfss	___flmul@bexp^0,0,c
  6534   00536E  EFBB  F029         	goto	u4661
  6535   005372  EFBD  F029         	goto	u4660
  6536   005376                     u4661:
  6537   005376  EFBE  F029         	goto	l3862
  6538   00537A                     u4660:
  6539   00537A  8E28               	bsf	(___flmul@prod+2)^0,7,c
  6540   00537C                     l3862:
  6541   00537C  90D8               	bcf	status,0,c
  6542   00537E  3025               	rrcf	___flmul@bexp^0,w,c
  6543   005380  6E29               	movwf	(___flmul@prod+3)^0,c
  6544   005382                     l3864:
  6545   005382  501F               	movf	___flmul@sign^0,w,c
  6546   005384  1229               	iorwf	(___flmul@prod+3)^0,f,c
  6547   005386  C026  F013         	movff	___flmul@prod,?___flmul
  6548   00538A  C027  F014         	movff	___flmul@prod+1,?___flmul+1
  6549   00538E  C028  F015         	movff	___flmul@prod+2,?___flmul+2
  6550   005392  C029  F016         	movff	___flmul@prod+3,?___flmul+3
  6551   005396                     l759:
  6552   005396  0012               	return		;funcret
  6553   005398                     __end_of___flmul:
  6554                           	callstack 0
  6555                           
  6556 ;; *************** function ___flge *****************
  6557 ;; Defined at:
  6558 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\flge.c"
  6559 ;; Parameters:    Size  Location     Type
  6560 ;;  ff1             4   43[COMRAM] unsigned char 
  6561 ;;  ff2             4   47[COMRAM] unsigned char 
  6562 ;; Auto vars:     Size  Location     Type
  6563 ;;		None
  6564 ;; Return value:  Size  Location     Type
  6565 ;;		None               void
  6566 ;; Registers used:
  6567 ;;		wreg, status,2, status,0
  6568 ;; Tracked objects:
  6569 ;;		On entry : 0/0
  6570 ;;		On exit  : 0/0
  6571 ;;		Unchanged: 0/0
  6572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6573 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6574 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6575 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6576 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6577 ;;Total ram usage:       12 bytes
  6578 ;; Hardware stack levels used: 1
  6579 ;; Hardware stack levels required when called: 1
  6580 ;; This function calls:
  6581 ;;		Nothing
  6582 ;; This function is called by:
  6583 ;;		_main
  6584 ;;		_efgtoa
  6585 ;; This function uses a non-reentrant model
  6586 ;;
  6587                           
  6588                           	psect	text21
  6589   00621E                     __ptext21:
  6590                           	callstack 0
  6591   00621E                     ___flge:
  6592                           	callstack 25
  6593   00621E  0E00               	movlw	0
  6594   006220  142C               	andwf	___flge@ff1^0,w,c
  6595   006222  6E34               	movwf	??___flge^0,c
  6596   006224  0E00               	movlw	0
  6597   006226  142D               	andwf	(___flge@ff1+1)^0,w,c
  6598   006228  6E35               	movwf	(??___flge+1)^0,c
  6599   00622A  0E80               	movlw	128
  6600   00622C  142E               	andwf	(___flge@ff1+2)^0,w,c
  6601   00622E  6E36               	movwf	(??___flge+2)^0,c
  6602   006230  0E7F               	movlw	127
  6603   006232  142F               	andwf	(___flge@ff1+3)^0,w,c
  6604   006234  6E37               	movwf	(??___flge+3)^0,c
  6605   006236  5034               	movf	??___flge^0,w,c
  6606   006238  1035               	iorwf	(??___flge+1)^0,w,c
  6607   00623A  1036               	iorwf	(??___flge+2)^0,w,c
  6608   00623C  1037               	iorwf	(??___flge+3)^0,w,c
  6609   00623E  A4D8               	btfss	status,2,c
  6610   006240  EF24  F031         	goto	u4701
  6611   006244  EF26  F031         	goto	u4700
  6612   006248                     u4701:
  6613   006248  EF2E  F031         	goto	l3896
  6614   00624C                     u4700:
  6615   00624C  0E00               	movlw	0
  6616   00624E  6E2C               	movwf	___flge@ff1^0,c
  6617   006250  0E00               	movlw	0
  6618   006252  6E2D               	movwf	(___flge@ff1+1)^0,c
  6619   006254  0E00               	movlw	0
  6620   006256  6E2E               	movwf	(___flge@ff1+2)^0,c
  6621   006258  0E00               	movlw	0
  6622   00625A  6E2F               	movwf	(___flge@ff1+3)^0,c
  6623   00625C                     l3896:
  6624   00625C  0E00               	movlw	0
  6625   00625E  1430               	andwf	___flge@ff2^0,w,c
  6626   006260  6E34               	movwf	??___flge^0,c
  6627   006262  0E00               	movlw	0
  6628   006264  1431               	andwf	(___flge@ff2+1)^0,w,c
  6629   006266  6E35               	movwf	(??___flge+1)^0,c
  6630   006268  0E80               	movlw	128
  6631   00626A  1432               	andwf	(___flge@ff2+2)^0,w,c
  6632   00626C  6E36               	movwf	(??___flge+2)^0,c
  6633   00626E  0E7F               	movlw	127
  6634   006270  1433               	andwf	(___flge@ff2+3)^0,w,c
  6635   006272  6E37               	movwf	(??___flge+3)^0,c
  6636   006274  5034               	movf	??___flge^0,w,c
  6637   006276  1035               	iorwf	(??___flge+1)^0,w,c
  6638   006278  1036               	iorwf	(??___flge+2)^0,w,c
  6639   00627A  1037               	iorwf	(??___flge+3)^0,w,c
  6640   00627C  A4D8               	btfss	status,2,c
  6641   00627E  EF43  F031         	goto	u4711
  6642   006282  EF45  F031         	goto	u4710
  6643   006286                     u4711:
  6644   006286  EF4D  F031         	goto	l3900
  6645   00628A                     u4710:
  6646   00628A  0E00               	movlw	0
  6647   00628C  6E30               	movwf	___flge@ff2^0,c
  6648   00628E  0E00               	movlw	0
  6649   006290  6E31               	movwf	(___flge@ff2+1)^0,c
  6650   006292  0E00               	movlw	0
  6651   006294  6E32               	movwf	(___flge@ff2+2)^0,c
  6652   006296  0E00               	movlw	0
  6653   006298  6E33               	movwf	(___flge@ff2+3)^0,c
  6654   00629A                     l3900:
  6655   00629A  AE2F               	btfss	(___flge@ff1+3)^0,7,c
  6656   00629C  EF52  F031         	goto	u4721
  6657   0062A0  EF54  F031         	goto	u4720
  6658   0062A4                     u4721:
  6659   0062A4  EF5D  F031         	goto	l3904
  6660   0062A8                     u4720:
  6661   0062A8  6C2C               	negf	___flge@ff1^0,c
  6662   0062AA  1E2D               	comf	(___flge@ff1+1)^0,f,c
  6663   0062AC  B0D8               	btfsc	status,0,c
  6664   0062AE  2A2D               	incf	(___flge@ff1+1)^0,f,c
  6665   0062B0  1E2E               	comf	(___flge@ff1+2)^0,f,c
  6666   0062B2  B0D8               	btfsc	status,0,c
  6667   0062B4  2A2E               	incf	(___flge@ff1+2)^0,f,c
  6668   0062B6  0E80               	movlw	128
  6669   0062B8  562F               	subfwb	(___flge@ff1+3)^0,f,c
  6670   0062BA                     l3904:
  6671   0062BA  AE33               	btfss	(___flge@ff2+3)^0,7,c
  6672   0062BC  EF62  F031         	goto	u4731
  6673   0062C0  EF64  F031         	goto	u4730
  6674   0062C4                     u4731:
  6675   0062C4  EF6D  F031         	goto	l406
  6676   0062C8                     u4730:
  6677   0062C8  6C30               	negf	___flge@ff2^0,c
  6678   0062CA  1E31               	comf	(___flge@ff2+1)^0,f,c
  6679   0062CC  B0D8               	btfsc	status,0,c
  6680   0062CE  2A31               	incf	(___flge@ff2+1)^0,f,c
  6681   0062D0  1E32               	comf	(___flge@ff2+2)^0,f,c
  6682   0062D2  B0D8               	btfsc	status,0,c
  6683   0062D4  2A32               	incf	(___flge@ff2+2)^0,f,c
  6684   0062D6  0E80               	movlw	128
  6685   0062D8  5633               	subfwb	(___flge@ff2+3)^0,f,c
  6686   0062DA                     l406:
  6687   0062DA  0E00               	movlw	0
  6688   0062DC  1A2C               	xorwf	___flge@ff1^0,f,c
  6689   0062DE  0E00               	movlw	0
  6690   0062E0  1A2D               	xorwf	(___flge@ff1+1)^0,f,c
  6691   0062E2  0E00               	movlw	0
  6692   0062E4  1A2E               	xorwf	(___flge@ff1+2)^0,f,c
  6693   0062E6  0E80               	movlw	128
  6694   0062E8  1A2F               	xorwf	(___flge@ff1+3)^0,f,c
  6695   0062EA  0E00               	movlw	0
  6696   0062EC  1A30               	xorwf	___flge@ff2^0,f,c
  6697   0062EE  0E00               	movlw	0
  6698   0062F0  1A31               	xorwf	(___flge@ff2+1)^0,f,c
  6699   0062F2  0E00               	movlw	0
  6700   0062F4  1A32               	xorwf	(___flge@ff2+2)^0,f,c
  6701   0062F6  0E80               	movlw	128
  6702   0062F8  1A33               	xorwf	(___flge@ff2+3)^0,f,c
  6703   0062FA  5030               	movf	___flge@ff2^0,w,c
  6704   0062FC  5C2C               	subwf	___flge@ff1^0,w,c
  6705   0062FE  5031               	movf	(___flge@ff2+1)^0,w,c
  6706   006300  582D               	subwfb	(___flge@ff1+1)^0,w,c
  6707   006302  5032               	movf	(___flge@ff2+2)^0,w,c
  6708   006304  582E               	subwfb	(___flge@ff1+2)^0,w,c
  6709   006306  5033               	movf	(___flge@ff2+3)^0,w,c
  6710   006308  582F               	subwfb	(___flge@ff1+3)^0,w,c
  6711   00630A  B0D8               	btfsc	status,0,c
  6712   00630C  EF8A  F031         	goto	u4741
  6713   006310  EF8C  F031         	goto	u4740
  6714   006314                     u4741:
  6715   006314  EF8F  F031         	goto	l3910
  6716   006318                     u4740:
  6717   006318  90D8               	bcf	status,0,c
  6718   00631A  EF90  F031         	goto	l411
  6719   00631E                     l3910:
  6720   00631E  80D8               	bsf	status,0,c
  6721   006320                     l411:
  6722   006320  0012               	return		;funcret
  6723   006322                     __end_of___flge:
  6724                           	callstack 0
  6725                           
  6726 ;; *************** function ___fleq *****************
  6727 ;; Defined at:
  6728 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\fleq.c"
  6729 ;; Parameters:    Size  Location     Type
  6730 ;;  ff1             4    4[COMRAM] unsigned char 
  6731 ;;  ff2             4    8[COMRAM] unsigned char 
  6732 ;; Auto vars:     Size  Location     Type
  6733 ;;		None
  6734 ;; Return value:  Size  Location     Type
  6735 ;;		None               void
  6736 ;; Registers used:
  6737 ;;		wreg, status,2, status,0
  6738 ;; Tracked objects:
  6739 ;;		On entry : 0/0
  6740 ;;		On exit  : 0/0
  6741 ;;		Unchanged: 0/0
  6742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6743 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6744 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6745 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6746 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6747 ;;Total ram usage:       12 bytes
  6748 ;; Hardware stack levels used: 1
  6749 ;; Hardware stack levels required when called: 1
  6750 ;; This function calls:
  6751 ;;		Nothing
  6752 ;; This function is called by:
  6753 ;;		_efgtoa
  6754 ;; This function uses a non-reentrant model
  6755 ;;
  6756                           
  6757                           	psect	text22
  6758   006584                     __ptext22:
  6759                           	callstack 0
  6760   006584                     ___fleq:
  6761                           	callstack 25
  6762   006584  0E00               	movlw	0
  6763   006586  1405               	andwf	___fleq@ff1^0,w,c
  6764   006588  6E0D               	movwf	??___fleq^0,c
  6765   00658A  0E00               	movlw	0
  6766   00658C  1406               	andwf	(___fleq@ff1+1)^0,w,c
  6767   00658E  6E0E               	movwf	(??___fleq+1)^0,c
  6768   006590  0E80               	movlw	128
  6769   006592  1407               	andwf	(___fleq@ff1+2)^0,w,c
  6770   006594  6E0F               	movwf	(??___fleq+2)^0,c
  6771   006596  0E7F               	movlw	127
  6772   006598  1408               	andwf	(___fleq@ff1+3)^0,w,c
  6773   00659A  6E10               	movwf	(??___fleq+3)^0,c
  6774   00659C  500D               	movf	??___fleq^0,w,c
  6775   00659E  100E               	iorwf	(??___fleq+1)^0,w,c
  6776   0065A0  100F               	iorwf	(??___fleq+2)^0,w,c
  6777   0065A2  1010               	iorwf	(??___fleq+3)^0,w,c
  6778   0065A4  A4D8               	btfss	status,2,c
  6779   0065A6  EFD7  F032         	goto	u4671
  6780   0065AA  EFD9  F032         	goto	u4670
  6781   0065AE                     u4671:
  6782   0065AE  EFE1  F032         	goto	l3880
  6783   0065B2                     u4670:
  6784   0065B2  0E00               	movlw	0
  6785   0065B4  6E05               	movwf	___fleq@ff1^0,c
  6786   0065B6  0E00               	movlw	0
  6787   0065B8  6E06               	movwf	(___fleq@ff1+1)^0,c
  6788   0065BA  0E00               	movlw	0
  6789   0065BC  6E07               	movwf	(___fleq@ff1+2)^0,c
  6790   0065BE  0E00               	movlw	0
  6791   0065C0  6E08               	movwf	(___fleq@ff1+3)^0,c
  6792   0065C2                     l3880:
  6793   0065C2  0E00               	movlw	0
  6794   0065C4  1409               	andwf	___fleq@ff2^0,w,c
  6795   0065C6  6E0D               	movwf	??___fleq^0,c
  6796   0065C8  0E00               	movlw	0
  6797   0065CA  140A               	andwf	(___fleq@ff2+1)^0,w,c
  6798   0065CC  6E0E               	movwf	(??___fleq+1)^0,c
  6799   0065CE  0E80               	movlw	128
  6800   0065D0  140B               	andwf	(___fleq@ff2+2)^0,w,c
  6801   0065D2  6E0F               	movwf	(??___fleq+2)^0,c
  6802   0065D4  0E7F               	movlw	127
  6803   0065D6  140C               	andwf	(___fleq@ff2+3)^0,w,c
  6804   0065D8  6E10               	movwf	(??___fleq+3)^0,c
  6805   0065DA  500D               	movf	??___fleq^0,w,c
  6806   0065DC  100E               	iorwf	(??___fleq+1)^0,w,c
  6807   0065DE  100F               	iorwf	(??___fleq+2)^0,w,c
  6808   0065E0  1010               	iorwf	(??___fleq+3)^0,w,c
  6809   0065E2  A4D8               	btfss	status,2,c
  6810   0065E4  EFF6  F032         	goto	u4681
  6811   0065E8  EFF8  F032         	goto	u4680
  6812   0065EC                     u4681:
  6813   0065EC  EF00  F033         	goto	l3884
  6814   0065F0                     u4680:
  6815   0065F0  0E00               	movlw	0
  6816   0065F2  6E09               	movwf	___fleq@ff2^0,c
  6817   0065F4  0E00               	movlw	0
  6818   0065F6  6E0A               	movwf	(___fleq@ff2+1)^0,c
  6819   0065F8  0E00               	movlw	0
  6820   0065FA  6E0B               	movwf	(___fleq@ff2+2)^0,c
  6821   0065FC  0E00               	movlw	0
  6822   0065FE  6E0C               	movwf	(___fleq@ff2+3)^0,c
  6823   006600                     l3884:
  6824   006600  5009               	movf	___fleq@ff2^0,w,c
  6825   006602  1805               	xorwf	___fleq@ff1^0,w,c
  6826   006604  E10F               	bnz	u4690
  6827   006606  500A               	movf	(___fleq@ff2+1)^0,w,c
  6828   006608  1806               	xorwf	(___fleq@ff1+1)^0,w,c
  6829   00660A  E10C               	bnz	u4690
  6830   00660C  500B               	movf	(___fleq@ff2+2)^0,w,c
  6831   00660E  1807               	xorwf	(___fleq@ff1+2)^0,w,c
  6832   006610  E109               	bnz	u4690
  6833   006612  500C               	movf	(___fleq@ff2+3)^0,w,c
  6834   006614  1808               	xorwf	(___fleq@ff1+3)^0,w,c
  6835   006616  B4D8               	btfsc	status,2,c
  6836   006618  EF10  F033         	goto	u4691
  6837   00661C  EF12  F033         	goto	u4690
  6838   006620                     u4691:
  6839   006620  EF15  F033         	goto	l3888
  6840   006624                     u4690:
  6841   006624  90D8               	bcf	status,0,c
  6842   006626  EF16  F033         	goto	l400
  6843   00662A                     l3888:
  6844   00662A  80D8               	bsf	status,0,c
  6845   00662C                     l400:
  6846   00662C  0012               	return		;funcret
  6847   00662E                     __end_of___fleq:
  6848                           	callstack 0
  6849                           
  6850 ;; *************** function ___fldiv *****************
  6851 ;; Defined at:
  6852 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcdiv.c"
  6853 ;; Parameters:    Size  Location     Type
  6854 ;;  b               4    4[COMRAM] unsigned char 
  6855 ;;  a               4    8[COMRAM] unsigned char 
  6856 ;; Auto vars:     Size  Location     Type
  6857 ;;  grs             4   23[COMRAM] unsigned long 
  6858 ;;  rem             4   16[COMRAM] unsigned long 
  6859 ;;  new_exp         2   21[COMRAM] short 
  6860 ;;  aexp            1   28[COMRAM] unsigned char 
  6861 ;;  bexp            1   27[COMRAM] unsigned char 
  6862 ;;  sign            1   20[COMRAM] unsigned char 
  6863 ;; Return value:  Size  Location     Type
  6864 ;;                  4    4[COMRAM] unsigned char 
  6865 ;; Registers used:
  6866 ;;		wreg, status,2, status,0
  6867 ;; Tracked objects:
  6868 ;;		On entry : 0/0
  6869 ;;		On exit  : 0/0
  6870 ;;		Unchanged: 0/0
  6871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6872 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6873 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6874 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6875 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6876 ;;Total ram usage:       25 bytes
  6877 ;; Hardware stack levels used: 1
  6878 ;; Hardware stack levels required when called: 1
  6879 ;; This function calls:
  6880 ;;		Nothing
  6881 ;; This function is called by:
  6882 ;;		_efgtoa
  6883 ;; This function uses a non-reentrant model
  6884 ;;
  6885                           
  6886                           	psect	text23
  6887   0057AE                     __ptext23:
  6888                           	callstack 0
  6889   0057AE                     ___fldiv:
  6890                           	callstack 25
  6891   0057AE  5008               	movf	(___fldiv@b+3)^0,w,c
  6892   0057B0  0B80               	andlw	128
  6893   0057B2  6E15               	movwf	___fldiv@sign^0,c
  6894   0057B4  5008               	movf	(___fldiv@b+3)^0,w,c
  6895   0057B6  2408               	addwf	(___fldiv@b+3)^0,w,c
  6896   0057B8  6E1C               	movwf	___fldiv@bexp^0,c
  6897   0057BA  AE07               	btfss	(___fldiv@b+2)^0,7,c
  6898   0057BC  EFE2  F02B         	goto	u4251
  6899   0057C0  EFE4  F02B         	goto	u4250
  6900   0057C4                     u4251:
  6901   0057C4  EFE5  F02B         	goto	l3612
  6902   0057C8                     u4250:
  6903   0057C8  801C               	bsf	___fldiv@bexp^0,0,c
  6904   0057CA                     l3612:
  6905   0057CA  501C               	movf	___fldiv@bexp^0,w,c
  6906   0057CC  B4D8               	btfsc	status,2,c
  6907   0057CE  EFEB  F02B         	goto	u4261
  6908   0057D2  EFED  F02B         	goto	u4260
  6909   0057D6                     u4261:
  6910   0057D6  EF01  F02C         	goto	l3622
  6911   0057DA                     u4260:
  6912   0057DA  281C               	incf	___fldiv@bexp^0,w,c
  6913   0057DC  A4D8               	btfss	status,2,c
  6914   0057DE  EFF3  F02B         	goto	u4271
  6915   0057E2  EFF5  F02B         	goto	u4270
  6916   0057E6                     u4271:
  6917   0057E6  EFFD  F02B         	goto	l3618
  6918   0057EA                     u4270:
  6919   0057EA  0E00               	movlw	0
  6920   0057EC  6E05               	movwf	___fldiv@b^0,c
  6921   0057EE  0E00               	movlw	0
  6922   0057F0  6E06               	movwf	(___fldiv@b+1)^0,c
  6923   0057F2  0E00               	movlw	0
  6924   0057F4  6E07               	movwf	(___fldiv@b+2)^0,c
  6925   0057F6  0E00               	movlw	0
  6926   0057F8  6E08               	movwf	(___fldiv@b+3)^0,c
  6927   0057FA                     l3618:
  6928   0057FA  8E07               	bsf	(___fldiv@b+2)^0,7,c
  6929   0057FC  6A08               	clrf	(___fldiv@b+3)^0,c
  6930   0057FE  EF09  F02C         	goto	l3624
  6931   005802                     l3622:
  6932   005802  0E00               	movlw	0
  6933   005804  6E05               	movwf	___fldiv@b^0,c
  6934   005806  0E00               	movlw	0
  6935   005808  6E06               	movwf	(___fldiv@b+1)^0,c
  6936   00580A  0E00               	movlw	0
  6937   00580C  6E07               	movwf	(___fldiv@b+2)^0,c
  6938   00580E  0E00               	movlw	0
  6939   005810  6E08               	movwf	(___fldiv@b+3)^0,c
  6940   005812                     l3624:
  6941   005812  500C               	movf	(___fldiv@a+3)^0,w,c
  6942   005814  0B80               	andlw	128
  6943   005816  1A15               	xorwf	___fldiv@sign^0,f,c
  6944   005818  500C               	movf	(___fldiv@a+3)^0,w,c
  6945   00581A  240C               	addwf	(___fldiv@a+3)^0,w,c
  6946   00581C  6E1D               	movwf	___fldiv@aexp^0,c
  6947   00581E  AE0B               	btfss	(___fldiv@a+2)^0,7,c
  6948   005820  EF14  F02C         	goto	u4281
  6949   005824  EF16  F02C         	goto	u4280
  6950   005828                     u4281:
  6951   005828  EF17  F02C         	goto	l3632
  6952   00582C                     u4280:
  6953   00582C  801D               	bsf	___fldiv@aexp^0,0,c
  6954   00582E                     l3632:
  6955   00582E  501D               	movf	___fldiv@aexp^0,w,c
  6956   005830  B4D8               	btfsc	status,2,c
  6957   005832  EF1D  F02C         	goto	u4291
  6958   005836  EF1F  F02C         	goto	u4290
  6959   00583A                     u4291:
  6960   00583A  EF33  F02C         	goto	l3642
  6961   00583E                     u4290:
  6962   00583E  281D               	incf	___fldiv@aexp^0,w,c
  6963   005840  A4D8               	btfss	status,2,c
  6964   005842  EF25  F02C         	goto	u4301
  6965   005846  EF27  F02C         	goto	u4300
  6966   00584A                     u4301:
  6967   00584A  EF2F  F02C         	goto	l3638
  6968   00584E                     u4300:
  6969   00584E  0E00               	movlw	0
  6970   005850  6E09               	movwf	___fldiv@a^0,c
  6971   005852  0E00               	movlw	0
  6972   005854  6E0A               	movwf	(___fldiv@a+1)^0,c
  6973   005856  0E00               	movlw	0
  6974   005858  6E0B               	movwf	(___fldiv@a+2)^0,c
  6975   00585A  0E00               	movlw	0
  6976   00585C  6E0C               	movwf	(___fldiv@a+3)^0,c
  6977   00585E                     l3638:
  6978   00585E  8E0B               	bsf	(___fldiv@a+2)^0,7,c
  6979   005860  6A0C               	clrf	(___fldiv@a+3)^0,c
  6980   005862  EF3B  F02C         	goto	l3644
  6981   005866                     l3642:
  6982   005866  0E00               	movlw	0
  6983   005868  6E09               	movwf	___fldiv@a^0,c
  6984   00586A  0E00               	movlw	0
  6985   00586C  6E0A               	movwf	(___fldiv@a+1)^0,c
  6986   00586E  0E00               	movlw	0
  6987   005870  6E0B               	movwf	(___fldiv@a+2)^0,c
  6988   005872  0E00               	movlw	0
  6989   005874  6E0C               	movwf	(___fldiv@a+3)^0,c
  6990   005876                     l3644:
  6991   005876  5009               	movf	___fldiv@a^0,w,c
  6992   005878  100A               	iorwf	(___fldiv@a+1)^0,w,c
  6993   00587A  100B               	iorwf	(___fldiv@a+2)^0,w,c
  6994   00587C  100C               	iorwf	(___fldiv@a+3)^0,w,c
  6995   00587E  A4D8               	btfss	status,2,c
  6996   005880  EF44  F02C         	goto	u4311
  6997   005884  EF46  F02C         	goto	u4310
  6998   005888                     u4311:
  6999   005888  EF5E  F02C         	goto	l3656
  7000   00588C                     u4310:
  7001   00588C  0E00               	movlw	0
  7002   00588E  6E05               	movwf	___fldiv@b^0,c
  7003   005890  0E00               	movlw	0
  7004   005892  6E06               	movwf	(___fldiv@b+1)^0,c
  7005   005894  0E00               	movlw	0
  7006   005896  6E07               	movwf	(___fldiv@b+2)^0,c
  7007   005898  0E00               	movlw	0
  7008   00589A  6E08               	movwf	(___fldiv@b+3)^0,c
  7009   00589C  0E80               	movlw	128
  7010   00589E  1207               	iorwf	(___fldiv@b+2)^0,f,c
  7011   0058A0  0E7F               	movlw	127
  7012   0058A2  1208               	iorwf	(___fldiv@b+3)^0,f,c
  7013   0058A4                     l3650:
  7014   0058A4  5015               	movf	___fldiv@sign^0,w,c
  7015   0058A6  1208               	iorwf	(___fldiv@b+3)^0,f,c
  7016   0058A8  C005  F005         	movff	___fldiv@b,?___fldiv
  7017   0058AC  C006  F006         	movff	___fldiv@b+1,?___fldiv+1
  7018   0058B0  C007  F007         	movff	___fldiv@b+2,?___fldiv+2
  7019   0058B4  C008  F008         	movff	___fldiv@b+3,?___fldiv+3
  7020   0058B8  EF9E  F02D         	goto	l723
  7021   0058BC                     l3656:
  7022   0058BC  501C               	movf	___fldiv@bexp^0,w,c
  7023   0058BE  A4D8               	btfss	status,2,c
  7024   0058C0  EF64  F02C         	goto	u4321
  7025   0058C4  EF66  F02C         	goto	u4320
  7026   0058C8                     u4321:
  7027   0058C8  EF70  F02C         	goto	l3664
  7028   0058CC                     u4320:
  7029   0058CC  0E00               	movlw	0
  7030   0058CE  6E05               	movwf	?___fldiv^0,c
  7031   0058D0  0E00               	movlw	0
  7032   0058D2  6E06               	movwf	(?___fldiv+1)^0,c
  7033   0058D4  0E00               	movlw	0
  7034   0058D6  6E07               	movwf	(?___fldiv+2)^0,c
  7035   0058D8  0E00               	movlw	0
  7036   0058DA  6E08               	movwf	(?___fldiv+3)^0,c
  7037   0058DC  EF9E  F02D         	goto	l723
  7038   0058E0                     l3664:
  7039   0058E0  501D               	movf	___fldiv@aexp^0,w,c
  7040   0058E2  C01C  F00D         	movff	___fldiv@bexp,??___fldiv
  7041   0058E6  6A0E               	clrf	(??___fldiv+1)^0,c
  7042   0058E8  5E0D               	subwf	??___fldiv^0,f,c
  7043   0058EA  0E00               	movlw	0
  7044   0058EC  5A0E               	subwfb	(??___fldiv+1)^0,f,c
  7045   0058EE  0E7F               	movlw	127
  7046   0058F0  240D               	addwf	??___fldiv^0,w,c
  7047   0058F2  6E16               	movwf	___fldiv@new_exp^0,c
  7048   0058F4  0E00               	movlw	0
  7049   0058F6  200E               	addwfc	(??___fldiv+1)^0,w,c
  7050   0058F8  6E17               	movwf	(___fldiv@new_exp+1)^0,c
  7051   0058FA  C005  F011         	movff	___fldiv@b,___fldiv@rem
  7052   0058FE  C006  F012         	movff	___fldiv@b+1,___fldiv@rem+1
  7053   005902  C007  F013         	movff	___fldiv@b+2,___fldiv@rem+2
  7054   005906  C008  F014         	movff	___fldiv@b+3,___fldiv@rem+3
  7055   00590A  0E00               	movlw	0
  7056   00590C  6E05               	movwf	___fldiv@b^0,c
  7057   00590E  0E00               	movlw	0
  7058   005910  6E06               	movwf	(___fldiv@b+1)^0,c
  7059   005912  0E00               	movlw	0
  7060   005914  6E07               	movwf	(___fldiv@b+2)^0,c
  7061   005916  0E00               	movlw	0
  7062   005918  6E08               	movwf	(___fldiv@b+3)^0,c
  7063   00591A  0E00               	movlw	0
  7064   00591C  6E18               	movwf	___fldiv@grs^0,c
  7065   00591E  0E00               	movlw	0
  7066   005920  6E19               	movwf	(___fldiv@grs+1)^0,c
  7067   005922  0E00               	movlw	0
  7068   005924  6E1A               	movwf	(___fldiv@grs+2)^0,c
  7069   005926  0E00               	movlw	0
  7070   005928  6E1B               	movwf	(___fldiv@grs+3)^0,c
  7071   00592A  6A1D               	clrf	___fldiv@aexp^0,c
  7072   00592C  EFD0  F02C         	goto	l725
  7073   005930                     l3674:
  7074   005930  501D               	movf	___fldiv@aexp^0,w,c
  7075   005932  B4D8               	btfsc	status,2,c
  7076   005934  EF9E  F02C         	goto	u4331
  7077   005938  EFA0  F02C         	goto	u4330
  7078   00593C                     u4331:
  7079   00593C  EFB7  F02C         	goto	l3682
  7080   005940                     u4330:
  7081   005940  90D8               	bcf	status,0,c
  7082   005942  3611               	rlcf	___fldiv@rem^0,f,c
  7083   005944  3612               	rlcf	(___fldiv@rem+1)^0,f,c
  7084   005946  3613               	rlcf	(___fldiv@rem+2)^0,f,c
  7085   005948  3614               	rlcf	(___fldiv@rem+3)^0,f,c
  7086   00594A  90D8               	bcf	status,0,c
  7087   00594C  3605               	rlcf	___fldiv@b^0,f,c
  7088   00594E  3606               	rlcf	(___fldiv@b+1)^0,f,c
  7089   005950  3607               	rlcf	(___fldiv@b+2)^0,f,c
  7090   005952  3608               	rlcf	(___fldiv@b+3)^0,f,c
  7091   005954  AE1B               	btfss	(___fldiv@grs+3)^0,7,c
  7092   005956  EFAF  F02C         	goto	u4341
  7093   00595A  EFB1  F02C         	goto	u4340
  7094   00595E                     u4341:
  7095   00595E  EFB2  F02C         	goto	l728
  7096   005962                     u4340:
  7097   005962  8005               	bsf	___fldiv@b^0,0,c
  7098   005964                     l728:
  7099   005964  90D8               	bcf	status,0,c
  7100   005966  3618               	rlcf	___fldiv@grs^0,f,c
  7101   005968  3619               	rlcf	(___fldiv@grs+1)^0,f,c
  7102   00596A  361A               	rlcf	(___fldiv@grs+2)^0,f,c
  7103   00596C  361B               	rlcf	(___fldiv@grs+3)^0,f,c
  7104   00596E                     l3682:
  7105   00596E  5009               	movf	___fldiv@a^0,w,c
  7106   005970  5C11               	subwf	___fldiv@rem^0,w,c
  7107   005972  500A               	movf	(___fldiv@a+1)^0,w,c
  7108   005974  5812               	subwfb	(___fldiv@rem+1)^0,w,c
  7109   005976  500B               	movf	(___fldiv@a+2)^0,w,c
  7110   005978  5813               	subwfb	(___fldiv@rem+2)^0,w,c
  7111   00597A  500C               	movf	(___fldiv@a+3)^0,w,c
  7112   00597C  5814               	subwfb	(___fldiv@rem+3)^0,w,c
  7113   00597E  A0D8               	btfss	status,0,c
  7114   005980  EFC4  F02C         	goto	u4351
  7115   005984  EFC6  F02C         	goto	u4350
  7116   005988                     u4351:
  7117   005988  EFCF  F02C         	goto	l3688
  7118   00598C                     u4350:
  7119   00598C  8C1B               	bsf	(___fldiv@grs+3)^0,6,c
  7120   00598E  5009               	movf	___fldiv@a^0,w,c
  7121   005990  5E11               	subwf	___fldiv@rem^0,f,c
  7122   005992  500A               	movf	(___fldiv@a+1)^0,w,c
  7123   005994  5A12               	subwfb	(___fldiv@rem+1)^0,f,c
  7124   005996  500B               	movf	(___fldiv@a+2)^0,w,c
  7125   005998  5A13               	subwfb	(___fldiv@rem+2)^0,f,c
  7126   00599A  500C               	movf	(___fldiv@a+3)^0,w,c
  7127   00599C  5A14               	subwfb	(___fldiv@rem+3)^0,f,c
  7128   00599E                     l3688:
  7129   00599E  2A1D               	incf	___fldiv@aexp^0,f,c
  7130   0059A0                     l725:
  7131   0059A0  0E19               	movlw	25
  7132   0059A2  641D               	cpfsgt	___fldiv@aexp^0,c
  7133   0059A4  EFD6  F02C         	goto	u4361
  7134   0059A8  EFD8  F02C         	goto	u4360
  7135   0059AC                     u4361:
  7136   0059AC  EF98  F02C         	goto	l3674
  7137   0059B0                     u4360:
  7138   0059B0  5011               	movf	___fldiv@rem^0,w,c
  7139   0059B2  1012               	iorwf	(___fldiv@rem+1)^0,w,c
  7140   0059B4  1013               	iorwf	(___fldiv@rem+2)^0,w,c
  7141   0059B6  1014               	iorwf	(___fldiv@rem+3)^0,w,c
  7142   0059B8  B4D8               	btfsc	status,2,c
  7143   0059BA  EFE1  F02C         	goto	u4371
  7144   0059BE  EFE3  F02C         	goto	u4370
  7145   0059C2                     u4371:
  7146   0059C2  EFFB  F02C         	goto	l3700
  7147   0059C6                     u4370:
  7148   0059C6  8018               	bsf	___fldiv@grs^0,0,c
  7149   0059C8  EFFB  F02C         	goto	l3700
  7150   0059CC                     l3694:
  7151   0059CC  90D8               	bcf	status,0,c
  7152   0059CE  3605               	rlcf	___fldiv@b^0,f,c
  7153   0059D0  3606               	rlcf	(___fldiv@b+1)^0,f,c
  7154   0059D2  3607               	rlcf	(___fldiv@b+2)^0,f,c
  7155   0059D4  3608               	rlcf	(___fldiv@b+3)^0,f,c
  7156   0059D6  AE1B               	btfss	(___fldiv@grs+3)^0,7,c
  7157   0059D8  EFF0  F02C         	goto	u4381
  7158   0059DC  EFF2  F02C         	goto	u4380
  7159   0059E0                     u4381:
  7160   0059E0  EFF3  F02C         	goto	l734
  7161   0059E4                     u4380:
  7162   0059E4  8005               	bsf	___fldiv@b^0,0,c
  7163   0059E6                     l734:
  7164   0059E6  90D8               	bcf	status,0,c
  7165   0059E8  3618               	rlcf	___fldiv@grs^0,f,c
  7166   0059EA  3619               	rlcf	(___fldiv@grs+1)^0,f,c
  7167   0059EC  361A               	rlcf	(___fldiv@grs+2)^0,f,c
  7168   0059EE  361B               	rlcf	(___fldiv@grs+3)^0,f,c
  7169   0059F0  0616               	decf	___fldiv@new_exp^0,f,c
  7170   0059F2  A0D8               	btfss	status,0,c
  7171   0059F4  0617               	decf	(___fldiv@new_exp+1)^0,f,c
  7172   0059F6                     l3700:
  7173   0059F6  AE07               	btfss	(___fldiv@b+2)^0,7,c
  7174   0059F8  EF00  F02D         	goto	u4391
  7175   0059FC  EF02  F02D         	goto	u4390
  7176   005A00                     u4391:
  7177   005A00  EFE6  F02C         	goto	l3694
  7178   005A04                     u4390:
  7179   005A04  6A1D               	clrf	___fldiv@aexp^0,c
  7180   005A06  AE1B               	btfss	(___fldiv@grs+3)^0,7,c
  7181   005A08  EF08  F02D         	goto	u4401
  7182   005A0C  EF0A  F02D         	goto	u4400
  7183   005A10                     u4401:
  7184   005A10  EF2E  F02D         	goto	l736
  7185   005A14                     u4400:
  7186   005A14  0EFF               	movlw	255
  7187   005A16  1418               	andwf	___fldiv@grs^0,w,c
  7188   005A18  6E0D               	movwf	??___fldiv^0,c
  7189   005A1A  0EFF               	movlw	255
  7190   005A1C  1419               	andwf	(___fldiv@grs+1)^0,w,c
  7191   005A1E  6E0E               	movwf	(??___fldiv+1)^0,c
  7192   005A20  0EFF               	movlw	255
  7193   005A22  141A               	andwf	(___fldiv@grs+2)^0,w,c
  7194   005A24  6E0F               	movwf	(??___fldiv+2)^0,c
  7195   005A26  0E7F               	movlw	127
  7196   005A28  141B               	andwf	(___fldiv@grs+3)^0,w,c
  7197   005A2A  6E10               	movwf	(??___fldiv+3)^0,c
  7198   005A2C  500D               	movf	??___fldiv^0,w,c
  7199   005A2E  100E               	iorwf	(??___fldiv+1)^0,w,c
  7200   005A30  100F               	iorwf	(??___fldiv+2)^0,w,c
  7201   005A32  1010               	iorwf	(??___fldiv+3)^0,w,c
  7202   005A34  B4D8               	btfsc	status,2,c
  7203   005A36  EF1F  F02D         	goto	u4411
  7204   005A3A  EF21  F02D         	goto	u4410
  7205   005A3E                     u4411:
  7206   005A3E  EF25  F02D         	goto	l737
  7207   005A42                     u4410:
  7208   005A42                     l3704:
  7209   005A42  0E01               	movlw	1
  7210   005A44  6E1D               	movwf	___fldiv@aexp^0,c
  7211   005A46  EF2E  F02D         	goto	l736
  7212   005A4A                     l737:
  7213   005A4A  A005               	btfss	___fldiv@b^0,0,c
  7214   005A4C  EF2A  F02D         	goto	u4421
  7215   005A50  EF2C  F02D         	goto	u4420
  7216   005A54                     u4421:
  7217   005A54  EF2E  F02D         	goto	l736
  7218   005A58                     u4420:
  7219   005A58  EF21  F02D         	goto	l3704
  7220   005A5C                     l736:
  7221   005A5C  501D               	movf	___fldiv@aexp^0,w,c
  7222   005A5E  B4D8               	btfsc	status,2,c
  7223   005A60  EF34  F02D         	goto	u4431
  7224   005A64  EF36  F02D         	goto	u4430
  7225   005A68                     u4431:
  7226   005A68  EF5A  F02D         	goto	l3716
  7227   005A6C                     u4430:
  7228   005A6C  0E01               	movlw	1
  7229   005A6E  2605               	addwf	___fldiv@b^0,f,c
  7230   005A70  0E00               	movlw	0
  7231   005A72  2206               	addwfc	(___fldiv@b+1)^0,f,c
  7232   005A74  2207               	addwfc	(___fldiv@b+2)^0,f,c
  7233   005A76  2208               	addwfc	(___fldiv@b+3)^0,f,c
  7234   005A78  A008               	btfss	(___fldiv@b+3)^0,0,c
  7235   005A7A  EF41  F02D         	goto	u4441
  7236   005A7E  EF43  F02D         	goto	u4440
  7237   005A82                     u4441:
  7238   005A82  EF5A  F02D         	goto	l3716
  7239   005A86                     u4440:
  7240   005A86  C005  F00D         	movff	___fldiv@b,??___fldiv
  7241   005A8A  C006  F00E         	movff	___fldiv@b+1,??___fldiv+1
  7242   005A8E  C007  F00F         	movff	___fldiv@b+2,??___fldiv+2
  7243   005A92  C008  F010         	movff	___fldiv@b+3,??___fldiv+3
  7244   005A96  3410               	rlcf	(??___fldiv+3)^0,w,c
  7245   005A98  3210               	rrcf	(??___fldiv+3)^0,f,c
  7246   005A9A  320F               	rrcf	(??___fldiv+2)^0,f,c
  7247   005A9C  320E               	rrcf	(??___fldiv+1)^0,f,c
  7248   005A9E  320D               	rrcf	??___fldiv^0,f,c
  7249   005AA0  C00D  F005         	movff	??___fldiv,___fldiv@b
  7250   005AA4  C00E  F006         	movff	??___fldiv+1,___fldiv@b+1
  7251   005AA8  C00F  F007         	movff	??___fldiv+2,___fldiv@b+2
  7252   005AAC  C010  F008         	movff	??___fldiv+3,___fldiv@b+3
  7253   005AB0  4A16               	infsnz	___fldiv@new_exp^0,f,c
  7254   005AB2  2A17               	incf	(___fldiv@new_exp+1)^0,f,c
  7255   005AB4                     l3716:
  7256   005AB4  BE17               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7257   005AB6  EF65  F02D         	goto	u4451
  7258   005ABA  5017               	movf	(___fldiv@new_exp+1)^0,w,c
  7259   005ABC  E108               	bnz	u4450
  7260   005ABE  2816               	incf	___fldiv@new_exp^0,w,c
  7261   005AC0  A0D8               	btfss	status,0,c
  7262   005AC2  EF65  F02D         	goto	u4451
  7263   005AC6  EF67  F02D         	goto	u4450
  7264   005ACA                     u4451:
  7265   005ACA  EF72  F02D         	goto	l3720
  7266   005ACE                     u4450:
  7267   005ACE  0E00               	movlw	0
  7268   005AD0  6E17               	movwf	(___fldiv@new_exp+1)^0,c
  7269   005AD2  6816               	setf	___fldiv@new_exp^0,c
  7270   005AD4  0E00               	movlw	0
  7271   005AD6  6E05               	movwf	___fldiv@b^0,c
  7272   005AD8  0E00               	movlw	0
  7273   005ADA  6E06               	movwf	(___fldiv@b+1)^0,c
  7274   005ADC  0E00               	movlw	0
  7275   005ADE  6E07               	movwf	(___fldiv@b+2)^0,c
  7276   005AE0  0E00               	movlw	0
  7277   005AE2  6E08               	movwf	(___fldiv@b+3)^0,c
  7278   005AE4                     l3720:
  7279   005AE4  BE17               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7280   005AE6  EF7F  F02D         	goto	u4460
  7281   005AEA  5017               	movf	(___fldiv@new_exp+1)^0,w,c
  7282   005AEC  E106               	bnz	u4461
  7283   005AEE  0416               	decf	___fldiv@new_exp^0,w,c
  7284   005AF0  B0D8               	btfsc	status,0,c
  7285   005AF2  EF7D  F02D         	goto	u4461
  7286   005AF6  EF7F  F02D         	goto	u4460
  7287   005AFA                     u4461:
  7288   005AFA  EF8C  F02D         	goto	l3726
  7289   005AFE                     u4460:
  7290   005AFE  0E00               	movlw	0
  7291   005B00  6E17               	movwf	(___fldiv@new_exp+1)^0,c
  7292   005B02  0E00               	movlw	0
  7293   005B04  6E16               	movwf	___fldiv@new_exp^0,c
  7294   005B06  0E00               	movlw	0
  7295   005B08  6E05               	movwf	___fldiv@b^0,c
  7296   005B0A  0E00               	movlw	0
  7297   005B0C  6E06               	movwf	(___fldiv@b+1)^0,c
  7298   005B0E  0E00               	movlw	0
  7299   005B10  6E07               	movwf	(___fldiv@b+2)^0,c
  7300   005B12  0E00               	movlw	0
  7301   005B14  6E08               	movwf	(___fldiv@b+3)^0,c
  7302   005B16  6A15               	clrf	___fldiv@sign^0,c
  7303   005B18                     l3726:
  7304   005B18  C016  F01C         	movff	___fldiv@new_exp,___fldiv@bexp
  7305   005B1C  A01C               	btfss	___fldiv@bexp^0,0,c
  7306   005B1E  EF93  F02D         	goto	u4471
  7307   005B22  EF95  F02D         	goto	u4470
  7308   005B26                     u4471:
  7309   005B26  EF98  F02D         	goto	l3732
  7310   005B2A                     u4470:
  7311   005B2A  8E07               	bsf	(___fldiv@b+2)^0,7,c
  7312   005B2C  EF99  F02D         	goto	l3734
  7313   005B30                     l3732:
  7314   005B30  9E07               	bcf	(___fldiv@b+2)^0,7,c
  7315   005B32                     l3734:
  7316   005B32  90D8               	bcf	status,0,c
  7317   005B34  301C               	rrcf	___fldiv@bexp^0,w,c
  7318   005B36  6E08               	movwf	(___fldiv@b+3)^0,c
  7319   005B38  EF52  F02C         	goto	l3650
  7320   005B3C                     l723:
  7321   005B3C  0012               	return		;funcret
  7322   005B3E                     __end_of___fldiv:
  7323                           	callstack 0
  7324                           
  7325 ;; *************** function ___xxtofl *****************
  7326 ;; Defined at:
  7327 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\xxtofl.c"
  7328 ;; Parameters:    Size  Location     Type
  7329 ;;  sign            1    wreg     unsigned char 
  7330 ;;  val             4    4[COMRAM] long 
  7331 ;; Auto vars:     Size  Location     Type
  7332 ;;  sign            1   12[COMRAM] unsigned char 
  7333 ;;  arg             4   14[COMRAM] unsigned long 
  7334 ;;  exp             1   13[COMRAM] unsigned char 
  7335 ;; Return value:  Size  Location     Type
  7336 ;;                  4    4[COMRAM] unsigned char 
  7337 ;; Registers used:
  7338 ;;		wreg, status,2, status,0
  7339 ;; Tracked objects:
  7340 ;;		On entry : 0/0
  7341 ;;		On exit  : 0/0
  7342 ;;		Unchanged: 0/0
  7343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7344 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7345 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7346 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7347 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7348 ;;Total ram usage:       14 bytes
  7349 ;; Hardware stack levels used: 1
  7350 ;; Hardware stack levels required when called: 1
  7351 ;; This function calls:
  7352 ;;		Nothing
  7353 ;; This function is called by:
  7354 ;;		_main
  7355 ;; This function uses a non-reentrant model
  7356 ;;
  7357                           
  7358                           	psect	text24
  7359   005F64                     __ptext24:
  7360                           	callstack 0
  7361   005F64                     ___xxtofl:
  7362                           	callstack 29
  7363                           
  7364                           ;incstack = 0
  7365                           ;___xxtofl@sign stored from wreg
  7366   005F64  6E0D               	movwf	___xxtofl@sign^0,c
  7367   005F66  500D               	movf	___xxtofl@sign^0,w,c
  7368   005F68  B4D8               	btfsc	status,2,c
  7369   005F6A  EFB9  F02F         	goto	u3621
  7370   005F6E  EFBB  F02F         	goto	u3620
  7371   005F72                     u3621:
  7372   005F72  EFDD  F02F         	goto	l796
  7373   005F76                     u3620:
  7374   005F76  BE08               	btfsc	(___xxtofl@val+3)^0,7,c
  7375   005F78  EFC2  F02F         	goto	u3630
  7376   005F7C  EFC0  F02F         	goto	u3631
  7377   005F80                     u3631:
  7378   005F80  EFDD  F02F         	goto	l796
  7379   005F84                     u3630:
  7380   005F84  C005  F009         	movff	___xxtofl@val,??___xxtofl
  7381   005F88  C006  F00A         	movff	___xxtofl@val+1,??___xxtofl+1
  7382   005F8C  C007  F00B         	movff	___xxtofl@val+2,??___xxtofl+2
  7383   005F90  C008  F00C         	movff	___xxtofl@val+3,??___xxtofl+3
  7384   005F94  1E09               	comf	??___xxtofl^0,f,c
  7385   005F96  1E0A               	comf	(??___xxtofl+1)^0,f,c
  7386   005F98  1E0B               	comf	(??___xxtofl+2)^0,f,c
  7387   005F9A  1E0C               	comf	(??___xxtofl+3)^0,f,c
  7388   005F9C  2A09               	incf	??___xxtofl^0,f,c
  7389   005F9E  0E00               	movlw	0
  7390   005FA0  220A               	addwfc	(??___xxtofl+1)^0,f,c
  7391   005FA2  220B               	addwfc	(??___xxtofl+2)^0,f,c
  7392   005FA4  220C               	addwfc	(??___xxtofl+3)^0,f,c
  7393   005FA6  C009  F00F         	movff	??___xxtofl,___xxtofl@arg
  7394   005FAA  C00A  F010         	movff	??___xxtofl+1,___xxtofl@arg+1
  7395   005FAE  C00B  F011         	movff	??___xxtofl+2,___xxtofl@arg+2
  7396   005FB2  C00C  F012         	movff	??___xxtofl+3,___xxtofl@arg+3
  7397   005FB6  EFE5  F02F         	goto	l3294
  7398   005FBA                     l796:
  7399   005FBA  C005  F00F         	movff	___xxtofl@val,___xxtofl@arg
  7400   005FBE  C006  F010         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7401   005FC2  C007  F011         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7402   005FC6  C008  F012         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7403   005FCA                     l3294:
  7404   005FCA  5005               	movf	___xxtofl@val^0,w,c
  7405   005FCC  1006               	iorwf	(___xxtofl@val+1)^0,w,c
  7406   005FCE  1007               	iorwf	(___xxtofl@val+2)^0,w,c
  7407   005FD0  1008               	iorwf	(___xxtofl@val+3)^0,w,c
  7408   005FD2  A4D8               	btfss	status,2,c
  7409   005FD4  EFEE  F02F         	goto	u3641
  7410   005FD8  EFF0  F02F         	goto	u3640
  7411   005FDC                     u3641:
  7412   005FDC  EFFA  F02F         	goto	l3300
  7413   005FE0                     u3640:
  7414   005FE0  0E00               	movlw	0
  7415   005FE2  6E05               	movwf	?___xxtofl^0,c
  7416   005FE4  0E00               	movlw	0
  7417   005FE6  6E06               	movwf	(?___xxtofl+1)^0,c
  7418   005FE8  0E00               	movlw	0
  7419   005FEA  6E07               	movwf	(?___xxtofl+2)^0,c
  7420   005FEC  0E00               	movlw	0
  7421   005FEE  6E08               	movwf	(?___xxtofl+3)^0,c
  7422   005FF0  EF8B  F030         	goto	l799
  7423   005FF4                     l3300:
  7424   005FF4  0E96               	movlw	150
  7425   005FF6  6E0E               	movwf	___xxtofl@exp^0,c
  7426   005FF8  EF04  F030         	goto	l3304
  7427   005FFC                     l3302:
  7428   005FFC  2A0E               	incf	___xxtofl@exp^0,f,c
  7429   005FFE  90D8               	bcf	status,0,c
  7430   006000  3212               	rrcf	(___xxtofl@arg+3)^0,f,c
  7431   006002  3211               	rrcf	(___xxtofl@arg+2)^0,f,c
  7432   006004  3210               	rrcf	(___xxtofl@arg+1)^0,f,c
  7433   006006  320F               	rrcf	___xxtofl@arg^0,f,c
  7434   006008                     l3304:
  7435   006008  0E00               	movlw	0
  7436   00600A  140F               	andwf	___xxtofl@arg^0,w,c
  7437   00600C  6E09               	movwf	??___xxtofl^0,c
  7438   00600E  0E00               	movlw	0
  7439   006010  1410               	andwf	(___xxtofl@arg+1)^0,w,c
  7440   006012  6E0A               	movwf	(??___xxtofl+1)^0,c
  7441   006014  0E00               	movlw	0
  7442   006016  1411               	andwf	(___xxtofl@arg+2)^0,w,c
  7443   006018  6E0B               	movwf	(??___xxtofl+2)^0,c
  7444   00601A  0EFE               	movlw	254
  7445   00601C  1412               	andwf	(___xxtofl@arg+3)^0,w,c
  7446   00601E  6E0C               	movwf	(??___xxtofl+3)^0,c
  7447   006020  5009               	movf	??___xxtofl^0,w,c
  7448   006022  100A               	iorwf	(??___xxtofl+1)^0,w,c
  7449   006024  100B               	iorwf	(??___xxtofl+2)^0,w,c
  7450   006026  100C               	iorwf	(??___xxtofl+3)^0,w,c
  7451   006028  A4D8               	btfss	status,2,c
  7452   00602A  EF19  F030         	goto	u3651
  7453   00602E  EF1B  F030         	goto	u3650
  7454   006032                     u3651:
  7455   006032  EFFE  F02F         	goto	l3302
  7456   006036                     u3650:
  7457   006036  EF29  F030         	goto	l803
  7458   00603A                     l3306:
  7459   00603A  2A0E               	incf	___xxtofl@exp^0,f,c
  7460   00603C  0E01               	movlw	1
  7461   00603E  260F               	addwf	___xxtofl@arg^0,f,c
  7462   006040  0E00               	movlw	0
  7463   006042  2210               	addwfc	(___xxtofl@arg+1)^0,f,c
  7464   006044  2211               	addwfc	(___xxtofl@arg+2)^0,f,c
  7465   006046  2212               	addwfc	(___xxtofl@arg+3)^0,f,c
  7466   006048  90D8               	bcf	status,0,c
  7467   00604A  3212               	rrcf	(___xxtofl@arg+3)^0,f,c
  7468   00604C  3211               	rrcf	(___xxtofl@arg+2)^0,f,c
  7469   00604E  3210               	rrcf	(___xxtofl@arg+1)^0,f,c
  7470   006050  320F               	rrcf	___xxtofl@arg^0,f,c
  7471   006052                     l803:
  7472   006052  0E00               	movlw	0
  7473   006054  140F               	andwf	___xxtofl@arg^0,w,c
  7474   006056  6E09               	movwf	??___xxtofl^0,c
  7475   006058  0E00               	movlw	0
  7476   00605A  1410               	andwf	(___xxtofl@arg+1)^0,w,c
  7477   00605C  6E0A               	movwf	(??___xxtofl+1)^0,c
  7478   00605E  0E00               	movlw	0
  7479   006060  1411               	andwf	(___xxtofl@arg+2)^0,w,c
  7480   006062  6E0B               	movwf	(??___xxtofl+2)^0,c
  7481   006064  0EFF               	movlw	255
  7482   006066  1412               	andwf	(___xxtofl@arg+3)^0,w,c
  7483   006068  6E0C               	movwf	(??___xxtofl+3)^0,c
  7484   00606A  5009               	movf	??___xxtofl^0,w,c
  7485   00606C  100A               	iorwf	(??___xxtofl+1)^0,w,c
  7486   00606E  100B               	iorwf	(??___xxtofl+2)^0,w,c
  7487   006070  100C               	iorwf	(??___xxtofl+3)^0,w,c
  7488   006072  A4D8               	btfss	status,2,c
  7489   006074  EF3E  F030         	goto	u3661
  7490   006078  EF40  F030         	goto	u3660
  7491   00607C                     u3661:
  7492   00607C  EF1D  F030         	goto	l3306
  7493   006080                     u3660:
  7494   006080  EF48  F030         	goto	l3314
  7495   006084                     l3312:
  7496   006084  060E               	decf	___xxtofl@exp^0,f,c
  7497   006086  90D8               	bcf	status,0,c
  7498   006088  360F               	rlcf	___xxtofl@arg^0,f,c
  7499   00608A  3610               	rlcf	(___xxtofl@arg+1)^0,f,c
  7500   00608C  3611               	rlcf	(___xxtofl@arg+2)^0,f,c
  7501   00608E  3612               	rlcf	(___xxtofl@arg+3)^0,f,c
  7502   006090                     l3314:
  7503   006090  BE11               	btfsc	(___xxtofl@arg+2)^0,7,c
  7504   006092  EF4D  F030         	goto	u3671
  7505   006096  EF4F  F030         	goto	u3670
  7506   00609A                     u3671:
  7507   00609A  EF57  F030         	goto	l810
  7508   00609E                     u3670:
  7509   00609E  0E02               	movlw	2
  7510   0060A0  600E               	cpfslt	___xxtofl@exp^0,c
  7511   0060A2  EF55  F030         	goto	u3681
  7512   0060A6  EF57  F030         	goto	u3680
  7513   0060AA                     u3681:
  7514   0060AA  EF42  F030         	goto	l3312
  7515   0060AE                     u3680:
  7516   0060AE                     l810:
  7517   0060AE  B00E               	btfsc	___xxtofl@exp^0,0,c
  7518   0060B0  EF5C  F030         	goto	u3691
  7519   0060B4  EF5E  F030         	goto	u3690
  7520   0060B8                     u3691:
  7521   0060B8  EF5F  F030         	goto	l3320
  7522   0060BC                     u3690:
  7523   0060BC  9E11               	bcf	(___xxtofl@arg+2)^0,7,c
  7524   0060BE                     l3320:
  7525   0060BE  90D8               	bcf	status,0,c
  7526   0060C0  320E               	rrcf	___xxtofl@exp^0,f,c
  7527   0060C2  C00E  F009         	movff	___xxtofl@exp,??___xxtofl
  7528   0060C6  6A0A               	clrf	(??___xxtofl+1)^0,c
  7529   0060C8  6A0B               	clrf	(??___xxtofl+2)^0,c
  7530   0060CA  6A0C               	clrf	(??___xxtofl+3)^0,c
  7531   0060CC  C009  F00C         	movff	??___xxtofl,??___xxtofl+3
  7532   0060D0  6A0B               	clrf	(??___xxtofl+2)^0,c
  7533   0060D2  6A0A               	clrf	(??___xxtofl+1)^0,c
  7534   0060D4  6A09               	clrf	??___xxtofl^0,c
  7535   0060D6  5009               	movf	??___xxtofl^0,w,c
  7536   0060D8  120F               	iorwf	___xxtofl@arg^0,f,c
  7537   0060DA  500A               	movf	(??___xxtofl+1)^0,w,c
  7538   0060DC  1210               	iorwf	(___xxtofl@arg+1)^0,f,c
  7539   0060DE  500B               	movf	(??___xxtofl+2)^0,w,c
  7540   0060E0  1211               	iorwf	(___xxtofl@arg+2)^0,f,c
  7541   0060E2  500C               	movf	(??___xxtofl+3)^0,w,c
  7542   0060E4  1212               	iorwf	(___xxtofl@arg+3)^0,f,c
  7543   0060E6  500D               	movf	___xxtofl@sign^0,w,c
  7544   0060E8  B4D8               	btfsc	status,2,c
  7545   0060EA  EF79  F030         	goto	u3701
  7546   0060EE  EF7B  F030         	goto	u3700
  7547   0060F2                     u3701:
  7548   0060F2  EF83  F030         	goto	l3330
  7549   0060F6                     u3700:
  7550   0060F6  BE08               	btfsc	(___xxtofl@val+3)^0,7,c
  7551   0060F8  EF82  F030         	goto	u3710
  7552   0060FC  EF80  F030         	goto	u3711
  7553   006100                     u3711:
  7554   006100  EF83  F030         	goto	l3330
  7555   006104                     u3710:
  7556   006104  8E12               	bsf	(___xxtofl@arg+3)^0,7,c
  7557   006106                     l3330:
  7558   006106  C00F  F005         	movff	___xxtofl@arg,?___xxtofl
  7559   00610A  C010  F006         	movff	___xxtofl@arg+1,?___xxtofl+1
  7560   00610E  C011  F007         	movff	___xxtofl@arg+2,?___xxtofl+2
  7561   006112  C012  F008         	movff	___xxtofl@arg+3,?___xxtofl+3
  7562   006116                     l799:
  7563   006116  0012               	return		;funcret
  7564   006118                     __end_of___xxtofl:
  7565                           	callstack 0
  7566                           
  7567 ;; *************** function _LCD_String_xy *****************
  7568 ;; Defined at:
  7569 ;;		line 52 in file "./functions.h"
  7570 ;; Parameters:    Size  Location     Type
  7571 ;;  row             1    wreg     unsigned char 
  7572 ;;  pos             1   13[COMRAM] unsigned char 
  7573 ;;  msg             2   14[COMRAM] PTR const unsigned char 
  7574 ;;		 -> STR_3(17), data(10), 
  7575 ;; Auto vars:     Size  Location     Type
  7576 ;;  row             1   16[COMRAM] unsigned char 
  7577 ;;  location        1   17[COMRAM] unsigned char 
  7578 ;; Return value:  Size  Location     Type
  7579 ;;                  1    wreg      void 
  7580 ;; Registers used:
  7581 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7582 ;; Tracked objects:
  7583 ;;		On entry : 0/0
  7584 ;;		On exit  : 0/0
  7585 ;;		Unchanged: 0/0
  7586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7587 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7588 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7590 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7591 ;;Total ram usage:        5 bytes
  7592 ;; Hardware stack levels used: 1
  7593 ;; Hardware stack levels required when called: 4
  7594 ;; This function calls:
  7595 ;;		_LCD_Command
  7596 ;;		_LCD_String
  7597 ;; This function is called by:
  7598 ;;		_main
  7599 ;; This function uses a non-reentrant model
  7600 ;;
  7601                           
  7602                           	psect	text25
  7603   0069E6                     __ptext25:
  7604                           	callstack 0
  7605   0069E6                     _LCD_String_xy:
  7606                           	callstack 26
  7607                           
  7608                           ;incstack = 0
  7609                           ;LCD_String_xy@row stored from wreg
  7610   0069E6  6E11               	movwf	LCD_String_xy@row^0,c
  7611   0069E8                     
  7612                           ;./functions.h: 55:     if(row<=1)
  7613   0069E8  0E02               	movlw	2
  7614   0069EA  6011               	cpfslt	LCD_String_xy@row^0,c
  7615   0069EC  EFFA  F034         	goto	u3591
  7616   0069F0  EFFC  F034         	goto	u3590
  7617   0069F4                     u3591:
  7618   0069F4  EF05  F035         	goto	l3260
  7619   0069F8                     u3590:
  7620   0069F8                     
  7621                           ;./functions.h: 56:     {;./functions.h: 57:         location=(0x80) | ((pos) & 0x0f);
  7622   0069F8  500E               	movf	LCD_String_xy@pos^0,w,c
  7623   0069FA  0B0F               	andlw	15
  7624   0069FC  0980               	iorlw	128
  7625   0069FE  6E12               	movwf	LCD_String_xy@location^0,c
  7626   006A00                     
  7627                           ;./functions.h: 58:         LCD_Command(location);
  7628   006A00  5012               	movf	LCD_String_xy@location^0,w,c
  7629   006A02  EC9E  F035         	call	_LCD_Command
  7630                           
  7631                           ;./functions.h: 59:     }
  7632   006A06  EF0C  F035         	goto	l3264
  7633   006A0A                     l3260:
  7634                           
  7635                           ;./functions.h: 61:     {;./functions.h: 62:         location=(0xC0) | ((pos) & 0x0f);
  7636   006A0A  500E               	movf	LCD_String_xy@pos^0,w,c
  7637   006A0C  0B0F               	andlw	15
  7638   006A0E  09C0               	iorlw	192
  7639   006A10  6E12               	movwf	LCD_String_xy@location^0,c
  7640   006A12                     
  7641                           ;./functions.h: 63:         LCD_Command(location);
  7642   006A12  5012               	movf	LCD_String_xy@location^0,w,c
  7643   006A14  EC9E  F035         	call	_LCD_Command
  7644   006A18                     l3264:
  7645                           
  7646                           ;./functions.h: 65:     LCD_String(msg);
  7647   006A18  C00F  F00C         	movff	LCD_String_xy@msg,LCD_String@msg
  7648   006A1C  C010  F00D         	movff	LCD_String_xy@msg+1,LCD_String@msg+1
  7649   006A20  EC17  F033         	call	_LCD_String	;wreg free
  7650   006A24  0012               	return		;funcret
  7651   006A26                     __end_of_LCD_String_xy:
  7652                           	callstack 0
  7653                           
  7654 ;; *************** function _LCD_String *****************
  7655 ;; Defined at:
  7656 ;;		line 43 in file "./functions.h"
  7657 ;; Parameters:    Size  Location     Type
  7658 ;;  msg             2   11[COMRAM] PTR const unsigned char 
  7659 ;;		 -> STR_3(17), data(10), 
  7660 ;; Auto vars:     Size  Location     Type
  7661 ;;		None
  7662 ;; Return value:  Size  Location     Type
  7663 ;;                  1    wreg      void 
  7664 ;; Registers used:
  7665 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7666 ;; Tracked objects:
  7667 ;;		On entry : 0/0
  7668 ;;		On exit  : 0/0
  7669 ;;		Unchanged: 0/0
  7670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7671 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7672 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7674 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7675 ;;Total ram usage:        2 bytes
  7676 ;; Hardware stack levels used: 1
  7677 ;; Hardware stack levels required when called: 3
  7678 ;; This function calls:
  7679 ;;		_LCD_Char
  7680 ;; This function is called by:
  7681 ;;		_LCD_String_xy
  7682 ;; This function uses a non-reentrant model
  7683 ;;
  7684                           
  7685                           	psect	text26
  7686   00662E                     __ptext26:
  7687                           	callstack 0
  7688   00662E                     _LCD_String:
  7689                           	callstack 26
  7690   00662E                     
  7691                           ;./functions.h: 43: void LCD_String(const char *msg);./functions.h: 44: {;./functions.h:
      +                           45:     while((*msg)!=0)
  7692   00662E  EF32  F033         	goto	l3206
  7693   006632                     l3202:
  7694                           
  7695                           ;./functions.h: 46:     {;./functions.h: 47:       LCD_Char(*msg);
  7696   006632  0060  F033  FFF6   	movff	LCD_String@msg,tblptrl
  7697   006638  0060  F037  FFF7   	movff	LCD_String@msg+1,tblptrh
  7698   00663E  0E00               	movlw	low (__smallconst shr (0+16))
  7699   006640  6EF8               	movwf	tblptru,c
  7700   006642  0E1F               	movlw	(high __ramtop+-1)
  7701   006644  64F7               	cpfsgt	tblptrh,c
  7702   006646  D003               	bra	u3557
  7703   006648  0008               	tblrd		*
  7704   00664A  50F5               	movf	tablat,w,c
  7705   00664C  D007               	bra	u3550
  7706   00664E                     u3557:
  7707   00664E  006F FFDB FFE1     	movff	tblptrl,fsr1l
  7708   006654  006F FFDF FFE2     	movff	tblptrh,fsr1h
  7709   00665A  50E7               	movf	indf1,w,c
  7710   00665C                     u3550:
  7711   00665C  EC8F  F035         	call	_LCD_Char
  7712   006660                     
  7713                           ;./functions.h: 48:       msg++;
  7714   006660  4A0C               	infsnz	LCD_String@msg^0,f,c
  7715   006662  2A0D               	incf	(LCD_String@msg+1)^0,f,c
  7716   006664                     l3206:
  7717                           
  7718                           ;./functions.h: 45:     while((*msg)!=0)
  7719   006664  0060  F033  FFF6   	movff	LCD_String@msg,tblptrl
  7720   00666A  0060  F037  FFF7   	movff	LCD_String@msg+1,tblptrh
  7721   006670  0E00               	movlw	low (__smallconst shr (0+16))
  7722   006672  6EF8               	movwf	tblptru,c
  7723   006674  0E1F               	movlw	(high __ramtop+-1)
  7724   006676  64F7               	cpfsgt	tblptrh,c
  7725   006678  D003               	bra	u3567
  7726   00667A  0008               	tblrd		*
  7727   00667C  50F5               	movf	tablat,w,c
  7728   00667E  D007               	bra	u3560
  7729   006680                     u3567:
  7730   006680  006F FFDB FFE1     	movff	tblptrl,fsr1l
  7731   006686  006F FFDF FFE2     	movff	tblptrh,fsr1h
  7732   00668C  50E7               	movf	indf1,w,c
  7733   00668E                     u3560:
  7734   00668E  0900               	iorlw	0
  7735   006690  A4D8               	btfss	status,2,c
  7736   006692  EF4D  F033         	goto	u3571
  7737   006696  EF4F  F033         	goto	u3570
  7738   00669A                     u3571:
  7739   00669A  EF19  F033         	goto	l3202
  7740   00669E                     u3570:
  7741   00669E  0012               	return		;funcret
  7742   0066A0                     __end_of_LCD_String:
  7743                           	callstack 0
  7744                           
  7745 ;; *************** function _LCD_Char *****************
  7746 ;; Defined at:
  7747 ;;		line 32 in file "./functions.h"
  7748 ;; Parameters:    Size  Location     Type
  7749 ;;  dat             1    wreg     unsigned char 
  7750 ;; Auto vars:     Size  Location     Type
  7751 ;;  dat             1   10[COMRAM] unsigned char 
  7752 ;; Return value:  Size  Location     Type
  7753 ;;                  1    wreg      void 
  7754 ;; Registers used:
  7755 ;;		wreg, status,2, status,0, cstack
  7756 ;; Tracked objects:
  7757 ;;		On entry : 0/0
  7758 ;;		On exit  : 0/0
  7759 ;;		Unchanged: 0/0
  7760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7762 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7764 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7765 ;;Total ram usage:        1 bytes
  7766 ;; Hardware stack levels used: 1
  7767 ;; Hardware stack levels required when called: 2
  7768 ;; This function calls:
  7769 ;;		_MSdelay
  7770 ;; This function is called by:
  7771 ;;		_LCD_String
  7772 ;; This function uses a non-reentrant model
  7773 ;;
  7774                           
  7775                           	psect	text27
  7776   006B1E                     __ptext27:
  7777                           	callstack 0
  7778   006B1E                     _LCD_Char:
  7779                           	callstack 26
  7780                           
  7781                           ;incstack = 0
  7782                           ;LCD_Char@dat stored from wreg
  7783   006B1E  6E0B               	movwf	LCD_Char@dat^0,c
  7784   006B20                     
  7785                           ;./functions.h: 32: void LCD_Char(char dat);./functions.h: 33: {;./functions.h: 34:     
      +                          LATB= dat;
  7786   006B20  0060  F02F  FFBB   	movff	LCD_Char@dat,16315	;volatile
  7787   006B26                     
  7788                           ;./functions.h: 35:     LATDbits.LATD0 = 1;
  7789   006B26  80BD               	bsf	189,0,c	;volatile
  7790   006B28                     
  7791                           ;./functions.h: 36:     LATDbits.LATD1=1;
  7792   006B28  82BD               	bsf	189,1,c	;volatile
  7793   006B2A                     
  7794                           ;./functions.h: 37:     __nop();
  7795   006B2A  0000               	nop	
  7796   006B2C                     
  7797                           ;./functions.h: 38:     LATDbits.LATD1=0;
  7798   006B2C  92BD               	bcf	189,1,c	;volatile
  7799   006B2E                     
  7800                           ;./functions.h: 39:     MSdelay(1);
  7801   006B2E  0E00               	movlw	0
  7802   006B30  6E06               	movwf	(MSdelay@val+1)^0,c
  7803   006B32  0E01               	movlw	1
  7804   006B34  6E05               	movwf	MSdelay@val^0,c
  7805   006B36  EC44  F034         	call	_MSdelay	;wreg free
  7806   006B3A  0012               	return		;funcret
  7807   006B3C                     __end_of_LCD_Char:
  7808                           	callstack 0
  7809                           
  7810 ;; *************** function _LCD_Init *****************
  7811 ;; Defined at:
  7812 ;;		line 64 in file "./init.h"
  7813 ;; Parameters:    Size  Location     Type
  7814 ;;		None
  7815 ;; Auto vars:     Size  Location     Type
  7816 ;;		None
  7817 ;; Return value:  Size  Location     Type
  7818 ;;                  1    wreg      void 
  7819 ;; Registers used:
  7820 ;;		wreg, status,2, status,0, cstack
  7821 ;; Tracked objects:
  7822 ;;		On entry : 0/0
  7823 ;;		On exit  : 0/0
  7824 ;;		Unchanged: 0/0
  7825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7829 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7830 ;;Total ram usage:        0 bytes
  7831 ;; Hardware stack levels used: 1
  7832 ;; Hardware stack levels required when called: 3
  7833 ;; This function calls:
  7834 ;;		_LCD_Command
  7835 ;;		_MSdelay
  7836 ;; This function is called by:
  7837 ;;		_main
  7838 ;; This function uses a non-reentrant model
  7839 ;;
  7840                           
  7841                           	psect	text28
  7842   006ACC                     __ptext28:
  7843                           	callstack 0
  7844   006ACC                     _LCD_Init:
  7845                           	callstack 27
  7846   006ACC                     
  7847                           ;./init.h: 65:     MSdelay(15);
  7848   006ACC  0E00               	movlw	0
  7849   006ACE  6E06               	movwf	(MSdelay@val+1)^0,c
  7850   006AD0  0E0F               	movlw	15
  7851   006AD2  6E05               	movwf	MSdelay@val^0,c
  7852   006AD4  EC44  F034         	call	_MSdelay	;wreg free
  7853   006AD8                     
  7854                           ;./init.h: 66:     TRISB = 0x00;
  7855   006AD8  6AC3               	clrf	195,c	;volatile
  7856   006ADA                     
  7857                           ;./init.h: 67:     TRISD = 0x00;
  7858   006ADA  6AC5               	clrf	197,c	;volatile
  7859                           
  7860                           ;./init.h: 68:     LCD_Command(0x01);
  7861   006ADC  0E01               	movlw	1
  7862   006ADE  EC9E  F035         	call	_LCD_Command
  7863                           
  7864                           ;./init.h: 69:     LCD_Command(0x38);
  7865   006AE2  0E38               	movlw	56
  7866   006AE4  EC9E  F035         	call	_LCD_Command
  7867                           
  7868                           ;./init.h: 70:     LCD_Command(0x0c);
  7869   006AE8  0E0C               	movlw	12
  7870   006AEA  EC9E  F035         	call	_LCD_Command
  7871                           
  7872                           ;./init.h: 71:     LCD_Command(0x06);
  7873   006AEE  0E06               	movlw	6
  7874   006AF0  EC9E  F035         	call	_LCD_Command
  7875   006AF4  0012               	return		;funcret
  7876   006AF6                     __end_of_LCD_Init:
  7877                           	callstack 0
  7878                           
  7879 ;; *************** function _LCD_Command *****************
  7880 ;; Defined at:
  7881 ;;		line 22 in file "./functions.h"
  7882 ;; Parameters:    Size  Location     Type
  7883 ;;  cmd             1    wreg     unsigned char 
  7884 ;; Auto vars:     Size  Location     Type
  7885 ;;  cmd             1   10[COMRAM] unsigned char 
  7886 ;; Return value:  Size  Location     Type
  7887 ;;                  1    wreg      void 
  7888 ;; Registers used:
  7889 ;;		wreg, status,2, status,0, cstack
  7890 ;; Tracked objects:
  7891 ;;		On entry : 0/0
  7892 ;;		On exit  : 0/0
  7893 ;;		Unchanged: 0/0
  7894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7896 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7898 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7899 ;;Total ram usage:        1 bytes
  7900 ;; Hardware stack levels used: 1
  7901 ;; Hardware stack levels required when called: 2
  7902 ;; This function calls:
  7903 ;;		_MSdelay
  7904 ;; This function is called by:
  7905 ;;		_LCD_Init
  7906 ;;		_LCD_String_xy
  7907 ;;		_LCD_Clear
  7908 ;; This function uses a non-reentrant model
  7909 ;;
  7910                           
  7911                           	psect	text29
  7912   006B3C                     __ptext29:
  7913                           	callstack 0
  7914   006B3C                     _LCD_Command:
  7915                           	callstack 27
  7916                           
  7917                           ;incstack = 0
  7918                           ;LCD_Command@cmd stored from wreg
  7919   006B3C  6E0B               	movwf	LCD_Command@cmd^0,c
  7920   006B3E                     
  7921                           ;./functions.h: 22: void LCD_Command(char cmd );./functions.h: 23: {;./functions.h: 24: 
      +                              LATB= cmd;
  7922   006B3E  0060  F02F  FFBB   	movff	LCD_Command@cmd,16315	;volatile
  7923   006B44                     
  7924                           ;./functions.h: 25:     LATDbits.LATD0 = 0;
  7925   006B44  90BD               	bcf	189,0,c	;volatile
  7926   006B46                     
  7927                           ;./functions.h: 26:     LATDbits.LATD1 = 1;
  7928   006B46  82BD               	bsf	189,1,c	;volatile
  7929   006B48                     
  7930                           ;./functions.h: 27:     __nop();
  7931   006B48  0000               	nop	
  7932   006B4A                     
  7933                           ;./functions.h: 28:     LATDbits.LATD1 = 0;
  7934   006B4A  92BD               	bcf	189,1,c	;volatile
  7935   006B4C                     
  7936                           ;./functions.h: 29:     MSdelay(3);
  7937   006B4C  0E00               	movlw	0
  7938   006B4E  6E06               	movwf	(MSdelay@val+1)^0,c
  7939   006B50  0E03               	movlw	3
  7940   006B52  6E05               	movwf	MSdelay@val^0,c
  7941   006B54  EC44  F034         	call	_MSdelay	;wreg free
  7942   006B58  0012               	return		;funcret
  7943   006B5A                     __end_of_LCD_Command:
  7944                           	callstack 0
  7945                           
  7946 ;; *************** function _MSdelay *****************
  7947 ;; Defined at:
  7948 ;;		line 69 in file "./functions.h"
  7949 ;; Parameters:    Size  Location     Type
  7950 ;;  val             2    4[COMRAM] unsigned int 
  7951 ;; Auto vars:     Size  Location     Type
  7952 ;;  j               2    8[COMRAM] unsigned int 
  7953 ;;  i               2    6[COMRAM] unsigned int 
  7954 ;; Return value:  Size  Location     Type
  7955 ;;                  1    wreg      void 
  7956 ;; Registers used:
  7957 ;;		wreg, status,2, status,0
  7958 ;; Tracked objects:
  7959 ;;		On entry : 0/0
  7960 ;;		On exit  : 0/0
  7961 ;;		Unchanged: 0/0
  7962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7963 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7964 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7966 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7967 ;;Total ram usage:        6 bytes
  7968 ;; Hardware stack levels used: 1
  7969 ;; Hardware stack levels required when called: 1
  7970 ;; This function calls:
  7971 ;;		Nothing
  7972 ;; This function is called by:
  7973 ;;		_LCD_Init
  7974 ;;		_LCD_Command
  7975 ;;		_LCD_Char
  7976 ;;		_main
  7977 ;; This function uses a non-reentrant model
  7978 ;;
  7979                           
  7980                           	psect	text30
  7981   006888                     __ptext30:
  7982                           	callstack 0
  7983   006888                     _MSdelay:
  7984                           	callstack 29
  7985   006888                     
  7986                           ;./functions.h: 69: void MSdelay(unsigned int val);./functions.h: 70: {;./functions.h: 7
      +                          1:      unsigned int i,j;;./functions.h: 72:         for(i=0;i<val;i++)
  7987   006888  0E00               	movlw	0
  7988   00688A  6E08               	movwf	(MSdelay@i+1)^0,c
  7989   00688C  0E00               	movlw	0
  7990   00688E  6E07               	movwf	MSdelay@i^0,c
  7991   006890  EF5D  F034         	goto	l2884
  7992   006894                     l2872:
  7993                           
  7994                           ;./functions.h: 73:             for(j=0;j<165;j++);
  7995   006894  0E00               	movlw	0
  7996   006896  6E0A               	movwf	(MSdelay@j+1)^0,c
  7997   006898  0E00               	movlw	0
  7998   00689A  6E09               	movwf	MSdelay@j^0,c
  7999   00689C                     l2878:
  8000   00689C  4A09               	infsnz	MSdelay@j^0,f,c
  8001   00689E  2A0A               	incf	(MSdelay@j+1)^0,f,c
  8002   0068A0  500A               	movf	(MSdelay@j+1)^0,w,c
  8003   0068A2  E109               	bnz	u3160
  8004   0068A4  0EA5               	movlw	165
  8005   0068A6  5C09               	subwf	MSdelay@j^0,w,c
  8006   0068A8  A0D8               	btfss	status,0,c
  8007   0068AA  EF59  F034         	goto	u3161
  8008   0068AE  EF5B  F034         	goto	u3160
  8009   0068B2                     u3161:
  8010   0068B2  EF4E  F034         	goto	l2878
  8011   0068B6                     u3160:
  8012   0068B6  4A07               	infsnz	MSdelay@i^0,f,c
  8013   0068B8  2A08               	incf	(MSdelay@i+1)^0,f,c
  8014   0068BA                     l2884:
  8015   0068BA  5005               	movf	MSdelay@val^0,w,c
  8016   0068BC  5C07               	subwf	MSdelay@i^0,w,c
  8017   0068BE  5006               	movf	(MSdelay@val+1)^0,w,c
  8018   0068C0  5808               	subwfb	(MSdelay@i+1)^0,w,c
  8019   0068C2  A0D8               	btfss	status,0,c
  8020   0068C4  EF66  F034         	goto	u3171
  8021   0068C8  EF68  F034         	goto	u3170
  8022   0068CC                     u3171:
  8023   0068CC  EF4A  F034         	goto	l2872
  8024   0068D0                     u3170:
  8025   0068D0  0012               	return		;funcret
  8026   0068D2                     __end_of_MSdelay:
  8027                           	callstack 0
  8028                           
  8029 ;; *************** function _INTERRUPT_Initialize *****************
  8030 ;; Defined at:
  8031 ;;		line 24 in file "./init.h"
  8032 ;; Parameters:    Size  Location     Type
  8033 ;;		None
  8034 ;; Auto vars:     Size  Location     Type
  8035 ;;		None
  8036 ;; Return value:  Size  Location     Type
  8037 ;;                  1    wreg      void 
  8038 ;; Registers used:
  8039 ;;		None
  8040 ;; Tracked objects:
  8041 ;;		On entry : 0/0
  8042 ;;		On exit  : 0/0
  8043 ;;		Unchanged: 0/0
  8044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8045 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8048 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8049 ;;Total ram usage:        0 bytes
  8050 ;; Hardware stack levels used: 1
  8051 ;; Hardware stack levels required when called: 1
  8052 ;; This function calls:
  8053 ;;		Nothing
  8054 ;; This function is called by:
  8055 ;;		_main
  8056 ;; This function uses a non-reentrant model
  8057 ;;
  8058                           
  8059                           	psect	text31
  8060   006B5A                     __ptext31:
  8061                           	callstack 0
  8062   006B5A                     _INTERRUPT_Initialize:
  8063                           	callstack 29
  8064   006B5A                     
  8065                           ;./init.h: 25: TRISCbits.TRISC2 = 1;
  8066   006B5A  84C4               	bsf	196,2,c	;volatile
  8067                           
  8068                           ;./init.h: 26: ANSELCbits.ANSELC2 = 0;
  8069   006B5C  013A               	movlb	58	; () banked
  8070   006B5E  9560               	bcf	96,2,b	;volatile
  8071                           
  8072                           ;./init.h: 27: IOCCNbits.IOCCN2 = 0;
  8073   006B60  9566               	bcf	102,2,b	;volatile
  8074                           
  8075                           ;./init.h: 28: IOCCPbits.IOCCP2 = 1;
  8076   006B62  8565               	bsf	101,2,b	;volatile
  8077                           
  8078                           ;./init.h: 31: IOCCFbits.IOCCF2 = 0;
  8079   006B64  9567               	bcf	103,2,b	;volatile
  8080                           
  8081                           ;./init.h: 32: PIR0bits.IOCIF = 0;
  8082   006B66  0139               	movlb	57	; () banked
  8083   006B68  9FA0               	bcf	160,7,b	;volatile
  8084                           
  8085                           ;./init.h: 33: PIE0bits.IOCIE = 1;
  8086   006B6A  8F90               	bsf	144,7,b	;volatile
  8087                           
  8088                           ;./init.h: 34: INTCON0bits.GIEL = 1;
  8089   006B6C  8CD2               	bsf	210,6,c	;volatile
  8090                           
  8091                           ;./init.h: 35: INTCON0bits.GIEH = 1;
  8092   006B6E  8ED2               	bsf	210,7,c	;volatile
  8093                           
  8094                           ;./init.h: 36: INTCON0bits.IPEN = 1;
  8095   006B70  8AD2               	bsf	210,5,c	;volatile
  8096   006B72                     
  8097                           ; BSR set to: 57
  8098   006B72  0012               	return		;funcret
  8099   006B74                     __end_of_INTERRUPT_Initialize:
  8100                           	callstack 0
  8101                           
  8102 ;; *************** function _ADC_Init *****************
  8103 ;; Defined at:
  8104 ;;		line 41 in file "./init.h"
  8105 ;; Parameters:    Size  Location     Type
  8106 ;;		None
  8107 ;; Auto vars:     Size  Location     Type
  8108 ;;		None
  8109 ;; Return value:  Size  Location     Type
  8110 ;;                  1    wreg      void 
  8111 ;; Registers used:
  8112 ;;		wreg, status,2
  8113 ;; Tracked objects:
  8114 ;;		On entry : 0/0
  8115 ;;		On exit  : 0/0
  8116 ;;		Unchanged: 0/0
  8117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8118 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8119 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8121 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8122 ;;Total ram usage:        0 bytes
  8123 ;; Hardware stack levels used: 1
  8124 ;; Hardware stack levels required when called: 1
  8125 ;; This function calls:
  8126 ;;		Nothing
  8127 ;; This function is called by:
  8128 ;;		_main
  8129 ;; This function uses a non-reentrant model
  8130 ;;
  8131                           
  8132                           	psect	text32
  8133   006AF6                     __ptext32:
  8134                           	callstack 0
  8135   006AF6                     _ADC_Init:
  8136                           	callstack 29
  8137   006AF6                     
  8138                           ;./init.h: 44:     ADCON0bits.FM = 1;
  8139   006AF6  013E               	movlb	62	; () banked
  8140   006AF8  51F8               	movf	248,w,b	;volatile
  8141   006AFA  0BF3               	andlw	-13
  8142   006AFC  0904               	iorlw	4
  8143   006AFE  6FF8               	movwf	248,b	;volatile
  8144   006B00                     
  8145                           ; BSR set to: 62
  8146                           ;./init.h: 45:     ADCON0bits.CS = 1;
  8147   006B00  89F8               	bsf	248,4,b	;volatile
  8148   006B02                     
  8149                           ; BSR set to: 62
  8150                           ;./init.h: 47:     TRISAbits.TRISA0 = 1;
  8151   006B02  80C2               	bsf	194,0,c	;volatile
  8152   006B04                     
  8153                           ; BSR set to: 62
  8154                           ;./init.h: 48:     ANSELAbits.ANSELA0 = 1;
  8155   006B04  013A               	movlb	58	; () banked
  8156   006B06  8140               	bsf	64,0,b	;volatile
  8157   006B08                     
  8158                           ; BSR set to: 58
  8159                           ;./init.h: 50:     ADPCH = 0x00;
  8160   006B08  013E               	movlb	62	; () banked
  8161   006B0A  6BF1               	clrf	241,b	;volatile
  8162   006B0C                     
  8163                           ; BSR set to: 62
  8164                           ;./init.h: 51:     ADCLK = 0x00;
  8165   006B0C  6BFF               	clrf	255,b	;volatile
  8166   006B0E                     
  8167                           ; BSR set to: 62
  8168                           ;./init.h: 53:     ADRESH = 0x00;
  8169   006B0E  6BF0               	clrf	240,b	;volatile
  8170   006B10                     
  8171                           ; BSR set to: 62
  8172                           ;./init.h: 54:     ADRESL = 0x00;
  8173   006B10  6BEF               	clrf	239,b	;volatile
  8174   006B12                     
  8175                           ; BSR set to: 62
  8176                           ;./init.h: 56:     ADPREL = 0x00;
  8177   006B12  6BF6               	clrf	246,b	;volatile
  8178   006B14                     
  8179                           ; BSR set to: 62
  8180                           ;./init.h: 57:     ADPREH = 0x00;
  8181   006B14  6BF7               	clrf	247,b	;volatile
  8182   006B16                     
  8183                           ; BSR set to: 62
  8184                           ;./init.h: 59:     ADACQL = 0x00;
  8185   006B16  6BF3               	clrf	243,b	;volatile
  8186   006B18                     
  8187                           ; BSR set to: 62
  8188                           ;./init.h: 60:     ADACQH = 0x00;
  8189   006B18  6BF4               	clrf	244,b	;volatile
  8190   006B1A                     
  8191                           ; BSR set to: 62
  8192                           ;./init.h: 62:     ADCON0bits.ON = 1;
  8193   006B1A  8FF8               	bsf	248,7,b	;volatile
  8194   006B1C                     
  8195                           ; BSR set to: 62
  8196   006B1C  0012               	return		;funcret
  8197   006B1E                     __end_of_ADC_Init:
  8198                           	callstack 0
  8199                           
  8200 ;; *************** function _IOC_ISR *****************
  8201 ;; Defined at:
  8202 ;;		line 76 in file "./functions.h"
  8203 ;; Parameters:    Size  Location     Type
  8204 ;;		None
  8205 ;; Auto vars:     Size  Location     Type
  8206 ;;  k               2    2[COMRAM] int 
  8207 ;; Return value:  Size  Location     Type
  8208 ;;                  1    wreg      void 
  8209 ;; Registers used:
  8210 ;;		wreg, status,2, status,0
  8211 ;; Tracked objects:
  8212 ;;		On entry : 0/0
  8213 ;;		On exit  : 0/0
  8214 ;;		Unchanged: 0/0
  8215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8217 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8218 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8219 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8220 ;;Total ram usage:        4 bytes
  8221 ;; Hardware stack levels used: 1
  8222 ;; This function calls:
  8223 ;;		Nothing
  8224 ;; This function is called by:
  8225 ;;		Interrupt level 2
  8226 ;; This function uses a non-reentrant model
  8227 ;;
  8228                           
  8229                           	psect	text33
  8230   0066A0                     __ptext33:
  8231                           	callstack 0
  8232   0066A0                     _IOC_ISR:
  8233                           	callstack 22
  8234   0066A0                     
  8235                           ;./functions.h: 77:      if (IOCCFbits.IOCCF2 == 1) {
  8236   0066A0  013A               	movlb	58	; () banked
  8237   0066A2  A567               	btfss	103,2,b	;volatile
  8238   0066A4  EF56  F033         	goto	i2u181_41
  8239   0066A8  EF58  F033         	goto	i2u181_40
  8240   0066AC                     i2u181_41:
  8241   0066AC  EF87  F033         	goto	i2l109
  8242   0066B0                     i2u181_40:
  8243   0066B0                     
  8244                           ; BSR set to: 58
  8245                           ;./functions.h: 78:         for (int k = 0; k < 10; k++) {
  8246   0066B0  0E00               	movlw	0
  8247   0066B2  6E04               	movwf	(IOC_ISR@k+1)^0,c
  8248   0066B4  0E00               	movlw	0
  8249   0066B6  6E03               	movwf	IOC_ISR@k^0,c
  8250   0066B8                     i2l107:
  8251                           
  8252                           ;./functions.h: 79:             PORTDbits.RD3 = 0;
  8253   0066B8  96CD               	bcf	205,3,c	;volatile
  8254   0066BA                     
  8255                           ;./functions.h: 80:             _delay((unsigned long)((500)*(4000000/4000.0)));
  8256   0066BA  0E03               	movlw	3
  8257   0066BC  6E02               	movwf	(??_IOC_ISR+1)^0,c
  8258   0066BE  0E8A               	movlw	138
  8259   0066C0  6E01               	movwf	??_IOC_ISR^0,c
  8260   0066C2  0E56               	movlw	86
  8261   0066C4                     i2u552_47:
  8262   0066C4  2EE8               	decfsz	wreg,f,c
  8263   0066C6  D7FE               	bra	i2u552_47
  8264   0066C8  2E01               	decfsz	??_IOC_ISR^0,f,c
  8265   0066CA  D7FC               	bra	i2u552_47
  8266   0066CC  2E02               	decfsz	(??_IOC_ISR+1)^0,f,c
  8267   0066CE  D7FA               	bra	i2u552_47
  8268   0066D0                     
  8269                           ;./functions.h: 81:             PORTDbits.RD3 = 1;
  8270   0066D0  86CD               	bsf	205,3,c	;volatile
  8271                           
  8272                           ;./functions.h: 82:             _delay((unsigned long)((500)*(4000000/4000.0)));
  8273   0066D2  0E03               	movlw	3
  8274   0066D4  6E02               	movwf	(??_IOC_ISR+1)^0,c
  8275   0066D6  0E8A               	movlw	138
  8276   0066D8  6E01               	movwf	??_IOC_ISR^0,c
  8277   0066DA  0E56               	movlw	86
  8278   0066DC                     i2u553_47:
  8279   0066DC  2EE8               	decfsz	wreg,f,c
  8280   0066DE  D7FE               	bra	i2u553_47
  8281   0066E0  2E01               	decfsz	??_IOC_ISR^0,f,c
  8282   0066E2  D7FC               	bra	i2u553_47
  8283   0066E4  2E02               	decfsz	(??_IOC_ISR+1)^0,f,c
  8284   0066E6  D7FA               	bra	i2u553_47
  8285   0066E8                     
  8286                           ;./functions.h: 83:         }
  8287   0066E8  4A03               	infsnz	IOC_ISR@k^0,f,c
  8288   0066EA  2A04               	incf	(IOC_ISR@k+1)^0,f,c
  8289   0066EC  BE04               	btfsc	(IOC_ISR@k+1)^0,7,c
  8290   0066EE  EF82  F033         	goto	i2u182_41
  8291   0066F2  5004               	movf	(IOC_ISR@k+1)^0,w,c
  8292   0066F4  E109               	bnz	i2u182_40
  8293   0066F6  0E0A               	movlw	10
  8294   0066F8  5C03               	subwf	IOC_ISR@k^0,w,c
  8295   0066FA  A0D8               	btfss	status,0,c
  8296   0066FC  EF82  F033         	goto	i2u182_41
  8297   006700  EF84  F033         	goto	i2u182_40
  8298   006704                     i2u182_41:
  8299   006704  EF5C  F033         	goto	i2l107
  8300   006708                     i2u182_40:
  8301   006708                     
  8302                           ;./functions.h: 84:         IOCCFbits.IOCCF2 = 0;
  8303   006708  013A               	movlb	58	; () banked
  8304   00670A  9567               	bcf	103,2,b	;volatile
  8305                           
  8306                           ;./functions.h: 85:         PORTDbits.RD3 = 0;
  8307   00670C  96CD               	bcf	205,3,c	;volatile
  8308   00670E                     i2l109:
  8309                           
  8310                           ; BSR set to: 58
  8311   00670E  0011               	retfie		f
  8312   006710                     __end_of_IOC_ISR:
  8313                           	callstack 0
  8314                           
  8315                           ;
  8316                           ; H/W Interrupt Vector Table @ 0x4008
  8317                           ;
  8318                           
  8319                           	psect	ivt0x4008
  8320   004008                     __pivt0x4008:
  8321                           	callstack 0
  8322   004008                     ivt0x4008_base:
  8323                           	callstack 0
  8324                           
  8325                           ; Vector 0 : SWINT
  8326   004008  19A8               	dw	_IOC_ISR shr (0+2)
  8327                           
  8328                           ; Vector 1 : HLVD
  8329   00400A  19A8               	dw	_IOC_ISR shr (0+2)
  8330                           
  8331                           ; Vector 2 : OSF
  8332   00400C  19A8               	dw	_IOC_ISR shr (0+2)
  8333                           
  8334                           ; Vector 3 : CSW
  8335   00400E  19A8               	dw	_IOC_ISR shr (0+2)
  8336                           
  8337                           ; Vector 4 : NVM
  8338   004010  19A8               	dw	_IOC_ISR shr (0+2)
  8339                           
  8340                           ; Vector 5 : SCAN
  8341   004012  19A8               	dw	_IOC_ISR shr (0+2)
  8342                           
  8343                           ; Vector 6 : CRC
  8344   004014  19A8               	dw	_IOC_ISR shr (0+2)
  8345                           
  8346                           ; Vector 7 : IOC
  8347   004016  19A8               	dw	_IOC_ISR shr (0+2)
  8348                           
  8349                           ; Vector 8 : INT0
  8350   004018  19A8               	dw	_IOC_ISR shr (0+2)
  8351                           
  8352                           ; Vector 9 : ZCD
  8353   00401A  19A8               	dw	_IOC_ISR shr (0+2)
  8354                           
  8355                           ; Vector 10 : AD
  8356   00401C  19A8               	dw	_IOC_ISR shr (0+2)
  8357                           
  8358                           ; Vector 11 : ADT
  8359   00401E  19A8               	dw	_IOC_ISR shr (0+2)
  8360                           
  8361                           ; Vector 12 : CMP1
  8362   004020  19A8               	dw	_IOC_ISR shr (0+2)
  8363                           
  8364                           ; Vector 13 : SMT1
  8365   004022  19A8               	dw	_IOC_ISR shr (0+2)
  8366                           
  8367                           ; Vector 14 : SMT1PRA
  8368   004024  19A8               	dw	_IOC_ISR shr (0+2)
  8369                           
  8370                           ; Vector 15 : SMT1PRW
  8371   004026  19A8               	dw	_IOC_ISR shr (0+2)
  8372                           
  8373                           ; Vector 16 : DMA1SCNT
  8374   004028  19A8               	dw	_IOC_ISR shr (0+2)
  8375                           
  8376                           ; Vector 17 : DMA1DCNT
  8377   00402A  19A8               	dw	_IOC_ISR shr (0+2)
  8378                           
  8379                           ; Vector 18 : DMA1OR
  8380   00402C  19A8               	dw	_IOC_ISR shr (0+2)
  8381                           
  8382                           ; Vector 19 : DMA1A
  8383   00402E  19A8               	dw	_IOC_ISR shr (0+2)
  8384                           
  8385                           ; Vector 20 : SPI1RX
  8386   004030  19A8               	dw	_IOC_ISR shr (0+2)
  8387                           
  8388                           ; Vector 21 : SPI1TX
  8389   004032  19A8               	dw	_IOC_ISR shr (0+2)
  8390                           
  8391                           ; Vector 22 : SPI1
  8392   004034  19A8               	dw	_IOC_ISR shr (0+2)
  8393                           
  8394                           ; Vector 23 : I2C1RX
  8395   004036  19A8               	dw	_IOC_ISR shr (0+2)
  8396                           
  8397                           ; Vector 24 : I2C1TX
  8398   004038  19A8               	dw	_IOC_ISR shr (0+2)
  8399                           
  8400                           ; Vector 25 : I2C1
  8401   00403A  19A8               	dw	_IOC_ISR shr (0+2)
  8402                           
  8403                           ; Vector 26 : I2C1E
  8404   00403C  19A8               	dw	_IOC_ISR shr (0+2)
  8405                           
  8406                           ; Vector 27 : U1RX
  8407   00403E  19A8               	dw	_IOC_ISR shr (0+2)
  8408                           
  8409                           ; Vector 28 : U1TX
  8410   004040  19A8               	dw	_IOC_ISR shr (0+2)
  8411                           
  8412                           ; Vector 29 : U1E
  8413   004042  19A8               	dw	_IOC_ISR shr (0+2)
  8414                           
  8415                           ; Vector 30 : U1
  8416   004044  19A8               	dw	_IOC_ISR shr (0+2)
  8417                           
  8418                           ; Vector 31 : TMR0
  8419   004046  19A8               	dw	_IOC_ISR shr (0+2)
  8420                           
  8421                           ; Vector 32 : TMR1
  8422   004048  19A8               	dw	_IOC_ISR shr (0+2)
  8423                           
  8424                           ; Vector 33 : TMR1G
  8425   00404A  19A8               	dw	_IOC_ISR shr (0+2)
  8426                           
  8427                           ; Vector 34 : TMR2
  8428   00404C  19A8               	dw	_IOC_ISR shr (0+2)
  8429                           
  8430                           ; Vector 35 : CCP1
  8431   00404E  19A8               	dw	_IOC_ISR shr (0+2)
  8432                           
  8433                           ; Vector 36 : Undefined
  8434   004050  102B               	dw	ivt0x4008_undefint shr (0+2)
  8435                           
  8436                           ; Vector 37 : NCO1
  8437   004052  19A8               	dw	_IOC_ISR shr (0+2)
  8438                           
  8439                           ; Vector 38 : CWG1
  8440   004054  19A8               	dw	_IOC_ISR shr (0+2)
  8441                           
  8442                           ; Vector 39 : CLC1
  8443   004056  19A8               	dw	_IOC_ISR shr (0+2)
  8444                           
  8445                           ; Vector 40 : INT1
  8446   004058  19A8               	dw	_IOC_ISR shr (0+2)
  8447                           
  8448                           ; Vector 41 : CMP2
  8449   00405A  19A8               	dw	_IOC_ISR shr (0+2)
  8450                           
  8451                           ; Vector 42 : DMA2SCNT
  8452   00405C  19A8               	dw	_IOC_ISR shr (0+2)
  8453                           
  8454                           ; Vector 43 : DMA2DCNT
  8455   00405E  19A8               	dw	_IOC_ISR shr (0+2)
  8456                           
  8457                           ; Vector 44 : DMA2OR
  8458   004060  19A8               	dw	_IOC_ISR shr (0+2)
  8459                           
  8460                           ; Vector 45 : DMA2A
  8461   004062  19A8               	dw	_IOC_ISR shr (0+2)
  8462                           
  8463                           ; Vector 46 : I2C2RX
  8464   004064  19A8               	dw	_IOC_ISR shr (0+2)
  8465                           
  8466                           ; Vector 47 : I2C2TX
  8467   004066  19A8               	dw	_IOC_ISR shr (0+2)
  8468                           
  8469                           ; Vector 48 : I2C2
  8470   004068  19A8               	dw	_IOC_ISR shr (0+2)
  8471                           
  8472                           ; Vector 49 : I2C2E
  8473   00406A  19A8               	dw	_IOC_ISR shr (0+2)
  8474                           
  8475                           ; Vector 50 : U2RX
  8476   00406C  19A8               	dw	_IOC_ISR shr (0+2)
  8477                           
  8478                           ; Vector 51 : U2TX
  8479   00406E  19A8               	dw	_IOC_ISR shr (0+2)
  8480                           
  8481                           ; Vector 52 : U2E
  8482   004070  19A8               	dw	_IOC_ISR shr (0+2)
  8483                           
  8484                           ; Vector 53 : U2
  8485   004072  19A8               	dw	_IOC_ISR shr (0+2)
  8486                           
  8487                           ; Vector 54 : TMR3
  8488   004074  19A8               	dw	_IOC_ISR shr (0+2)
  8489                           
  8490                           ; Vector 55 : TMR3G
  8491   004076  19A8               	dw	_IOC_ISR shr (0+2)
  8492                           
  8493                           ; Vector 56 : TMR4
  8494   004078  19A8               	dw	_IOC_ISR shr (0+2)
  8495                           
  8496                           ; Vector 57 : CCP2
  8497   00407A  19A8               	dw	_IOC_ISR shr (0+2)
  8498                           
  8499                           ; Vector 58 : Undefined
  8500   00407C  102B               	dw	ivt0x4008_undefint shr (0+2)
  8501                           
  8502                           ; Vector 59 : CWG2
  8503   00407E  19A8               	dw	_IOC_ISR shr (0+2)
  8504                           
  8505                           ; Vector 60 : CLC2
  8506   004080  19A8               	dw	_IOC_ISR shr (0+2)
  8507                           
  8508                           ; Vector 61 : INT2
  8509   004082  19A8               	dw	_IOC_ISR shr (0+2)
  8510                           
  8511                           ; Vector 62 : Undefined
  8512   004084  102B               	dw	ivt0x4008_undefint shr (0+2)
  8513                           
  8514                           ; Vector 63 : Undefined
  8515   004086  102B               	dw	ivt0x4008_undefint shr (0+2)
  8516                           
  8517                           ; Vector 64 : Undefined
  8518   004088  102B               	dw	ivt0x4008_undefint shr (0+2)
  8519                           
  8520                           ; Vector 65 : Undefined
  8521   00408A  102B               	dw	ivt0x4008_undefint shr (0+2)
  8522                           
  8523                           ; Vector 66 : Undefined
  8524   00408C  102B               	dw	ivt0x4008_undefint shr (0+2)
  8525                           
  8526                           ; Vector 67 : Undefined
  8527   00408E  102B               	dw	ivt0x4008_undefint shr (0+2)
  8528                           
  8529                           ; Vector 68 : Undefined
  8530   004090  102B               	dw	ivt0x4008_undefint shr (0+2)
  8531                           
  8532                           ; Vector 69 : Undefined
  8533   004092  102B               	dw	ivt0x4008_undefint shr (0+2)
  8534                           
  8535                           ; Vector 70 : TMR5
  8536   004094  19A8               	dw	_IOC_ISR shr (0+2)
  8537                           
  8538                           ; Vector 71 : TMR5G
  8539   004096  19A8               	dw	_IOC_ISR shr (0+2)
  8540                           
  8541                           ; Vector 72 : TMR6
  8542   004098  19A8               	dw	_IOC_ISR shr (0+2)
  8543                           
  8544                           ; Vector 73 : CCP3
  8545   00409A  19A8               	dw	_IOC_ISR shr (0+2)
  8546                           
  8547                           ; Vector 74 : CWG3
  8548   00409C  19A8               	dw	_IOC_ISR shr (0+2)
  8549                           
  8550                           ; Vector 75 : CLC3
  8551   00409E  19A8               	dw	_IOC_ISR shr (0+2)
  8552                           
  8553                           ; Vector 76 : Undefined
  8554   0040A0  102B               	dw	ivt0x4008_undefint shr (0+2)
  8555                           
  8556                           ; Vector 77 : Undefined
  8557   0040A2  102B               	dw	ivt0x4008_undefint shr (0+2)
  8558                           
  8559                           ; Vector 78 : Undefined
  8560   0040A4  102B               	dw	ivt0x4008_undefint shr (0+2)
  8561                           
  8562                           ; Vector 79 : Undefined
  8563   0040A6  102B               	dw	ivt0x4008_undefint shr (0+2)
  8564                           
  8565                           ; Vector 80 : CCP4
  8566   0040A8  19A8               	dw	_IOC_ISR shr (0+2)
  8567                           
  8568                           ; Vector 81 : CLC4
  8569   0040AA  19A8               	dw	_IOC_ISR shr (0+2)
  8570   0040AC                     ivt0x4008_undefint:
  8571                           	callstack 0
  8572   0040AC  00FF               	reset	
  8573                           
  8574                           	psect	rparam
  8575   000001                     ___rparam_used  equ	1
  8576   000000                     ___param_bank   equ	0
  8577   000000                     __Lparam        equ	__Lrparam
  8578   000000                     __Hparam        equ	__Hrparam
  8579                           
  8580                           	psect	config
  8581                           
  8582                           ;Config register CONFIG1L @ 0x300000
  8583                           ;	External Oscillator Selection
  8584                           ;	FEXTOSC = LP, LP (crystal oscillator) optimized for 32.768 kHz; PFM set to low power
  8585                           ;	Reset Oscillator Selection
  8586                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
  8587   300000                     	org	3145728
  8588   300000  F8                 	db	248
  8589                           
  8590                           ;Config register CONFIG1H @ 0x300001
  8591                           ;	Clock out Enable bit
  8592                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  8593                           ;	PRLOCKED One-Way Set Enable bit
  8594                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
  8595                           ;	Clock Switch Enable bit
  8596                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  8597                           ;	Fail-Safe Clock Monitor Enable bit
  8598                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  8599   300001                     	org	3145729
  8600   300001  FF                 	db	255
  8601                           
  8602                           ;Config register CONFIG2L @ 0x300002
  8603                           ;	MCLR Enable bit
  8604                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  8605                           ;	Power-up timer selection bits
  8606                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  8607                           ;	Multi-vector enable bit
  8608                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
  8609                           ;	IVTLOCK bit One-way set enable bit
  8610                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
  8611                           ;	Low Power BOR Enable bit
  8612                           ;	LPBOREN = OFF, ULPBOR disabled
  8613                           ;	Brown-out Reset Enable bits
  8614                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
  8615   300002                     	org	3145730
  8616   300002  FF                 	db	255
  8617                           
  8618                           ;Config register CONFIG2H @ 0x300003
  8619                           ;	Brown-out Reset Voltage Selection bits
  8620                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
  8621                           ;	ZCD Disable bit
  8622                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  8623                           ;	PPSLOCK bit One-Way Set Enable bit
  8624                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
  8625                           ;	Stack Full/Underflow Reset Enable bit
  8626                           ;	STVREN = ON, Stack full/underflow will cause Reset
  8627                           ;	Debugger Enable bit
  8628                           ;	DEBUG = OFF, Background debugger disabled
  8629                           ;	Extended Instruction Set Enable bit
  8630                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  8631   300003                     	org	3145731
  8632   300003  FF                 	db	255
  8633                           
  8634                           ;Config register CONFIG3L @ 0x300004
  8635                           ;	WDT Period selection bits
  8636                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  8637                           ;	WDT operating mode
  8638                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  8639   300004                     	org	3145732
  8640   300004  9F                 	db	159
  8641                           
  8642                           ;Config register CONFIG3H @ 0x300005
  8643                           ;	WDT Window Select bits
  8644                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  8645                           ;	WDT input clock selector
  8646                           ;	WDTCCS = SC, Software Control
  8647   300005                     	org	3145733
  8648   300005  FF                 	db	255
  8649                           
  8650                           ;Config register CONFIG4L @ 0x300006
  8651                           ;	Boot Block Size selection bits
  8652                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  8653                           ;	Boot Block enable bit
  8654                           ;	BBEN = OFF, Boot block disabled
  8655                           ;	Storage Area Flash enable bit
  8656                           ;	SAFEN = OFF, SAF disabled
  8657                           ;	Application Block write protection bit
  8658                           ;	WRTAPP = OFF, Application Block not write protected
  8659   300006                     	org	3145734
  8660   300006  FF                 	db	255
  8661                           
  8662                           ;Config register CONFIG4H @ 0x300007
  8663                           ;	Boot Block Write Protection bit
  8664                           ;	WRTB = OFF, Boot Block not write-protected
  8665                           ;	Configuration Register Write Protection bit
  8666                           ;	WRTC = OFF, Configuration registers not write-protected
  8667                           ;	Data EEPROM Write Protection bit
  8668                           ;	WRTD = OFF, Data EEPROM not write-protected
  8669                           ;	SAF Write protection bit
  8670                           ;	WRTSAF = OFF, SAF not Write Protected
  8671                           ;	Low Voltage Programming Enable bit
  8672                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
  8673   300007                     	org	3145735
  8674   300007  FF                 	db	255
  8675                           
  8676                           ;Config register CONFIG5L @ 0x300008
  8677                           ;	PFM and Data EEPROM Code Protection bit
  8678                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  8679   300008                     	org	3145736
  8680   300008  FF                 	db	255
  8681                           
  8682                           ;Config register CONFIG5H @ 0x300009
  8683                           ;	unspecified, using default values
  8684   300009                     	org	3145737
  8685   300009  FF                 	db	255
  8686                           tosu	equ	0x3FFF
  8687                           tosh	equ	0x3FFE
  8688                           tosl	equ	0x3FFD
  8689                           stkptr	equ	0x3FFC
  8690                           pclatu	equ	0x3FFB
  8691                           pclath	equ	0x3FFA
  8692                           pcl	equ	0x3FF9
  8693                           tblptru	equ	0x3FF8
  8694                           tblptrh	equ	0x3FF7
  8695                           tblptrl	equ	0x3FF6
  8696                           tablat	equ	0x3FF5
  8697                           prodh	equ	0x3FF4
  8698                           prodl	equ	0x3FF3
  8699                           indf0	equ	0x3FEF
  8700                           postinc0	equ	0x3FEE
  8701                           postdec0	equ	0x3FED
  8702                           preinc0	equ	0x3FEC
  8703                           plusw0	equ	0x3FEB
  8704                           fsr0h	equ	0x3FEA
  8705                           fsr0l	equ	0x3FE9
  8706                           wreg	equ	0x3FE8
  8707                           indf1	equ	0x3FE7
  8708                           postinc1	equ	0x3FE6
  8709                           postdec1	equ	0x3FE5
  8710                           preinc1	equ	0x3FE4
  8711                           plusw1	equ	0x3FE3
  8712                           fsr1h	equ	0x3FE2
  8713                           fsr1l	equ	0x3FE1
  8714                           bsr	equ	0x3FE0
  8715                           indf2	equ	0x3FDF
  8716                           postinc2	equ	0x3FDE
  8717                           postdec2	equ	0x3FDD
  8718                           preinc2	equ	0x3FDC
  8719                           plusw2	equ	0x3FDB
  8720                           fsr2h	equ	0x3FDA
  8721                           fsr2l	equ	0x3FD9
  8722                           status	equ	0x3FD8

Data Sizes:
    Strings     48
    Constant    0
    Data        0
    BSS         117
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     73      84
    BANK0           160     68      94
    BANK1           256      0      80
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    efgtoa@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[11]), 

    f$.$buffer	PTR unsigned char  size(1) Largest target is 10
		 -> data(BANK0[10]), 

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(1) Largest target is 10
		 -> data(BANK0[10]), 

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[11]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    LCD_String@msg	PTR const unsigned char  size(2) Largest target is 17
		 -> data(BANK0[10]), STR_3(CODE[17]), 

    LCD_String_xy@msg	PTR const unsigned char  size(2) Largest target is 17
		 -> data(BANK0[10]), STR_3(CODE[17]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[11]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    S989$buffer	PTR unsigned char  size(1) Largest target is 10
		 -> data(BANK0[10]), 

    S989$source	PTR const unsigned char  size(2) Largest target is 0

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sp__strcat	PTR unsigned char  size(1) Largest target is 10
		 -> data(BANK0[10]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 10
		 -> data(BANK0[10]), 

    strcat@dest	PTR unsigned char  size(1) Largest target is 10
		 -> data(BANK0[10]), 

    strcat@src	PTR const unsigned char  size(1) Largest target is 18
		 -> STR_2(CODE[18]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(1) Largest target is 4
		 -> STR_4(CODE[4]), STR_7(CODE[4]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[11]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___flge
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___flmul
    ___flmul->___xxtofl
    ___flge->___flmul
    _LCD_String_xy->_LCD_String
    _LCD_String->_LCD_Char
    _LCD_Char->_MSdelay
    _LCD_Init->_LCD_Command
    _LCD_Command->_MSdelay

Critical Paths under _IOC_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _IOC_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _IOC_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _IOC_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _IOC_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _IOC_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _IOC_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _IOC_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _IOC_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _IOC_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _IOC_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _IOC_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _IOC_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _IOC_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _IOC_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _IOC_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _IOC_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _IOC_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _IOC_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _IOC_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _IOC_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _IOC_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _IOC_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _IOC_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _IOC_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _IOC_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _IOC_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _IOC_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _IOC_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _IOC_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _IOC_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _IOC_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _IOC_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   22040
                                             71 COMRAM     2     2      0
                           _ADC_Init
               _INTERRUPT_Initialize
                           _LCD_Init
                      _LCD_String_xy
                            _MSdelay
                             ___flge
                            ___flmul
                           ___xxtofl
                            _sprintf
                             _strcat
 ---------------------------------------------------------------------------------
 (1) _strcat                                               4     2      2     122
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             20    14      6   18201
                                             50 BANK0     18    12      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             4     1      3   17877
                                             70 COMRAM     1     1      0
                                             47 BANK0      3     0      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           11     8      3   17650
                                             63 COMRAM     7     7      0
                                             44 BANK0      3     0      3
                             _efgtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (4) _read_prec_or_width                                   7     5      2     266
                                              4 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              53    47      6   16306
                                             55 COMRAM     8     2      6
                                              0 BANK0     44    44      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               6     3      3     115
                                              4 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 (5) _pad                                                  8     3      5    1038
                                             18 COMRAM     8     3      5
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                6     3      3     481
                                             12 COMRAM     6     3      3
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     335
                                              4 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              11     5      6     217
                                              4 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _labs                                                 8     4      4     102
                                              4 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     495
                                             29 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     201
                                              4 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     346
                                              4 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    3031
                                             43 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    2954
                                              4 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4      68
                                              4 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    2283
                                             18 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     338
                                             43 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     142
                                              4 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    1713
                                              4 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     337
                                              4 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) _LCD_String_xy                                        5     2      3     442
                                             13 COMRAM     5     2      3
                        _LCD_Command
                         _LCD_String
 ---------------------------------------------------------------------------------
 (2) _LCD_String                                           2     0      2     171
                                             11 COMRAM     2     0      2
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (3) _LCD_Char                                             1     1      0     125
                                             10 COMRAM     1     1      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             0     0      0     221
                        _LCD_Command
                            _MSdelay
 ---------------------------------------------------------------------------------
 (2) _LCD_Command                                          1     1      0     125
                                             10 COMRAM     1     1      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (1) _MSdelay                                              6     4      2      96
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _IOC_ISR                                              4     4      0      30
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _INTERRUPT_Initialize
   _LCD_Init
     _LCD_Command
       _MSdelay
     _MSdelay
   _LCD_String_xy
     _LCD_Command
     _LCD_String
       _LCD_Char
         _MSdelay
   _MSdelay
   ___flge
     ___flmul (ARG)
       ___xxtofl (ARG)
   ___flmul
   ___xxtofl
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _efgtoa
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _labs
           _memcpy
           _pad
             _fputc
               _putch
             _fputs
               _fputc
           _strcpy
         _fputc
         _read_prec_or_width
   _strcat

 _IOC_ISR (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            8191      0       0      0.0%
BITBIGSFRlh       1169      0       0      0.0%
BITBIGSFRlll       400      0       0      0.0%
BITBIGSFRh         263      0       0      0.0%
BITBANK31          256      0       0      0.0%
BANK31             256      0       0      0.0%
BITBANK30          256      0       0      0.0%
BANK30             256      0       0      0.0%
BITBANK29          256      0       0      0.0%
BANK29             256      0       0      0.0%
BITBANK28          256      0       0      0.0%
BANK28             256      0       0      0.0%
BITBANK27          256      0       0      0.0%
BANK27             256      0       0      0.0%
BITBANK26          256      0       0      0.0%
BANK26             256      0       0      0.0%
BITBANK25          256      0       0      0.0%
BANK25             256      0       0      0.0%
BITBANK24          256      0       0      0.0%
BANK24             256      0       0      0.0%
BITBANK23          256      0       0      0.0%
BANK23             256      0       0      0.0%
BITBANK22          256      0       0      0.0%
BANK22             256      0       0      0.0%
BITBANK21          256      0       0      0.0%
BANK21             256      0       0      0.0%
BITBANK20          256      0       0      0.0%
BANK20             256      0       0      0.0%
BITBANK19          256      0       0      0.0%
BANK19             256      0       0      0.0%
BITBANK18          256      0       0      0.0%
BANK18             256      0       0      0.0%
BITBANK17          256      0       0      0.0%
BANK17             256      0       0      0.0%
BITBANK16          256      0       0      0.0%
BANK16             256      0       0      0.0%
BITBANK15          256      0       0      0.0%
BANK15             256      0       0      0.0%
BITBANK14          256      0       0      0.0%
BANK14             256      0       0      0.0%
BITBANK13          256      0       0      0.0%
BANK13             256      0       0      0.0%
BITBANK12          256      0       0      0.0%
BANK12             256      0       0      0.0%
BITBANK11          256      0       0      0.0%
BANK11             256      0       0      0.0%
BITBANK10          256      0       0      0.0%
BANK10             256      0       0      0.0%
BITBANK9           256      0       0      0.0%
BANK9              256      0       0      0.0%
BITBANK8           256      0       0      0.0%
BANK8              256      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0      80     31.2%
BITBIGSFRllh       213      0       0      0.0%
BITBANK0           160      0       0      0.0%
BANK0              160     68      94     58.8%
BITCOMRAM           95      0       0      0.0%
COMRAM              95     73      84     88.4%
STACK                0      0       0      0.0%
DATA                 0      0     257      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Mon Apr 28 16:35:28 2025

                ___fldiv@aexp 001D                  ___fldiv@bexp 001C                  ___fldiv@sign 0015  
                ?_LCD_Command 0001                            l70 6B1C                            l73 6AF4  
                          l82 6B3A                            l67 6B72                            l93 6A24  
                          l79 6B58                            l88 669E                   ?_LCD_String 000C  
                         l101 68D0                           l125 53A8                           l400 662C  
                         l411 6320                           l406 62DA                           l415 6A94  
                         l702 4F10                           l438 621C                           l711 69A4  
                         l810 60AE                           l803 6052                           l723 5B3C  
                         l725 59A0                           l734 59E6                           l670 4C6E  
                         l910 64D6                           l735 5A04                           l671 4C34  
                         l736 5A5C                           l728 5964                           l920 5BF8  
                         l737 5A4A                           l762 522C                           l850 6774  
                         l906 64CE                           l930 5D50                           l763 524A  
                         l755 5012                           l683 4E28                           l819 6A5C  
                         l772 5358                           l764 52A2                           l765 5290  
                         l669 4C80                           l861 4A96                           l686 4D9A  
                         l678 4F4C                           l846 6726                           l759 5396  
                         l695 4E68                           l696 4E56                           l864 4436  
                         l937 6918                           l954 5F62                           l866 427C  
                         l947 641E                           l796 5FBA                           l957 5EA6  
                         l974 6830                           l894 487C                           l799 6116  
                         l968 6886                           l986 6582                           l994 69E4  
                         l997 6B74                           _pad 6710                           wreg 3FE8  
                ___flmul@aexp 0020                  ___flmul@bexp 0025                  ___flmul@sign 001F  
                ___flmul@temp 002A                  ___flmul@prod 0026                   LCD_Char@dat 000B  
             __end_of_IOC_ISR 6710                  ___fltol@exp1 000E                          l1012 695E  
                        l1006 67D6                          l3120 6B20                          l3200 662E  
                        l4000 691A                          l3130 6B2E                          l3122 6B26  
                        l3202 6632                          l4002 6922                          l3220 6AF6  
                        l3124 6B28                          l3204 6660                          l3300 5FF4  
                        l4020 5DEA                          l4012 5D52                          l4004 6832  
                        l4100 420C                          l3230 6B0C                          l3222 6B00  
                        l3126 6B2A                          l3206 6664                          l3310 6048  
                        l3302 5FFC                          l4030 5F06                          l4014 5D72  
                        l4006 6840                          l4102 4214                          l4110 422C  
                        l3240 6B16                          l3232 6B0E                          l3224 6B02  
                        l3128 6B2C                          l3320 60BE                          l3312 6084  
                        l3304 6008                          l4032 5F1A                          l4024 5E5A  
                        l4016 5DC8                          l4008 6854                          l4040 67D8  
                        l3400 6550                          l4200 47BA                          l4120 42C6  
                        l4112 4246                          l3242 6B18                          l3234 6B10  
                        l3226 6B04                          l3218 6B5A                          l3250 6ADA  
                        l3330 6106                          l3322 60C2                          l3314 6090  
                        l3306 603A                          l3410 4AB4                          l4034 5F42  
                        l4026 5E96                          l4018 5DDC                          l4042 67EC  
                        l4050 6816                          l4210 4852                          l4202 47C2  
                        l4130 43BC                          l4122 4304                          l3244 6B1A  
                        l3236 6B12                          l3228 6B08                          l3260 6A0A  
                        l3252 69E8                          l3324 60E6                          l3316 609E  
                        l3308 603C                          l3500 4C6C                          l3412 4AC4  
                        l3420 4AEC                          l3404 4A98                          l4036 5F52  
                        l4028 5ECA                          l4044 67FC                          l4220 48B0  
                        l4212 4872                          l4204 47C6                          l4140 444E  
                        l4132 43C4                          l4124 4336                          l4116 428C  
                        l4060 40FC                          l4052 40B2                          l4300 5BC4  
                        l3238 6B14                          l3190 6B44                          l3246 6ACC  
                        l3262 6A12                          l3254 69E8                          l3326 60F6  
                        l3318 60BC                          l3510 4CC2                          l3502 4C8E  
                        l3430 4B1C                          l3422 4AFC                          l3414 4AD4  
                        l3406 4AA4                          l4046 6800                          l4230 48D8  
                        l4222 48B6                          l4214 488E                          l4206 47CE  
                        l4150 4480                          l4142 445A                          l4126 4374  
                        l4118 4292                          l4070 413A                          l4062 4106  
                        l4054 40C6                          l4310 5BFE                          l4302 5BD0  
                        l3192 6B46                          l3248 6AD8                          l3264 6A18  
                        l3256 69F8                          l3328 6104                          l3520 4CFC  
                        l3512 4CD0                          l3504 4C9E                          l3440 4B5C  
                        l3432 4B2A                          l3424 4B02                          l3416 4AE4  
                        l3408 4AB2                          l4048 6812                          l3600 69B2  
                        l4240 490C                          l4224 48BE                          l4216 489C  
                        l4232 48DE                          l4208 47DA                          l4160 44C8  
                        l4152 448E                          l4144 4462                          l4128 4388  
                        l4136 4404                          l4080 4182                          l4072 4142  
                        l4064 410E                          l4056 40D4                          l4320 5CA6  
                        l4312 5C1C                          l4304 5BEA                          l3280 6782  
                        l4400 567E                          l3194 6B48                          l3258 6A00  
                        l3290 5F76                          l3610 57C8                          l3530 4D68  
                        l3522 4CFE                          l3514 4CDE                          l3450 4B94  
                        l3442 4B5E                          l3434 4B2C                          l3426 4B14  
                        l3418 4AE6                          l3602 69C0                          l4250 49C2  
                        l4242 4964                          l4234 48F0                          l4226 48CE  
                        l4218 48AC                          l4170 45DC                          l4162 44D8  
                        l4154 44A6                          l4146 446A                          l4138 443E  
                        l4082 4188                          l4066 411E                          l4074 4146  
                        l4058 40D8                          l4330 5CFC                          l4322 5CBC  
                        l4314 5C42                          l4306 5BF0                          l3282 6786  
                        l4410 5768                          l4402 56B0                          l3196 6B4A  
                        l3188 6B3E                          l3292 5F84                          l3700 59F6  
                        l3620 57FC                          l3612 57CA                          l3540 4DC0  
                        l3532 4D6A                          l3524 4D08                          l3516 4CEA  
                        l3508 4CB2                          l3460 4BA8                          l3452 4B98  
                        l3436 4B3C                          l3444 4B64                          l3428 4B16  
                        l3604 69C4                          l4260 4A32                          l4252 49DE  
                        l4244 4998                          l4236 4902                          l4228 48D2  
                        l4180 467C                          l4164 44EC                          l4172 45E2  
                        l4156 44B8                          l4148 446E                          l4084 4190  
                        l4076 416C                          l4092 41CA                          l4068 412E  
                        l4324 5CCA                          l4316 5C74                          l4332 5D1A  
                        l3284 67A2                          l4412 5774                          l4404 56E4  
                        l3198 6B4C                          l3294 5FCA                          l3710 5A78  
                        l3702 5A14                          l3630 582C                          l3614 57DA  
                        l3622 5802                          l3606 57AE                          l3550 4DEE  
                        l3534 4D7A                          l3518 4CEE                          l3526 4D0E  
                        l3470 4BBC                          l3462 4BAC                          l3454 4B9C  
                        l3446 4B74                          l3438 4B4C                          l3390 64D8  
                        l4262 4A4A                          l4254 49E6                          l4246 49A0  
                        l4238 4906                          l4190 4758                          l4182 46AE  
                        l4174 4600                          l4166 4550                          l4158 44C0  
                        l4094 41F0                          l4086 41A4                          l4078 417E  
                        l4342 68D2                          l3286 67A8                          l3278 6776  
                        l4414 578A                          l4406 5716                          l3296 5FE0  
                        l3288 5F66                          l3720 5AE4                          l3712 5A86  
                        l3704 5A42                          l3640 5860                          l3632 582E  
                        l3624 5812                          l3616 57EA                          l3608 57BA  
                        l3800 50D8                          l3552 4DFC                          l3544 4DD4  
                        l3560 4E1A                          l3528 4D34                          l3536 4D8A  
                        l3480 4BD0                          l3472 4BC0                          l3464 4BB0  
                        l3456 4BA0                          l3448 4B86                          l3392 64E8  
                        l4264 4A5A                          l4256 49F4                          l4248 49A4  
                        l4192 475E                          l4184 46BE                          l4176 4634  
                        l4168 45A8                          l4096 4202                          l4088 41AE  
                        l4280 6478                          l4272 6420                          l4336 5D28  
                        l4344 68DA                          l4360 6A50                          l4352 6A26  
                        l4416 579A                          l4408 574A                          l3730 5B2A  
                        l3722 5AFE                          l3714 5AB0                          l3650 58A4  
                        l3634 583E                          l3642 5866                          l3626 5818  
                        l3618 57FA                          l3810 5136                          l3802 50E8  
                        l3570 4E84                          l3562 4E38                          l3554 4E04  
                        l3546 4DDE                          l3538 4DB0                          l3490 4C42  
                        l3474 4BC4                          l3466 4BB4                          l3458 4BA4  
                        l3482 4BD4                          l3394 64F8                          l4266 4A72  
                        l4258 4A24                          l4194 4792                          l4186 46CE  
                        l4178 4666                          l4098 4206                          l4282 649A  
                        l4274 6428                          l4290 5B70                          l4346 68EC  
                        l4354 6A30                          l4370 53A4                          l3732 5B30  
                        l3724 5B16                          l3708 5A6C                          l3716 5AB4  
                        l3660 58CC                          l3652 58A8                          l3644 5876  
                        l3636 584E                          l3628 581E                          l3900 629A  
                        l3820 51E6                          l3812 5156                          l3804 50F8  
                        l3580 4EEE                          l3572 4E92                          l3564 4E4E  
                        l3556 4E08                          l3548 4DEC                          l3492 4C4E  
                        l3484 4C00                          l3476 4BC8                          l3468 4BB8  
                        l3396 6502                          l4268 4A7A                          l4196 47A6  
                        l4188 4702                          l4276 6450                          l4284 64A2  
                        l4292 5B7C                          l4348 690E                          l4356 6A38  
                        l4380 5480                          l4372 53B6                          l4364 5398  
                        l2870 6888                          l3734 5B32                          l3726 5B18  
                        l3718 5ACE                          l3670 591A                          l3646 588C  
                        l3638 585E                          l3910 631E                          l3902 62A8  
                        l3830 523C                          l3822 51F4                          l3814 5166  
                        l3806 5108                          l3750 4F7A                          l3742 4F4E  
                        l3590 4F2C                          l3582 4F0E                          l3574 4ECC  
                        l3558 4E18                          l3494 4C52                          l3486 4C1C  
                        l3478 4BCC                          l3398 651E                          l4198 47AA  
                        l4278 6458                          l4294 5B80                          l4286 5B3E  
                        l4358 6A40                          l4390 557E                          l4382 54B2  
                        l4374 53CE                          l4366 539C                          ?_pad 0013  
                        l2880 68A0                          l2872 6894                          l3728 5B1C  
                        l3680 5962                          l3672 592A                          l3664 58E0  
                        l3648 589C                          l3656 58BC                          l3904 62BA  
                        l3840 52BE                          l3832 525A                          l3824 5212  
                        l3816 5186                          l3808 5126                          l3760 4FB6  
                        l3752 4F8A                          l3744 4F5A                          l3592 4F3A  
                        l3584 4F1E                          l3568 4E78                          l3576 4ECE  
                        l3496 4C60                          l3488 4C2C                          l4296 5BA8  
                        l4288 5B68                          l4392 55B2                          l4384 54E6  
                        l4376 541A                          l4368 53A0                          l2882 68B6  
                        l3690 59B0                          l3682 596E                          l3674 5930  
                        l3666 58FA                          l3658 58CC                          l3906 62C8  
                        l3850 5328                          l3842 52CC                          l3834 5288  
                        l3826 521C                          l3818 51B0                          l3770 4FEC  
                        l3762 4FBC                          l3754 4F9A                          l3746 4F68  
                        l3914 6A5E                          l3594 4F3C                          l3586 4F24  
                        l3578 4EDE                          l3498 4C62                          l3930 616C  
                        l3922 6118                          l4298 5BB0                          l4394 55E4  
                        l4386 5518                          l4378 544C                          l2884 68BA  
                        l3692 59C6                          l3684 598C                          l3676 5940  
                        l3668 590A                          l3908 6318                          l3860 537A  
                        l3852 5342                          l3844 52F6                          l3828 522A  
                        l3772 4FFC                          l3764 4FCA                          l3756 4FA0  
                        l3748 4F6A                          l3916 6A74                          l3588 4F26  
                        l3932 616E                          l3924 612E                          l4396 5618  
                        l4388 554C                          l2878 689C                          l3694 59CC  
                        l3686 598E                          l3678 5954                          l3862 537C  
                        l3854 5352                          l3838 52B2                          l3846 52FA  
                        l3790 5086                          l3782 5046                          l3774 5002  
                        l3766 4FCC                          l3758 4FB0                          l3918 6A84  
                        l3870 6960                          l3934 617E                          l3598 69A6  
                        l4398 564A                          l3696 59D6                          l3688 599E  
                        l3880 65C2                          l3856 535C                          l3864 5382  
                        l3848 5314                          l3792 50A2                          l3784 5056  
                        l3776 5022                          l3768 4FDC                          l3872 6970  
                        l3960 61FC                          l3944 61A8                          l3936 6182  
                        l3928 6142                          l3698 59E4                          l3882 65F0  
                        l3866 5386                          l3858 536C                          l3794 50AE  
                        l3786 5060                          l3778 5032                          l3962 620C  
                        l3954 61D0                          l3946 61B2                          l3938 6190  
                        l3970 6732                          l3884 6600                          l3876 6584  
                        l3892 621E                          l3796 50BA                          l3788 507A  
                        l3956 61DC                          l3948 61BC                          l3980 6342  
                        l3972 6742                          l3886 6624                          l3878 65B2  
                        l3894 624C                          l3798 50C8                          l3958 61EC  
                        l3982 6380                          l3990 63C0                          l3974 6746  
                        l3966 6710                          l3888 662A                          l3896 625C  
                        l3992 63D2                          l3984 63A8                          l3976 6764  
                        l3968 671E                          l3898 628A                          l3986 63B4  
                        l3978 6322                          l3996 6416                          STR_1 2024  
                        STR_2 2001                          STR_3 2013                          STR_4 2029  
                        STR_7 202D                          _LATB 3FBB                          u4000 4C8E  
                        u4001 4C8A                          u4010 4C9E                          u4011 4C9A  
                        u4100 4DFC                          u4020 4CD0                          u4101 4DF8  
                        u4021 4CCC                          u4110 4E18                          u4030 4CDE  
                        u4111 4E14                          u4031 4CDA                          u3160 68B6  
                        u4200 4EEE                          u4120 4E28                          u4040 4CFC  
                        u5000 5E96                          u3161 68B2                          u4201 4EEA  
                        u4121 4E24                          u4041 4CF8                          u5001 5E92  
                        u3170 68D0                          u4210 4F0E                          u4130 4E38  
                        u4050 4D34                          u5010 5EEA                          u3171 68CC  
                        u4211 4F0A                          u4131 4E34                          u4051 4D30  
                        u4300 584E                          u4220 4F1E                          u4140 4E4E  
                        u4060 4D7A                          u5020 5F06                          u5100 41F0  
                        u4301 584A                          u4221 4F1A                          u4141 4E4A  
                        u4061 4D76                          u5021 5F02                          u5101 41EC  
                        u4310 588C                          u4230 4F3A                          u4150 4E64  
                        u4070 4DB0                          u5030 5F42                          u5110 4202  
                        u4311 5888                          u4231 4F36                          u4151 4E60  
                        u4071 4DAC                          u5031 5F3E                          u5015 5EE0  
                        u5111 41FE                          u4400 5A14                          u4320 58CC  
                        u4160 4E78                          u4080 4DC0                          u5040 6830  
                        u4240 69E4                          u5200 448E                          u5120 4278  
                        u3600 679E                          u4401 5A10                          u4321 58C8  
                        u4161 4E74                          u4081 4DBC                          u5041 682C  
                        u4241 69E0                          u5201 448A                          u5121 4274  
                        u3601 679A                          u4410 5A42                          u4330 5940  
                        u4250 57C8                          u4170 4E92                          u4090 4DEC  
                        u5210 44B8                          u5130 4304                          u5050 40D4  
                        u3610 67D6                          u4411 5A3E                          u4331 593C  
                        u4251 57C4                          u4171 4E8E                          u4091 4DE8  
                        u5211 44B4                          u5131 4300                          u5051 40D0  
                        u3611 67D2                          u3700 60F6                          u3620 5F76  
                        u4420 5A58                          u4340 5962                          u4260 57DA  
                        u4500 4F8A                          u4180 4ECC                          u5300 489C  
                        u5220 4600                          u5140 4336                          u5060 411E  
                        u3701 60F2                          u3621 5F72                          u4421 5A54  
                        u4341 595E                          u4261 57D6                          u4501 4F86  
                        u4181 4EC8                          u5301 4898                          u5221 45FC  
                        u5141 4332                          u5061 411A                          u3550 665C  
                        u3710 6104                          u3630 5F84                          u4430 5A6C  
                        u4350 598C                          u4270 57EA                          u4510 4FCA  
                        u4190 4EDE                          u5310 48F0                          u5230 4666  
                        u5150 4374                          u5070 412E                          u3711 6100  
                        u3631 5F80                          u4431 5A68                          u4351 5988  
                        u4271 57E6                          u4511 4FC6                          u4191 4EDA  
                        u5311 48EC                          u5231 4662                          u5151 4370  
                        u5071 412A                          u3560 668E                          u3640 5FE0  
                        u4440 5A86                          u4360 59B0                          u4280 582C  
                        u4600 5288                          u4520 4FDC                          u5320 49C2  
                        u5240 46AE                          u5160 4400                          u5080 416C  
                        u5400 5BA8                          u3641 5FDC                          u4441 5A82  
                        u4361 59AC                          u4281 5828                          u4601 5284  
                        u4521 4FD8                          u5321 49BE                          u5241 46AA  
                        u5161 43FC                          u5081 4168                          u5401 5BA4  
                        u3570 669E                          u3650 6036                          u4450 5ACE  
                        u4370 59C6                          u4290 583E                          u4610 529E  
                        u4530 4FEC                          u3810 64E8                          u5330 49DE  
                        u5250 46BE                          u5170 4436                          u5090 417E  
                        u5410 5C3E                          u3571 669A                          u3651 6032  
                        u4451 5ACA                          u4371 59C2                          u4291 583A  
                        u4611 529A                          u4531 4FE8                          u3811 64E4  
                        u5331 49DA                          u5251 46BA                          u5171 4432  
                        u5091 417A                          u5411 5C3A                          u3660 6080  
                        u4460 5AFE                          u4380 59E4                          u4700 624C  
                        u4620 52B2                          u4540 5022                          u3900 4B3C  
                        u3820 64F8                          u5340 4A44                          u5260 4758  
                        u5180 444E                          u5420 690E                          u5500 56B0  
                        u3557 664E                          u3661 607C                          u4461 5AFA  
                        u4381 59E0                          u4701 6248                          u4621 52AE  
                        u4541 501E                          u3901 4B38                          u3821 64F4  
                        u5341 4A3E                          u5261 4754                          u5181 444A  
                        u5421 690A                          u5501 56AC                          u3590 69F8  
                        u3670 609E                          u4470 5B2A                          u4390 5A04  
                        u4710 628A                          u4630 52CC                          u4550 5032  
                        u3910 4B4C                          u3830 651E                          u5350 4A46  
                        u5270 47A6                          u5190 4480                          u5510 5716  
                        u5430 53B6                          u3567 6680                          u3591 69F4  
                        u3671 609A                          u4471 5B26                          u4391 5A00  
                        u4711 6286                          u4631 52C8                          u4551 502E  
                        u3911 4B48                          u3831 651A                          u5271 47A2  
                        u5191 447C                          u5511 5712                          u5431 53B2  
                        u3680 60AE                          u4720 62A8                          u4640 5314  
                        u4560 51D0                          u4480 4F68                          u3920 4B86  
                        u4800 61CC                          u3840 6550                          u5360 4A5A  
                        u5280 4852                          u5440 544C                          u3681 60AA  
                        u4721 62A4                          u4641 5310                          u4481 4F64  
                        u3921 4B82                          u4801 61C8                          u3841 654C  
                        u5361 4A56                          u5281 484E                          u5441 5448  
                        u3690 60BC                          u4730 62C8                          u4650 5342  
                        u4570 522A                          u4490 4F7A                          u3930 4B94  
                        u3850 4AB2                          u4810 61EC                          u5290 488E  
                        u5370 6450                          u5450 54B2                          u3691 60B8  
                        u4731 62C4                          u4651 533E                          u4571 5226  
                        u4491 4F76                          u3931 4B90                          u3851 4AAE  
                        u4811 61E8                          u5291 488A                          u5371 644C  
                        u5451 54AE                          u4740 6318                          u4660 537A  
                        u4580 524A                          u3940 4C00                          u3860 4AC4  
                        u4820 61FC                          u4900 640C                          u5380 64CE  
                        u5460 5518                          u4741 6314                          u4661 5376  
                        u4581 5246                          u4565 51C6                          u3941 4BFC  
                        u3861 4AC0                          u4821 61F8                          u4901 6406  
                        u5381 64CA                          u5461 5514                          u4670 65B2  
                        u4590 525A                          u4750 6A74                          u3950 4C18  
                        u3870 4AD4                          u4910 640E                          u4830 671E  
                        u5390 5B68                          u5470 557E                          u4671 65AE  
                        u4591 5256                          u4751 6A70                          u3951 4C12  
                        u3871 4AD0                          u4831 671A                          u5391 5B64  
                        u5471 557A                          u4680 65F0                          u3960 4C1A  
                        u3880 4B14                          u4760 612E                          u4840 6764  
                        u4920 695E                          u5480 55E4                          u4681 65EC  
                        u3881 4B10                          u4761 612A                          u4841 6760  
                        u4921 695A                          u5481 55E0                          u4690 6624  
                        u3970 4C42                          u3890 4B2A                          u4770 6162  
                        u4850 6362                          u4930 6840                          u5490 564A  
                        u4691 6620                          u3971 4C3E                          u3891 4B26  
                        u4931 683C                          u5491 5646                          u3980 4C60  
                        u4780 6190                          u4860 6380                          u4940 5D9A  
                        u3981 4C5C                          u4781 618C                          u4861 637C  
                        u3990 4C80                          u4790 61A4                          u4870 63A8  
                        u4950 5DC8                          u3991 4C7C                          u4791 61A0  
                        u4775 6158                          u4871 63A4                          u4855 6358  
                        u4951 5DC4                          u4880 63D2                          u4960 5DEA  
                        u4881 63CE                          u4961 5DE6                          u4945 5D90  
                        u4980 5E56                          u4981 5E52                          u4990 5E7A  
                        u4895 63E4                          u4975 5DFE                          u4976 5E08  
                        u4977 5E18                          u4995 5E70                          _data 00B4  
                        _dbuf 0100                          _labs 6832                          _main 5398  
                        _prec 00B2                          pad@i 0019                          pad@p 0016  
                        fsr1h 3FE2                          fsr2h 3FDA                          indf1 3FE7  
                        indf2 3FDF                          fsr1l 3FE1                          fsr2l 3FD9  
            __end_of_ADC_Init 6B1E                 ___fpclassifyf 6322                          prodh 3FF4  
                        prodl 3FF3                          start 40AE               __end_of_MSdelay 68D2  
             ___fldiv@new_exp 0016                 _LCD_String_xy 69E6                  ___param_bank 0000  
                       ??_pad 0018              __end_of_LCD_Char 6B3C              __end_of_LCD_Init 6AF6  
               ___fltol@sign1 000D                         ?_labs 0005               __end_of___fladd 4F4E  
                       ?_main 0001                         _ADCLK 3EFF                         _ADPCH 3EF1  
             __end_of___fldiv 5B3E               __end_of___flneg 6A96               __end_of___flmul 5398  
             __end_of___flsub 69A6               __end_of___fltol 621E                         i2l107 66B8  
                       i2l108 6708                         i2l109 670E                  vfpfcnvrt@fmt 008D  
                       _TRISB 3FC3                         _TRISD 3FC5                         _flags 0054  
         read_prec_or_width@c 0009           read_prec_or_width@n 000A                         _fputc 64D8  
                       _fputs 69A6                         labs@a 0005                         pad@fp 0013  
                       _width 00B0                         _putch 6B74                         tablat 3FF5  
                       status 3FD8               __end_of_sprintf 6A5E                ?___fpclassifyf 0005  
              ?_LCD_String_xy 000E               __initialization 6A96                  __end_of_labs 6888  
                __end_of_main 57AE                        ??_labs 0009                        ??_main 0048  
               __activetblptr 0003                     ??_IOC_ISR 0001    __end_of_read_prec_or_width 64D8  
                      _ADACQH 3EF4                        _ADACQL 3EF3                        ?_fputc 0005  
                      ?_fputs 000D                        _ADRESH 3EF0                        _ADRESL 3EEF  
                      _ADPREH 3EF7                        _ADPREL 3EF6                        ?_putch 0001  
            LCD_String_xy@msg 000F              LCD_String_xy@pos 000E              LCD_String_xy@row 0011  
                   ??_MSdelay 0007                        i2l2140 66A0                        i2l2150 66D0  
                      i2l2142 66B0                        i2l2152 66E8                        i2l2148 66BA  
            __end_of___xxtofl 6118                  vfprintf@cfmt 0047                        ___flge 621E  
                      ___fleq 6584                     ??___fladd 000D                     ??___fldiv 000D  
                   ??___flneg 0009                     ??___flmul 001B                     ??___flsub 0034  
                   ??___fltol 0009                        _efgtoa 40B2                        _floorf 5D52  
                      _memcpy 67D8          read_prec_or_width@ap 0006                        clear_0 6A9C  
                      clear_1 6AA8                        clear_2 6AB4                        isa$std 0001  
                      _result 00AC                        pad@buf 0014                        _strcat 6776  
                      _strcpy 691A                        fputc@c 0005                        fputs@c 0010  
                      fputs@i 0011                        fputs@s 000D               ___fpclassifyf@e 000D  
                   ?_ADC_Init 0001               ___fpclassifyf@u 000F               ___fpclassifyf@x 0005  
                __mediumconst 2000                        tblptrh 3FF7                        tblptrl 3FF6  
                      tblptru 3FF8                        putch@c 0001              __end_of_vfprintf 691A  
                   ??_sprintf 0048                    ___flge@ff1 002C                    ___flge@ff2 0030  
             ??___fpclassifyf 0009                  ___xxtofl@arg 000F                  ___xxtofl@exp 000E  
                ___xxtofl@val 0005                    ___fleq@ff1 0005                    ___fleq@ff2 0009  
                   ?_LCD_Char 0001                    __accesstop 0060       __end_of__initialization 6AC6  
                   ?_LCD_Init 0001               ??_LCD_String_xy 0011                    ___flneg@f1 0005  
               ___rparam_used 0001                    ___fltol@f1 0005                __pcstackCOMRAM 0001  
               __end_of_fputc 6584                 __end_of_fputs 69E6                 __end_of_putch 6B76  
                ??_LCD_String 000E                    ??_ADC_Init 0005                       ??_fputc 0008  
                     ??_fputs 0010                       ??_putch 0005                    __pbssBANK0 00A4  
                  __pbssBANK1 0100                    ??_LCD_Char 000B                    ??_LCD_Init 000C  
          __end_of_LCD_String 66A0                       IVTBASEH 3FD6                       IVTBASEL 3FD5  
                     IVTBASEU 3FD7                       ?___flge 002C                       ?___fleq 0005  
                     ?_efgtoa 0038                       ?_floorf 001E                       ?_memcpy 0005  
                     ?_strcat 0005                       ?_strcpy 0005                       _IOC_ISR 66A0  
                   ?___xxtofl 0005                       _MSdelay 6888                 LCD_String@msg 000C  
                     __Hparam 0000                       __Lparam 0000                       ___fladd 4A98  
                     ___fldiv 57AE                       ___flneg 6A5E                       ___flmul 4F4E  
                     ___flsub 6960                       ___fltol 6118                     ?_vfprintf 008F  
                __psmallconst 2000                       __pcinit 6A96                       __ramtop 2000  
                     _digital 0052                 ivt0x4008_base 4008                       __ptext0 5398  
                     __ptext1 6776                       __ptext2 6A26                       __ptext3 68D2  
                     __ptext4 5B3E                       __ptext5 6420                       __ptext6 40B2  
                     __ptext7 691A                       __ptext8 6710                       __ptext9 69A6  
       read_prec_or_width@fmt 0005                    ??___xxtofl 0009                     _IOCCFbits 3A67  
                     efgtoa@c 003D                       efgtoa@d 006B                       efgtoa@e 006F  
                     efgtoa@f 0039                       efgtoa@g 0082                       efgtoa@h 0079  
                     efgtoa@i 0077                       efgtoa@l 007D                       efgtoa@m 006D  
                     efgtoa@n 0086                       efgtoa@p 0062                       efgtoa@t 0064  
                     efgtoa@u 0088                       efgtoa@w 0071                     _IOCCNbits 3A66  
                   _IOCCPbits 3A65                       _sprintf 6A26                       _voltage 004E  
        end_of_initialization 6AC6                       floorf@e 002C                       floorf@m 0028  
                     floorf@u 002E                       floorf@x 001E                       memcpy@d 000C  
                     memcpy@n 0009                       memcpy@s 000E                       fputc@fp 0007  
              LCD_Command@cmd 000B                       fputs@fp 000F            _read_prec_or_width 6420  
           __end_of_vfpfcnvrt 5D52                    efgtoa@mode 0069                    efgtoa@sign 0081  
                     postdec2 3FDD           ?_read_prec_or_width 0005                       postinc0 3FEE  
                     postinc1 3FE6                       postinc2 3FDE              vfpfcnvrt@convarg 0041  
                  ??_vfprintf 0047                       strcat@i 0007                       strcpy@d 0009  
                   _PORTDbits 3FCD                   ___fladd@grs 0014                 ___xxtofl@sign 000D  
                   _TRISAbits 3FC2                     _TRISCbits 3FC4          ??_read_prec_or_width 0007  
                 ___fldiv@grs 0018                   ___fldiv@rem 0011                   ___flmul@grs 0021  
__end_of_INTERRUPT_Initialize 6B74                 ??_LCD_Command 000B                __end_of___flge 6322  
              __end_of___fleq 662E                   vfpfcnvrt@ap 008E                   vfpfcnvrt@cp 0046  
                 vfpfcnvrt@fp 008C                __end_of_efgtoa 4A98                __end_of_floorf 5F64  
              __end_of_memcpy 6832                    floorf@F521 00A4                __end_of_strcat 67D8  
              __end_of_strcpy 6960           start_initialization 6A96                   __end_of_pad 6776  
       __end_of___fpclassifyf 6420         __end_of_LCD_String_xy 6A26                   vfprintf@fmt 0090  
                    ??___flge 0034                      ??___fleq 000D                      ??_efgtoa 003E  
                    ??_floorf 0022                      ??_memcpy 000B                      ??_strcat 0007  
                    ??_strcpy 0008                     ___fladd@a 0009                     ___fladd@b 0005  
                   ___fldiv@a 0009                     ___fldiv@b 0005           __end_of_LCD_Command 6B5A  
                    ?_IOC_ISR 0001                     ___flmul@a 0017                     ___flmul@b 0013  
                 __pbssCOMRAM 004A                     ___flsub@a 0030                     ___flsub@b 002C  
               __pcstackBANK0 0060                      IOC_ISR@k 0003                      ?_MSdelay 0005  
                 __pivt0x4008 4008                   _efgtoa$1114 0066                      ?___fladd 0005  
                    ?___fldiv 0005                      ?___flneg 0005                      ?___flmul 0013  
                    ?___flsub 002C                      ?___fltol 0005                   __smallconst 2000  
                    _ADC_Init 6AF6         LCD_String_xy@location 0012                      ?_sprintf 0092  
        _INTERRUPT_Initialize 6B5A                      MSdelay@i 0007                      MSdelay@j 0009  
                    _LCD_Char 6B1E                      _LCD_Init 6ACC                      _LATDbits 3FBD  
                    _PIE0bits 3990                      i2u181_40 66B0                      i2u181_41 66AC  
                    i2u182_40 6708                      i2u182_41 6704                      _PIR0bits 39A0  
                    i2u552_47 66C4                      i2u553_47 66DC             ivt0x4008_undefint 40AC  
                   _lux_value 004A                   _LCD_Command 6B3C                     _vfpfcnvrt 5B3E  
                  _ADCON0bits 3EF8                    vfpfcnvrt@c 0045                   _INTCON0bits 3FD2  
       ?_INTERRUPT_Initialize 0001                      __Hrparam 0000                     memcpy@tmp 000B  
                  vfprintf@ap 0091                      __Lrparam 0000                    vfprintf@fp 008F  
                  ?_vfpfcnvrt 008C                    _ANSELAbits 3A40                    _ANSELCbits 3A60  
          ___fpclassifyf@F465 00A8                    sprintf@fmt 0093                      ___xxtofl 5F64  
                  strcat@dest 0005                      __ptext10 64D8                      __ptext11 6B74  
                    __ptext20 4F4E                      __ptext12 67D8                      __ptext21 621E  
                    __ptext13 6832                      __ptext30 6888                      __ptext22 6584  
                    __ptext14 5D52                      __ptext31 6B5A                      __ptext23 57AE  
                    __ptext15 6322                      __ptext32 6AF6                      __ptext24 5F64  
                    __ptext16 6118                      __ptext33 66A0                      __ptext25 69E6  
                    __ptext17 6960                      __ptext26 662E                      __ptext18 4A98  
                    __ptext27 6B1E                      __ptext19 6A5E                      __ptext28 6ACC  
                    __ptext29 6B3C                    strcpy@dest 0005                    MSdelay@val 0005  
                    efgtoa@fp 0038                      efgtoa@ne 0060                      efgtoa@pp 0068  
                    efgtoa@ou 0073                      isa$xinst 0000                      _vfprintf 68D2  
                  _LCD_String 662E                      memcpy@d1 0005                      memcpy@s1 0007  
      ??_INTERRUPT_Initialize 0005                      intlevel2 0000                     sprintf@ap 0098  
                   strcat@src 0006                     strcpy@src 0007                   efgtoa@nmode 006A  
                 ??_vfpfcnvrt 0040                      sprintf@f 0099                      sprintf@s 0092  
               ___fladd@signs 0011                  ___fladd@aexp 0012                  ___fladd@bexp 0013  
